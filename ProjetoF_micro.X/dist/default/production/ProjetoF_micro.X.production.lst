

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Dec 20 18:15:41 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57  0000                     
    58                           ; Version 2.32
    59                           ; Generated 02/02/2021 GMT
    60                           ; 
    61                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution. Publication is not required when
    75                           ;        this file is used in an embedded application.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F4550 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     
    94                           	psect	idataBANK0
    95  002F74                     __pidataBANK0:
    96                           	callstack 0
    97                           
    98                           ;initializer for _Glim
    99  002F74  0014               	dw	20
   100                           
   101                           ;initializer for _Hlim
   102  002F76  0032               	dw	50
   103                           
   104                           ;initializer for _Tlim
   105  002F78  001E               	dw	30
   106                           
   107                           	psect	mediumconst
   108  007EF8                     __pmediumconst:
   109                           	callstack 0
   110  007EF8  00                 	db	0
   111  007EF9                     _keymap:
   112                           	callstack 0
   113  007EF9  31                 	db	49
   114  007EFA  32                 	db	50
   115  007EFB  33                 	db	51
   116  007EFC  41                 	db	65
   117  007EFD  34                 	db	52
   118  007EFE  35                 	db	53
   119  007EFF  36                 	db	54
   120  007F00  42                 	db	66
   121  007F01  37                 	db	55
   122  007F02  38                 	db	56
   123  007F03  39                 	db	57
   124  007F04  43                 	db	67
   125  007F05  46                 	db	70
   126  007F06  30                 	db	48
   127  007F07  45                 	db	69
   128  007F08  44                 	db	68
   129  007F09                     __end_of_keymap:
   130                           	callstack 0
   131  007F09                     readKey@F3297:
   132                           	callstack 0
   133  007F09  0003               	dw	3
   134  007F0B  0002               	dw	2
   135  007F0D  0001               	dw	1
   136  007F0F  0000               	dw	0
   137  007F11                     __end_ofreadKey@F3297:
   138                           	callstack 0
   139  0000                     _LATEbits	set	3981
   140  0000                     _TRISEbits	set	3990
   141  0000                     _TRISD	set	3989
   142  0000                     _PORTD	set	3971
   143  0000                     _ADRESL	set	4035
   144  0000                     _ADRESH	set	4036
   145  0000                     _ADCON0bits	set	4034
   146  0000                     _ADCON2	set	4032
   147  0000                     _ADCON1	set	4033
   148  0000                     _PORTB	set	3969
   149  0000                     _LATB	set	3978
   150  0000                     _T0CON	set	4053
   151  0000                     _INTCON2bits	set	4081
   152  0000                     _RCONbits	set	4048
   153  0000                     _TRISCbits	set	3988
   154  0000                     _TRISAbits	set	3986
   155  0000                     _TRISB	set	3987
   156  0000                     _TMR0L	set	4054
   157  0000                     _INTCONbits	set	4082
   158  0000                     _PORTCbits	set	3970
   159  0000                     _PORTDbits	set	3971
   160  0000                     _TRISDbits	set	3989
   161  007F11                     STR_25:
   162  007F11  48                 	db	72	;'H'
   163  007F12  75                 	db	117	;'u'
   164  007F13  6D                 	db	109	;'m'
   165  007F14  69                 	db	105	;'i'
   166  007F15  64                 	db	100	;'d'
   167  007F16  69                 	db	105	;'i'
   168  007F17  66                 	db	102	;'f'
   169  007F18  69                 	db	105	;'i'
   170  007F19  63                 	db	99	;'c'
   171  007F1A  61                 	db	97	;'a'
   172  007F1B  64                 	db	100	;'d'
   173  007F1C  6F                 	db	111	;'o'
   174  007F1D  72                 	db	114	;'r'
   175  007F1E  20                 	db	32
   176  007F1F  4F                 	db	79	;'O'
   177  007F20  4E                 	db	78	;'N'
   178  007F21  00                 	db	0
   179  007F22                     STR_20:
   180  007F22  48                 	db	72	;'H'
   181  007F23  5F                 	db	95	;'_'
   182  007F24  6C                 	db	108	;'l'
   183  007F25  69                 	db	105	;'i'
   184  007F26  6D                 	db	109	;'m'
   185  007F27  20                 	db	32
   186  007F28  65                 	db	101	;'e'
   187  007F29  78                 	db	120	;'x'
   188  007F2A  63                 	db	99	;'c'
   189  007F2B  65                 	db	101	;'e'
   190  007F2C  64                 	db	100	;'d'
   191  007F2D  69                 	db	105	;'i'
   192  007F2E  64                 	db	100	;'d'
   193  007F2F  61                 	db	97	;'a'
   194  007F30  21                 	db	33
   195  007F31  00                 	db	0
   196  007F32                     STR_19:
   197  007F32  54                 	db	84	;'T'
   198  007F33  5F                 	db	95	;'_'
   199  007F34  6C                 	db	108	;'l'
   200  007F35  69                 	db	105	;'i'
   201  007F36  6D                 	db	109	;'m'
   202  007F37  20                 	db	32
   203  007F38  65                 	db	101	;'e'
   204  007F39  78                 	db	120	;'x'
   205  007F3A  63                 	db	99	;'c'
   206  007F3B  65                 	db	101	;'e'
   207  007F3C  64                 	db	100	;'d'
   208  007F3D  69                 	db	105	;'i'
   209  007F3E  64                 	db	100	;'d'
   210  007F3F  61                 	db	97	;'a'
   211  007F40  21                 	db	33
   212  007F41  00                 	db	0
   213  007F42                     STR_21:
   214  007F42  47                 	db	71	;'G'
   215  007F43  5F                 	db	95	;'_'
   216  007F44  6C                 	db	108	;'l'
   217  007F45  69                 	db	105	;'i'
   218  007F46  6D                 	db	109	;'m'
   219  007F47  20                 	db	32
   220  007F48  65                 	db	101	;'e'
   221  007F49  78                 	db	120	;'x'
   222  007F4A  63                 	db	99	;'c'
   223  007F4B  65                 	db	101	;'e'
   224  007F4C  64                 	db	100	;'d'
   225  007F4D  69                 	db	105	;'i'
   226  007F4E  64                 	db	100	;'d'
   227  007F4F  6F                 	db	111	;'o'
   228  007F50  21                 	db	33
   229  007F51  00                 	db	0
   230  007F52                     STR_7:
   231  007F52  4C                 	db	76	;'L'
   232  007F53  69                 	db	105	;'i'
   233  007F54  6D                 	db	109	;'m'
   234  007F55  20                 	db	32
   235  007F56  72                 	db	114	;'r'
   236  007F57  65                 	db	101	;'e'
   237  007F58  73                 	db	115	;'s'
   238  007F59  65                 	db	101	;'e'
   239  007F5A  74                 	db	116	;'t'
   240  007F5B  61                 	db	97	;'a'
   241  007F5C  64                 	db	100	;'d'
   242  007F5D  6F                 	db	111	;'o'
   243  007F5E  73                 	db	115	;'s'
   244  007F5F  21                 	db	33
   245  007F60  00                 	db	0
   246  007F61                     STR_24:
   247  007F61  52                 	db	82	;'R'
   248  007F62  65                 	db	101	;'e'
   249  007F63  73                 	db	115	;'s'
   250  007F64  66                 	db	102	;'f'
   251  007F65  72                 	db	114	;'r'
   252  007F66  69                 	db	105	;'i'
   253  007F67  61                 	db	97	;'a'
   254  007F68  64                 	db	100	;'d'
   255  007F69  6F                 	db	111	;'o'
   256  007F6A  72                 	db	114	;'r'
   257  007F6B  20                 	db	32
   258  007F6C  4F                 	db	79	;'O'
   259  007F6D  4E                 	db	78	;'N'
   260  007F6E  00                 	db	0
   261  007F6F                     STR_4:
   262  007F6F  48                 	db	72	;'H'
   263  007F70  75                 	db	117	;'u'
   264  007F71  6D                 	db	109	;'m'
   265  007F72  69                 	db	105	;'i'
   266  007F73  64                 	db	100	;'d'
   267  007F74  20                 	db	32
   268  007F75  53                 	db	83	;'S'
   269  007F76  61                 	db	97	;'a'
   270  007F77  6C                 	db	108	;'l'
   271  007F78  76                 	db	118	;'v'
   272  007F79  6F                 	db	111	;'o'
   273  007F7A  21                 	db	33
   274  007F7B  00                 	db	0
   275  007F7C                     STR_1:
   276  007F7C  4C                 	db	76	;'L'
   277  007F7D  69                 	db	105	;'i'
   278  007F7E  6D                 	db	109	;'m'
   279  007F7F  69                 	db	105	;'i'
   280  007F80  74                 	db	116	;'t'
   281  007F81  65                 	db	101	;'e'
   282  007F82  20                 	db	32
   283  007F83  54                 	db	84	;'T'
   284  007F84  65                 	db	101	;'e'
   285  007F85  6D                 	db	109	;'m'
   286  007F86  70                 	db	112	;'p'
   287  007F87  3A                 	db	58	;':'
   288  007F88  00                 	db	0
   289  007F89                     STR_27:
   290  007F89  49                 	db	73	;'I'
   291  007F8A  6E                 	db	110	;'n'
   292  007F8B  76                 	db	118	;'v'
   293  007F8C  61                 	db	97	;'a'
   294  007F8D  6C                 	db	108	;'l'
   295  007F8E  69                 	db	105	;'i'
   296  007F8F  64                 	db	100	;'d'
   297  007F90  20                 	db	32
   298  007F91  4D                 	db	77	;'M'
   299  007F92  65                 	db	101	;'e'
   300  007F93  6E                 	db	110	;'n'
   301  007F94  75                 	db	117	;'u'
   302  007F95  00                 	db	0
   303  007F96                     STR_2:
   304  007F96  54                 	db	84	;'T'
   305  007F97  65                 	db	101	;'e'
   306  007F98  6D                 	db	109	;'m'
   307  007F99  70                 	db	112	;'p'
   308  007F9A  20                 	db	32
   309  007F9B  53                 	db	83	;'S'
   310  007F9C  61                 	db	97	;'a'
   311  007F9D  6C                 	db	108	;'l'
   312  007F9E  76                 	db	118	;'v'
   313  007F9F  61                 	db	97	;'a'
   314  007FA0  21                 	db	33
   315  007FA1  00                 	db	0
   316  007FA2                     STR_3:
   317  007FA2  4C                 	db	76	;'L'
   318  007FA3  69                 	db	105	;'i'
   319  007FA4  6D                 	db	109	;'m'
   320  007FA5  69                 	db	105	;'i'
   321  007FA6  74                 	db	116	;'t'
   322  007FA7  65                 	db	101	;'e'
   323  007FA8  20                 	db	32
   324  007FA9  48                 	db	72	;'H'
   325  007FAA  75                 	db	117	;'u'
   326  007FAB  6D                 	db	109	;'m'
   327  007FAC  3A                 	db	58	;':'
   328  007FAD  00                 	db	0
   329  007FAE                     STR_26:
   330  007FAE  45                 	db	69	;'E'
   331  007FAF  78                 	db	120	;'x'
   332  007FB0  61                 	db	97	;'a'
   333  007FB1  75                 	db	117	;'u'
   334  007FB2  73                 	db	115	;'s'
   335  007FB3  74                 	db	116	;'t'
   336  007FB4  6F                 	db	111	;'o'
   337  007FB5  72                 	db	114	;'r'
   338  007FB6  20                 	db	32
   339  007FB7  4F                 	db	79	;'O'
   340  007FB8  4E                 	db	78	;'N'
   341  007FB9  00                 	db	0
   342  007FBA                     STR_6:
   343  007FBA  47                 	db	71	;'G'
   344  007FBB  61                 	db	97	;'a'
   345  007FBC  73                 	db	115	;'s'
   346  007FBD  20                 	db	32
   347  007FBE  53                 	db	83	;'S'
   348  007FBF  61                 	db	97	;'a'
   349  007FC0  6C                 	db	108	;'l'
   350  007FC1  76                 	db	118	;'v'
   351  007FC2  6F                 	db	111	;'o'
   352  007FC3  21                 	db	33
   353  007FC4  00                 	db	0
   354  007FC5                     STR_5:
   355  007FC5  4C                 	db	76	;'L'
   356  007FC6  69                 	db	105	;'i'
   357  007FC7  6D                 	db	109	;'m'
   358  007FC8  69                 	db	105	;'i'
   359  007FC9  74                 	db	116	;'t'
   360  007FCA  65                 	db	101	;'e'
   361  007FCB  20                 	db	32
   362  007FCC  47                 	db	71	;'G'
   363  007FCD  61                 	db	97	;'a'
   364  007FCE  73                 	db	115	;'s'
   365  007FCF  00                 	db	0
   366  007FD0                     STR_22:
   367  007FD0  53                 	db	83	;'S'
   368  007FD1  69                 	db	105	;'i'
   369  007FD2  73                 	db	115	;'s'
   370  007FD3  74                 	db	116	;'t'
   371  007FD4  65                 	db	101	;'e'
   372  007FD5  6D                 	db	109	;'m'
   373  007FD6  61                 	db	97	;'a'
   374  007FD7  73                 	db	115	;'s'
   375  007FD8  3A                 	db	58	;':'
   376  007FD9  00                 	db	0
   377  007FDA                     STR_17:
   378  007FDA  4C                 	db	76	;'L'
   379  007FDB  65                 	db	101	;'e'
   380  007FDC  69                 	db	105	;'i'
   381  007FDD  74                 	db	116	;'t'
   382  007FDE  75                 	db	117	;'u'
   383  007FDF  72                 	db	114	;'r'
   384  007FE0  61                 	db	97	;'a'
   385  007FE1  73                 	db	115	;'s'
   386  007FE2  00                 	db	0
   387  007FE3                     STR_11:
   388  007FE3  48                 	db	72	;'H'
   389  007FE4  75                 	db	117	;'u'
   390  007FE5  6D                 	db	109	;'m'
   391  007FE6  69                 	db	105	;'i'
   392  007FE7  64                 	db	100	;'d'
   393  007FE8  3A                 	db	58	;':'
   394  007FE9  00                 	db	0
   395  007FEA                     STR_10:
   396  007FEA  4C                 	db	76	;'L'
   397  007FEB  69                 	db	105	;'i'
   398  007FEC  6D                 	db	109	;'m'
   399  007FED  3A                 	db	58	;':'
   400  007FEE  00                 	db	0
   401  007FEF                     STR_14:
   402  007FEF  47                 	db	71	;'G'
   403  007FF0  61                 	db	97	;'a'
   404  007FF1  73                 	db	115	;'s'
   405  007FF2  3A                 	db	58	;':'
   406  007FF3  00                 	db	0
   407  007FF4                     STR_15:
   408  007FF4  70                 	db	112	;'p'
   409  007FF5  70                 	db	112	;'p'
   410  007FF6  6D                 	db	109	;'m'
   411  007FF7  00                 	db	0
   412  007FF8                     STR_18:
   413  007FF8  4F                 	db	79	;'O'
   414  007FF9  4B                 	db	75	;'K'
   415  007FFA  00                 	db	0
   416  007FFB                     STR_12:
   417  007FFB  25                 	db	37
   418  007FFC  00                 	db	0
   419  007FFD                     STR_9:
   420  007FFD  43                 	db	67	;'C'
   421  007FFE  00                 	db	0
   422  007FFF  00                 	db	0	; dummy byte at the end
   423  0000                     
   424                           ; #config settings
   425                           
   426                           	psect	cinit
   427  002CD8                     __pcinit:
   428                           	callstack 0
   429  002CD8                     start_initialization:
   430                           	callstack 0
   431  002CD8                     __initialization:
   432                           	callstack 0
   433                           
   434                           ; Initialize objects allocated to BANK0 (6 bytes)
   435                           ; load TBLPTR registers with __pidataBANK0
   436  002CD8  0E74               	movlw	low __pidataBANK0
   437  002CDA  6EF6               	movwf	tblptrl,c
   438  002CDC  0E2F               	movlw	high __pidataBANK0
   439  002CDE  6EF7               	movwf	tblptrh,c
   440  002CE0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   441  002CE2  6EF8               	movwf	tblptru,c
   442  002CE4  EE00  F0D4         	lfsr	0,__pdataBANK0
   443  002CE8  EE10 F006          	lfsr	1,6
   444  002CEC                     copy_data0:
   445  002CEC  0009               	tblrd		*+
   446  002CEE  CFF5 FFEE          	movff	tablat,postinc0
   447  002CF2  50E5               	movf	postdec1,w,c
   448  002CF4  50E1               	movf	fsr1l,w,c
   449  002CF6  E1FA               	bnz	copy_data0
   450                           
   451                           ; Clear objects allocated to BANK0 (28 bytes)
   452  002CF8  EE00  F0B8         	lfsr	0,__pbssBANK0
   453  002CFC  0E1C               	movlw	28
   454  002CFE                     clear_0:
   455  002CFE  6AEE               	clrf	postinc0,c
   456  002D00  06E8               	decf	wreg,f,c
   457  002D02  E1FD               	bnz	clear_0
   458                           
   459                           ; Clear objects allocated to COMRAM (10 bytes)
   460  002D04  EE00  F04C         	lfsr	0,__pbssCOMRAM
   461  002D08  0E0A               	movlw	10
   462  002D0A                     clear_1:
   463  002D0A  6AEE               	clrf	postinc0,c
   464  002D0C  06E8               	decf	wreg,f,c
   465  002D0E  E1FD               	bnz	clear_1
   466  002D10                     end_of_initialization:
   467                           	callstack 0
   468  002D10                     __end_of__initialization:
   469                           	callstack 0
   470  002D10  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   471  002D12  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   472  002D14  0E00               	movlw	low (__Lmediumconst shr (0+16))
   473  002D16  6EF8               	movwf	tblptru,c
   474  002D18  0100               	movlb	0
   475  002D1A  EF64  F004         	goto	_main	;jump to C main() function
   476                           
   477                           	psect	bssCOMRAM
   478  00004C                     __pbssCOMRAM:
   479                           	callstack 0
   480  00004C                     _milliseconds:
   481                           	callstack 0
   482  00004C                     	ds	4
   483  000050                     displayMenu@errorCycle:
   484                           	callstack 0
   485  000050                     	ds	2
   486  000052                     _tak:
   487                           	callstack 0
   488  000052                     	ds	2
   489  000054                     readKey@lastStableKey:
   490                           	callstack 0
   491  000054                     	ds	1
   492  000055                     _keyPressed:
   493                           	callstack 0
   494  000055                     	ds	1
   495                           
   496                           	psect	bssBANK0
   497  0000B8                     __pbssBANK0:
   498                           	callstack 0
   499  0000B8                     _keyState:
   500                           	callstack 0
   501  0000B8                     	ds	11
   502  0000C3                     readKey@lastKeyPressTime:
   503                           	callstack 0
   504  0000C3                     	ds	4
   505  0000C7                     readKey@lastDebounceTime:
   506                           	callstack 0
   507  0000C7                     	ds	4
   508  0000CB                     displayMenu@lastUpdateTime:
   509                           	callstack 0
   510  0000CB                     	ds	4
   511  0000CF                     	ds	3
   512  0000D2                     displayMenu@systemCycle:
   513                           	callstack 0
   514  0000D2                     	ds	2
   515                           
   516                           	psect	dataBANK0
   517  0000D4                     __pdataBANK0:
   518                           	callstack 0
   519  0000D4                     _Glim:
   520                           	callstack 0
   521  0000D4                     	ds	2
   522  0000D6                     _Hlim:
   523                           	callstack 0
   524  0000D6                     	ds	2
   525  0000D8                     _Tlim:
   526                           	callstack 0
   527  0000D8                     	ds	2
   528                           
   529                           	psect	cstackBANK0
   530  000060                     __pcstackBANK0:
   531                           	callstack 0
   532  000060                     ?_tempRead:
   533                           	callstack 0
   534  000060                     ?_humidade:
   535                           	callstack 0
   536  000060                     ?_gasRead:
   537                           	callstack 0
   538  000060                     floatToString@intStr:
   539                           	callstack 0
   540                           
   541                           ; 12 bytes @ 0x0
   542  000060                     	ds	4
   543  000064                     tempRead@TempC:
   544                           	callstack 0
   545  000064                     humidade@Humid:
   546                           	callstack 0
   547  000064                     gasRead@gas:
   548                           	callstack 0
   549                           
   550                           ; 4 bytes @ 0x4
   551  000064                     	ds	4
   552  000068                     _tempRead$1530:
   553                           	callstack 0
   554  000068                     _humidade$1531:
   555                           	callstack 0
   556  000068                     _gasRead$1532:
   557                           	callstack 0
   558                           
   559                           ; 4 bytes @ 0x8
   560  000068                     	ds	4
   561  00006C                     tempRead@rawAnalog:
   562                           	callstack 0
   563  00006C                     humidade@rawAnalog:
   564                           	callstack 0
   565  00006C                     gasRead@rawAnalog:
   566                           	callstack 0
   567  00006C                     floatToString@i_805:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0xC
   571  00006C                     	ds	2
   572  00006E                     floatToString@intPart:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0xE
   576  00006E                     	ds	2
   577  000070                     floatToString@digit:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x10
   581  000070                     	ds	2
   582  000072                     floatToString@temp:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x12
   586  000072                     	ds	2
   587  000074                     floatToString@i:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x14
   591  000074                     	ds	2
   592  000076                     floatToString@index:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x16
   596  000076                     	ds	2
   597  000078                     ??_displayMenu:
   598                           
   599                           ; 1 bytes @ 0x18
   600  000078                     	ds	4
   601  00007C                     displayMenu@valueStr:
   602                           	callstack 0
   603                           
   604                           ; 10 bytes @ 0x1C
   605  00007C                     	ds	10
   606  000086                     displayMenu@currentTime:
   607                           	callstack 0
   608                           
   609                           ; 4 bytes @ 0x26
   610  000086                     	ds	4
   611  00008A                     displayMenu@currentTemp:
   612                           	callstack 0
   613                           
   614                           ; 4 bytes @ 0x2A
   615  00008A                     	ds	4
   616  00008E                     displayMenu@currentHumid:
   617                           	callstack 0
   618                           
   619                           ; 4 bytes @ 0x2E
   620  00008E                     	ds	4
   621  000092                     displayMenu@currentGas:
   622                           	callstack 0
   623                           
   624                           ; 4 bytes @ 0x32
   625  000092                     	ds	4
   626  000096                     ??_main:
   627                           
   628                           ; 1 bytes @ 0x36
   629  000096                     	ds	4
   630  00009A                     main@lastDisplayUpdate:
   631                           	callstack 0
   632                           
   633                           ; 4 bytes @ 0x3A
   634  00009A                     	ds	4
   635  00009E                     main@currentTime:
   636                           	callstack 0
   637                           
   638                           ; 4 bytes @ 0x3E
   639  00009E                     	ds	4
   640  0000A2                     main@currentTemp:
   641                           	callstack 0
   642                           
   643                           ; 4 bytes @ 0x42
   644  0000A2                     	ds	4
   645  0000A6                     main@currentHumid:
   646                           	callstack 0
   647                           
   648                           ; 4 bytes @ 0x46
   649  0000A6                     	ds	4
   650  0000AA                     main@currentGas:
   651                           	callstack 0
   652                           
   653                           ; 4 bytes @ 0x4A
   654  0000AA                     	ds	4
   655  0000AE                     main@humLimit:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x4E
   659  0000AE                     	ds	2
   660  0000B0                     main@gasLimit:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x50
   664  0000B0                     	ds	2
   665  0000B2                     main@tempLimit:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x52
   669  0000B2                     	ds	2
   670  0000B4                     main@menuIndex:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x54
   674  0000B4                     	ds	2
   675  0000B6                     main@lastKey:
   676                           	callstack 0
   677                           
   678                           ; 1 bytes @ 0x56
   679  0000B6                     	ds	1
   680  0000B7                     main@pressed_key:
   681                           	callstack 0
   682                           
   683                           ; 1 bytes @ 0x57
   684  0000B7                     	ds	1
   685                           
   686                           	psect	cstackCOMRAM
   687  000001                     __pcstackCOMRAM:
   688                           	callstack 0
   689  000001                     ?___llmod:
   690                           	callstack 0
   691  000001                     ___llmod@dividend:
   692                           	callstack 0
   693                           
   694                           ; 4 bytes @ 0x0
   695  000001                     	ds	4
   696  000005                     ___llmod@divisor:
   697                           	callstack 0
   698                           
   699                           ; 4 bytes @ 0x4
   700  000005                     	ds	4
   701  000009                     ___llmod@counter:
   702                           	callstack 0
   703                           
   704                           ; 1 bytes @ 0x8
   705  000009                     	ds	1
   706  00000A                     ??_DelayPORXLCD:
   707  00000A                     ??_DelayXLCD:
   708  00000A                     ?_readAnalog:
   709                           	callstack 0
   710  00000A                     ?___awdiv:
   711                           	callstack 0
   712  00000A                     ?___awmod:
   713                           	callstack 0
   714  00000A                     ?_millis:
   715                           	callstack 0
   716  00000A                     ?___fladd:
   717                           	callstack 0
   718  00000A                     ?___flneg:
   719                           	callstack 0
   720  00000A                     ?___fltol:
   721                           	callstack 0
   722  00000A                     ?___xxtofl:
   723                           	callstack 0
   724  00000A                     SetDDRamAddr@DDaddr:
   725                           	callstack 0
   726  00000A                     WriteCmdXLCD@cmd:
   727                           	callstack 0
   728  00000A                     WriteDataXLCD@data:
   729                           	callstack 0
   730  00000A                     buzzer@buzzerStatus:
   731                           	callstack 0
   732  00000A                     ___awdiv@dividend:
   733                           	callstack 0
   734  00000A                     ___awmod@dividend:
   735                           	callstack 0
   736  00000A                     ___flneg@f1:
   737                           	callstack 0
   738  00000A                     ___fltol@f1:
   739                           	callstack 0
   740  00000A                     ___fladd@b:
   741                           	callstack 0
   742  00000A                     ___xxtofl@val:
   743                           	callstack 0
   744                           
   745                           ; 4 bytes @ 0x9
   746  00000A                     	ds	1
   747  00000B                     OpenXLCD@lcdtype:
   748                           	callstack 0
   749  00000B                     displayStuff@row:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0xA
   753  00000B                     	ds	1
   754  00000C                     ??_configureLCD:
   755  00000C                     ??_readAnalog:
   756  00000C                     ___awdiv@divisor:
   757                           	callstack 0
   758  00000C                     ___awmod@divisor:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0xB
   762  00000C                     	ds	1
   763  00000D                     displayStuff@column:
   764                           	callstack 0
   765                           
   766                           ; 2 bytes @ 0xC
   767  00000D                     	ds	1
   768  00000E                     ??___fltol:
   769  00000E                     ??___xxtofl:
   770  00000E                     ___awdiv@counter:
   771                           	callstack 0
   772  00000E                     ___awmod@counter:
   773                           	callstack 0
   774  00000E                     readAnalog@result:
   775                           	callstack 0
   776  00000E                     millis@ms:
   777                           	callstack 0
   778  00000E                     ___fladd@a:
   779                           	callstack 0
   780                           
   781                           ; 4 bytes @ 0xD
   782  00000E                     	ds	1
   783  00000F                     ___awdiv@sign:
   784                           	callstack 0
   785  00000F                     ___awmod@sign:
   786                           	callstack 0
   787  00000F                     displayStuff@stuff:
   788                           	callstack 0
   789                           
   790                           ; 2 bytes @ 0xE
   791  00000F                     	ds	1
   792  000010                     readAnalog@pin:
   793                           	callstack 0
   794  000010                     ___awdiv@quotient:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0xF
   798  000010                     	ds	1
   799  000011                     displayStuff@LCDWritePosition:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x10
   803  000011                     	ds	1
   804  000012                     ??_readKey:
   805  000012                     ??___fladd:
   806  000012                     ___fltol@sign1:
   807                           	callstack 0
   808  000012                     ___xxtofl@sign:
   809                           	callstack 0
   810  000012                     itoa@value:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0x11
   814  000012                     	ds	1
   815  000013                     ___fltol@exp1:
   816                           	callstack 0
   817  000013                     ___xxtofl@exp:
   818                           	callstack 0
   819  000013                     _displayStuff$782:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0x12
   823  000013                     	ds	1
   824  000014                     itoa@ptr:
   825                           	callstack 0
   826  000014                     ___xxtofl@arg:
   827                           	callstack 0
   828                           
   829                           ; 4 bytes @ 0x13
   830  000014                     	ds	2
   831  000016                     ___fladd@signs:
   832                           	callstack 0
   833  000016                     itoa@count:
   834                           	callstack 0
   835                           
   836                           ; 2 bytes @ 0x15
   837  000016                     	ds	1
   838  000017                     ___fladd@aexp:
   839                           	callstack 0
   840                           
   841                           ; 1 bytes @ 0x16
   842  000017                     	ds	1
   843  000018                     ?___flmul:
   844                           	callstack 0
   845  000018                     ___fladd@bexp:
   846                           	callstack 0
   847  000018                     itoa@temp:
   848                           	callstack 0
   849  000018                     ___flge@ff1:
   850                           	callstack 0
   851  000018                     ___flmul@b:
   852                           	callstack 0
   853  000018                     readKey@InvCol:
   854                           	callstack 0
   855                           
   856                           ; 8 bytes @ 0x17
   857  000018                     	ds	1
   858  000019                     ___fladd@grs:
   859                           	callstack 0
   860                           
   861                           ; 1 bytes @ 0x18
   862  000019                     	ds	1
   863  00001A                     ?___flsub:
   864                           	callstack 0
   865  00001A                     ___flsub@b:
   866                           	callstack 0
   867                           
   868                           ; 4 bytes @ 0x19
   869  00001A                     	ds	2
   870  00001C                     ___flge@ff2:
   871                           	callstack 0
   872  00001C                     ___flmul@a:
   873                           	callstack 0
   874                           
   875                           ; 4 bytes @ 0x1B
   876  00001C                     	ds	2
   877  00001E                     ___flsub@a:
   878                           	callstack 0
   879                           
   880                           ; 4 bytes @ 0x1D
   881  00001E                     	ds	2
   882  000020                     ??___flmul:
   883  000020                     ??___flge:
   884  000020                     readKey@col:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0x1F
   888  000020                     	ds	2
   889  000022                     readKey@row:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0x21
   893  000022                     	ds	2
   894  000024                     readKey@pressedKey:
   895                           	callstack 0
   896  000024                     ___flmul@sign:
   897                           	callstack 0
   898                           
   899                           ; 1 bytes @ 0x23
   900  000024                     	ds	1
   901  000025                     ___flmul@aexp:
   902                           	callstack 0
   903  000025                     readKey@currentTime:
   904                           	callstack 0
   905                           
   906                           ; 4 bytes @ 0x24
   907  000025                     	ds	1
   908  000026                     ___flmul@grs:
   909                           	callstack 0
   910                           
   911                           ; 4 bytes @ 0x25
   912  000026                     	ds	3
   913  000029                     ?_readTwoDigitValue:
   914                           	callstack 0
   915  000029                     readTwoDigitValue@prompt:
   916                           	callstack 0
   917                           
   918                           ; 2 bytes @ 0x28
   919  000029                     	ds	1
   920  00002A                     ___flmul@bexp:
   921                           	callstack 0
   922                           
   923                           ; 1 bytes @ 0x29
   924  00002A                     	ds	1
   925  00002B                     ??_readTwoDigitValue:
   926  00002B                     ___flmul@prod:
   927                           	callstack 0
   928                           
   929                           ; 4 bytes @ 0x2A
   930  00002B                     	ds	2
   931  00002D                     readTwoDigitValue@input:
   932                           	callstack 0
   933                           
   934                           ; 3 bytes @ 0x2C
   935  00002D                     	ds	2
   936  00002F                     ___flmul@temp:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0x2E
   940  00002F                     	ds	1
   941  000030                     readTwoDigitValue@digitCount:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0x2F
   945  000030                     	ds	1
   946  000031                     ?___fldiv:
   947                           	callstack 0
   948  000031                     floatToString@value:
   949                           	callstack 0
   950  000031                     ___fldiv@b:
   951                           	callstack 0
   952                           
   953                           ; 4 bytes @ 0x30
   954  000031                     	ds	1
   955  000032                     readTwoDigitValue@key:
   956                           	callstack 0
   957                           
   958                           ; 1 bytes @ 0x31
   959  000032                     	ds	3
   960  000035                     floatToString@buffer:
   961                           	callstack 0
   962  000035                     ___fldiv@a:
   963                           	callstack 0
   964                           
   965                           ; 4 bytes @ 0x34
   966  000035                     	ds	2
   967  000037                     floatToString@precision:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0x36
   971  000037                     	ds	2
   972  000039                     ??_floatToString:
   973  000039                     ??___fldiv:
   974                           
   975                           ; 1 bytes @ 0x38
   976  000039                     	ds	4
   977  00003D                     ___fldiv@rem:
   978                           	callstack 0
   979                           
   980                           ; 4 bytes @ 0x3C
   981  00003D                     	ds	4
   982  000041                     ___fldiv@sign:
   983                           	callstack 0
   984                           
   985                           ; 1 bytes @ 0x40
   986  000041                     	ds	1
   987  000042                     ___fldiv@new_exp:
   988                           	callstack 0
   989                           
   990                           ; 2 bytes @ 0x41
   991  000042                     	ds	2
   992  000044                     ___fldiv@grs:
   993                           	callstack 0
   994                           
   995                           ; 4 bytes @ 0x43
   996  000044                     	ds	4
   997  000048                     ___fldiv@bexp:
   998                           	callstack 0
   999                           
  1000                           ; 1 bytes @ 0x47
  1001  000048                     	ds	1
  1002  000049                     ___fldiv@aexp:
  1003                           	callstack 0
  1004                           
  1005                           ; 1 bytes @ 0x48
  1006  000049                     	ds	1
  1007  00004A                     displayMenu@menuIndex:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x49
  1011  00004A                     	ds	2
  1012                           
  1013 ;;
  1014 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1015 ;;
  1016 ;; *************** function _main *****************
  1017 ;; Defined at:
  1018 ;;		line 127 in file "main.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;		None
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;  gasLimit        2   80[BANK0 ] int 
  1023 ;;  humLimit        2   78[BANK0 ] int 
  1024 ;;  tempLimit       2   82[BANK0 ] int 
  1025 ;;  currentGas      4   74[BANK0 ] float 
  1026 ;;  currentHumid    4   70[BANK0 ] float 
  1027 ;;  currentTemp     4   66[BANK0 ] float 
  1028 ;;  currentTime     4   62[BANK0 ] unsigned long 
  1029 ;;  pressed_key     1   87[BANK0 ] unsigned char 
  1030 ;;  lastDisplayU    4   58[BANK0 ] unsigned long 
  1031 ;;  menuIndex       2   84[BANK0 ] int 
  1032 ;;  lastKey         1   86[BANK0 ] unsigned char 
  1033 ;; Return value:  Size  Location     Type
  1034 ;;                  1    wreg      void 
  1035 ;; Registers used:
  1036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1042 ;;      Params:         0       0       0       0       0       0       0       0       0
  1043 ;;      Locals:         0      30       0       0       0       0       0       0       0
  1044 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1045 ;;      Totals:         0      34       0       0       0       0       0       0       0
  1046 ;;Total ram usage:       34 bytes
  1047 ;; Hardware stack levels required when called: 6
  1048 ;; This function calls:
  1049 ;;		___flge
  1050 ;;		___xxtofl
  1051 ;;		_buzzer
  1052 ;;		_configureADC
  1053 ;;		_configureIO
  1054 ;;		_configureInterrupt
  1055 ;;		_configureLCD
  1056 ;;		_configureTimer
  1057 ;;		_displayMenu
  1058 ;;		_displayStuff
  1059 ;;		_gasRead
  1060 ;;		_humidade
  1061 ;;		_millis
  1062 ;;		_readKey
  1063 ;;		_readTwoDigitValue
  1064 ;;		_tempRead
  1065 ;; This function is called by:
  1066 ;;		Startup code after reset
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           	psect	text0
  1071  0008C8                     __ptext0:
  1072                           	callstack 0
  1073  0008C8                     _main:
  1074                           	callstack 25
  1075  0008C8                     
  1076                           ;main.c: 129:     configureIO();
  1077  0008C8  EC98  F017         	call	_configureIO	;wreg free
  1078                           
  1079                           ;main.c: 130:     configureADC();
  1080  0008CC  ECAF  F017         	call	_configureADC	;wreg free
  1081  0008D0                     
  1082                           ;main.c: 131:     configureLCD();
  1083  0008D0  ECB2  F016         	call	_configureLCD	;wreg free
  1084  0008D4                     
  1085                           ;main.c: 132:     configureTimer();
  1086  0008D4  ECA9  F017         	call	_configureTimer	;wreg free
  1087  0008D8                     
  1088                           ;main.c: 133:     configureInterrupt();
  1089  0008D8  EC85  F017         	call	_configureInterrupt	;wreg free
  1090  0008DC                     
  1091                           ;main.c: 135:     TRISDbits.TRISD0 = 0;
  1092  0008DC  9095               	bcf	149,0,c	;volatile
  1093  0008DE                     
  1094                           ;main.c: 136:     TRISDbits.TRISD1 = 0;
  1095  0008DE  9295               	bcf	149,1,c	;volatile
  1096  0008E0                     
  1097                           ;main.c: 137:     TRISDbits.TRISD2 = 0;
  1098  0008E0  9495               	bcf	149,2,c	;volatile
  1099  0008E2                     
  1100                           ;main.c: 139:     char lastKey = '\0';
  1101  0008E2  0E00               	movlw	0
  1102  0008E4  0100               	movlb	0	; () banked
  1103  0008E6  6FB6               	movwf	main@lastKey& (0+255),b
  1104  0008E8                     
  1105                           ; BSR set to: 0
  1106                           ;main.c: 140:     int menuIndex = 0;
  1107  0008E8  0E00               	movlw	0
  1108  0008EA  6FB5               	movwf	(main@menuIndex+1)& (0+255),b
  1109  0008EC  0E00               	movlw	0
  1110  0008EE  6FB4               	movwf	main@menuIndex& (0+255),b
  1111  0008F0                     
  1112                           ; BSR set to: 0
  1113                           ;main.c: 141:     unsigned long lastDisplayUpdate = 0;
  1114  0008F0  0E00               	movlw	0
  1115  0008F2  6F9A               	movwf	main@lastDisplayUpdate& (0+255),b
  1116  0008F4  0E00               	movlw	0
  1117  0008F6  6F9B               	movwf	(main@lastDisplayUpdate+1)& (0+255),b
  1118  0008F8  0E00               	movlw	0
  1119  0008FA  6F9C               	movwf	(main@lastDisplayUpdate+2)& (0+255),b
  1120  0008FC  0E00               	movlw	0
  1121  0008FE  6F9D               	movwf	(main@lastDisplayUpdate+3)& (0+255),b
  1122  000900                     l5114:
  1123                           
  1124                           ;main.c: 144:         char pressed_key = readKey();
  1125  000900  EC59  F00D         	call	_readKey	;wreg free
  1126  000904  0100               	movlb	0	; () banked
  1127  000906  6FB7               	movwf	main@pressed_key& (0+255),b
  1128  000908                     
  1129                           ; BSR set to: 0
  1130                           ;main.c: 145:         unsigned long currentTime = millis();
  1131  000908  EC72  F017         	call	_millis	;wreg free
  1132  00090C  C00A  F09E         	movff	?_millis,main@currentTime
  1133  000910  C00B  F09F         	movff	?_millis+1,main@currentTime+1
  1134  000914  C00C  F0A0         	movff	?_millis+2,main@currentTime+2
  1135  000918  C00D  F0A1         	movff	?_millis+3,main@currentTime+3
  1136  00091C                     
  1137                           ;main.c: 148:         if (currentTime - lastDisplayUpdate >= 500) {
  1138  00091C  0100               	movlb	0	; () banked
  1139  00091E  519A               	movf	main@lastDisplayUpdate& (0+255),w,b
  1140  000920  5D9E               	subwf	main@currentTime& (0+255),w,b
  1141  000922  6F96               	movwf	??_main& (0+255),b
  1142  000924  519B               	movf	(main@lastDisplayUpdate+1)& (0+255),w,b
  1143  000926  599F               	subwfb	(main@currentTime+1)& (0+255),w,b
  1144  000928  6F97               	movwf	(??_main+1)& (0+255),b
  1145  00092A  519C               	movf	(main@lastDisplayUpdate+2)& (0+255),w,b
  1146  00092C  59A0               	subwfb	(main@currentTime+2)& (0+255),w,b
  1147  00092E  6F98               	movwf	(??_main+2)& (0+255),b
  1148  000930  519D               	movf	(main@lastDisplayUpdate+3)& (0+255),w,b
  1149  000932  59A1               	subwfb	(main@currentTime+3)& (0+255),w,b
  1150  000934  6F99               	movwf	(??_main+3)& (0+255),b
  1151  000936  5199               	movf	(??_main+3)& (0+255),w,b
  1152  000938  1198               	iorwf	(??_main+2)& (0+255),w,b
  1153  00093A  E10B               	bnz	u5210
  1154  00093C  0EF4               	movlw	244
  1155  00093E  5D96               	subwf	??_main& (0+255),w,b
  1156  000940  0E01               	movlw	1
  1157  000942  5997               	subwfb	(??_main+1)& (0+255),w,b
  1158  000944  A0D8               	btfss	status,0,c
  1159  000946  EFA7  F004         	goto	u5211
  1160  00094A  EFA9  F004         	goto	u5210
  1161  00094E                     u5211:
  1162  00094E  EFB7  F004         	goto	l5124
  1163  000952                     u5210:
  1164  000952                     
  1165                           ; BSR set to: 0
  1166                           ;main.c: 149:             displayMenu(menuIndex);
  1167  000952  C0B4  F04A         	movff	main@menuIndex,displayMenu@menuIndex
  1168  000956  C0B5  F04B         	movff	main@menuIndex+1,displayMenu@menuIndex+1
  1169  00095A  EC09  F000         	call	_displayMenu	;wreg free
  1170  00095E                     
  1171                           ;main.c: 150:             lastDisplayUpdate = currentTime;
  1172  00095E  C09E  F09A         	movff	main@currentTime,main@lastDisplayUpdate
  1173  000962  C09F  F09B         	movff	main@currentTime+1,main@lastDisplayUpdate+1
  1174  000966  C0A0  F09C         	movff	main@currentTime+2,main@lastDisplayUpdate+2
  1175  00096A  C0A1  F09D         	movff	main@currentTime+3,main@lastDisplayUpdate+3
  1176  00096E                     l5124:
  1177                           
  1178                           ;main.c: 154:         if (pressed_key == 'E' && lastKey != 'E') {
  1179  00096E  0E45               	movlw	69
  1180  000970  0100               	movlb	0	; () banked
  1181  000972  19B7               	xorwf	main@pressed_key& (0+255),w,b
  1182  000974  A4D8               	btfss	status,2,c
  1183  000976  EFBF  F004         	goto	u5221
  1184  00097A  EFC1  F004         	goto	u5220
  1185  00097E                     u5221:
  1186  00097E  EFE4  F004         	goto	l5136
  1187  000982                     u5220:
  1188  000982                     
  1189                           ; BSR set to: 0
  1190  000982  0E45               	movlw	69
  1191  000984  19B6               	xorwf	main@lastKey& (0+255),w,b
  1192  000986  B4D8               	btfsc	status,2,c
  1193  000988  EFC8  F004         	goto	u5231
  1194  00098C  EFCA  F004         	goto	u5230
  1195  000990                     u5231:
  1196  000990  EFE4  F004         	goto	l5136
  1197  000994                     u5230:
  1198  000994                     
  1199                           ; BSR set to: 0
  1200                           ;main.c: 155:             menuIndex++;
  1201  000994  4BB4               	infsnz	main@menuIndex& (0+255),f,b
  1202  000996  2BB5               	incf	(main@menuIndex+1)& (0+255),f,b
  1203  000998                     
  1204                           ; BSR set to: 0
  1205                           ;main.c: 156:             if (menuIndex > 4) {
  1206  000998  BFB5               	btfsc	(main@menuIndex+1)& (0+255),7,b
  1207  00099A  EFD8  F004         	goto	u5241
  1208  00099E  51B5               	movf	(main@menuIndex+1)& (0+255),w,b
  1209  0009A0  E109               	bnz	u5240
  1210  0009A2  0E05               	movlw	5
  1211  0009A4  5DB4               	subwf	main@menuIndex& (0+255),w,b
  1212  0009A6  A0D8               	btfss	status,0,c
  1213  0009A8  EFD8  F004         	goto	u5241
  1214  0009AC  EFDA  F004         	goto	u5240
  1215  0009B0                     u5241:
  1216  0009B0  EFDE  F004         	goto	l5134
  1217  0009B4                     u5240:
  1218  0009B4                     
  1219                           ; BSR set to: 0
  1220                           ;main.c: 157:                 menuIndex = 0;
  1221  0009B4  0E00               	movlw	0
  1222  0009B6  6FB5               	movwf	(main@menuIndex+1)& (0+255),b
  1223  0009B8  0E00               	movlw	0
  1224  0009BA  6FB4               	movwf	main@menuIndex& (0+255),b
  1225  0009BC                     l5134:
  1226                           
  1227                           ; BSR set to: 0
  1228                           ;main.c: 159:             displayMenu(menuIndex);
  1229  0009BC  C0B4  F04A         	movff	main@menuIndex,displayMenu@menuIndex
  1230  0009C0  C0B5  F04B         	movff	main@menuIndex+1,displayMenu@menuIndex+1
  1231  0009C4  EC09  F000         	call	_displayMenu	;wreg free
  1232  0009C8                     l5136:
  1233                           
  1234                           ;main.c: 163:         if (pressed_key == 'A' && lastKey != 'A') {
  1235  0009C8  0E41               	movlw	65
  1236  0009CA  0100               	movlb	0	; () banked
  1237  0009CC  19B7               	xorwf	main@pressed_key& (0+255),w,b
  1238  0009CE  A4D8               	btfss	status,2,c
  1239  0009D0  EFEC  F004         	goto	u5251
  1240  0009D4  EFEE  F004         	goto	u5250
  1241  0009D8                     u5251:
  1242  0009D8  EF3D  F005         	goto	l5156
  1243  0009DC                     u5250:
  1244  0009DC                     
  1245                           ; BSR set to: 0
  1246  0009DC  0E41               	movlw	65
  1247  0009DE  19B6               	xorwf	main@lastKey& (0+255),w,b
  1248  0009E0  B4D8               	btfsc	status,2,c
  1249  0009E2  EFF5  F004         	goto	u5261
  1250  0009E6  EFF7  F004         	goto	u5260
  1251  0009EA                     u5261:
  1252  0009EA  EF3D  F005         	goto	l5156
  1253  0009EE                     u5260:
  1254  0009EE                     
  1255                           ; BSR set to: 0
  1256                           ;main.c: 164:             int tempLimit = readTwoDigitValue("Limite Temp:");
  1257  0009EE  0E7C               	movlw	low STR_1
  1258  0009F0  6E29               	movwf	readTwoDigitValue@prompt^0,c
  1259  0009F2  0E7F               	movlw	high STR_1
  1260  0009F4  6E2A               	movwf	(readTwoDigitValue@prompt+1)^0,c
  1261  0009F6  EC79  F011         	call	_readTwoDigitValue	;wreg free
  1262  0009FA  C029  F0B2         	movff	?_readTwoDigitValue,main@tempLimit
  1263  0009FE  C02A  F0B3         	movff	?_readTwoDigitValue+1,main@tempLimit+1
  1264  000A02                     
  1265                           ;main.c: 165:             if (tempLimit != -1) {
  1266  000A02  0100               	movlb	0	; () banked
  1267  000A04  29B2               	incf	main@tempLimit& (0+255),w,b
  1268  000A06  E108               	bnz	u5270
  1269  000A08  29B3               	incf	(main@tempLimit+1)& (0+255),w,b
  1270  000A0A  B4D8               	btfsc	status,2,c
  1271  000A0C  EF0A  F005         	goto	u5271
  1272  000A10  EF0C  F005         	goto	u5270
  1273  000A14                     u5271:
  1274  000A14  EF29  F005         	goto	l5150
  1275  000A18                     u5270:
  1276  000A18                     
  1277                           ; BSR set to: 0
  1278                           ;main.c: 166:                 Tlim = tempLimit;
  1279  000A18  C0B2  F0D8         	movff	main@tempLimit,_Tlim
  1280  000A1C  C0B3  F0D9         	movff	main@tempLimit+1,_Tlim+1
  1281  000A20                     
  1282                           ; BSR set to: 0
  1283                           ;main.c: 167:                 displayStuff(1, 0, "Temp Salva!");
  1284  000A20  0E00               	movlw	0
  1285  000A22  6E0C               	movwf	(displayStuff@row+1)^0,c
  1286  000A24  0E01               	movlw	1
  1287  000A26  6E0B               	movwf	displayStuff@row^0,c
  1288  000A28  0E00               	movlw	0
  1289  000A2A  6E0E               	movwf	(displayStuff@column+1)^0,c
  1290  000A2C  0E00               	movlw	0
  1291  000A2E  6E0D               	movwf	displayStuff@column^0,c
  1292  000A30  0E96               	movlw	low STR_2
  1293  000A32  6E0F               	movwf	displayStuff@stuff^0,c
  1294  000A34  0E7F               	movlw	high STR_2
  1295  000A36  6E10               	movwf	(displayStuff@stuff+1)^0,c
  1296  000A38  EC5E  F015         	call	_displayStuff	;wreg free
  1297  000A3C                     
  1298                           ;main.c: 168:                 _delay((unsigned long)((10)*(20000000/4000.0)));
  1299  000A3C  0E41               	movlw	65
  1300  000A3E  0100               	movlb	0	; () banked
  1301  000A40  6F96               	movwf	??_main& (0+255),b
  1302  000A42  0EEE               	movlw	238
  1303  000A44                     u5437:
  1304  000A44  2EE8               	decfsz	wreg,f,c
  1305  000A46  D7FE               	bra	u5437
  1306  000A48  2F96               	decfsz	??_main& (0+255),f,b
  1307  000A4A  D7FC               	bra	u5437
  1308  000A4C  F000               	nop	
  1309                           
  1310                           ;main.c: 169:             }else if (tempLimit == -1){menuIndex = 0;displayMenu(menuIndex
      +                          );}
  1311  000A4E  EF3D  F005         	goto	l5156
  1312  000A52                     l5150:
  1313                           
  1314                           ; BSR set to: 0
  1315  000A52  29B2               	incf	main@tempLimit& (0+255),w,b
  1316  000A54  E106               	bnz	u5281
  1317  000A56  29B3               	incf	(main@tempLimit+1)& (0+255),w,b
  1318  000A58  A4D8               	btfss	status,2,c
  1319  000A5A  EF31  F005         	goto	u5281
  1320  000A5E  EF33  F005         	goto	u5280
  1321  000A62                     u5281:
  1322  000A62  EF3D  F005         	goto	l5156
  1323  000A66                     u5280:
  1324  000A66                     
  1325                           ; BSR set to: 0
  1326  000A66  0E00               	movlw	0
  1327  000A68  6FB5               	movwf	(main@menuIndex+1)& (0+255),b
  1328  000A6A  0E00               	movlw	0
  1329  000A6C  6FB4               	movwf	main@menuIndex& (0+255),b
  1330  000A6E                     
  1331                           ; BSR set to: 0
  1332  000A6E  0E00               	movlw	0
  1333  000A70  6E4B               	movwf	(displayMenu@menuIndex+1)^0,c
  1334  000A72  0E00               	movlw	0
  1335  000A74  6E4A               	movwf	displayMenu@menuIndex^0,c
  1336  000A76  EC09  F000         	call	_displayMenu	;wreg free
  1337  000A7A                     l5156:
  1338                           
  1339                           ;main.c: 173:         if (pressed_key == 'B' && lastKey != 'B') {
  1340  000A7A  0E42               	movlw	66
  1341  000A7C  0100               	movlb	0	; () banked
  1342  000A7E  19B7               	xorwf	main@pressed_key& (0+255),w,b
  1343  000A80  A4D8               	btfss	status,2,c
  1344  000A82  EF45  F005         	goto	u5291
  1345  000A86  EF47  F005         	goto	u5290
  1346  000A8A                     u5291:
  1347  000A8A  EF80  F005         	goto	l5170
  1348  000A8E                     u5290:
  1349  000A8E                     
  1350                           ; BSR set to: 0
  1351  000A8E  0E42               	movlw	66
  1352  000A90  19B6               	xorwf	main@lastKey& (0+255),w,b
  1353  000A92  B4D8               	btfsc	status,2,c
  1354  000A94  EF4E  F005         	goto	u5301
  1355  000A98  EF50  F005         	goto	u5300
  1356  000A9C                     u5301:
  1357  000A9C  EF80  F005         	goto	l5170
  1358  000AA0                     u5300:
  1359  000AA0                     
  1360                           ; BSR set to: 0
  1361                           ;main.c: 174:             int humLimit = readTwoDigitValue("Limite Hum:");
  1362  000AA0  0EA2               	movlw	low STR_3
  1363  000AA2  6E29               	movwf	readTwoDigitValue@prompt^0,c
  1364  000AA4  0E7F               	movlw	high STR_3
  1365  000AA6  6E2A               	movwf	(readTwoDigitValue@prompt+1)^0,c
  1366  000AA8  EC79  F011         	call	_readTwoDigitValue	;wreg free
  1367  000AAC  C029  F0AE         	movff	?_readTwoDigitValue,main@humLimit
  1368  000AB0  C02A  F0AF         	movff	?_readTwoDigitValue+1,main@humLimit+1
  1369  000AB4                     
  1370                           ;main.c: 175:             if (humLimit != -1) {
  1371  000AB4  0100               	movlb	0	; () banked
  1372  000AB6  29AE               	incf	main@humLimit& (0+255),w,b
  1373  000AB8  E108               	bnz	u5310
  1374  000ABA  29AF               	incf	(main@humLimit+1)& (0+255),w,b
  1375  000ABC  B4D8               	btfsc	status,2,c
  1376  000ABE  EF63  F005         	goto	u5311
  1377  000AC2  EF65  F005         	goto	u5310
  1378  000AC6                     u5311:
  1379  000AC6  EF80  F005         	goto	l5170
  1380  000ACA                     u5310:
  1381  000ACA                     
  1382                           ; BSR set to: 0
  1383                           ;main.c: 176:                 Hlim = humLimit;
  1384  000ACA  C0AE  F0D6         	movff	main@humLimit,_Hlim
  1385  000ACE  C0AF  F0D7         	movff	main@humLimit+1,_Hlim+1
  1386  000AD2                     
  1387                           ; BSR set to: 0
  1388                           ;main.c: 177:                 displayStuff(1, 0, "Humid Salvo!");
  1389  000AD2  0E00               	movlw	0
  1390  000AD4  6E0C               	movwf	(displayStuff@row+1)^0,c
  1391  000AD6  0E01               	movlw	1
  1392  000AD8  6E0B               	movwf	displayStuff@row^0,c
  1393  000ADA  0E00               	movlw	0
  1394  000ADC  6E0E               	movwf	(displayStuff@column+1)^0,c
  1395  000ADE  0E00               	movlw	0
  1396  000AE0  6E0D               	movwf	displayStuff@column^0,c
  1397  000AE2  0E6F               	movlw	low STR_4
  1398  000AE4  6E0F               	movwf	displayStuff@stuff^0,c
  1399  000AE6  0E7F               	movlw	high STR_4
  1400  000AE8  6E10               	movwf	(displayStuff@stuff+1)^0,c
  1401  000AEA  EC5E  F015         	call	_displayStuff	;wreg free
  1402  000AEE                     
  1403                           ;main.c: 178:                 _delay((unsigned long)((10)*(20000000/4000.0)));
  1404  000AEE  0E41               	movlw	65
  1405  000AF0  0100               	movlb	0	; () banked
  1406  000AF2  6F96               	movwf	??_main& (0+255),b
  1407  000AF4  0EEE               	movlw	238
  1408  000AF6                     u5447:
  1409  000AF6  2EE8               	decfsz	wreg,f,c
  1410  000AF8  D7FE               	bra	u5447
  1411  000AFA  2F96               	decfsz	??_main& (0+255),f,b
  1412  000AFC  D7FC               	bra	u5447
  1413  000AFE  F000               	nop	
  1414  000B00                     l5170:
  1415                           
  1416                           ;main.c: 183:         if (pressed_key == 'C' && lastKey != 'C') {
  1417  000B00  0E43               	movlw	67
  1418  000B02  0100               	movlb	0	; () banked
  1419  000B04  19B7               	xorwf	main@pressed_key& (0+255),w,b
  1420  000B06  A4D8               	btfss	status,2,c
  1421  000B08  EF88  F005         	goto	u5321
  1422  000B0C  EF8A  F005         	goto	u5320
  1423  000B10                     u5321:
  1424  000B10  EFC3  F005         	goto	l5184
  1425  000B14                     u5320:
  1426  000B14                     
  1427                           ; BSR set to: 0
  1428  000B14  0E43               	movlw	67
  1429  000B16  19B6               	xorwf	main@lastKey& (0+255),w,b
  1430  000B18  B4D8               	btfsc	status,2,c
  1431  000B1A  EF91  F005         	goto	u5331
  1432  000B1E  EF93  F005         	goto	u5330
  1433  000B22                     u5331:
  1434  000B22  EFC3  F005         	goto	l5184
  1435  000B26                     u5330:
  1436  000B26                     
  1437                           ; BSR set to: 0
  1438                           ;main.c: 184:             int gasLimit = readTwoDigitValue("Limite Gas");
  1439  000B26  0EC5               	movlw	low STR_5
  1440  000B28  6E29               	movwf	readTwoDigitValue@prompt^0,c
  1441  000B2A  0E7F               	movlw	high STR_5
  1442  000B2C  6E2A               	movwf	(readTwoDigitValue@prompt+1)^0,c
  1443  000B2E  EC79  F011         	call	_readTwoDigitValue	;wreg free
  1444  000B32  C029  F0B0         	movff	?_readTwoDigitValue,main@gasLimit
  1445  000B36  C02A  F0B1         	movff	?_readTwoDigitValue+1,main@gasLimit+1
  1446  000B3A                     
  1447                           ;main.c: 185:             if (gasLimit != -1) {
  1448  000B3A  0100               	movlb	0	; () banked
  1449  000B3C  29B0               	incf	main@gasLimit& (0+255),w,b
  1450  000B3E  E108               	bnz	u5340
  1451  000B40  29B1               	incf	(main@gasLimit+1)& (0+255),w,b
  1452  000B42  B4D8               	btfsc	status,2,c
  1453  000B44  EFA6  F005         	goto	u5341
  1454  000B48  EFA8  F005         	goto	u5340
  1455  000B4C                     u5341:
  1456  000B4C  EFC3  F005         	goto	l5184
  1457  000B50                     u5340:
  1458  000B50                     
  1459                           ; BSR set to: 0
  1460                           ;main.c: 186:                 Glim = gasLimit;
  1461  000B50  C0B0  F0D4         	movff	main@gasLimit,_Glim
  1462  000B54  C0B1  F0D5         	movff	main@gasLimit+1,_Glim+1
  1463  000B58                     
  1464                           ; BSR set to: 0
  1465                           ;main.c: 187:                 displayStuff(1, 0, "Gas Salvo!");
  1466  000B58  0E00               	movlw	0
  1467  000B5A  6E0C               	movwf	(displayStuff@row+1)^0,c
  1468  000B5C  0E01               	movlw	1
  1469  000B5E  6E0B               	movwf	displayStuff@row^0,c
  1470  000B60  0E00               	movlw	0
  1471  000B62  6E0E               	movwf	(displayStuff@column+1)^0,c
  1472  000B64  0E00               	movlw	0
  1473  000B66  6E0D               	movwf	displayStuff@column^0,c
  1474  000B68  0EBA               	movlw	low STR_6
  1475  000B6A  6E0F               	movwf	displayStuff@stuff^0,c
  1476  000B6C  0E7F               	movlw	high STR_6
  1477  000B6E  6E10               	movwf	(displayStuff@stuff+1)^0,c
  1478  000B70  EC5E  F015         	call	_displayStuff	;wreg free
  1479  000B74                     
  1480                           ;main.c: 188:                 _delay((unsigned long)((10)*(20000000/4000.0)));
  1481  000B74  0E41               	movlw	65
  1482  000B76  0100               	movlb	0	; () banked
  1483  000B78  6F96               	movwf	??_main& (0+255),b
  1484  000B7A  0EEE               	movlw	238
  1485  000B7C                     u5457:
  1486  000B7C  2EE8               	decfsz	wreg,f,c
  1487  000B7E  D7FE               	bra	u5457
  1488  000B80  2F96               	decfsz	??_main& (0+255),f,b
  1489  000B82  D7FC               	bra	u5457
  1490  000B84  F000               	nop	
  1491  000B86                     l5184:
  1492                           
  1493                           ;main.c: 193:         if (pressed_key == 'D' && lastKey != 'D') {
  1494  000B86  0E44               	movlw	68
  1495  000B88  0100               	movlb	0	; () banked
  1496  000B8A  19B7               	xorwf	main@pressed_key& (0+255),w,b
  1497  000B8C  A4D8               	btfss	status,2,c
  1498  000B8E  EFCB  F005         	goto	u5351
  1499  000B92  EFCD  F005         	goto	u5350
  1500  000B96                     u5351:
  1501  000B96  EFF9  F005         	goto	l5194
  1502  000B9A                     u5350:
  1503  000B9A                     
  1504                           ; BSR set to: 0
  1505  000B9A  0E44               	movlw	68
  1506  000B9C  19B6               	xorwf	main@lastKey& (0+255),w,b
  1507  000B9E  B4D8               	btfsc	status,2,c
  1508  000BA0  EFD4  F005         	goto	u5361
  1509  000BA4  EFD6  F005         	goto	u5360
  1510  000BA8                     u5361:
  1511  000BA8  EFF9  F005         	goto	l5194
  1512  000BAC                     u5360:
  1513  000BAC                     
  1514                           ; BSR set to: 0
  1515                           ;main.c: 195:             Tlim = 30;
  1516  000BAC  0E00               	movlw	0
  1517  000BAE  6FD9               	movwf	(_Tlim+1)& (0+255),b
  1518  000BB0  0E1E               	movlw	30
  1519  000BB2  6FD8               	movwf	_Tlim& (0+255),b
  1520                           
  1521                           ;main.c: 196:             Hlim = 50;
  1522  000BB4  0E00               	movlw	0
  1523  000BB6  6FD7               	movwf	(_Hlim+1)& (0+255),b
  1524  000BB8  0E32               	movlw	50
  1525  000BBA  6FD6               	movwf	_Hlim& (0+255),b
  1526                           
  1527                           ;main.c: 197:             Glim = 20;
  1528  000BBC  0E00               	movlw	0
  1529  000BBE  6FD5               	movwf	(_Glim+1)& (0+255),b
  1530  000BC0  0E14               	movlw	20
  1531  000BC2  6FD4               	movwf	_Glim& (0+255),b
  1532  000BC4                     
  1533                           ; BSR set to: 0
  1534                           ;main.c: 198:             displayStuff(0, 0, "Lim resetados!");
  1535  000BC4  0E00               	movlw	0
  1536  000BC6  6E0C               	movwf	(displayStuff@row+1)^0,c
  1537  000BC8  0E00               	movlw	0
  1538  000BCA  6E0B               	movwf	displayStuff@row^0,c
  1539  000BCC  0E00               	movlw	0
  1540  000BCE  6E0E               	movwf	(displayStuff@column+1)^0,c
  1541  000BD0  0E00               	movlw	0
  1542  000BD2  6E0D               	movwf	displayStuff@column^0,c
  1543  000BD4  0E52               	movlw	low STR_7
  1544  000BD6  6E0F               	movwf	displayStuff@stuff^0,c
  1545  000BD8  0E7F               	movlw	high STR_7
  1546  000BDA  6E10               	movwf	(displayStuff@stuff+1)^0,c
  1547  000BDC  EC5E  F015         	call	_displayStuff	;wreg free
  1548  000BE0                     
  1549                           ;main.c: 199:             _delay((unsigned long)((10)*(20000000/4000.0)));
  1550  000BE0  0E41               	movlw	65
  1551  000BE2  0100               	movlb	0	; () banked
  1552  000BE4  6F96               	movwf	??_main& (0+255),b
  1553  000BE6  0EEE               	movlw	238
  1554  000BE8                     u5467:
  1555  000BE8  2EE8               	decfsz	wreg,f,c
  1556  000BEA  D7FE               	bra	u5467
  1557  000BEC  2F96               	decfsz	??_main& (0+255),f,b
  1558  000BEE  D7FC               	bra	u5467
  1559  000BF0  F000               	nop	
  1560  000BF2                     l5194:
  1561                           
  1562                           ;main.c: 203:         float currentTemp = tempRead();
  1563  000BF2  ECE9  F013         	call	_tempRead	;wreg free
  1564  000BF6  C060  F0A2         	movff	?_tempRead,main@currentTemp
  1565  000BFA  C061  F0A3         	movff	?_tempRead+1,main@currentTemp+1
  1566  000BFE  C062  F0A4         	movff	?_tempRead+2,main@currentTemp+2
  1567  000C02  C063  F0A5         	movff	?_tempRead+3,main@currentTemp+3
  1568  000C06                     
  1569                           ;main.c: 204:         float currentHumid = humidade();
  1570  000C06  EC48  F014         	call	_humidade	;wreg free
  1571  000C0A  C060  F0A6         	movff	?_humidade,main@currentHumid
  1572  000C0E  C061  F0A7         	movff	?_humidade+1,main@currentHumid+1
  1573  000C12  C062  F0A8         	movff	?_humidade+2,main@currentHumid+2
  1574  000C16  C063  F0A9         	movff	?_humidade+3,main@currentHumid+3
  1575  000C1A                     
  1576                           ;main.c: 205:         float currentGas = gasRead();
  1577  000C1A  ECA7  F014         	call	_gasRead	;wreg free
  1578  000C1E  C060  F0AA         	movff	?_gasRead,main@currentGas
  1579  000C22  C061  F0AB         	movff	?_gasRead+1,main@currentGas+1
  1580  000C26  C062  F0AC         	movff	?_gasRead+2,main@currentGas+2
  1581  000C2A  C063  F0AD         	movff	?_gasRead+3,main@currentGas+3
  1582  000C2E                     
  1583                           ;main.c: 208:         if (currentTemp > Tlim || currentHumid > Hlim || currentGas > Glim
      +                          ) {
  1584  000C2E  C0D8  F00A         	movff	_Tlim,___xxtofl@val
  1585  000C32  C0D9  F00B         	movff	_Tlim+1,___xxtofl@val+1
  1586  000C36  0E00               	movlw	0
  1587  000C38  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  1588  000C3A  0EFF               	movlw	-1
  1589  000C3C  6E0C               	movwf	(___xxtofl@val+2)^0,c
  1590  000C3E  6E0D               	movwf	(___xxtofl@val+3)^0,c
  1591  000C40  0E01               	movlw	1
  1592  000C42  ECFF  F00F         	call	___xxtofl
  1593  000C46  C00A  F018         	movff	?___xxtofl,___flge@ff1
  1594  000C4A  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  1595  000C4E  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  1596  000C52  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  1597  000C56  C0A2  F01C         	movff	main@currentTemp,___flge@ff2
  1598  000C5A  C0A3  F01D         	movff	main@currentTemp+1,___flge@ff2+1
  1599  000C5E  C0A4  F01E         	movff	main@currentTemp+2,___flge@ff2+2
  1600  000C62  C0A5  F01F         	movff	main@currentTemp+3,___flge@ff2+3
  1601  000C66  EC8E  F012         	call	___flge	;wreg free
  1602  000C6A  A0D8               	btfss	status,0,c
  1603  000C6C  EF3A  F006         	goto	u5371
  1604  000C70  EF3C  F006         	goto	u5370
  1605  000C74                     u5371:
  1606  000C74  EF86  F006         	goto	l5206
  1607  000C78                     u5370:
  1608  000C78  C0D6  F00A         	movff	_Hlim,___xxtofl@val
  1609  000C7C  C0D7  F00B         	movff	_Hlim+1,___xxtofl@val+1
  1610  000C80  0E00               	movlw	0
  1611  000C82  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  1612  000C84  0EFF               	movlw	-1
  1613  000C86  6E0C               	movwf	(___xxtofl@val+2)^0,c
  1614  000C88  6E0D               	movwf	(___xxtofl@val+3)^0,c
  1615  000C8A  0E01               	movlw	1
  1616  000C8C  ECFF  F00F         	call	___xxtofl
  1617  000C90  C00A  F018         	movff	?___xxtofl,___flge@ff1
  1618  000C94  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  1619  000C98  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  1620  000C9C  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  1621  000CA0  C0A6  F01C         	movff	main@currentHumid,___flge@ff2
  1622  000CA4  C0A7  F01D         	movff	main@currentHumid+1,___flge@ff2+1
  1623  000CA8  C0A8  F01E         	movff	main@currentHumid+2,___flge@ff2+2
  1624  000CAC  C0A9  F01F         	movff	main@currentHumid+3,___flge@ff2+3
  1625  000CB0  EC8E  F012         	call	___flge	;wreg free
  1626  000CB4  A0D8               	btfss	status,0,c
  1627  000CB6  EF5F  F006         	goto	u5381
  1628  000CBA  EF61  F006         	goto	u5380
  1629  000CBE                     u5381:
  1630  000CBE  EF86  F006         	goto	l5206
  1631  000CC2                     u5380:
  1632  000CC2  C0D4  F00A         	movff	_Glim,___xxtofl@val
  1633  000CC6  C0D5  F00B         	movff	_Glim+1,___xxtofl@val+1
  1634  000CCA  0E00               	movlw	0
  1635  000CCC  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  1636  000CCE  0EFF               	movlw	-1
  1637  000CD0  6E0C               	movwf	(___xxtofl@val+2)^0,c
  1638  000CD2  6E0D               	movwf	(___xxtofl@val+3)^0,c
  1639  000CD4  0E01               	movlw	1
  1640  000CD6  ECFF  F00F         	call	___xxtofl
  1641  000CDA  C00A  F018         	movff	?___xxtofl,___flge@ff1
  1642  000CDE  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  1643  000CE2  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  1644  000CE6  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  1645  000CEA  C0AA  F01C         	movff	main@currentGas,___flge@ff2
  1646  000CEE  C0AB  F01D         	movff	main@currentGas+1,___flge@ff2+1
  1647  000CF2  C0AC  F01E         	movff	main@currentGas+2,___flge@ff2+2
  1648  000CF6  C0AD  F01F         	movff	main@currentGas+3,___flge@ff2+3
  1649  000CFA  EC8E  F012         	call	___flge	;wreg free
  1650  000CFE  B0D8               	btfsc	status,0,c
  1651  000D00  EF84  F006         	goto	u5391
  1652  000D04  EF86  F006         	goto	u5390
  1653  000D08                     u5391:
  1654  000D08  EF8E  F006         	goto	l5208
  1655  000D0C                     u5390:
  1656  000D0C                     l5206:
  1657                           
  1658                           ;main.c: 209:             buzzer(1);
  1659  000D0C  0E00               	movlw	0
  1660  000D0E  6E0B               	movwf	(buzzer@buzzerStatus+1)^0,c
  1661  000D10  0E01               	movlw	1
  1662  000D12  6E0A               	movwf	buzzer@buzzerStatus^0,c
  1663  000D14  ECBD  F017         	call	_buzzer	;wreg free
  1664                           
  1665                           ;main.c: 210:         } else {
  1666  000D18  EF94  F006         	goto	l111
  1667  000D1C                     l5208:
  1668                           
  1669                           ;main.c: 211:             buzzer(0);
  1670  000D1C  0E00               	movlw	0
  1671  000D1E  6E0B               	movwf	(buzzer@buzzerStatus+1)^0,c
  1672  000D20  0E00               	movlw	0
  1673  000D22  6E0A               	movwf	buzzer@buzzerStatus^0,c
  1674  000D24  ECBD  F017         	call	_buzzer	;wreg free
  1675  000D28                     l111:
  1676                           
  1677                           ;main.c: 213:         if (currentTemp > Tlim){
  1678  000D28  C0D8  F00A         	movff	_Tlim,___xxtofl@val
  1679  000D2C  C0D9  F00B         	movff	_Tlim+1,___xxtofl@val+1
  1680  000D30  0E00               	movlw	0
  1681  000D32  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  1682  000D34  0EFF               	movlw	-1
  1683  000D36  6E0C               	movwf	(___xxtofl@val+2)^0,c
  1684  000D38  6E0D               	movwf	(___xxtofl@val+3)^0,c
  1685  000D3A  0E01               	movlw	1
  1686  000D3C  ECFF  F00F         	call	___xxtofl
  1687  000D40  C00A  F018         	movff	?___xxtofl,___flge@ff1
  1688  000D44  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  1689  000D48  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  1690  000D4C  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  1691  000D50  C0A2  F01C         	movff	main@currentTemp,___flge@ff2
  1692  000D54  C0A3  F01D         	movff	main@currentTemp+1,___flge@ff2+1
  1693  000D58  C0A4  F01E         	movff	main@currentTemp+2,___flge@ff2+2
  1694  000D5C  C0A5  F01F         	movff	main@currentTemp+3,___flge@ff2+3
  1695  000D60  EC8E  F012         	call	___flge	;wreg free
  1696  000D64  B0D8               	btfsc	status,0,c
  1697  000D66  EFB7  F006         	goto	u5401
  1698  000D6A  EFB9  F006         	goto	u5400
  1699  000D6E                     u5401:
  1700  000D6E  EFBD  F006         	goto	l112
  1701  000D72                     u5400:
  1702  000D72                     
  1703                           ;main.c: 214:             PORTDbits.RD0 = 1;
  1704  000D72  8083               	bsf	131,0,c	;volatile
  1705                           
  1706                           ;main.c: 215:             PORTCbits.RC2 = 1;
  1707  000D74  8482               	bsf	130,2,c	;volatile
  1708                           
  1709                           ;main.c: 216:         }else {
  1710  000D76  EFBF  F006         	goto	l5212
  1711  000D7A                     l112:
  1712                           
  1713                           ;main.c: 217:             PORTDbits.RD0 = 0;
  1714  000D7A  9083               	bcf	131,0,c	;volatile
  1715                           
  1716                           ;main.c: 218:             PORTCbits.RC2 = 0;
  1717  000D7C  9482               	bcf	130,2,c	;volatile
  1718  000D7E                     l5212:
  1719                           
  1720                           ;main.c: 220:         if (currentHumid > Hlim){
  1721  000D7E  C0D6  F00A         	movff	_Hlim,___xxtofl@val
  1722  000D82  C0D7  F00B         	movff	_Hlim+1,___xxtofl@val+1
  1723  000D86  0E00               	movlw	0
  1724  000D88  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  1725  000D8A  0EFF               	movlw	-1
  1726  000D8C  6E0C               	movwf	(___xxtofl@val+2)^0,c
  1727  000D8E  6E0D               	movwf	(___xxtofl@val+3)^0,c
  1728  000D90  0E01               	movlw	1
  1729  000D92  ECFF  F00F         	call	___xxtofl
  1730  000D96  C00A  F018         	movff	?___xxtofl,___flge@ff1
  1731  000D9A  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  1732  000D9E  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  1733  000DA2  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  1734  000DA6  C0A6  F01C         	movff	main@currentHumid,___flge@ff2
  1735  000DAA  C0A7  F01D         	movff	main@currentHumid+1,___flge@ff2+1
  1736  000DAE  C0A8  F01E         	movff	main@currentHumid+2,___flge@ff2+2
  1737  000DB2  C0A9  F01F         	movff	main@currentHumid+3,___flge@ff2+3
  1738  000DB6  EC8E  F012         	call	___flge	;wreg free
  1739  000DBA  B0D8               	btfsc	status,0,c
  1740  000DBC  EFE2  F006         	goto	u5411
  1741  000DC0  EFE4  F006         	goto	u5410
  1742  000DC4                     u5411:
  1743  000DC4  EFE7  F006         	goto	l114
  1744  000DC8                     u5410:
  1745  000DC8                     
  1746                           ;main.c: 221:             PORTDbits.RD1 = 1;
  1747  000DC8  8283               	bsf	131,1,c	;volatile
  1748                           
  1749                           ;main.c: 222:         }else {
  1750  000DCA  EFE8  F006         	goto	l5216
  1751  000DCE                     l114:
  1752                           
  1753                           ;main.c: 223:             PORTDbits.RD1 = 0;
  1754  000DCE  9283               	bcf	131,1,c	;volatile
  1755  000DD0                     l5216:
  1756                           
  1757                           ;main.c: 225:         if (currentGas > Glim){
  1758  000DD0  C0D4  F00A         	movff	_Glim,___xxtofl@val
  1759  000DD4  C0D5  F00B         	movff	_Glim+1,___xxtofl@val+1
  1760  000DD8  0E00               	movlw	0
  1761  000DDA  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  1762  000DDC  0EFF               	movlw	-1
  1763  000DDE  6E0C               	movwf	(___xxtofl@val+2)^0,c
  1764  000DE0  6E0D               	movwf	(___xxtofl@val+3)^0,c
  1765  000DE2  0E01               	movlw	1
  1766  000DE4  ECFF  F00F         	call	___xxtofl
  1767  000DE8  C00A  F018         	movff	?___xxtofl,___flge@ff1
  1768  000DEC  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  1769  000DF0  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  1770  000DF4  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  1771  000DF8  C0AA  F01C         	movff	main@currentGas,___flge@ff2
  1772  000DFC  C0AB  F01D         	movff	main@currentGas+1,___flge@ff2+1
  1773  000E00  C0AC  F01E         	movff	main@currentGas+2,___flge@ff2+2
  1774  000E04  C0AD  F01F         	movff	main@currentGas+3,___flge@ff2+3
  1775  000E08  EC8E  F012         	call	___flge	;wreg free
  1776  000E0C  B0D8               	btfsc	status,0,c
  1777  000E0E  EF0B  F007         	goto	u5421
  1778  000E12  EF0D  F007         	goto	u5420
  1779  000E16                     u5421:
  1780  000E16  EF10  F007         	goto	l116
  1781  000E1A                     u5420:
  1782  000E1A                     
  1783                           ;main.c: 226:             PORTDbits.RD2 = 1;
  1784  000E1A  8483               	bsf	131,2,c	;volatile
  1785                           
  1786                           ;main.c: 227:         }else {
  1787  000E1C  EF11  F007         	goto	l117
  1788  000E20                     l116:
  1789                           
  1790                           ;main.c: 228:             PORTDbits.RD2 = 0;
  1791  000E20  9483               	bcf	131,2,c	;volatile
  1792  000E22                     l117:
  1793                           
  1794                           ;main.c: 233:         lastKey = pressed_key;
  1795  000E22  C0B7  F0B6         	movff	main@pressed_key,main@lastKey
  1796  000E26  EF80  F004         	goto	l5114
  1797  000E2A  EF07  F000         	goto	start
  1798  000E2E                     __end_of_main:
  1799                           	callstack 0
  1800                           
  1801 ;; *************** function _readTwoDigitValue *****************
  1802 ;; Defined at:
  1803 ;;		line 369 in file "main.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;  prompt          2   40[COMRAM] PTR unsigned char 
  1806 ;;		 -> STR_5(11), STR_3(12), STR_1(13), 
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;  input           3   44[COMRAM] unsigned char [3]
  1809 ;;  digitCount      2   47[COMRAM] int 
  1810 ;;  key             1   49[COMRAM] unsigned char 
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  2   40[COMRAM] int 
  1813 ;; Registers used:
  1814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1820 ;;      Params:         2       0       0       0       0       0       0       0       0
  1821 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1822 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1823 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1824 ;;Total ram usage:       10 bytes
  1825 ;; Hardware stack levels used: 1
  1826 ;; Hardware stack levels required when called: 5
  1827 ;; This function calls:
  1828 ;;		_WriteCmdXLCD
  1829 ;;		_displayStuff
  1830 ;;		_readKey
  1831 ;; This function is called by:
  1832 ;;		_main
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           	psect	text1
  1837  0022F2                     __ptext1:
  1838                           	callstack 0
  1839  0022F2                     _readTwoDigitValue:
  1840                           	callstack 25
  1841  0022F2                     
  1842                           ;main.c: 370:     char input[3] = {0};
  1843  0022F2  0E00               	movlw	0
  1844  0022F4  6E2D               	movwf	readTwoDigitValue@input^0,c
  1845  0022F6  0E00               	movlw	0
  1846  0022F8  6E2E               	movwf	(readTwoDigitValue@input+1)^0,c
  1847  0022FA  0E00               	movlw	0
  1848  0022FC  6E2F               	movwf	(readTwoDigitValue@input+2)^0,c
  1849                           
  1850                           ;main.c: 371:     int digitCount = 0;
  1851  0022FE  0E00               	movlw	0
  1852  002300  6E31               	movwf	(readTwoDigitValue@digitCount+1)^0,c
  1853  002302  0E00               	movlw	0
  1854  002304  6E30               	movwf	readTwoDigitValue@digitCount^0,c
  1855  002306                     
  1856                           ;main.c: 372:     char key;;main.c: 375:         WriteCmdXLCD(0x01);
  1857  002306  0E01               	movlw	1
  1858  002308  EC37  F017         	call	_WriteCmdXLCD
  1859  00230C                     
  1860                           ;main.c: 376:          _delay((unsigned long)((2)*(20000000/4000.0)));
  1861  00230C  0E0D               	movlw	13
  1862  00230E  6E2B               	movwf	??_readTwoDigitValue^0,c
  1863  002310  0EFC               	movlw	252
  1864  002312                     u5477:
  1865  002312  2EE8               	decfsz	wreg,f,c
  1866  002314  D7FE               	bra	u5477
  1867  002316  2E2B               	decfsz	??_readTwoDigitValue^0,f,c
  1868  002318  D7FC               	bra	u5477
  1869  00231A                     
  1870                           ;main.c: 377:          WriteCmdXLCD(0x02);
  1871  00231A  0E02               	movlw	2
  1872  00231C  EC37  F017         	call	_WriteCmdXLCD
  1873  002320                     
  1874                           ;main.c: 378:          _delay((unsigned long)((2)*(20000000/4000.0)));
  1875  002320  0E0D               	movlw	13
  1876  002322  6E2B               	movwf	??_readTwoDigitValue^0,c
  1877  002324  0EFC               	movlw	252
  1878  002326                     u5487:
  1879  002326  2EE8               	decfsz	wreg,f,c
  1880  002328  D7FE               	bra	u5487
  1881  00232A  2E2B               	decfsz	??_readTwoDigitValue^0,f,c
  1882  00232C  D7FC               	bra	u5487
  1883  00232E                     
  1884                           ;main.c: 381:     displayStuff(0, 0, prompt);
  1885  00232E  0E00               	movlw	0
  1886  002330  6E0C               	movwf	(displayStuff@row+1)^0,c
  1887  002332  0E00               	movlw	0
  1888  002334  6E0B               	movwf	displayStuff@row^0,c
  1889  002336  0E00               	movlw	0
  1890  002338  6E0E               	movwf	(displayStuff@column+1)^0,c
  1891  00233A  0E00               	movlw	0
  1892  00233C  6E0D               	movwf	displayStuff@column^0,c
  1893  00233E  C029  F00F         	movff	readTwoDigitValue@prompt,displayStuff@stuff
  1894  002342  C02A  F010         	movff	readTwoDigitValue@prompt+1,displayStuff@stuff+1
  1895  002346  EC5E  F015         	call	_displayStuff	;wreg free
  1896                           
  1897                           ;main.c: 383:     while (digitCount < 2) {
  1898  00234A  EFEC  F011         	goto	l3984
  1899  00234E                     l3966:
  1900                           
  1901                           ;main.c: 384:         key = readKey();
  1902  00234E  EC59  F00D         	call	_readKey	;wreg free
  1903  002352  6E32               	movwf	readTwoDigitValue@key^0,c
  1904  002354                     
  1905                           ;main.c: 387:         if (key >= '0' && key <= '9') {
  1906  002354  0E2F               	movlw	47
  1907  002356  6432               	cpfsgt	readTwoDigitValue@key^0,c
  1908  002358  EFB0  F011         	goto	u3731
  1909  00235C  EFB2  F011         	goto	u3730
  1910  002360                     u3731:
  1911  002360  EFDF  F011         	goto	l3980
  1912  002364                     u3730:
  1913  002364  0E3A               	movlw	58
  1914  002366  6032               	cpfslt	readTwoDigitValue@key^0,c
  1915  002368  EFB8  F011         	goto	u3741
  1916  00236C  EFBA  F011         	goto	u3740
  1917  002370                     u3741:
  1918  002370  EFDF  F011         	goto	l3980
  1919  002374                     u3740:
  1920  002374                     
  1921                           ;main.c: 388:             input[digitCount] = key;
  1922  002374  0E2D               	movlw	low readTwoDigitValue@input
  1923  002376  2430               	addwf	readTwoDigitValue@digitCount^0,w,c
  1924  002378  6ED9               	movwf	fsr2l,c
  1925  00237A  0E00               	movlw	high readTwoDigitValue@input
  1926  00237C  2031               	addwfc	(readTwoDigitValue@digitCount+1)^0,w,c
  1927  00237E  6EDA               	movwf	fsr2h,c
  1928  002380  C032  FFDF         	movff	readTwoDigitValue@key,indf2
  1929  002384                     
  1930                           ;main.c: 389:             displayStuff(1, digitCount, &input[digitCount]);
  1931  002384  0E00               	movlw	0
  1932  002386  6E0C               	movwf	(displayStuff@row+1)^0,c
  1933  002388  0E01               	movlw	1
  1934  00238A  6E0B               	movwf	displayStuff@row^0,c
  1935  00238C  C030  F00D         	movff	readTwoDigitValue@digitCount,displayStuff@column
  1936  002390  C031  F00E         	movff	readTwoDigitValue@digitCount+1,displayStuff@column+1
  1937  002394  0E2D               	movlw	low readTwoDigitValue@input
  1938  002396  2430               	addwf	readTwoDigitValue@digitCount^0,w,c
  1939  002398  6E0F               	movwf	displayStuff@stuff^0,c
  1940  00239A  0E00               	movlw	high readTwoDigitValue@input
  1941  00239C  2031               	addwfc	(readTwoDigitValue@digitCount+1)^0,w,c
  1942  00239E  6E10               	movwf	(displayStuff@stuff+1)^0,c
  1943  0023A0  EC5E  F015         	call	_displayStuff	;wreg free
  1944  0023A4                     
  1945                           ;main.c: 390:             digitCount++;
  1946  0023A4  4A30               	infsnz	readTwoDigitValue@digitCount^0,f,c
  1947  0023A6  2A31               	incf	(readTwoDigitValue@digitCount+1)^0,f,c
  1948  0023A8                     
  1949                           ;main.c: 391:             _delay((unsigned long)((200)*(20000000/4000.0)));
  1950  0023A8  0E06               	movlw	6
  1951  0023AA  6E2C               	movwf	(??_readTwoDigitValue+1)^0,c
  1952  0023AC  0E13               	movlw	19
  1953  0023AE  6E2B               	movwf	??_readTwoDigitValue^0,c
  1954  0023B0  0EAE               	movlw	174
  1955  0023B2                     u5497:
  1956  0023B2  2EE8               	decfsz	wreg,f,c
  1957  0023B4  D7FE               	bra	u5497
  1958  0023B6  2E2B               	decfsz	??_readTwoDigitValue^0,f,c
  1959  0023B8  D7FC               	bra	u5497
  1960  0023BA  2E2C               	decfsz	(??_readTwoDigitValue+1)^0,f,c
  1961  0023BC  D7FA               	bra	u5497
  1962  0023BE                     l3980:
  1963                           
  1964                           ;main.c: 395:         if (key == 'F') {
  1965  0023BE  0E46               	movlw	70
  1966  0023C0  1832               	xorwf	readTwoDigitValue@key^0,w,c
  1967  0023C2  A4D8               	btfss	status,2,c
  1968  0023C4  EFE6  F011         	goto	u3751
  1969  0023C8  EFE8  F011         	goto	u3750
  1970  0023CC                     u3751:
  1971  0023CC  EFEC  F011         	goto	l3984
  1972  0023D0                     u3750:
  1973  0023D0                     
  1974                           ;main.c: 396:             return -1;
  1975  0023D0  6829               	setf	?_readTwoDigitValue^0,c
  1976  0023D2  682A               	setf	(?_readTwoDigitValue+1)^0,c
  1977  0023D4  EF0A  F012         	goto	l169
  1978  0023D8                     l3984:
  1979                           
  1980                           ;main.c: 383:     while (digitCount < 2) {
  1981  0023D8  BE31               	btfsc	(readTwoDigitValue@digitCount+1)^0,7,c
  1982  0023DA  EFF8  F011         	goto	u3761
  1983  0023DE  5031               	movf	(readTwoDigitValue@digitCount+1)^0,w,c
  1984  0023E0  E109               	bnz	u3760
  1985  0023E2  0E02               	movlw	2
  1986  0023E4  5C30               	subwf	readTwoDigitValue@digitCount^0,w,c
  1987  0023E6  A0D8               	btfss	status,0,c
  1988  0023E8  EFF8  F011         	goto	u3761
  1989  0023EC  EFFA  F011         	goto	u3760
  1990  0023F0                     u3761:
  1991  0023F0  EFA7  F011         	goto	l3966
  1992  0023F4                     u3760:
  1993  0023F4                     
  1994                           ;main.c: 401:     return (input[0] - '0') * 10 + (input[1] - '0');
  1995  0023F4  502D               	movf	readTwoDigitValue@input^0,w,c
  1996  0023F6  0D0A               	mullw	10
  1997  0023F8  CFF3 F02B          	movff	prodl,??_readTwoDigitValue
  1998  0023FC  CFF4 F02C          	movff	prodh,??_readTwoDigitValue+1
  1999  002400  502E               	movf	(readTwoDigitValue@input+1)^0,w,c
  2000  002402  262B               	addwf	??_readTwoDigitValue^0,f,c
  2001  002404  0E00               	movlw	0
  2002  002406  222C               	addwfc	(??_readTwoDigitValue+1)^0,f,c
  2003  002408  0EF0               	movlw	240
  2004  00240A  242B               	addwf	??_readTwoDigitValue^0,w,c
  2005  00240C  6E29               	movwf	?_readTwoDigitValue^0,c
  2006  00240E  0EFD               	movlw	253
  2007  002410  202C               	addwfc	(??_readTwoDigitValue+1)^0,w,c
  2008  002412  6E2A               	movwf	(?_readTwoDigitValue+1)^0,c
  2009  002414                     l169:
  2010  002414  0012               	return		;funcret
  2011  002416                     __end_of_readTwoDigitValue:
  2012                           	callstack 0
  2013                           
  2014 ;; *************** function _readKey *****************
  2015 ;; Defined at:
  2016 ;;		line 515 in file "main.c"
  2017 ;; Parameters:    Size  Location     Type
  2018 ;;		None
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;  pressedKey      1   35[COMRAM] unsigned char 
  2021 ;;  row             2   33[COMRAM] int 
  2022 ;;  col             2   31[COMRAM] int 
  2023 ;;  InvCol          8   23[COMRAM] const int [4]
  2024 ;;  currentTime     4   36[COMRAM] unsigned long 
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  1    wreg      unsigned char 
  2027 ;; Registers used:
  2028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2034 ;;      Params:         0       0       0       0       0       0       0       0       0
  2035 ;;      Locals:        17       0       0       0       0       0       0       0       0
  2036 ;;      Temps:          6       0       0       0       0       0       0       0       0
  2037 ;;      Totals:        23       0       0       0       0       0       0       0       0
  2038 ;;Total ram usage:       23 bytes
  2039 ;; Hardware stack levels used: 1
  2040 ;; Hardware stack levels required when called: 3
  2041 ;; This function calls:
  2042 ;;		_millis
  2043 ;; This function is called by:
  2044 ;;		_main
  2045 ;;		_readTwoDigitValue
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049                           	psect	text2
  2050  001AB2                     __ptext2:
  2051                           	callstack 0
  2052  001AB2                     _readKey:
  2053                           	callstack 26
  2054  001AB2                     
  2055                           ;main.c: 516:     const int InvCol[4] = {3, 2, 1, 0};
  2056  001AB2  0E09               	movlw	low readKey@F3297
  2057  001AB4  6EF6               	movwf	tblptrl,c
  2058  001AB6                     	if	1	;There is more than 1 active tblptr byte
  2059  001AB6  0E7F               	movlw	high readKey@F3297
  2060  001AB8  6EF7               	movwf	tblptrh,c
  2061  001ABA                     	endif
  2062  001ABA                     	if	0	;There are less than 3 active tblptr bytes
  2063  001ABA                     	endif
  2064  001ABA  EE20  F018         	lfsr	2,readKey@InvCol
  2065  001ABE  0E07               	movlw	7
  2066  001AC0                     u3190:
  2067  001AC0  0009               	tblrd		*+
  2068  001AC2  CFF5 FFDE          	movff	tablat,postinc2
  2069  001AC6  06E8               	decf	wreg,f,c
  2070  001AC8  E2FB               	bc	u3190
  2071  001ACA                     
  2072                           ;main.c: 517:     static unsigned long lastDebounceTime = 0;;main.c: 518:     static uns
      +                          igned long lastKeyPressTime = 0;;main.c: 519:     static char lastStableKey = 0;;main.c:
      +                           520:     unsigned long currentTime = millis();
  2073  001ACA  EC72  F017         	call	_millis	;wreg free
  2074  001ACE  C00A  F025         	movff	?_millis,readKey@currentTime
  2075  001AD2  C00B  F026         	movff	?_millis+1,readKey@currentTime+1
  2076  001AD6  C00C  F027         	movff	?_millis+2,readKey@currentTime+2
  2077  001ADA  C00D  F028         	movff	?_millis+3,readKey@currentTime+3
  2078  001ADE                     
  2079                           ;main.c: 522:     for (int col = 0; col < 4; col++) {
  2080  001ADE  0E00               	movlw	0
  2081  001AE0  6E21               	movwf	(readKey@col+1)^0,c
  2082  001AE2  0E00               	movlw	0
  2083  001AE4  6E20               	movwf	readKey@col^0,c
  2084  001AE6                     l3474:
  2085  001AE6  BE21               	btfsc	(readKey@col+1)^0,7,c
  2086  001AE8  EF7F  F00D         	goto	u3201
  2087  001AEC  5021               	movf	(readKey@col+1)^0,w,c
  2088  001AEE  E109               	bnz	u3200
  2089  001AF0  0E04               	movlw	4
  2090  001AF2  5C20               	subwf	readKey@col^0,w,c
  2091  001AF4  A0D8               	btfss	status,0,c
  2092  001AF6  EF7F  F00D         	goto	u3201
  2093  001AFA  EF81  F00D         	goto	u3200
  2094  001AFE                     u3201:
  2095  001AFE  EF83  F00D         	goto	l3478
  2096  001B02                     u3200:
  2097  001B02  EFB1  F00E         	goto	l3546
  2098  001B06                     l3478:
  2099                           
  2100                           ;main.c: 523:         LATB = ~(1 << col);
  2101  001B06  C020  F012         	movff	readKey@col,??_readKey
  2102  001B0A  0E01               	movlw	1
  2103  001B0C  6E13               	movwf	(??_readKey+1)^0,c
  2104  001B0E  2A12               	incf	??_readKey^0,f,c
  2105  001B10  EF8C  F00D         	goto	u3214
  2106  001B14                     u3215:
  2107  001B14  90D8               	bcf	status,0,c
  2108  001B16  3613               	rlcf	(??_readKey+1)^0,f,c
  2109  001B18                     u3214:
  2110  001B18  2E12               	decfsz	??_readKey^0,f,c
  2111  001B1A  EF8A  F00D         	goto	u3215
  2112  001B1E  5013               	movf	(??_readKey+1)^0,w,c
  2113  001B20  0AFF               	xorlw	255
  2114  001B22  6E8A               	movwf	138,c	;volatile
  2115  001B24                     
  2116                           ;main.c: 524:         _delay((unsigned long)((5)*(20000000/4000.0)));
  2117  001B24  0E21               	movlw	33
  2118  001B26  6E12               	movwf	??_readKey^0,c
  2119  001B28  0E76               	movlw	118
  2120  001B2A                     u5507:
  2121  001B2A  2EE8               	decfsz	wreg,f,c
  2122  001B2C  D7FE               	bra	u5507
  2123  001B2E  2E12               	decfsz	??_readKey^0,f,c
  2124  001B30  D7FC               	bra	u5507
  2125  001B32  D000               	nop2	
  2126  001B34                     
  2127                           ;main.c: 526:         for (int row = 0; row < 4; row++) {
  2128  001B34  0E00               	movlw	0
  2129  001B36  6E23               	movwf	(readKey@row+1)^0,c
  2130  001B38  0E00               	movlw	0
  2131  001B3A  6E22               	movwf	readKey@row^0,c
  2132  001B3C                     l3488:
  2133                           
  2134                           ;main.c: 527:             if (!(PORTB & (1 << (row + 4)))) {
  2135  001B3C  C022  F012         	movff	readKey@row,??_readKey
  2136  001B40  0E04               	movlw	4
  2137  001B42  2612               	addwf	??_readKey^0,f,c
  2138  001B44  0E01               	movlw	1
  2139  001B46  6E13               	movwf	(??_readKey+1)^0,c
  2140  001B48  2A12               	incf	??_readKey^0,f,c
  2141  001B4A  EFA9  F00D         	goto	u3224
  2142  001B4E                     u3225:
  2143  001B4E  90D8               	bcf	status,0,c
  2144  001B50  3613               	rlcf	(??_readKey+1)^0,f,c
  2145  001B52                     u3224:
  2146  001B52  2E12               	decfsz	??_readKey^0,f,c
  2147  001B54  EFA7  F00D         	goto	u3225
  2148  001B58  5013               	movf	(??_readKey+1)^0,w,c
  2149  001B5A  1481               	andwf	129,w,c	;volatile
  2150  001B5C  0900               	iorlw	0
  2151  001B5E  A4D8               	btfss	status,2,c
  2152  001B60  EFB4  F00D         	goto	u3231
  2153  001B64  EFB6  F00D         	goto	u3230
  2154  001B68                     u3231:
  2155  001B68  EF9D  F00E         	goto	l3538
  2156  001B6C                     u3230:
  2157  001B6C                     
  2158                           ;main.c: 528:                 char pressedKey = keymap[row][InvCol[col]];
  2159  001B6C  90D8               	bcf	status,0,c
  2160  001B6E  3420               	rlcf	readKey@col^0,w,c
  2161  001B70  6ED9               	movwf	fsr2l,c
  2162  001B72  3421               	rlcf	(readKey@col+1)^0,w,c
  2163  001B74  6EDA               	movwf	fsr2h,c
  2164  001B76  0E18               	movlw	low readKey@InvCol
  2165  001B78  26D9               	addwf	fsr2l,f,c
  2166  001B7A  0E00               	movlw	high readKey@InvCol
  2167  001B7C  22DA               	addwfc	fsr2h,f,c
  2168  001B7E  CFDE F012          	movff	postinc2,??_readKey
  2169  001B82  CFDD F013          	movff	postdec2,??_readKey+1
  2170  001B86  C022  F014         	movff	readKey@row,??_readKey+2
  2171  001B8A  C023  F015         	movff	readKey@row+1,??_readKey+3
  2172  001B8E  90D8               	bcf	status,0,c
  2173  001B90  3614               	rlcf	(??_readKey+2)^0,f,c
  2174  001B92  3615               	rlcf	(??_readKey+3)^0,f,c
  2175  001B94  90D8               	bcf	status,0,c
  2176  001B96  3614               	rlcf	(??_readKey+2)^0,f,c
  2177  001B98  3615               	rlcf	(??_readKey+3)^0,f,c
  2178  001B9A  0EF9               	movlw	low _keymap
  2179  001B9C  6E16               	movwf	(??_readKey+4)^0,c
  2180  001B9E  0E7E               	movlw	high _keymap
  2181  001BA0  6E17               	movwf	(??_readKey+5)^0,c
  2182  001BA2  5014               	movf	(??_readKey+2)^0,w,c
  2183  001BA4  2616               	addwf	(??_readKey+4)^0,f,c
  2184  001BA6  5015               	movf	(??_readKey+3)^0,w,c
  2185  001BA8  2217               	addwfc	(??_readKey+5)^0,f,c
  2186  001BAA  5012               	movf	??_readKey^0,w,c
  2187  001BAC  2616               	addwf	(??_readKey+4)^0,f,c
  2188  001BAE  5013               	movf	(??_readKey+1)^0,w,c
  2189  001BB0  2217               	addwfc	(??_readKey+5)^0,f,c
  2190  001BB2  C016  FFF6         	movff	??_readKey+4,tblptrl
  2191  001BB6  C017  FFF7         	movff	??_readKey+5,tblptrh
  2192  001BBA                     	if	0	;tblptru may be non-zero
  2193  001BBA                     	endif
  2194  001BBA                     	if	0	;tblptru may be non-zero
  2195  001BBA                     	endif
  2196  001BBA  0008               	tblrd		*
  2197  001BBC  CFF5 F024          	movff	tablat,readKey@pressedKey
  2198  001BC0                     
  2199                           ;main.c: 531:                 if (pressedKey != lastStableKey) {
  2200  001BC0  5054               	movf	readKey@lastStableKey^0,w,c
  2201  001BC2  1824               	xorwf	readKey@pressedKey^0,w,c
  2202  001BC4  B4D8               	btfsc	status,2,c
  2203  001BC6  EFE7  F00D         	goto	u3241
  2204  001BCA  EFE9  F00D         	goto	u3240
  2205  001BCE                     u3241:
  2206  001BCE  EFF3  F00D         	goto	l3496
  2207  001BD2                     u3240:
  2208  001BD2                     
  2209                           ;main.c: 532:                     lastDebounceTime = currentTime;
  2210  001BD2  C025  F0C7         	movff	readKey@currentTime,readKey@lastDebounceTime
  2211  001BD6  C026  F0C8         	movff	readKey@currentTime+1,readKey@lastDebounceTime+1
  2212  001BDA  C027  F0C9         	movff	readKey@currentTime+2,readKey@lastDebounceTime+2
  2213  001BDE  C028  F0CA         	movff	readKey@currentTime+3,readKey@lastDebounceTime+3
  2214                           
  2215                           ;main.c: 533:                     lastStableKey = pressedKey;
  2216  001BE2  C024  F054         	movff	readKey@pressedKey,readKey@lastStableKey
  2217  001BE6                     l3496:
  2218                           
  2219                           ;main.c: 536:                 if ((currentTime - lastDebounceTime) > 50) {
  2220  001BE6  0100               	movlb	0	; () banked
  2221  001BE8  51C7               	movf	readKey@lastDebounceTime& (0+255),w,b
  2222  001BEA  5C25               	subwf	readKey@currentTime^0,w,c
  2223  001BEC  6E12               	movwf	??_readKey^0,c
  2224  001BEE  51C8               	movf	(readKey@lastDebounceTime+1)& (0+255),w,b
  2225  001BF0  5826               	subwfb	(readKey@currentTime+1)^0,w,c
  2226  001BF2  6E13               	movwf	(??_readKey+1)^0,c
  2227  001BF4  51C9               	movf	(readKey@lastDebounceTime+2)& (0+255),w,b
  2228  001BF6  5827               	subwfb	(readKey@currentTime+2)^0,w,c
  2229  001BF8  6E14               	movwf	(??_readKey+2)^0,c
  2230  001BFA  51CA               	movf	(readKey@lastDebounceTime+3)& (0+255),w,b
  2231  001BFC  5828               	subwfb	(readKey@currentTime+3)^0,w,c
  2232  001BFE  6E15               	movwf	(??_readKey+3)^0,c
  2233  001C00  5015               	movf	(??_readKey+3)^0,w,c
  2234  001C02  1014               	iorwf	(??_readKey+2)^0,w,c
  2235  001C04  1013               	iorwf	(??_readKey+1)^0,w,c
  2236  001C06  E109               	bnz	u3250
  2237  001C08  0E33               	movlw	51
  2238  001C0A  5C12               	subwf	??_readKey^0,w,c
  2239  001C0C  A0D8               	btfss	status,0,c
  2240  001C0E  EF0B  F00E         	goto	u3251
  2241  001C12  EF0D  F00E         	goto	u3250
  2242  001C16                     u3251:
  2243  001C16  EF9A  F00E         	goto	l3534
  2244  001C1A                     u3250:
  2245  001C1A                     
  2246                           ; BSR set to: 0
  2247                           ;main.c: 538:                     if ((currentTime - lastKeyPressTime) > 300) {
  2248  001C1A  51C3               	movf	readKey@lastKeyPressTime& (0+255),w,b
  2249  001C1C  5C25               	subwf	readKey@currentTime^0,w,c
  2250  001C1E  6E12               	movwf	??_readKey^0,c
  2251  001C20  51C4               	movf	(readKey@lastKeyPressTime+1)& (0+255),w,b
  2252  001C22  5826               	subwfb	(readKey@currentTime+1)^0,w,c
  2253  001C24  6E13               	movwf	(??_readKey+1)^0,c
  2254  001C26  51C5               	movf	(readKey@lastKeyPressTime+2)& (0+255),w,b
  2255  001C28  5827               	subwfb	(readKey@currentTime+2)^0,w,c
  2256  001C2A  6E14               	movwf	(??_readKey+2)^0,c
  2257  001C2C  51C6               	movf	(readKey@lastKeyPressTime+3)& (0+255),w,b
  2258  001C2E  5828               	subwfb	(readKey@currentTime+3)^0,w,c
  2259  001C30  6E15               	movwf	(??_readKey+3)^0,c
  2260  001C32  5015               	movf	(??_readKey+3)^0,w,c
  2261  001C34  1014               	iorwf	(??_readKey+2)^0,w,c
  2262  001C36  E10B               	bnz	u3260
  2263  001C38  0E2D               	movlw	45
  2264  001C3A  5C12               	subwf	??_readKey^0,w,c
  2265  001C3C  0E01               	movlw	1
  2266  001C3E  5813               	subwfb	(??_readKey+1)^0,w,c
  2267  001C40  A0D8               	btfss	status,0,c
  2268  001C42  EF25  F00E         	goto	u3261
  2269  001C46  EF27  F00E         	goto	u3260
  2270  001C4A                     u3261:
  2271  001C4A  EF9A  F00E         	goto	l3534
  2272  001C4E                     u3260:
  2273  001C4E                     
  2274                           ; BSR set to: 0
  2275                           ;main.c: 539:                         lastKeyPressTime = currentTime;
  2276  001C4E  C025  F0C3         	movff	readKey@currentTime,readKey@lastKeyPressTime
  2277  001C52  C026  F0C4         	movff	readKey@currentTime+1,readKey@lastKeyPressTime+1
  2278  001C56  C027  F0C5         	movff	readKey@currentTime+2,readKey@lastKeyPressTime+2
  2279  001C5A  C028  F0C6         	movff	readKey@currentTime+3,readKey@lastKeyPressTime+3
  2280  001C5E                     
  2281                           ; BSR set to: 0
  2282                           ;main.c: 542:                         if (pressedKey != keyState.lastKey) {
  2283  001C5E  5024               	movf	readKey@pressedKey^0,w,c
  2284  001C60  19B8               	xorwf	_keyState& (0+255),w,b
  2285  001C62  B4D8               	btfsc	status,2,c
  2286  001C64  EF36  F00E         	goto	u3271
  2287  001C68  EF38  F00E         	goto	u3270
  2288  001C6C                     u3271:
  2289  001C6C  EF49  F00E         	goto	l3512
  2290  001C70                     u3270:
  2291  001C70                     
  2292                           ; BSR set to: 0
  2293                           ;main.c: 543:                             keyState.currentKey = pressedKey;
  2294  001C70  C024  F0B9         	movff	readKey@pressedKey,_keyState+1
  2295                           
  2296                           ;main.c: 544:                             keyState.lastKey = pressedKey;
  2297  001C74  C024  F0B8         	movff	readKey@pressedKey,_keyState
  2298  001C78                     
  2299                           ; BSR set to: 0
  2300                           ;main.c: 545:                             keyState.keyPressCount = 0;
  2301  001C78  0E00               	movlw	0
  2302  001C7A  6FBA               	movwf	(_keyState+2)& (0+255),b
  2303  001C7C                     
  2304                           ; BSR set to: 0
  2305                           ;main.c: 546:                             keyState.lastKeyPressTime = currentTime;
  2306  001C7C  C025  F0BB         	movff	readKey@currentTime,_keyState+3
  2307  001C80  C026  F0BC         	movff	readKey@currentTime+1,_keyState+4
  2308  001C84  C027  F0BD         	movff	readKey@currentTime+2,_keyState+5
  2309  001C88  C028  F0BE         	movff	readKey@currentTime+3,_keyState+6
  2310                           
  2311                           ;main.c: 547:                             return pressedKey;
  2312  001C8C  5024               	movf	readKey@pressedKey^0,w,c
  2313  001C8E  EFBA  F00E         	goto	l216
  2314  001C92                     l3512:
  2315                           
  2316                           ; BSR set to: 0
  2317                           ;main.c: 551:                         if (keyState.keyPressCount == 0 &&
  2318  001C92  51BA               	movf	(_keyState+2)& (0+255),w,b
  2319  001C94  A4D8               	btfss	status,2,c
  2320  001C96  EF4F  F00E         	goto	u3281
  2321  001C9A  EF51  F00E         	goto	u3280
  2322  001C9E                     u3281:
  2323  001C9E  EF77  F00E         	goto	l3524
  2324  001CA2                     u3280:
  2325  001CA2                     
  2326                           ; BSR set to: 0
  2327  001CA2  51BB               	movf	(_keyState+3)& (0+255),w,b
  2328  001CA4  5C25               	subwf	readKey@currentTime^0,w,c
  2329  001CA6  6E12               	movwf	??_readKey^0,c
  2330  001CA8  51BC               	movf	(_keyState+4)& (0+255),w,b
  2331  001CAA  5826               	subwfb	(readKey@currentTime+1)^0,w,c
  2332  001CAC  6E13               	movwf	(??_readKey+1)^0,c
  2333  001CAE  51BD               	movf	(_keyState+5)& (0+255),w,b
  2334  001CB0  5827               	subwfb	(readKey@currentTime+2)^0,w,c
  2335  001CB2  6E14               	movwf	(??_readKey+2)^0,c
  2336  001CB4  51BE               	movf	(_keyState+6)& (0+255),w,b
  2337  001CB6  5828               	subwfb	(readKey@currentTime+3)^0,w,c
  2338  001CB8  6E15               	movwf	(??_readKey+3)^0,c
  2339  001CBA  5015               	movf	(??_readKey+3)^0,w,c
  2340  001CBC  1014               	iorwf	(??_readKey+2)^0,w,c
  2341  001CBE  E10B               	bnz	u3290
  2342  001CC0  0EF5               	movlw	245
  2343  001CC2  5C12               	subwf	??_readKey^0,w,c
  2344  001CC4  0E01               	movlw	1
  2345  001CC6  5813               	subwfb	(??_readKey+1)^0,w,c
  2346  001CC8  A0D8               	btfss	status,0,c
  2347  001CCA  EF69  F00E         	goto	u3291
  2348  001CCE  EF6B  F00E         	goto	u3290
  2349  001CD2                     u3291:
  2350  001CD2  EF77  F00E         	goto	l3524
  2351  001CD6                     u3290:
  2352  001CD6                     
  2353                           ; BSR set to: 0
  2354                           ;main.c: 552:                             (currentTime - keyState.lastKeyPressTime) > 50
      +                          0) {;main.c: 554:                             keyState.keyPressCount++;
  2355  001CD6  2BBA               	incf	(_keyState+2)& (0+255),f,b
  2356  001CD8                     l3518:
  2357                           
  2358                           ; BSR set to: 0
  2359                           ;main.c: 555:                             keyState.lastRepeatTime = currentTime;
  2360  001CD8  C025  F0BF         	movff	readKey@currentTime,_keyState+7
  2361  001CDC  C026  F0C0         	movff	readKey@currentTime+1,_keyState+8
  2362  001CE0  C027  F0C1         	movff	readKey@currentTime+2,_keyState+9
  2363  001CE4  C028  F0C2         	movff	readKey@currentTime+3,_keyState+10
  2364  001CE8                     
  2365                           ; BSR set to: 0
  2366                           ;main.c: 556:                             return pressedKey;
  2367  001CE8  5024               	movf	readKey@pressedKey^0,w,c
  2368  001CEA  EFBA  F00E         	goto	l216
  2369  001CEE                     l3524:
  2370                           
  2371                           ; BSR set to: 0
  2372                           ;main.c: 560:                         if (keyState.keyPressCount > 0 &&
  2373  001CEE  51BA               	movf	(_keyState+2)& (0+255),w,b
  2374  001CF0  B4D8               	btfsc	status,2,c
  2375  001CF2  EF7D  F00E         	goto	u3301
  2376  001CF6  EF7F  F00E         	goto	u3300
  2377  001CFA                     u3301:
  2378  001CFA  EF9A  F00E         	goto	l3534
  2379  001CFE                     u3300:
  2380  001CFE                     
  2381                           ; BSR set to: 0
  2382  001CFE  51BF               	movf	(_keyState+7)& (0+255),w,b
  2383  001D00  5C25               	subwf	readKey@currentTime^0,w,c
  2384  001D02  6E12               	movwf	??_readKey^0,c
  2385  001D04  51C0               	movf	(_keyState+8)& (0+255),w,b
  2386  001D06  5826               	subwfb	(readKey@currentTime+1)^0,w,c
  2387  001D08  6E13               	movwf	(??_readKey+1)^0,c
  2388  001D0A  51C1               	movf	(_keyState+9)& (0+255),w,b
  2389  001D0C  5827               	subwfb	(readKey@currentTime+2)^0,w,c
  2390  001D0E  6E14               	movwf	(??_readKey+2)^0,c
  2391  001D10  51C2               	movf	(_keyState+10)& (0+255),w,b
  2392  001D12  5828               	subwfb	(readKey@currentTime+3)^0,w,c
  2393  001D14  6E15               	movwf	(??_readKey+3)^0,c
  2394  001D16  5015               	movf	(??_readKey+3)^0,w,c
  2395  001D18  1014               	iorwf	(??_readKey+2)^0,w,c
  2396  001D1A  1013               	iorwf	(??_readKey+1)^0,w,c
  2397  001D1C  E109               	bnz	u3310
  2398  001D1E  0E65               	movlw	101
  2399  001D20  5C12               	subwf	??_readKey^0,w,c
  2400  001D22  A0D8               	btfss	status,0,c
  2401  001D24  EF96  F00E         	goto	u3311
  2402  001D28  EF98  F00E         	goto	u3310
  2403  001D2C                     u3311:
  2404  001D2C  EF9A  F00E         	goto	l3534
  2405  001D30                     u3310:
  2406  001D30  EF6C  F00E         	goto	l3518
  2407  001D34                     l3534:
  2408                           
  2409                           ; BSR set to: 0
  2410                           ;main.c: 568:                 return 0;
  2411  001D34  0E00               	movlw	0
  2412  001D36  EFBA  F00E         	goto	l216
  2413  001D3A                     l3538:
  2414                           
  2415                           ;main.c: 570:         }
  2416  001D3A  4A22               	infsnz	readKey@row^0,f,c
  2417  001D3C  2A23               	incf	(readKey@row+1)^0,f,c
  2418  001D3E  BE23               	btfsc	(readKey@row+1)^0,7,c
  2419  001D40  EFAB  F00E         	goto	u3321
  2420  001D44  5023               	movf	(readKey@row+1)^0,w,c
  2421  001D46  E109               	bnz	u3320
  2422  001D48  0E04               	movlw	4
  2423  001D4A  5C22               	subwf	readKey@row^0,w,c
  2424  001D4C  A0D8               	btfss	status,0,c
  2425  001D4E  EFAB  F00E         	goto	u3321
  2426  001D52  EFAD  F00E         	goto	u3320
  2427  001D56                     u3321:
  2428  001D56  EF9E  F00D         	goto	l3488
  2429  001D5A                     u3320:
  2430  001D5A                     
  2431                           ;main.c: 571:     }
  2432  001D5A  4A20               	infsnz	readKey@col^0,f,c
  2433  001D5C  2A21               	incf	(readKey@col+1)^0,f,c
  2434  001D5E  EF73  F00D         	goto	l3474
  2435  001D62                     l3546:
  2436                           
  2437                           ;main.c: 574:     keyState.lastKey = 0;
  2438  001D62  0E00               	movlw	0
  2439  001D64  0100               	movlb	0	; () banked
  2440  001D66  6FB8               	movwf	_keyState& (0+255),b
  2441                           
  2442                           ;main.c: 575:     keyState.keyPressCount = 0;
  2443  001D68  0E00               	movlw	0
  2444  001D6A  6FBA               	movwf	(_keyState+2)& (0+255),b
  2445                           
  2446                           ;main.c: 576:     lastStableKey = 0;
  2447  001D6C  0E00               	movlw	0
  2448  001D6E  6E54               	movwf	readKey@lastStableKey^0,c
  2449  001D70  EF9A  F00E         	goto	l3534
  2450  001D74                     l216:
  2451                           
  2452                           ; BSR set to: 0
  2453  001D74  0012               	return		;funcret
  2454  001D76                     __end_of_readKey:
  2455                           	callstack 0
  2456                           
  2457 ;; *************** function _displayMenu *****************
  2458 ;; Defined at:
  2459 ;;		line 239 in file "main.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;  menuIndex       2   73[COMRAM] int 
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;  valueStr       10   28[BANK0 ] unsigned char [10]
  2464 ;;  currentGas      4   50[BANK0 ] float 
  2465 ;;  currentHumid    4   46[BANK0 ] float 
  2466 ;;  currentTemp     4   42[BANK0 ] float 
  2467 ;;  currentTime     4   38[BANK0 ] unsigned long 
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  1    wreg      void 
  2470 ;; Registers used:
  2471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2477 ;;      Params:         2       0       0       0       0       0       0       0       0
  2478 ;;      Locals:         0      26       0       0       0       0       0       0       0
  2479 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2480 ;;      Totals:         2      30       0       0       0       0       0       0       0
  2481 ;;Total ram usage:       32 bytes
  2482 ;; Hardware stack levels used: 1
  2483 ;; Hardware stack levels required when called: 5
  2484 ;; This function calls:
  2485 ;;		_WriteCmdXLCD
  2486 ;;		___flge
  2487 ;;		___xxtofl
  2488 ;;		_displayStuff
  2489 ;;		_floatToString
  2490 ;;		_gasRead
  2491 ;;		_humidade
  2492 ;;		_itoa
  2493 ;;		_millis
  2494 ;;		_tempRead
  2495 ;; This function is called by:
  2496 ;;		_main
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500                           	psect	text3
  2501  000012                     __ptext3:
  2502                           	callstack 0
  2503  000012                     _displayMenu:
  2504                           	callstack 25
  2505  000012                     
  2506                           ;main.c: 240:     char valueStr[10];;main.c: 241:     static unsigned long lastUpdateTim
      +                          e = 0;;main.c: 242:     unsigned long currentTime = millis();
  2507  000012  EC72  F017         	call	_millis	;wreg free
  2508  000016  C00A  F086         	movff	?_millis,displayMenu@currentTime
  2509  00001A  C00B  F087         	movff	?_millis+1,displayMenu@currentTime+1
  2510  00001E  C00C  F088         	movff	?_millis+2,displayMenu@currentTime+2
  2511  000022  C00D  F089         	movff	?_millis+3,displayMenu@currentTime+3
  2512  000026                     
  2513                           ;main.c: 245:     if (currentTime - lastUpdateTime < 500) {
  2514  000026  0100               	movlb	0	; () banked
  2515  000028  51CB               	movf	displayMenu@lastUpdateTime& (0+255),w,b
  2516  00002A  5D86               	subwf	displayMenu@currentTime& (0+255),w,b
  2517  00002C  6F78               	movwf	??_displayMenu& (0+255),b
  2518  00002E  51CC               	movf	(displayMenu@lastUpdateTime+1)& (0+255),w,b
  2519  000030  5987               	subwfb	(displayMenu@currentTime+1)& (0+255),w,b
  2520  000032  6F79               	movwf	(??_displayMenu+1)& (0+255),b
  2521  000034  51CD               	movf	(displayMenu@lastUpdateTime+2)& (0+255),w,b
  2522  000036  5988               	subwfb	(displayMenu@currentTime+2)& (0+255),w,b
  2523  000038  6F7A               	movwf	(??_displayMenu+2)& (0+255),b
  2524  00003A  51CE               	movf	(displayMenu@lastUpdateTime+3)& (0+255),w,b
  2525  00003C  5989               	subwfb	(displayMenu@currentTime+3)& (0+255),w,b
  2526  00003E  6F7B               	movwf	(??_displayMenu+3)& (0+255),b
  2527  000040  517B               	movf	(??_displayMenu+3)& (0+255),w,b
  2528  000042  117A               	iorwf	(??_displayMenu+2)& (0+255),w,b
  2529  000044  E109               	bnz	u5061
  2530  000046  0EF4               	movlw	244
  2531  000048  5D78               	subwf	??_displayMenu& (0+255),w,b
  2532  00004A  0E01               	movlw	1
  2533  00004C  5979               	subwfb	(??_displayMenu+1)& (0+255),w,b
  2534  00004E  B0D8               	btfsc	status,0,c
  2535  000050  EF2C  F000         	goto	u5061
  2536  000054  EF2E  F000         	goto	u5060
  2537  000058                     u5061:
  2538  000058  EF32  F000         	goto	l125
  2539  00005C                     u5060:
  2540  00005C  EF63  F004         	goto	l126
  2541  000060                     l4958:
  2542                           
  2543                           ;main.c: 246:         return;
  2544  000060  EF63  F004         	goto	l126
  2545  000064                     l125:
  2546                           
  2547                           ; BSR set to: 0
  2548                           ;main.c: 248:     lastUpdateTime = currentTime;
  2549  000064  C086  F0CB         	movff	displayMenu@currentTime,displayMenu@lastUpdateTime
  2550  000068  C087  F0CC         	movff	displayMenu@currentTime+1,displayMenu@lastUpdateTime+1
  2551  00006C  C088  F0CD         	movff	displayMenu@currentTime+2,displayMenu@lastUpdateTime+2
  2552  000070  C089  F0CE         	movff	displayMenu@currentTime+3,displayMenu@lastUpdateTime+3
  2553  000074                     
  2554                           ; BSR set to: 0
  2555                           ;main.c: 251:     WriteCmdXLCD(0x01);
  2556  000074  0E01               	movlw	1
  2557  000076  EC37  F017         	call	_WriteCmdXLCD
  2558  00007A                     
  2559                           ;main.c: 252:     _delay((unsigned long)((2)*(20000000/4000.0)));
  2560  00007A  0E0D               	movlw	13
  2561  00007C  0100               	movlb	0	; () banked
  2562  00007E  6F78               	movwf	??_displayMenu& (0+255),b
  2563  000080  0EFB               	movlw	251
  2564  000082                     u5517:
  2565  000082  2EE8               	decfsz	wreg,f,c
  2566  000084  D7FE               	bra	u5517
  2567  000086  2F78               	decfsz	??_displayMenu& (0+255),f,b
  2568  000088  D7FC               	bra	u5517
  2569  00008A  D000               	nop2	
  2570  00008C                     
  2571                           ;main.c: 255:     float currentTemp = tempRead();
  2572  00008C  ECE9  F013         	call	_tempRead	;wreg free
  2573  000090  C060  F08A         	movff	?_tempRead,displayMenu@currentTemp
  2574  000094  C061  F08B         	movff	?_tempRead+1,displayMenu@currentTemp+1
  2575  000098  C062  F08C         	movff	?_tempRead+2,displayMenu@currentTemp+2
  2576  00009C  C063  F08D         	movff	?_tempRead+3,displayMenu@currentTemp+3
  2577  0000A0                     
  2578                           ;main.c: 256:     float currentHumid = humidade();
  2579  0000A0  EC48  F014         	call	_humidade	;wreg free
  2580  0000A4  C060  F08E         	movff	?_humidade,displayMenu@currentHumid
  2581  0000A8  C061  F08F         	movff	?_humidade+1,displayMenu@currentHumid+1
  2582  0000AC  C062  F090         	movff	?_humidade+2,displayMenu@currentHumid+2
  2583  0000B0  C063  F091         	movff	?_humidade+3,displayMenu@currentHumid+3
  2584  0000B4                     
  2585                           ;main.c: 257:     float currentGas = gasRead();
  2586  0000B4  ECA7  F014         	call	_gasRead	;wreg free
  2587  0000B8  C060  F092         	movff	?_gasRead,displayMenu@currentGas
  2588  0000BC  C061  F093         	movff	?_gasRead+1,displayMenu@currentGas+1
  2589  0000C0  C062  F094         	movff	?_gasRead+2,displayMenu@currentGas+2
  2590  0000C4  C063  F095         	movff	?_gasRead+3,displayMenu@currentGas+3
  2591                           
  2592                           ;main.c: 259:     switch(menuIndex)
  2593  0000C8  EF40  F004         	goto	l5080
  2594  0000CC                     l4970:
  2595                           
  2596                           ; BSR set to: 0
  2597                           ;main.c: 263:             displayStuff(0, 0, "Temp:");
  2598  0000CC  0E00               	movlw	0
  2599  0000CE  6E0C               	movwf	(displayStuff@row+1)^0,c
  2600  0000D0  0E00               	movlw	0
  2601  0000D2  6E0B               	movwf	displayStuff@row^0,c
  2602  0000D4  0E00               	movlw	0
  2603  0000D6  6E0E               	movwf	(displayStuff@column+1)^0,c
  2604  0000D8  0E00               	movlw	0
  2605  0000DA  6E0D               	movwf	displayStuff@column^0,c
  2606  0000DC  0E83               	movlw	low (STR_1+7)
  2607  0000DE  6E0F               	movwf	displayStuff@stuff^0,c
  2608  0000E0  0E7F               	movlw	high (STR_1+7)
  2609  0000E2  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2610  0000E4  EC5E  F015         	call	_displayStuff	;wreg free
  2611  0000E8                     
  2612                           ;main.c: 264:             floatToString(currentTemp, valueStr, 1);
  2613  0000E8  C08A  F031         	movff	displayMenu@currentTemp,floatToString@value
  2614  0000EC  C08B  F032         	movff	displayMenu@currentTemp+1,floatToString@value+1
  2615  0000F0  C08C  F033         	movff	displayMenu@currentTemp+2,floatToString@value+2
  2616  0000F4  C08D  F034         	movff	displayMenu@currentTemp+3,floatToString@value+3
  2617  0000F8  0E7C               	movlw	low displayMenu@valueStr
  2618  0000FA  6E35               	movwf	floatToString@buffer^0,c
  2619  0000FC  0E00               	movlw	high displayMenu@valueStr
  2620  0000FE  6E36               	movwf	(floatToString@buffer+1)^0,c
  2621  000100  0E00               	movlw	0
  2622  000102  6E38               	movwf	(floatToString@precision+1)^0,c
  2623  000104  0E01               	movlw	1
  2624  000106  6E37               	movwf	floatToString@precision^0,c
  2625  000108  ECBB  F00E         	call	_floatToString	;wreg free
  2626  00010C                     
  2627                           ;main.c: 265:             displayStuff(0, 6, valueStr);
  2628  00010C  0E00               	movlw	0
  2629  00010E  6E0C               	movwf	(displayStuff@row+1)^0,c
  2630  000110  0E00               	movlw	0
  2631  000112  6E0B               	movwf	displayStuff@row^0,c
  2632  000114  0E00               	movlw	0
  2633  000116  6E0E               	movwf	(displayStuff@column+1)^0,c
  2634  000118  0E06               	movlw	6
  2635  00011A  6E0D               	movwf	displayStuff@column^0,c
  2636  00011C  0E7C               	movlw	low displayMenu@valueStr
  2637  00011E  6E0F               	movwf	displayStuff@stuff^0,c
  2638  000120  0E00               	movlw	high displayMenu@valueStr
  2639  000122  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2640  000124  EC5E  F015         	call	_displayStuff	;wreg free
  2641  000128                     
  2642                           ;main.c: 266:             displayStuff(0, 11, "C");
  2643  000128  0E00               	movlw	0
  2644  00012A  6E0C               	movwf	(displayStuff@row+1)^0,c
  2645  00012C  0E00               	movlw	0
  2646  00012E  6E0B               	movwf	displayStuff@row^0,c
  2647  000130  0E00               	movlw	0
  2648  000132  6E0E               	movwf	(displayStuff@column+1)^0,c
  2649  000134  0E0B               	movlw	11
  2650  000136  6E0D               	movwf	displayStuff@column^0,c
  2651  000138  0EFD               	movlw	low STR_9
  2652  00013A  6E0F               	movwf	displayStuff@stuff^0,c
  2653  00013C  0E7F               	movlw	high STR_9
  2654  00013E  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2655  000140  EC5E  F015         	call	_displayStuff	;wreg free
  2656  000144                     
  2657                           ;main.c: 269:             displayStuff(1, 0, "Lim:");
  2658  000144  0E00               	movlw	0
  2659  000146  6E0C               	movwf	(displayStuff@row+1)^0,c
  2660  000148  0E01               	movlw	1
  2661  00014A  6E0B               	movwf	displayStuff@row^0,c
  2662  00014C  0E00               	movlw	0
  2663  00014E  6E0E               	movwf	(displayStuff@column+1)^0,c
  2664  000150  0E00               	movlw	0
  2665  000152  6E0D               	movwf	displayStuff@column^0,c
  2666  000154  0EEA               	movlw	low STR_10
  2667  000156  6E0F               	movwf	displayStuff@stuff^0,c
  2668  000158  0E7F               	movlw	high STR_10
  2669  00015A  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2670  00015C  EC5E  F015         	call	_displayStuff	;wreg free
  2671  000160                     
  2672                           ;main.c: 270:             itoa(Tlim, valueStr);
  2673  000160  C0D8  F012         	movff	_Tlim,itoa@value
  2674  000164  C0D9  F013         	movff	_Tlim+1,itoa@value+1
  2675  000168  0E7C               	movlw	low displayMenu@valueStr
  2676  00016A  6E14               	movwf	itoa@ptr^0,c
  2677  00016C  0E00               	movlw	high displayMenu@valueStr
  2678  00016E  6E15               	movwf	(itoa@ptr+1)^0,c
  2679  000170  ECD9  F010         	call	_itoa	;wreg free
  2680  000174                     l4982:
  2681                           
  2682                           ;main.c: 271:             displayStuff(1, 4, valueStr);
  2683  000174  0E00               	movlw	0
  2684  000176  6E0C               	movwf	(displayStuff@row+1)^0,c
  2685  000178  0E01               	movlw	1
  2686  00017A  6E0B               	movwf	displayStuff@row^0,c
  2687  00017C  0E00               	movlw	0
  2688  00017E  6E0E               	movwf	(displayStuff@column+1)^0,c
  2689  000180  0E04               	movlw	4
  2690  000182  6E0D               	movwf	displayStuff@column^0,c
  2691  000184  0E7C               	movlw	low displayMenu@valueStr
  2692  000186  6E0F               	movwf	displayStuff@stuff^0,c
  2693  000188  0E00               	movlw	high displayMenu@valueStr
  2694  00018A  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2695  00018C  EC5E  F015         	call	_displayStuff	;wreg free
  2696                           
  2697                           ;main.c: 272:             break;
  2698  000190  EF63  F004         	goto	l126
  2699  000194                     l4984:
  2700                           
  2701                           ; BSR set to: 0
  2702                           ;main.c: 276:             displayStuff(0, 0, "Humid:");
  2703  000194  0E00               	movlw	0
  2704  000196  6E0C               	movwf	(displayStuff@row+1)^0,c
  2705  000198  0E00               	movlw	0
  2706  00019A  6E0B               	movwf	displayStuff@row^0,c
  2707  00019C  0E00               	movlw	0
  2708  00019E  6E0E               	movwf	(displayStuff@column+1)^0,c
  2709  0001A0  0E00               	movlw	0
  2710  0001A2  6E0D               	movwf	displayStuff@column^0,c
  2711  0001A4  0EE3               	movlw	low STR_11
  2712  0001A6  6E0F               	movwf	displayStuff@stuff^0,c
  2713  0001A8  0E7F               	movlw	high STR_11
  2714  0001AA  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2715  0001AC  EC5E  F015         	call	_displayStuff	;wreg free
  2716  0001B0                     
  2717                           ;main.c: 277:             floatToString(currentHumid, valueStr, 1);
  2718  0001B0  C08E  F031         	movff	displayMenu@currentHumid,floatToString@value
  2719  0001B4  C08F  F032         	movff	displayMenu@currentHumid+1,floatToString@value+1
  2720  0001B8  C090  F033         	movff	displayMenu@currentHumid+2,floatToString@value+2
  2721  0001BC  C091  F034         	movff	displayMenu@currentHumid+3,floatToString@value+3
  2722  0001C0  0E7C               	movlw	low displayMenu@valueStr
  2723  0001C2  6E35               	movwf	floatToString@buffer^0,c
  2724  0001C4  0E00               	movlw	high displayMenu@valueStr
  2725  0001C6  6E36               	movwf	(floatToString@buffer+1)^0,c
  2726  0001C8  0E00               	movlw	0
  2727  0001CA  6E38               	movwf	(floatToString@precision+1)^0,c
  2728  0001CC  0E01               	movlw	1
  2729  0001CE  6E37               	movwf	floatToString@precision^0,c
  2730  0001D0  ECBB  F00E         	call	_floatToString	;wreg free
  2731  0001D4                     
  2732                           ;main.c: 278:             displayStuff(0, 7, valueStr);
  2733  0001D4  0E00               	movlw	0
  2734  0001D6  6E0C               	movwf	(displayStuff@row+1)^0,c
  2735  0001D8  0E00               	movlw	0
  2736  0001DA  6E0B               	movwf	displayStuff@row^0,c
  2737  0001DC  0E00               	movlw	0
  2738  0001DE  6E0E               	movwf	(displayStuff@column+1)^0,c
  2739  0001E0  0E07               	movlw	7
  2740  0001E2  6E0D               	movwf	displayStuff@column^0,c
  2741  0001E4  0E7C               	movlw	low displayMenu@valueStr
  2742  0001E6  6E0F               	movwf	displayStuff@stuff^0,c
  2743  0001E8  0E00               	movlw	high displayMenu@valueStr
  2744  0001EA  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2745  0001EC  EC5E  F015         	call	_displayStuff	;wreg free
  2746  0001F0                     
  2747                           ;main.c: 279:             displayStuff(0, 12, "%");
  2748  0001F0  0E00               	movlw	0
  2749  0001F2  6E0C               	movwf	(displayStuff@row+1)^0,c
  2750  0001F4  0E00               	movlw	0
  2751  0001F6  6E0B               	movwf	displayStuff@row^0,c
  2752  0001F8  0E00               	movlw	0
  2753  0001FA  6E0E               	movwf	(displayStuff@column+1)^0,c
  2754  0001FC  0E0C               	movlw	12
  2755  0001FE  6E0D               	movwf	displayStuff@column^0,c
  2756  000200  0EFB               	movlw	low STR_12
  2757  000202  6E0F               	movwf	displayStuff@stuff^0,c
  2758  000204  0E7F               	movlw	high STR_12
  2759  000206  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2760  000208  EC5E  F015         	call	_displayStuff	;wreg free
  2761  00020C                     
  2762                           ;main.c: 282:             displayStuff(1, 0, "Lim:");
  2763  00020C  0E00               	movlw	0
  2764  00020E  6E0C               	movwf	(displayStuff@row+1)^0,c
  2765  000210  0E01               	movlw	1
  2766  000212  6E0B               	movwf	displayStuff@row^0,c
  2767  000214  0E00               	movlw	0
  2768  000216  6E0E               	movwf	(displayStuff@column+1)^0,c
  2769  000218  0E00               	movlw	0
  2770  00021A  6E0D               	movwf	displayStuff@column^0,c
  2771  00021C  0EEA               	movlw	low STR_10
  2772  00021E  6E0F               	movwf	displayStuff@stuff^0,c
  2773  000220  0E7F               	movlw	high STR_10
  2774  000222  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2775  000224  EC5E  F015         	call	_displayStuff	;wreg free
  2776  000228                     
  2777                           ;main.c: 283:             itoa(Hlim, valueStr);
  2778  000228  C0D6  F012         	movff	_Hlim,itoa@value
  2779  00022C  C0D7  F013         	movff	_Hlim+1,itoa@value+1
  2780  000230  0E7C               	movlw	low displayMenu@valueStr
  2781  000232  6E14               	movwf	itoa@ptr^0,c
  2782  000234  0E00               	movlw	high displayMenu@valueStr
  2783  000236  6E15               	movwf	(itoa@ptr+1)^0,c
  2784  000238  ECD9  F010         	call	_itoa	;wreg free
  2785  00023C  EFBA  F000         	goto	l4982
  2786  000240                     l4998:
  2787                           
  2788                           ; BSR set to: 0
  2789                           ;main.c: 289:             displayStuff(0, 0, "Gas:");
  2790  000240  0E00               	movlw	0
  2791  000242  6E0C               	movwf	(displayStuff@row+1)^0,c
  2792  000244  0E00               	movlw	0
  2793  000246  6E0B               	movwf	displayStuff@row^0,c
  2794  000248  0E00               	movlw	0
  2795  00024A  6E0E               	movwf	(displayStuff@column+1)^0,c
  2796  00024C  0E00               	movlw	0
  2797  00024E  6E0D               	movwf	displayStuff@column^0,c
  2798  000250  0EEF               	movlw	low STR_14
  2799  000252  6E0F               	movwf	displayStuff@stuff^0,c
  2800  000254  0E7F               	movlw	high STR_14
  2801  000256  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2802  000258  EC5E  F015         	call	_displayStuff	;wreg free
  2803  00025C                     
  2804                           ;main.c: 290:             floatToString(currentGas, valueStr, 1);
  2805  00025C  C092  F031         	movff	displayMenu@currentGas,floatToString@value
  2806  000260  C093  F032         	movff	displayMenu@currentGas+1,floatToString@value+1
  2807  000264  C094  F033         	movff	displayMenu@currentGas+2,floatToString@value+2
  2808  000268  C095  F034         	movff	displayMenu@currentGas+3,floatToString@value+3
  2809  00026C  0E7C               	movlw	low displayMenu@valueStr
  2810  00026E  6E35               	movwf	floatToString@buffer^0,c
  2811  000270  0E00               	movlw	high displayMenu@valueStr
  2812  000272  6E36               	movwf	(floatToString@buffer+1)^0,c
  2813  000274  0E00               	movlw	0
  2814  000276  6E38               	movwf	(floatToString@precision+1)^0,c
  2815  000278  0E01               	movlw	1
  2816  00027A  6E37               	movwf	floatToString@precision^0,c
  2817  00027C  ECBB  F00E         	call	_floatToString	;wreg free
  2818  000280                     
  2819                           ;main.c: 291:             displayStuff(0, 5, valueStr);
  2820  000280  0E00               	movlw	0
  2821  000282  6E0C               	movwf	(displayStuff@row+1)^0,c
  2822  000284  0E00               	movlw	0
  2823  000286  6E0B               	movwf	displayStuff@row^0,c
  2824  000288  0E00               	movlw	0
  2825  00028A  6E0E               	movwf	(displayStuff@column+1)^0,c
  2826  00028C  0E05               	movlw	5
  2827  00028E  6E0D               	movwf	displayStuff@column^0,c
  2828  000290  0E7C               	movlw	low displayMenu@valueStr
  2829  000292  6E0F               	movwf	displayStuff@stuff^0,c
  2830  000294  0E00               	movlw	high displayMenu@valueStr
  2831  000296  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2832  000298  EC5E  F015         	call	_displayStuff	;wreg free
  2833  00029C                     
  2834                           ;main.c: 292:             displayStuff(0, 11, "ppm");
  2835  00029C  0E00               	movlw	0
  2836  00029E  6E0C               	movwf	(displayStuff@row+1)^0,c
  2837  0002A0  0E00               	movlw	0
  2838  0002A2  6E0B               	movwf	displayStuff@row^0,c
  2839  0002A4  0E00               	movlw	0
  2840  0002A6  6E0E               	movwf	(displayStuff@column+1)^0,c
  2841  0002A8  0E0B               	movlw	11
  2842  0002AA  6E0D               	movwf	displayStuff@column^0,c
  2843  0002AC  0EF4               	movlw	low STR_15
  2844  0002AE  6E0F               	movwf	displayStuff@stuff^0,c
  2845  0002B0  0E7F               	movlw	high STR_15
  2846  0002B2  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2847  0002B4  EC5E  F015         	call	_displayStuff	;wreg free
  2848  0002B8                     
  2849                           ;main.c: 295:             displayStuff(1, 0, "Lim:");
  2850  0002B8  0E00               	movlw	0
  2851  0002BA  6E0C               	movwf	(displayStuff@row+1)^0,c
  2852  0002BC  0E01               	movlw	1
  2853  0002BE  6E0B               	movwf	displayStuff@row^0,c
  2854  0002C0  0E00               	movlw	0
  2855  0002C2  6E0E               	movwf	(displayStuff@column+1)^0,c
  2856  0002C4  0E00               	movlw	0
  2857  0002C6  6E0D               	movwf	displayStuff@column^0,c
  2858  0002C8  0EEA               	movlw	low STR_10
  2859  0002CA  6E0F               	movwf	displayStuff@stuff^0,c
  2860  0002CC  0E7F               	movlw	high STR_10
  2861  0002CE  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2862  0002D0  EC5E  F015         	call	_displayStuff	;wreg free
  2863  0002D4                     
  2864                           ;main.c: 296:             itoa(Glim, valueStr);
  2865  0002D4  C0D4  F012         	movff	_Glim,itoa@value
  2866  0002D8  C0D5  F013         	movff	_Glim+1,itoa@value+1
  2867  0002DC  0E7C               	movlw	low displayMenu@valueStr
  2868  0002DE  6E14               	movwf	itoa@ptr^0,c
  2869  0002E0  0E00               	movlw	high displayMenu@valueStr
  2870  0002E2  6E15               	movwf	(itoa@ptr+1)^0,c
  2871  0002E4  ECD9  F010         	call	_itoa	;wreg free
  2872  0002E8  EFBA  F000         	goto	l4982
  2873  0002EC                     l5012:
  2874                           
  2875                           ; BSR set to: 0
  2876                           ;main.c: 301:             displayStuff(0, 0, "Leituras");
  2877  0002EC  0E00               	movlw	0
  2878  0002EE  6E0C               	movwf	(displayStuff@row+1)^0,c
  2879  0002F0  0E00               	movlw	0
  2880  0002F2  6E0B               	movwf	displayStuff@row^0,c
  2881  0002F4  0E00               	movlw	0
  2882  0002F6  6E0E               	movwf	(displayStuff@column+1)^0,c
  2883  0002F8  0E00               	movlw	0
  2884  0002FA  6E0D               	movwf	displayStuff@column^0,c
  2885  0002FC  0EDA               	movlw	low STR_17
  2886  0002FE  6E0F               	movwf	displayStuff@stuff^0,c
  2887  000300  0E7F               	movlw	high STR_17
  2888  000302  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2889  000304  EC5E  F015         	call	_displayStuff	;wreg free
  2890  000308                     
  2891                           ;main.c: 303:             if(currentTemp <= Tlim && currentHumid <= Hlim && currentGas <
      +                          = Glim){
  2892  000308  C0D8  F00A         	movff	_Tlim,___xxtofl@val
  2893  00030C  C0D9  F00B         	movff	_Tlim+1,___xxtofl@val+1
  2894  000310  0E00               	movlw	0
  2895  000312  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  2896  000314  0EFF               	movlw	-1
  2897  000316  6E0C               	movwf	(___xxtofl@val+2)^0,c
  2898  000318  6E0D               	movwf	(___xxtofl@val+3)^0,c
  2899  00031A  0E01               	movlw	1
  2900  00031C  ECFF  F00F         	call	___xxtofl
  2901  000320  C00A  F018         	movff	?___xxtofl,___flge@ff1
  2902  000324  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  2903  000328  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  2904  00032C  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  2905  000330  C08A  F01C         	movff	displayMenu@currentTemp,___flge@ff2
  2906  000334  C08B  F01D         	movff	displayMenu@currentTemp+1,___flge@ff2+1
  2907  000338  C08C  F01E         	movff	displayMenu@currentTemp+2,___flge@ff2+2
  2908  00033C  C08D  F01F         	movff	displayMenu@currentTemp+3,___flge@ff2+3
  2909  000340  EC8E  F012         	call	___flge	;wreg free
  2910  000344  A0D8               	btfss	status,0,c
  2911  000346  EFA7  F001         	goto	u5071
  2912  00034A  EFA9  F001         	goto	u5070
  2913  00034E                     u5071:
  2914  00034E  EF03  F002         	goto	l5022
  2915  000352                     u5070:
  2916  000352  C0D6  F00A         	movff	_Hlim,___xxtofl@val
  2917  000356  C0D7  F00B         	movff	_Hlim+1,___xxtofl@val+1
  2918  00035A  0E00               	movlw	0
  2919  00035C  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  2920  00035E  0EFF               	movlw	-1
  2921  000360  6E0C               	movwf	(___xxtofl@val+2)^0,c
  2922  000362  6E0D               	movwf	(___xxtofl@val+3)^0,c
  2923  000364  0E01               	movlw	1
  2924  000366  ECFF  F00F         	call	___xxtofl
  2925  00036A  C00A  F018         	movff	?___xxtofl,___flge@ff1
  2926  00036E  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  2927  000372  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  2928  000376  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  2929  00037A  C08E  F01C         	movff	displayMenu@currentHumid,___flge@ff2
  2930  00037E  C08F  F01D         	movff	displayMenu@currentHumid+1,___flge@ff2+1
  2931  000382  C090  F01E         	movff	displayMenu@currentHumid+2,___flge@ff2+2
  2932  000386  C091  F01F         	movff	displayMenu@currentHumid+3,___flge@ff2+3
  2933  00038A  EC8E  F012         	call	___flge	;wreg free
  2934  00038E  A0D8               	btfss	status,0,c
  2935  000390  EFCC  F001         	goto	u5081
  2936  000394  EFCE  F001         	goto	u5080
  2937  000398                     u5081:
  2938  000398  EF03  F002         	goto	l5022
  2939  00039C                     u5080:
  2940  00039C  C0D4  F00A         	movff	_Glim,___xxtofl@val
  2941  0003A0  C0D5  F00B         	movff	_Glim+1,___xxtofl@val+1
  2942  0003A4  0E00               	movlw	0
  2943  0003A6  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  2944  0003A8  0EFF               	movlw	-1
  2945  0003AA  6E0C               	movwf	(___xxtofl@val+2)^0,c
  2946  0003AC  6E0D               	movwf	(___xxtofl@val+3)^0,c
  2947  0003AE  0E01               	movlw	1
  2948  0003B0  ECFF  F00F         	call	___xxtofl
  2949  0003B4  C00A  F018         	movff	?___xxtofl,___flge@ff1
  2950  0003B8  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  2951  0003BC  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  2952  0003C0  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  2953  0003C4  C092  F01C         	movff	displayMenu@currentGas,___flge@ff2
  2954  0003C8  C093  F01D         	movff	displayMenu@currentGas+1,___flge@ff2+1
  2955  0003CC  C094  F01E         	movff	displayMenu@currentGas+2,___flge@ff2+2
  2956  0003D0  C095  F01F         	movff	displayMenu@currentGas+3,___flge@ff2+3
  2957  0003D4  EC8E  F012         	call	___flge	;wreg free
  2958  0003D8  A0D8               	btfss	status,0,c
  2959  0003DA  EFF1  F001         	goto	u5091
  2960  0003DE  EFF3  F001         	goto	u5090
  2961  0003E2                     u5091:
  2962  0003E2  EF03  F002         	goto	l5022
  2963  0003E6                     u5090:
  2964  0003E6                     
  2965                           ;main.c: 304:                 displayStuff(1, 0, "OK");
  2966  0003E6  0E00               	movlw	0
  2967  0003E8  6E0C               	movwf	(displayStuff@row+1)^0,c
  2968  0003EA  0E01               	movlw	1
  2969  0003EC  6E0B               	movwf	displayStuff@row^0,c
  2970  0003EE  0E00               	movlw	0
  2971  0003F0  6E0E               	movwf	(displayStuff@column+1)^0,c
  2972  0003F2  0E00               	movlw	0
  2973  0003F4  6E0D               	movwf	displayStuff@column^0,c
  2974  0003F6  0EF8               	movlw	low STR_18
  2975  0003F8  6E0F               	movwf	displayStuff@stuff^0,c
  2976  0003FA  0E7F               	movlw	high STR_18
  2977  0003FC  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2978  0003FE  EC5E  F015         	call	_displayStuff	;wreg free
  2979                           
  2980                           ;main.c: 305:             } else {
  2981  000402  EF63  F004         	goto	l126
  2982  000406                     l5022:
  2983                           
  2984                           ;main.c: 306:                 static int errorCycle = 0;;main.c: 307:                 er
      +                          rorCycle++;
  2985  000406  4A50               	infsnz	displayMenu@errorCycle^0,f,c
  2986  000408  2A51               	incf	(displayMenu@errorCycle+1)^0,f,c
  2987  00040A                     
  2988                           ;main.c: 309:                 if (errorCycle > 3) errorCycle = 0;
  2989  00040A  BE51               	btfsc	(displayMenu@errorCycle+1)^0,7,c
  2990  00040C  EF11  F002         	goto	u5101
  2991  000410  5051               	movf	(displayMenu@errorCycle+1)^0,w,c
  2992  000412  E109               	bnz	u5100
  2993  000414  0E04               	movlw	4
  2994  000416  5C50               	subwf	displayMenu@errorCycle^0,w,c
  2995  000418  A0D8               	btfss	status,0,c
  2996  00041A  EF11  F002         	goto	u5101
  2997  00041E  EF13  F002         	goto	u5100
  2998  000422                     u5101:
  2999  000422  EFB8  F002         	goto	l5042
  3000  000426                     u5100:
  3001  000426  0E00               	movlw	0
  3002  000428  6E51               	movwf	(displayMenu@errorCycle+1)^0,c
  3003  00042A  0E00               	movlw	0
  3004  00042C  6E50               	movwf	displayMenu@errorCycle^0,c
  3005  00042E  EFB8  F002         	goto	l5042
  3006  000432                     l5028:
  3007                           
  3008                           ; BSR set to: 0
  3009                           ;main.c: 313:                         if(currentTemp > Tlim){
  3010  000432  C0D8  F00A         	movff	_Tlim,___xxtofl@val
  3011  000436  C0D9  F00B         	movff	_Tlim+1,___xxtofl@val+1
  3012  00043A  0E00               	movlw	0
  3013  00043C  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3014  00043E  0EFF               	movlw	-1
  3015  000440  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3016  000442  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3017  000444  0E01               	movlw	1
  3018  000446  ECFF  F00F         	call	___xxtofl
  3019  00044A  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3020  00044E  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3021  000452  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3022  000456  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3023  00045A  C08A  F01C         	movff	displayMenu@currentTemp,___flge@ff2
  3024  00045E  C08B  F01D         	movff	displayMenu@currentTemp+1,___flge@ff2+1
  3025  000462  C08C  F01E         	movff	displayMenu@currentTemp+2,___flge@ff2+2
  3026  000466  C08D  F01F         	movff	displayMenu@currentTemp+3,___flge@ff2+3
  3027  00046A  EC8E  F012         	call	___flge	;wreg free
  3028  00046E  B0D8               	btfsc	status,0,c
  3029  000470  EF3C  F002         	goto	u5111
  3030  000474  EF3E  F002         	goto	u5110
  3031  000478                     u5111:
  3032  000478  EF30  F000         	goto	l4958
  3033  00047C                     u5110:
  3034  00047C                     
  3035                           ;main.c: 314:                             displayStuff(1, 0, "T_lim excedida!");
  3036  00047C  0E00               	movlw	0
  3037  00047E  6E0C               	movwf	(displayStuff@row+1)^0,c
  3038  000480  0E01               	movlw	1
  3039  000482  6E0B               	movwf	displayStuff@row^0,c
  3040  000484  0E00               	movlw	0
  3041  000486  6E0E               	movwf	(displayStuff@column+1)^0,c
  3042  000488  0E00               	movlw	0
  3043  00048A  6E0D               	movwf	displayStuff@column^0,c
  3044  00048C  0E32               	movlw	low STR_19
  3045  00048E  6E0F               	movwf	displayStuff@stuff^0,c
  3046  000490  0E7F               	movlw	high STR_19
  3047  000492  6E10               	movwf	(displayStuff@stuff+1)^0,c
  3048  000494  EC5E  F015         	call	_displayStuff	;wreg free
  3049  000498  EF63  F004         	goto	l126
  3050  00049C                     l5032:
  3051                           
  3052                           ; BSR set to: 0
  3053                           ;main.c: 318:                         if(currentHumid > Hlim){
  3054  00049C  C0D6  F00A         	movff	_Hlim,___xxtofl@val
  3055  0004A0  C0D7  F00B         	movff	_Hlim+1,___xxtofl@val+1
  3056  0004A4  0E00               	movlw	0
  3057  0004A6  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3058  0004A8  0EFF               	movlw	-1
  3059  0004AA  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3060  0004AC  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3061  0004AE  0E01               	movlw	1
  3062  0004B0  ECFF  F00F         	call	___xxtofl
  3063  0004B4  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3064  0004B8  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3065  0004BC  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3066  0004C0  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3067  0004C4  C08E  F01C         	movff	displayMenu@currentHumid,___flge@ff2
  3068  0004C8  C08F  F01D         	movff	displayMenu@currentHumid+1,___flge@ff2+1
  3069  0004CC  C090  F01E         	movff	displayMenu@currentHumid+2,___flge@ff2+2
  3070  0004D0  C091  F01F         	movff	displayMenu@currentHumid+3,___flge@ff2+3
  3071  0004D4  EC8E  F012         	call	___flge	;wreg free
  3072  0004D8  B0D8               	btfsc	status,0,c
  3073  0004DA  EF71  F002         	goto	u5121
  3074  0004DE  EF73  F002         	goto	u5120
  3075  0004E2                     u5121:
  3076  0004E2  EF30  F000         	goto	l4958
  3077  0004E6                     u5120:
  3078  0004E6                     
  3079                           ;main.c: 319:                             displayStuff(1, 0, "H_lim excedida!");
  3080  0004E6  0E00               	movlw	0
  3081  0004E8  6E0C               	movwf	(displayStuff@row+1)^0,c
  3082  0004EA  0E01               	movlw	1
  3083  0004EC  6E0B               	movwf	displayStuff@row^0,c
  3084  0004EE  0E00               	movlw	0
  3085  0004F0  6E0E               	movwf	(displayStuff@column+1)^0,c
  3086  0004F2  0E00               	movlw	0
  3087  0004F4  6E0D               	movwf	displayStuff@column^0,c
  3088  0004F6  0E22               	movlw	low STR_20
  3089  0004F8  6E0F               	movwf	displayStuff@stuff^0,c
  3090  0004FA  0E7F               	movlw	high STR_20
  3091  0004FC  6E10               	movwf	(displayStuff@stuff+1)^0,c
  3092  0004FE  EC5E  F015         	call	_displayStuff	;wreg free
  3093  000502  EF63  F004         	goto	l126
  3094  000506                     l5036:
  3095                           
  3096                           ; BSR set to: 0
  3097                           ;main.c: 323:                         if(currentGas > Glim){
  3098  000506  C0D4  F00A         	movff	_Glim,___xxtofl@val
  3099  00050A  C0D5  F00B         	movff	_Glim+1,___xxtofl@val+1
  3100  00050E  0E00               	movlw	0
  3101  000510  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3102  000512  0EFF               	movlw	-1
  3103  000514  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3104  000516  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3105  000518  0E01               	movlw	1
  3106  00051A  ECFF  F00F         	call	___xxtofl
  3107  00051E  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3108  000522  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3109  000526  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3110  00052A  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3111  00052E  C092  F01C         	movff	displayMenu@currentGas,___flge@ff2
  3112  000532  C093  F01D         	movff	displayMenu@currentGas+1,___flge@ff2+1
  3113  000536  C094  F01E         	movff	displayMenu@currentGas+2,___flge@ff2+2
  3114  00053A  C095  F01F         	movff	displayMenu@currentGas+3,___flge@ff2+3
  3115  00053E  EC8E  F012         	call	___flge	;wreg free
  3116  000542  B0D8               	btfsc	status,0,c
  3117  000544  EFA6  F002         	goto	u5131
  3118  000548  EFA8  F002         	goto	u5130
  3119  00054C                     u5131:
  3120  00054C  EF30  F000         	goto	l4958
  3121  000550                     u5130:
  3122  000550                     
  3123                           ;main.c: 324:                             displayStuff(1, 0, "G_lim excedido!");
  3124  000550  0E00               	movlw	0
  3125  000552  6E0C               	movwf	(displayStuff@row+1)^0,c
  3126  000554  0E01               	movlw	1
  3127  000556  6E0B               	movwf	displayStuff@row^0,c
  3128  000558  0E00               	movlw	0
  3129  00055A  6E0E               	movwf	(displayStuff@column+1)^0,c
  3130  00055C  0E00               	movlw	0
  3131  00055E  6E0D               	movwf	displayStuff@column^0,c
  3132  000560  0E42               	movlw	low STR_21
  3133  000562  6E0F               	movwf	displayStuff@stuff^0,c
  3134  000564  0E7F               	movlw	high STR_21
  3135  000566  6E10               	movwf	(displayStuff@stuff+1)^0,c
  3136  000568  EC5E  F015         	call	_displayStuff	;wreg free
  3137  00056C  EF63  F004         	goto	l126
  3138  000570                     l5042:
  3139  000570  C050  F078         	movff	displayMenu@errorCycle,??_displayMenu
  3140  000574  C051  F079         	movff	displayMenu@errorCycle+1,??_displayMenu+1
  3141                           
  3142                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3143                           ; Switch size 1, requested type "simple"
  3144                           ; Number of cases is 1, Range of values is 0 to 0
  3145                           ; switch strategies available:
  3146                           ; Name         Instructions Cycles
  3147                           ; simple_byte            4     3 (average)
  3148                           ;	Chosen strategy is simple_byte
  3149  000578  0100               	movlb	0	; () banked
  3150  00057A  5179               	movf	(??_displayMenu+1)& (0+255),w,b
  3151  00057C  0A00               	xorlw	0	; case 0
  3152  00057E  B4D8               	btfsc	status,2,c
  3153  000580  EFC4  F002         	goto	l5280
  3154  000584  EF63  F004         	goto	l126
  3155  000588                     l5280:
  3156                           
  3157                           ; BSR set to: 0
  3158                           ; Switch size 1, requested type "simple"
  3159                           ; Number of cases is 3, Range of values is 0 to 2
  3160                           ; switch strategies available:
  3161                           ; Name         Instructions Cycles
  3162                           ; simple_byte           10     6 (average)
  3163                           ;	Chosen strategy is simple_byte
  3164  000588  5178               	movf	??_displayMenu& (0+255),w,b
  3165  00058A  0A00               	xorlw	0	; case 0
  3166  00058C  B4D8               	btfsc	status,2,c
  3167  00058E  EF19  F002         	goto	l5028
  3168  000592  0A01               	xorlw	1	; case 1
  3169  000594  B4D8               	btfsc	status,2,c
  3170  000596  EF4E  F002         	goto	l5032
  3171  00059A  0A03               	xorlw	3	; case 2
  3172  00059C  B4D8               	btfsc	status,2,c
  3173  00059E  EF83  F002         	goto	l5036
  3174  0005A2  EF63  F004         	goto	l126
  3175  0005A6                     l5044:
  3176                           
  3177                           ; BSR set to: 0
  3178                           ;main.c: 333:             displayStuff(0, 0, "Sistemas:");
  3179  0005A6  0E00               	movlw	0
  3180  0005A8  6E0C               	movwf	(displayStuff@row+1)^0,c
  3181  0005AA  0E00               	movlw	0
  3182  0005AC  6E0B               	movwf	displayStuff@row^0,c
  3183  0005AE  0E00               	movlw	0
  3184  0005B0  6E0E               	movwf	(displayStuff@column+1)^0,c
  3185  0005B2  0E00               	movlw	0
  3186  0005B4  6E0D               	movwf	displayStuff@column^0,c
  3187  0005B6  0ED0               	movlw	low STR_22
  3188  0005B8  6E0F               	movwf	displayStuff@stuff^0,c
  3189  0005BA  0E7F               	movlw	high STR_22
  3190  0005BC  6E10               	movwf	(displayStuff@stuff+1)^0,c
  3191  0005BE  EC5E  F015         	call	_displayStuff	;wreg free
  3192  0005C2                     
  3193                           ;main.c: 334:             if(currentTemp <= Tlim && currentHumid <= Hlim && currentGas <
      +                          = Glim){
  3194  0005C2  C0D8  F00A         	movff	_Tlim,___xxtofl@val
  3195  0005C6  C0D9  F00B         	movff	_Tlim+1,___xxtofl@val+1
  3196  0005CA  0E00               	movlw	0
  3197  0005CC  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3198  0005CE  0EFF               	movlw	-1
  3199  0005D0  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3200  0005D2  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3201  0005D4  0E01               	movlw	1
  3202  0005D6  ECFF  F00F         	call	___xxtofl
  3203  0005DA  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3204  0005DE  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3205  0005E2  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3206  0005E6  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3207  0005EA  C08A  F01C         	movff	displayMenu@currentTemp,___flge@ff2
  3208  0005EE  C08B  F01D         	movff	displayMenu@currentTemp+1,___flge@ff2+1
  3209  0005F2  C08C  F01E         	movff	displayMenu@currentTemp+2,___flge@ff2+2
  3210  0005F6  C08D  F01F         	movff	displayMenu@currentTemp+3,___flge@ff2+3
  3211  0005FA  EC8E  F012         	call	___flge	;wreg free
  3212  0005FE  A0D8               	btfss	status,0,c
  3213  000600  EF04  F003         	goto	u5141
  3214  000604  EF06  F003         	goto	u5140
  3215  000608                     u5141:
  3216  000608  EF60  F003         	goto	l5054
  3217  00060C                     u5140:
  3218  00060C  C0D6  F00A         	movff	_Hlim,___xxtofl@val
  3219  000610  C0D7  F00B         	movff	_Hlim+1,___xxtofl@val+1
  3220  000614  0E00               	movlw	0
  3221  000616  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3222  000618  0EFF               	movlw	-1
  3223  00061A  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3224  00061C  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3225  00061E  0E01               	movlw	1
  3226  000620  ECFF  F00F         	call	___xxtofl
  3227  000624  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3228  000628  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3229  00062C  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3230  000630  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3231  000634  C08E  F01C         	movff	displayMenu@currentHumid,___flge@ff2
  3232  000638  C08F  F01D         	movff	displayMenu@currentHumid+1,___flge@ff2+1
  3233  00063C  C090  F01E         	movff	displayMenu@currentHumid+2,___flge@ff2+2
  3234  000640  C091  F01F         	movff	displayMenu@currentHumid+3,___flge@ff2+3
  3235  000644  EC8E  F012         	call	___flge	;wreg free
  3236  000648  A0D8               	btfss	status,0,c
  3237  00064A  EF29  F003         	goto	u5151
  3238  00064E  EF2B  F003         	goto	u5150
  3239  000652                     u5151:
  3240  000652  EF60  F003         	goto	l5054
  3241  000656                     u5150:
  3242  000656  C0D4  F00A         	movff	_Glim,___xxtofl@val
  3243  00065A  C0D5  F00B         	movff	_Glim+1,___xxtofl@val+1
  3244  00065E  0E00               	movlw	0
  3245  000660  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3246  000662  0EFF               	movlw	-1
  3247  000664  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3248  000666  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3249  000668  0E01               	movlw	1
  3250  00066A  ECFF  F00F         	call	___xxtofl
  3251  00066E  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3252  000672  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3253  000676  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3254  00067A  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3255  00067E  C092  F01C         	movff	displayMenu@currentGas,___flge@ff2
  3256  000682  C093  F01D         	movff	displayMenu@currentGas+1,___flge@ff2+1
  3257  000686  C094  F01E         	movff	displayMenu@currentGas+2,___flge@ff2+2
  3258  00068A  C095  F01F         	movff	displayMenu@currentGas+3,___flge@ff2+3
  3259  00068E  EC8E  F012         	call	___flge	;wreg free
  3260  000692  A0D8               	btfss	status,0,c
  3261  000694  EF4E  F003         	goto	u5161
  3262  000698  EF50  F003         	goto	u5160
  3263  00069C                     u5161:
  3264  00069C  EF60  F003         	goto	l5054
  3265  0006A0                     u5160:
  3266  0006A0                     
  3267                           ;main.c: 335:                 displayStuff(1, 0, "OK");
  3268  0006A0  0E00               	movlw	0
  3269  0006A2  6E0C               	movwf	(displayStuff@row+1)^0,c
  3270  0006A4  0E01               	movlw	1
  3271  0006A6  6E0B               	movwf	displayStuff@row^0,c
  3272  0006A8  0E00               	movlw	0
  3273  0006AA  6E0E               	movwf	(displayStuff@column+1)^0,c
  3274  0006AC  0E00               	movlw	0
  3275  0006AE  6E0D               	movwf	displayStuff@column^0,c
  3276  0006B0  0EF8               	movlw	low STR_18
  3277  0006B2  6E0F               	movwf	displayStuff@stuff^0,c
  3278  0006B4  0E7F               	movlw	high STR_18
  3279  0006B6  6E10               	movwf	(displayStuff@stuff+1)^0,c
  3280  0006B8  EC5E  F015         	call	_displayStuff	;wreg free
  3281                           
  3282                           ;main.c: 336:             } else {
  3283  0006BC  EF63  F004         	goto	l126
  3284  0006C0                     l5054:
  3285                           
  3286                           ;main.c: 337:                 static int systemCycle = 0;;main.c: 338:                 s
      +                          ystemCycle++;
  3287  0006C0  0100               	movlb	0	; () banked
  3288  0006C2  4BD2               	infsnz	displayMenu@systemCycle& (0+255),f,b
  3289  0006C4  2BD3               	incf	(displayMenu@systemCycle+1)& (0+255),f,b
  3290  0006C6                     
  3291                           ; BSR set to: 0
  3292                           ;main.c: 340:                 if (systemCycle > 3) systemCycle = 0;
  3293  0006C6  BFD3               	btfsc	(displayMenu@systemCycle+1)& (0+255),7,b
  3294  0006C8  EF6F  F003         	goto	u5171
  3295  0006CC  51D3               	movf	(displayMenu@systemCycle+1)& (0+255),w,b
  3296  0006CE  E109               	bnz	u5170
  3297  0006D0  0E04               	movlw	4
  3298  0006D2  5DD2               	subwf	displayMenu@systemCycle& (0+255),w,b
  3299  0006D4  A0D8               	btfss	status,0,c
  3300  0006D6  EF6F  F003         	goto	u5171
  3301  0006DA  EF71  F003         	goto	u5170
  3302  0006DE                     u5171:
  3303  0006DE  EF16  F004         	goto	l5074
  3304  0006E2                     u5170:
  3305  0006E2                     
  3306                           ; BSR set to: 0
  3307  0006E2  0E00               	movlw	0
  3308  0006E4  6FD3               	movwf	(displayMenu@systemCycle+1)& (0+255),b
  3309  0006E6  0E00               	movlw	0
  3310  0006E8  6FD2               	movwf	displayMenu@systemCycle& (0+255),b
  3311  0006EA  EF16  F004         	goto	l5074
  3312  0006EE                     l5060:
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;main.c: 344:                         if(currentTemp > Tlim){
  3316  0006EE  C0D8  F00A         	movff	_Tlim,___xxtofl@val
  3317  0006F2  C0D9  F00B         	movff	_Tlim+1,___xxtofl@val+1
  3318  0006F6  0E00               	movlw	0
  3319  0006F8  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3320  0006FA  0EFF               	movlw	-1
  3321  0006FC  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3322  0006FE  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3323  000700  0E01               	movlw	1
  3324  000702  ECFF  F00F         	call	___xxtofl
  3325  000706  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3326  00070A  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3327  00070E  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3328  000712  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3329  000716  C08A  F01C         	movff	displayMenu@currentTemp,___flge@ff2
  3330  00071A  C08B  F01D         	movff	displayMenu@currentTemp+1,___flge@ff2+1
  3331  00071E  C08C  F01E         	movff	displayMenu@currentTemp+2,___flge@ff2+2
  3332  000722  C08D  F01F         	movff	displayMenu@currentTemp+3,___flge@ff2+3
  3333  000726  EC8E  F012         	call	___flge	;wreg free
  3334  00072A  B0D8               	btfsc	status,0,c
  3335  00072C  EF9A  F003         	goto	u5181
  3336  000730  EF9C  F003         	goto	u5180
  3337  000734                     u5181:
  3338  000734  EF63  F004         	goto	l126
  3339  000738                     u5180:
  3340  000738                     
  3341                           ;main.c: 345:                             displayStuff(1, 0, "Resfriador ON");
  3342  000738  0E00               	movlw	0
  3343  00073A  6E0C               	movwf	(displayStuff@row+1)^0,c
  3344  00073C  0E01               	movlw	1
  3345  00073E  6E0B               	movwf	displayStuff@row^0,c
  3346  000740  0E00               	movlw	0
  3347  000742  6E0E               	movwf	(displayStuff@column+1)^0,c
  3348  000744  0E00               	movlw	0
  3349  000746  6E0D               	movwf	displayStuff@column^0,c
  3350  000748  0E61               	movlw	low STR_24
  3351  00074A  6E0F               	movwf	displayStuff@stuff^0,c
  3352  00074C  0E7F               	movlw	high STR_24
  3353  00074E  6E10               	movwf	(displayStuff@stuff+1)^0,c
  3354  000750  EC5E  F015         	call	_displayStuff	;wreg free
  3355  000754  EF63  F004         	goto	l126
  3356  000758                     l5064:
  3357                           
  3358                           ; BSR set to: 0
  3359                           ;main.c: 349:                         if(currentHumid > Hlim){
  3360  000758  C0D6  F00A         	movff	_Hlim,___xxtofl@val
  3361  00075C  C0D7  F00B         	movff	_Hlim+1,___xxtofl@val+1
  3362  000760  0E00               	movlw	0
  3363  000762  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3364  000764  0EFF               	movlw	-1
  3365  000766  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3366  000768  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3367  00076A  0E01               	movlw	1
  3368  00076C  ECFF  F00F         	call	___xxtofl
  3369  000770  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3370  000774  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3371  000778  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3372  00077C  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3373  000780  C08E  F01C         	movff	displayMenu@currentHumid,___flge@ff2
  3374  000784  C08F  F01D         	movff	displayMenu@currentHumid+1,___flge@ff2+1
  3375  000788  C090  F01E         	movff	displayMenu@currentHumid+2,___flge@ff2+2
  3376  00078C  C091  F01F         	movff	displayMenu@currentHumid+3,___flge@ff2+3
  3377  000790  EC8E  F012         	call	___flge	;wreg free
  3378  000794  B0D8               	btfsc	status,0,c
  3379  000796  EFCF  F003         	goto	u5191
  3380  00079A  EFD1  F003         	goto	u5190
  3381  00079E                     u5191:
  3382  00079E  EF63  F004         	goto	l126
  3383  0007A2                     u5190:
  3384  0007A2                     
  3385                           ;main.c: 350:                             displayStuff(1, 0, "Humidificador ON");
  3386  0007A2  0E00               	movlw	0
  3387  0007A4  6E0C               	movwf	(displayStuff@row+1)^0,c
  3388  0007A6  0E01               	movlw	1
  3389  0007A8  6E0B               	movwf	displayStuff@row^0,c
  3390  0007AA  0E00               	movlw	0
  3391  0007AC  6E0E               	movwf	(displayStuff@column+1)^0,c
  3392  0007AE  0E00               	movlw	0
  3393  0007B0  6E0D               	movwf	displayStuff@column^0,c
  3394  0007B2  0E11               	movlw	low STR_25
  3395  0007B4  6E0F               	movwf	displayStuff@stuff^0,c
  3396  0007B6  0E7F               	movlw	high STR_25
  3397  0007B8  6E10               	movwf	(displayStuff@stuff+1)^0,c
  3398  0007BA  EC5E  F015         	call	_displayStuff	;wreg free
  3399  0007BE  EF63  F004         	goto	l126
  3400  0007C2                     l5068:
  3401                           
  3402                           ; BSR set to: 0
  3403                           ;main.c: 354:                         if(currentGas > Glim){
  3404  0007C2  C0D4  F00A         	movff	_Glim,___xxtofl@val
  3405  0007C6  C0D5  F00B         	movff	_Glim+1,___xxtofl@val+1
  3406  0007CA  0E00               	movlw	0
  3407  0007CC  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3408  0007CE  0EFF               	movlw	-1
  3409  0007D0  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3410  0007D2  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3411  0007D4  0E01               	movlw	1
  3412  0007D6  ECFF  F00F         	call	___xxtofl
  3413  0007DA  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3414  0007DE  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3415  0007E2  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3416  0007E6  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3417  0007EA  C092  F01C         	movff	displayMenu@currentGas,___flge@ff2
  3418  0007EE  C093  F01D         	movff	displayMenu@currentGas+1,___flge@ff2+1
  3419  0007F2  C094  F01E         	movff	displayMenu@currentGas+2,___flge@ff2+2
  3420  0007F6  C095  F01F         	movff	displayMenu@currentGas+3,___flge@ff2+3
  3421  0007FA  EC8E  F012         	call	___flge	;wreg free
  3422  0007FE  B0D8               	btfsc	status,0,c
  3423  000800  EF04  F004         	goto	u5201
  3424  000804  EF06  F004         	goto	u5200
  3425  000808                     u5201:
  3426  000808  EF63  F004         	goto	l126
  3427  00080C                     u5200:
  3428  00080C                     
  3429                           ;main.c: 355:                             displayStuff(1, 0, "Exaustor ON");
  3430  00080C  0E00               	movlw	0
  3431  00080E  6E0C               	movwf	(displayStuff@row+1)^0,c
  3432  000810  0E01               	movlw	1
  3433  000812  6E0B               	movwf	displayStuff@row^0,c
  3434  000814  0E00               	movlw	0
  3435  000816  6E0E               	movwf	(displayStuff@column+1)^0,c
  3436  000818  0E00               	movlw	0
  3437  00081A  6E0D               	movwf	displayStuff@column^0,c
  3438  00081C  0EAE               	movlw	low STR_26
  3439  00081E  6E0F               	movwf	displayStuff@stuff^0,c
  3440  000820  0E7F               	movlw	high STR_26
  3441  000822  6E10               	movwf	(displayStuff@stuff+1)^0,c
  3442  000824  EC5E  F015         	call	_displayStuff	;wreg free
  3443  000828  EF63  F004         	goto	l126
  3444  00082C                     l5074:
  3445                           
  3446                           ; BSR set to: 0
  3447  00082C  C0D2  F078         	movff	displayMenu@systemCycle,??_displayMenu
  3448  000830  C0D3  F079         	movff	displayMenu@systemCycle+1,??_displayMenu+1
  3449                           
  3450                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3451                           ; Switch size 1, requested type "simple"
  3452                           ; Number of cases is 1, Range of values is 0 to 0
  3453                           ; switch strategies available:
  3454                           ; Name         Instructions Cycles
  3455                           ; simple_byte            4     3 (average)
  3456                           ;	Chosen strategy is simple_byte
  3457  000834  5179               	movf	(??_displayMenu+1)& (0+255),w,b
  3458  000836  0A00               	xorlw	0	; case 0
  3459  000838  B4D8               	btfsc	status,2,c
  3460  00083A  EF21  F004         	goto	l5282
  3461  00083E  EF63  F004         	goto	l126
  3462  000842                     l5282:
  3463                           
  3464                           ; BSR set to: 0
  3465                           ; Switch size 1, requested type "simple"
  3466                           ; Number of cases is 3, Range of values is 0 to 2
  3467                           ; switch strategies available:
  3468                           ; Name         Instructions Cycles
  3469                           ; simple_byte           10     6 (average)
  3470                           ;	Chosen strategy is simple_byte
  3471  000842  5178               	movf	??_displayMenu& (0+255),w,b
  3472  000844  0A00               	xorlw	0	; case 0
  3473  000846  B4D8               	btfsc	status,2,c
  3474  000848  EF77  F003         	goto	l5060
  3475  00084C  0A01               	xorlw	1	; case 1
  3476  00084E  B4D8               	btfsc	status,2,c
  3477  000850  EFAC  F003         	goto	l5064
  3478  000854  0A03               	xorlw	3	; case 2
  3479  000856  B4D8               	btfsc	status,2,c
  3480  000858  EFE1  F003         	goto	l5068
  3481  00085C  EF63  F004         	goto	l126
  3482  000860                     l5076:
  3483                           
  3484                           ; BSR set to: 0
  3485                           ;main.c: 364:             displayStuff(0, 0, "Invalid Menu");
  3486  000860  0E00               	movlw	0
  3487  000862  6E0C               	movwf	(displayStuff@row+1)^0,c
  3488  000864  0E00               	movlw	0
  3489  000866  6E0B               	movwf	displayStuff@row^0,c
  3490  000868  0E00               	movlw	0
  3491  00086A  6E0E               	movwf	(displayStuff@column+1)^0,c
  3492  00086C  0E00               	movlw	0
  3493  00086E  6E0D               	movwf	displayStuff@column^0,c
  3494  000870  0E89               	movlw	low STR_27
  3495  000872  6E0F               	movwf	displayStuff@stuff^0,c
  3496  000874  0E7F               	movlw	high STR_27
  3497  000876  6E10               	movwf	(displayStuff@stuff+1)^0,c
  3498  000878  EC5E  F015         	call	_displayStuff	;wreg free
  3499                           
  3500                           ;main.c: 365:             break;
  3501  00087C  EF63  F004         	goto	l126
  3502  000880                     l5080:
  3503  000880  C04A  F078         	movff	displayMenu@menuIndex,??_displayMenu
  3504  000884  C04B  F079         	movff	displayMenu@menuIndex+1,??_displayMenu+1
  3505                           
  3506                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3507                           ; Switch size 1, requested type "simple"
  3508                           ; Number of cases is 1, Range of values is 0 to 0
  3509                           ; switch strategies available:
  3510                           ; Name         Instructions Cycles
  3511                           ; simple_byte            4     3 (average)
  3512                           ;	Chosen strategy is simple_byte
  3513  000888  0100               	movlb	0	; () banked
  3514  00088A  5179               	movf	(??_displayMenu+1)& (0+255),w,b
  3515  00088C  0A00               	xorlw	0	; case 0
  3516  00088E  B4D8               	btfsc	status,2,c
  3517  000890  EF4C  F004         	goto	l5284
  3518  000894  EF30  F004         	goto	l5076
  3519  000898                     l5284:
  3520                           
  3521                           ; BSR set to: 0
  3522                           ; Switch size 1, requested type "simple"
  3523                           ; Number of cases is 5, Range of values is 0 to 4
  3524                           ; switch strategies available:
  3525                           ; Name         Instructions Cycles
  3526                           ; simple_byte           16     9 (average)
  3527                           ;	Chosen strategy is simple_byte
  3528  000898  5178               	movf	??_displayMenu& (0+255),w,b
  3529  00089A  0A00               	xorlw	0	; case 0
  3530  00089C  B4D8               	btfsc	status,2,c
  3531  00089E  EF66  F000         	goto	l4970
  3532  0008A2  0A01               	xorlw	1	; case 1
  3533  0008A4  B4D8               	btfsc	status,2,c
  3534  0008A6  EFCA  F000         	goto	l4984
  3535  0008AA  0A03               	xorlw	3	; case 2
  3536  0008AC  B4D8               	btfsc	status,2,c
  3537  0008AE  EF20  F001         	goto	l4998
  3538  0008B2  0A01               	xorlw	1	; case 3
  3539  0008B4  B4D8               	btfsc	status,2,c
  3540  0008B6  EF76  F001         	goto	l5012
  3541  0008BA  0A07               	xorlw	7	; case 4
  3542  0008BC  B4D8               	btfsc	status,2,c
  3543  0008BE  EFD3  F002         	goto	l5044
  3544  0008C2  EF30  F004         	goto	l5076
  3545  0008C6                     l126:
  3546  0008C6  0012               	return		;funcret
  3547  0008C8                     __end_of_displayMenu:
  3548                           	callstack 0
  3549                           
  3550 ;; *************** function _tempRead *****************
  3551 ;; Defined at:
  3552 ;;		line 610 in file "main.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;		None
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;  TempC           4    4[BANK0 ] float 
  3557 ;;  rawAnalog       2   12[BANK0 ] unsigned int 
  3558 ;; Return value:  Size  Location     Type
  3559 ;;                  4    0[BANK0 ] float 
  3560 ;; Registers used:
  3561 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3567 ;;      Params:         0       4       0       0       0       0       0       0       0
  3568 ;;      Locals:         0      10       0       0       0       0       0       0       0
  3569 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3570 ;;      Totals:         0      14       0       0       0       0       0       0       0
  3571 ;;Total ram usage:       14 bytes
  3572 ;; Hardware stack levels used: 1
  3573 ;; Hardware stack levels required when called: 3
  3574 ;; This function calls:
  3575 ;;		___fldiv
  3576 ;;		___flmul
  3577 ;;		___xxtofl
  3578 ;;		_readAnalog
  3579 ;; This function is called by:
  3580 ;;		_main
  3581 ;;		_displayMenu
  3582 ;; This function uses a non-reentrant model
  3583 ;;
  3584                           
  3585                           	psect	text4
  3586  0027D2                     __ptext4:
  3587                           	callstack 0
  3588  0027D2                     _tempRead:
  3589                           	callstack 27
  3590  0027D2                     
  3591                           ;main.c: 611:     unsigned int rawAnalog=readAnalog(0);
  3592  0027D2  0E00               	movlw	0
  3593  0027D4  EC35  F016         	call	_readAnalog
  3594  0027D8  C00A  F06C         	movff	?_readAnalog,tempRead@rawAnalog
  3595  0027DC  C00B  F06D         	movff	?_readAnalog+1,tempRead@rawAnalog+1
  3596  0027E0                     
  3597                           ;main.c: 612:     float TempC = ((rawAnalog * 5.0) / 1023.0)/0.01;
  3598  0027E0  0E00               	movlw	0
  3599  0027E2  6E35               	movwf	___fldiv@a^0,c
  3600  0027E4  0EC0               	movlw	192
  3601  0027E6  6E36               	movwf	(___fldiv@a+1)^0,c
  3602  0027E8  0E7F               	movlw	127
  3603  0027EA  6E37               	movwf	(___fldiv@a+2)^0,c
  3604  0027EC  0E44               	movlw	68
  3605  0027EE  6E38               	movwf	(___fldiv@a+3)^0,c
  3606  0027F0  0E00               	movlw	0
  3607  0027F2  6E1C               	movwf	___flmul@a^0,c
  3608  0027F4  0E00               	movlw	0
  3609  0027F6  6E1D               	movwf	(___flmul@a+1)^0,c
  3610  0027F8  0EA0               	movlw	160
  3611  0027FA  6E1E               	movwf	(___flmul@a+2)^0,c
  3612  0027FC  0E40               	movlw	64
  3613  0027FE  6E1F               	movwf	(___flmul@a+3)^0,c
  3614  002800  C06C  F00A         	movff	tempRead@rawAnalog,___xxtofl@val
  3615  002804  C06D  F00B         	movff	tempRead@rawAnalog+1,___xxtofl@val+1
  3616  002808  6A0C               	clrf	(___xxtofl@val+2)^0,c
  3617  00280A  6A0D               	clrf	(___xxtofl@val+3)^0,c
  3618  00280C  0E00               	movlw	0
  3619  00280E  ECFF  F00F         	call	___xxtofl
  3620  002812  C00A  F018         	movff	?___xxtofl,___flmul@b
  3621  002816  C00B  F019         	movff	?___xxtofl+1,___flmul@b+1
  3622  00281A  C00C  F01A         	movff	?___xxtofl+2,___flmul@b+2
  3623  00281E  C00D  F01B         	movff	?___xxtofl+3,___flmul@b+3
  3624  002822  EC77  F009         	call	___flmul	;wreg free
  3625  002826  C018  F031         	movff	?___flmul,___fldiv@b
  3626  00282A  C019  F032         	movff	?___flmul+1,___fldiv@b+1
  3627  00282E  C01A  F033         	movff	?___flmul+2,___fldiv@b+2
  3628  002832  C01B  F034         	movff	?___flmul+3,___fldiv@b+3
  3629  002836  EC8C  F00B         	call	___fldiv	;wreg free
  3630  00283A  C031  F068         	movff	?___fldiv,_tempRead$1530
  3631  00283E  C032  F069         	movff	?___fldiv+1,_tempRead$1530+1
  3632  002842  C033  F06A         	movff	?___fldiv+2,_tempRead$1530+2
  3633  002846  C034  F06B         	movff	?___fldiv+3,_tempRead$1530+3
  3634  00284A                     
  3635                           ;main.c: 612:     float TempC = ((rawAnalog * 5.0) / 1023.0)/0.01;
  3636  00284A  C068  F031         	movff	_tempRead$1530,___fldiv@b
  3637  00284E  C069  F032         	movff	_tempRead$1530+1,___fldiv@b+1
  3638  002852  C06A  F033         	movff	_tempRead$1530+2,___fldiv@b+2
  3639  002856  C06B  F034         	movff	_tempRead$1530+3,___fldiv@b+3
  3640  00285A  0E0A               	movlw	10
  3641  00285C  6E35               	movwf	___fldiv@a^0,c
  3642  00285E  0ED7               	movlw	215
  3643  002860  6E36               	movwf	(___fldiv@a+1)^0,c
  3644  002862  0E23               	movlw	35
  3645  002864  6E37               	movwf	(___fldiv@a+2)^0,c
  3646  002866  0E3C               	movlw	60
  3647  002868  6E38               	movwf	(___fldiv@a+3)^0,c
  3648  00286A  EC8C  F00B         	call	___fldiv	;wreg free
  3649  00286E  C031  F064         	movff	?___fldiv,tempRead@TempC
  3650  002872  C032  F065         	movff	?___fldiv+1,tempRead@TempC+1
  3651  002876  C033  F066         	movff	?___fldiv+2,tempRead@TempC+2
  3652  00287A  C034  F067         	movff	?___fldiv+3,tempRead@TempC+3
  3653  00287E                     
  3654                           ;main.c: 613:  return TempC;
  3655  00287E  C064  F060         	movff	tempRead@TempC,?_tempRead
  3656  002882  C065  F061         	movff	tempRead@TempC+1,?_tempRead+1
  3657  002886  C066  F062         	movff	tempRead@TempC+2,?_tempRead+2
  3658  00288A  C067  F063         	movff	tempRead@TempC+3,?_tempRead+3
  3659  00288E  0012               	return		;funcret
  3660  002890                     __end_of_tempRead:
  3661                           	callstack 0
  3662                           
  3663 ;; *************** function _millis *****************
  3664 ;; Defined at:
  3665 ;;		line 432 in file "main.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;		None
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;  ms              4   13[COMRAM] unsigned long 
  3670 ;; Return value:  Size  Location     Type
  3671 ;;                  4    9[COMRAM] unsigned long 
  3672 ;; Registers used:
  3673 ;;		None
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3679 ;;      Params:         4       0       0       0       0       0       0       0       0
  3680 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3681 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3682 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3683 ;;Total ram usage:        8 bytes
  3684 ;; Hardware stack levels used: 1
  3685 ;; Hardware stack levels required when called: 2
  3686 ;; This function calls:
  3687 ;;		Nothing
  3688 ;; This function is called by:
  3689 ;;		_main
  3690 ;;		_displayMenu
  3691 ;;		_readKey
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694                           
  3695                           	psect	text5
  3696  002EE4                     __ptext5:
  3697                           	callstack 0
  3698  002EE4                     _millis:
  3699                           	callstack 26
  3700  002EE4                     
  3701                           ;main.c: 434:     INTCONbits.GIE = 0;
  3702  002EE4  9EF2               	bcf	242,7,c	;volatile
  3703                           
  3704                           ;main.c: 437:     unsigned long ms = milliseconds;
  3705  002EE6  C04C  F00E         	movff	_milliseconds,millis@ms	;volatile
  3706  002EEA  C04D  F00F         	movff	_milliseconds+1,millis@ms+1	;volatile
  3707  002EEE  C04E  F010         	movff	_milliseconds+2,millis@ms+2	;volatile
  3708  002EF2  C04F  F011         	movff	_milliseconds+3,millis@ms+3	;volatile
  3709                           
  3710                           ;main.c: 440:     INTCONbits.GIE = 1;
  3711  002EF6  8EF2               	bsf	242,7,c	;volatile
  3712                           
  3713                           ;main.c: 442:     return ms;
  3714  002EF8  C00E  F00A         	movff	millis@ms,?_millis
  3715  002EFC  C00F  F00B         	movff	millis@ms+1,?_millis+1
  3716  002F00  C010  F00C         	movff	millis@ms+2,?_millis+2
  3717  002F04  C011  F00D         	movff	millis@ms+3,?_millis+3
  3718  002F08  0012               	return		;funcret
  3719  002F0A                     __end_of_millis:
  3720                           	callstack 0
  3721                           
  3722 ;; *************** function _itoa *****************
  3723 ;; Defined at:
  3724 ;;		line 659 in file "main.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;  value           2   17[COMRAM] int 
  3727 ;;  ptr             2   19[COMRAM] PTR unsigned char 
  3728 ;;		 -> displayMenu@valueStr(10), 
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;  temp            2   23[COMRAM] int 
  3731 ;;  count           2   21[COMRAM] int 
  3732 ;;  start           2    0        PTR unsigned char 
  3733 ;;		 -> displayMenu@valueStr(10), 
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  2   17[COMRAM] int 
  3736 ;; Registers used:
  3737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3743 ;;      Params:         4       0       0       0       0       0       0       0       0
  3744 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3745 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3746 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3747 ;;Total ram usage:        8 bytes
  3748 ;; Hardware stack levels used: 1
  3749 ;; Hardware stack levels required when called: 3
  3750 ;; This function calls:
  3751 ;;		___awdiv
  3752 ;;		___awmod
  3753 ;; This function is called by:
  3754 ;;		_displayMenu
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           
  3758                           	psect	text6
  3759  0021B2                     __ptext6:
  3760                           	callstack 0
  3761  0021B2                     _itoa:
  3762                           	callstack 26
  3763  0021B2                     
  3764                           ;main.c: 659: int itoa(int value, char *ptr);main.c: 660: {;main.c: 661:     int count =
      +                           0, temp;
  3765  0021B2  0E00               	movlw	0
  3766  0021B4  6E17               	movwf	(itoa@count+1)^0,c
  3767  0021B6  0E00               	movlw	0
  3768  0021B8  6E16               	movwf	itoa@count^0,c
  3769  0021BA                     
  3770                           ;main.c: 664:     if(ptr == ((void*)0))
  3771  0021BA  5014               	movf	itoa@ptr^0,w,c
  3772  0021BC  1015               	iorwf	(itoa@ptr+1)^0,w,c
  3773  0021BE  A4D8               	btfss	status,2,c
  3774  0021C0  EFE4  F010         	goto	u5011
  3775  0021C4  EFE6  F010         	goto	u5010
  3776  0021C8                     u5011:
  3777  0021C8  EFE8  F010         	goto	l4916
  3778  0021CC                     u5010:
  3779  0021CC  EF78  F011         	goto	l264
  3780  0021D0                     l4916:
  3781                           
  3782                           ;main.c: 667:     if(value == 0)
  3783  0021D0  5012               	movf	itoa@value^0,w,c
  3784  0021D2  1013               	iorwf	(itoa@value+1)^0,w,c
  3785  0021D4  A4D8               	btfss	status,2,c
  3786  0021D6  EFEF  F010         	goto	u5021
  3787  0021DA  EFF1  F010         	goto	u5020
  3788  0021DE                     u5021:
  3789  0021DE  EF01  F011         	goto	l4924
  3790  0021E2                     u5020:
  3791  0021E2                     
  3792                           ;main.c: 668:     {;main.c: 669:         *ptr = '0';
  3793  0021E2  C014  FFD9         	movff	itoa@ptr,fsr2l
  3794  0021E6  C015  FFDA         	movff	itoa@ptr+1,fsr2h
  3795  0021EA  0E30               	movlw	48
  3796  0021EC  6EDF               	movwf	indf2,c
  3797  0021EE                     
  3798                           ;main.c: 670:         ptr[1] = '\0';
  3799  0021EE  EE20 F001          	lfsr	2,1
  3800  0021F2  5014               	movf	itoa@ptr^0,w,c
  3801  0021F4  26D9               	addwf	fsr2l,f,c
  3802  0021F6  5015               	movf	(itoa@ptr+1)^0,w,c
  3803  0021F8  22DA               	addwfc	fsr2h,f,c
  3804  0021FA  0E00               	movlw	0
  3805  0021FC  6EDF               	movwf	indf2,c
  3806  0021FE  EF78  F011         	goto	l264
  3807  002202                     l4924:
  3808                           
  3809                           ;main.c: 675:     if(value < 0)
  3810  002202  BE13               	btfsc	(itoa@value+1)^0,7,c
  3811  002204  EF08  F011         	goto	u5030
  3812  002208  EF06  F011         	goto	u5031
  3813  00220C                     u5031:
  3814  00220C  EF16  F011         	goto	l4936
  3815  002210                     u5030:
  3816  002210                     
  3817                           ;main.c: 676:     {;main.c: 677:         value = -value;
  3818  002210  6C12               	negf	itoa@value^0,c
  3819  002212  1E13               	comf	(itoa@value+1)^0,f,c
  3820  002214  B0D8               	btfsc	status,0,c
  3821  002216  2A13               	incf	(itoa@value+1)^0,f,c
  3822  002218                     
  3823                           ;main.c: 678:         *ptr++ = '-';
  3824  002218  C014  FFD9         	movff	itoa@ptr,fsr2l
  3825  00221C  C015  FFDA         	movff	itoa@ptr+1,fsr2h
  3826  002220  0E2D               	movlw	45
  3827  002222  6EDF               	movwf	indf2,c
  3828  002224  4A14               	infsnz	itoa@ptr^0,f,c
  3829  002226  2A15               	incf	(itoa@ptr+1)^0,f,c
  3830  002228                     
  3831                           ;main.c: 679:         count++;
  3832  002228  4A16               	infsnz	itoa@count^0,f,c
  3833  00222A  2A17               	incf	(itoa@count+1)^0,f,c
  3834  00222C                     l4936:
  3835                           
  3836                           ;main.c: 684:     temp = value;
  3837  00222C  C012  F018         	movff	itoa@value,itoa@temp
  3838  002230  C013  F019         	movff	itoa@value+1,itoa@temp+1
  3839                           
  3840                           ;main.c: 685:     while(temp > 0)
  3841  002234  EF2C  F011         	goto	l4942
  3842  002238                     l4938:
  3843                           
  3844                           ;main.c: 686:     {;main.c: 687:         temp /= 10;
  3845  002238  C018  F00A         	movff	itoa@temp,___awdiv@dividend
  3846  00223C  C019  F00B         	movff	itoa@temp+1,___awdiv@dividend+1
  3847  002240  0E00               	movlw	0
  3848  002242  6E0D               	movwf	(___awdiv@divisor+1)^0,c
  3849  002244  0E0A               	movlw	10
  3850  002246  6E0C               	movwf	___awdiv@divisor^0,c
  3851  002248  EC87  F013         	call	___awdiv	;wreg free
  3852  00224C  C00A  F018         	movff	?___awdiv,itoa@temp
  3853  002250  C00B  F019         	movff	?___awdiv+1,itoa@temp+1
  3854  002254                     
  3855                           ;main.c: 688:         count++;
  3856  002254  4A16               	infsnz	itoa@count^0,f,c
  3857  002256  2A17               	incf	(itoa@count+1)^0,f,c
  3858  002258                     l4942:
  3859                           
  3860                           ;main.c: 685:     while(temp > 0)
  3861  002258  BE19               	btfsc	(itoa@temp+1)^0,7,c
  3862  00225A  EF39  F011         	goto	u5040
  3863  00225E  5019               	movf	(itoa@temp+1)^0,w,c
  3864  002260  E106               	bnz	u5041
  3865  002262  0418               	decf	itoa@temp^0,w,c
  3866  002264  B0D8               	btfsc	status,0,c
  3867  002266  EF37  F011         	goto	u5041
  3868  00226A  EF39  F011         	goto	u5040
  3869  00226E                     u5041:
  3870  00226E  EF1C  F011         	goto	l4938
  3871  002272                     u5040:
  3872  002272                     
  3873                           ;main.c: 692:     ptr[count] = '\0';
  3874  002272  5016               	movf	itoa@count^0,w,c
  3875  002274  2414               	addwf	itoa@ptr^0,w,c
  3876  002276  6ED9               	movwf	fsr2l,c
  3877  002278  5017               	movf	(itoa@count+1)^0,w,c
  3878  00227A  2015               	addwfc	(itoa@ptr+1)^0,w,c
  3879  00227C  6EDA               	movwf	fsr2h,c
  3880  00227E  0E00               	movlw	0
  3881  002280  6EDF               	movwf	indf2,c
  3882  002282                     
  3883                           ;main.c: 695:     temp = value;
  3884  002282  C012  F018         	movff	itoa@value,itoa@temp
  3885  002286  C013  F019         	movff	itoa@value+1,itoa@temp+1
  3886                           
  3887                           ;main.c: 696:     while(temp > 0)
  3888  00228A  EF6B  F011         	goto	l4952
  3889  00228E                     l4948:
  3890                           
  3891                           ;main.c: 697:     {;main.c: 698:         ptr[--count] = temp % 10 + '0';
  3892  00228E  0616               	decf	itoa@count^0,f,c
  3893  002290  A0D8               	btfss	status,0,c
  3894  002292  0617               	decf	(itoa@count+1)^0,f,c
  3895  002294  5016               	movf	itoa@count^0,w,c
  3896  002296  2414               	addwf	itoa@ptr^0,w,c
  3897  002298  6ED9               	movwf	fsr2l,c
  3898  00229A  5017               	movf	(itoa@count+1)^0,w,c
  3899  00229C  2015               	addwfc	(itoa@ptr+1)^0,w,c
  3900  00229E  6EDA               	movwf	fsr2h,c
  3901  0022A0  C018  F00A         	movff	itoa@temp,___awmod@dividend
  3902  0022A4  C019  F00B         	movff	itoa@temp+1,___awmod@dividend+1
  3903  0022A8  0E00               	movlw	0
  3904  0022AA  6E0D               	movwf	(___awmod@divisor+1)^0,c
  3905  0022AC  0E0A               	movlw	10
  3906  0022AE  6E0C               	movwf	___awmod@divisor^0,c
  3907  0022B0  EC06  F015         	call	___awmod	;wreg free
  3908  0022B4  500A               	movf	?___awmod^0,w,c
  3909  0022B6  0F30               	addlw	48
  3910  0022B8  6EDF               	movwf	indf2,c
  3911  0022BA                     
  3912                           ;main.c: 699:         temp /= 10;
  3913  0022BA  C018  F00A         	movff	itoa@temp,___awdiv@dividend
  3914  0022BE  C019  F00B         	movff	itoa@temp+1,___awdiv@dividend+1
  3915  0022C2  0E00               	movlw	0
  3916  0022C4  6E0D               	movwf	(___awdiv@divisor+1)^0,c
  3917  0022C6  0E0A               	movlw	10
  3918  0022C8  6E0C               	movwf	___awdiv@divisor^0,c
  3919  0022CA  EC87  F013         	call	___awdiv	;wreg free
  3920  0022CE  C00A  F018         	movff	?___awdiv,itoa@temp
  3921  0022D2  C00B  F019         	movff	?___awdiv+1,itoa@temp+1
  3922  0022D6                     l4952:
  3923                           
  3924                           ;main.c: 696:     while(temp > 0)
  3925  0022D6  BE19               	btfsc	(itoa@temp+1)^0,7,c
  3926  0022D8  EF78  F011         	goto	u5050
  3927  0022DC  5019               	movf	(itoa@temp+1)^0,w,c
  3928  0022DE  E106               	bnz	u5051
  3929  0022E0  0418               	decf	itoa@temp^0,w,c
  3930  0022E2  B0D8               	btfsc	status,0,c
  3931  0022E4  EF76  F011         	goto	u5051
  3932  0022E8  EF78  F011         	goto	u5050
  3933  0022EC                     u5051:
  3934  0022EC  EF47  F011         	goto	l4948
  3935  0022F0                     u5050:
  3936  0022F0                     l264:
  3937  0022F0  0012               	return		;funcret
  3938  0022F2                     __end_of_itoa:
  3939                           	callstack 0
  3940                           
  3941 ;; *************** function _humidade *****************
  3942 ;; Defined at:
  3943 ;;		line 615 in file "main.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;		None
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;  Humid           4    4[BANK0 ] float 
  3948 ;;  rawAnalog       2   12[BANK0 ] unsigned int 
  3949 ;; Return value:  Size  Location     Type
  3950 ;;                  4    0[BANK0 ] float 
  3951 ;; Registers used:
  3952 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3953 ;; Tracked objects:
  3954 ;;		On entry : 0/0
  3955 ;;		On exit  : 0/0
  3956 ;;		Unchanged: 0/0
  3957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3958 ;;      Params:         0       4       0       0       0       0       0       0       0
  3959 ;;      Locals:         0      10       0       0       0       0       0       0       0
  3960 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3961 ;;      Totals:         0      14       0       0       0       0       0       0       0
  3962 ;;Total ram usage:       14 bytes
  3963 ;; Hardware stack levels used: 1
  3964 ;; Hardware stack levels required when called: 3
  3965 ;; This function calls:
  3966 ;;		___fldiv
  3967 ;;		___flmul
  3968 ;;		___xxtofl
  3969 ;;		_readAnalog
  3970 ;; This function is called by:
  3971 ;;		_main
  3972 ;;		_displayMenu
  3973 ;; This function uses a non-reentrant model
  3974 ;;
  3975                           
  3976                           	psect	text7
  3977  002890                     __ptext7:
  3978                           	callstack 0
  3979  002890                     _humidade:
  3980                           	callstack 27
  3981  002890                     
  3982                           ;main.c: 616:     unsigned int rawAnalog=readAnalog(3);
  3983  002890  0E03               	movlw	3
  3984  002892  EC35  F016         	call	_readAnalog
  3985  002896  C00A  F06C         	movff	?_readAnalog,humidade@rawAnalog
  3986  00289A  C00B  F06D         	movff	?_readAnalog+1,humidade@rawAnalog+1
  3987  00289E                     
  3988                           ;main.c: 617:     float Humid = ((rawAnalog * 5.0) / 1023.0)*20;
  3989  00289E  0E00               	movlw	0
  3990  0028A0  6E35               	movwf	___fldiv@a^0,c
  3991  0028A2  0EC0               	movlw	192
  3992  0028A4  6E36               	movwf	(___fldiv@a+1)^0,c
  3993  0028A6  0E7F               	movlw	127
  3994  0028A8  6E37               	movwf	(___fldiv@a+2)^0,c
  3995  0028AA  0E44               	movlw	68
  3996  0028AC  6E38               	movwf	(___fldiv@a+3)^0,c
  3997  0028AE  0E00               	movlw	0
  3998  0028B0  6E1C               	movwf	___flmul@a^0,c
  3999  0028B2  0E00               	movlw	0
  4000  0028B4  6E1D               	movwf	(___flmul@a+1)^0,c
  4001  0028B6  0EA0               	movlw	160
  4002  0028B8  6E1E               	movwf	(___flmul@a+2)^0,c
  4003  0028BA  0E40               	movlw	64
  4004  0028BC  6E1F               	movwf	(___flmul@a+3)^0,c
  4005  0028BE  C06C  F00A         	movff	humidade@rawAnalog,___xxtofl@val
  4006  0028C2  C06D  F00B         	movff	humidade@rawAnalog+1,___xxtofl@val+1
  4007  0028C6  6A0C               	clrf	(___xxtofl@val+2)^0,c
  4008  0028C8  6A0D               	clrf	(___xxtofl@val+3)^0,c
  4009  0028CA  0E00               	movlw	0
  4010  0028CC  ECFF  F00F         	call	___xxtofl
  4011  0028D0  C00A  F018         	movff	?___xxtofl,___flmul@b
  4012  0028D4  C00B  F019         	movff	?___xxtofl+1,___flmul@b+1
  4013  0028D8  C00C  F01A         	movff	?___xxtofl+2,___flmul@b+2
  4014  0028DC  C00D  F01B         	movff	?___xxtofl+3,___flmul@b+3
  4015  0028E0  EC77  F009         	call	___flmul	;wreg free
  4016  0028E4  C018  F031         	movff	?___flmul,___fldiv@b
  4017  0028E8  C019  F032         	movff	?___flmul+1,___fldiv@b+1
  4018  0028EC  C01A  F033         	movff	?___flmul+2,___fldiv@b+2
  4019  0028F0  C01B  F034         	movff	?___flmul+3,___fldiv@b+3
  4020  0028F4  EC8C  F00B         	call	___fldiv	;wreg free
  4021  0028F8  C031  F068         	movff	?___fldiv,_humidade$1531
  4022  0028FC  C032  F069         	movff	?___fldiv+1,_humidade$1531+1
  4023  002900  C033  F06A         	movff	?___fldiv+2,_humidade$1531+2
  4024  002904  C034  F06B         	movff	?___fldiv+3,_humidade$1531+3
  4025  002908                     
  4026                           ;main.c: 617:     float Humid = ((rawAnalog * 5.0) / 1023.0)*20;
  4027  002908  C068  F018         	movff	_humidade$1531,___flmul@b
  4028  00290C  C069  F019         	movff	_humidade$1531+1,___flmul@b+1
  4029  002910  C06A  F01A         	movff	_humidade$1531+2,___flmul@b+2
  4030  002914  C06B  F01B         	movff	_humidade$1531+3,___flmul@b+3
  4031  002918  0E00               	movlw	0
  4032  00291A  6E1C               	movwf	___flmul@a^0,c
  4033  00291C  0E00               	movlw	0
  4034  00291E  6E1D               	movwf	(___flmul@a+1)^0,c
  4035  002920  0EA0               	movlw	160
  4036  002922  6E1E               	movwf	(___flmul@a+2)^0,c
  4037  002924  0E41               	movlw	65
  4038  002926  6E1F               	movwf	(___flmul@a+3)^0,c
  4039  002928  EC77  F009         	call	___flmul	;wreg free
  4040  00292C  C018  F064         	movff	?___flmul,humidade@Humid
  4041  002930  C019  F065         	movff	?___flmul+1,humidade@Humid+1
  4042  002934  C01A  F066         	movff	?___flmul+2,humidade@Humid+2
  4043  002938  C01B  F067         	movff	?___flmul+3,humidade@Humid+3
  4044  00293C                     
  4045                           ;main.c: 618:  return Humid;
  4046  00293C  C064  F060         	movff	humidade@Humid,?_humidade
  4047  002940  C065  F061         	movff	humidade@Humid+1,?_humidade+1
  4048  002944  C066  F062         	movff	humidade@Humid+2,?_humidade+2
  4049  002948  C067  F063         	movff	humidade@Humid+3,?_humidade+3
  4050  00294C  0012               	return		;funcret
  4051  00294E                     __end_of_humidade:
  4052                           	callstack 0
  4053                           
  4054 ;; *************** function _gasRead *****************
  4055 ;; Defined at:
  4056 ;;		line 620 in file "main.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;		None
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;  gas             4    4[BANK0 ] float 
  4061 ;;  rawAnalog       2   12[BANK0 ] unsigned int 
  4062 ;; Return value:  Size  Location     Type
  4063 ;;                  4    0[BANK0 ] float 
  4064 ;; Registers used:
  4065 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4071 ;;      Params:         0       4       0       0       0       0       0       0       0
  4072 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4073 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4074 ;;      Totals:         0      14       0       0       0       0       0       0       0
  4075 ;;Total ram usage:       14 bytes
  4076 ;; Hardware stack levels used: 1
  4077 ;; Hardware stack levels required when called: 3
  4078 ;; This function calls:
  4079 ;;		___fldiv
  4080 ;;		___flmul
  4081 ;;		___xxtofl
  4082 ;;		_readAnalog
  4083 ;; This function is called by:
  4084 ;;		_main
  4085 ;;		_displayMenu
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           
  4089                           	psect	text8
  4090  00294E                     __ptext8:
  4091                           	callstack 0
  4092  00294E                     _gasRead:
  4093                           	callstack 27
  4094  00294E                     
  4095                           ;main.c: 621:     unsigned int rawAnalog=readAnalog(2);
  4096  00294E  0E02               	movlw	2
  4097  002950  EC35  F016         	call	_readAnalog
  4098  002954  C00A  F06C         	movff	?_readAnalog,gasRead@rawAnalog
  4099  002958  C00B  F06D         	movff	?_readAnalog+1,gasRead@rawAnalog+1
  4100  00295C                     
  4101                           ;main.c: 622:     float gas = ((rawAnalog * 5.0) / 1023.0)*20;
  4102  00295C  0E00               	movlw	0
  4103  00295E  6E35               	movwf	___fldiv@a^0,c
  4104  002960  0EC0               	movlw	192
  4105  002962  6E36               	movwf	(___fldiv@a+1)^0,c
  4106  002964  0E7F               	movlw	127
  4107  002966  6E37               	movwf	(___fldiv@a+2)^0,c
  4108  002968  0E44               	movlw	68
  4109  00296A  6E38               	movwf	(___fldiv@a+3)^0,c
  4110  00296C  0E00               	movlw	0
  4111  00296E  6E1C               	movwf	___flmul@a^0,c
  4112  002970  0E00               	movlw	0
  4113  002972  6E1D               	movwf	(___flmul@a+1)^0,c
  4114  002974  0EA0               	movlw	160
  4115  002976  6E1E               	movwf	(___flmul@a+2)^0,c
  4116  002978  0E40               	movlw	64
  4117  00297A  6E1F               	movwf	(___flmul@a+3)^0,c
  4118  00297C  C06C  F00A         	movff	gasRead@rawAnalog,___xxtofl@val
  4119  002980  C06D  F00B         	movff	gasRead@rawAnalog+1,___xxtofl@val+1
  4120  002984  6A0C               	clrf	(___xxtofl@val+2)^0,c
  4121  002986  6A0D               	clrf	(___xxtofl@val+3)^0,c
  4122  002988  0E00               	movlw	0
  4123  00298A  ECFF  F00F         	call	___xxtofl
  4124  00298E  C00A  F018         	movff	?___xxtofl,___flmul@b
  4125  002992  C00B  F019         	movff	?___xxtofl+1,___flmul@b+1
  4126  002996  C00C  F01A         	movff	?___xxtofl+2,___flmul@b+2
  4127  00299A  C00D  F01B         	movff	?___xxtofl+3,___flmul@b+3
  4128  00299E  EC77  F009         	call	___flmul	;wreg free
  4129  0029A2  C018  F031         	movff	?___flmul,___fldiv@b
  4130  0029A6  C019  F032         	movff	?___flmul+1,___fldiv@b+1
  4131  0029AA  C01A  F033         	movff	?___flmul+2,___fldiv@b+2
  4132  0029AE  C01B  F034         	movff	?___flmul+3,___fldiv@b+3
  4133  0029B2  EC8C  F00B         	call	___fldiv	;wreg free
  4134  0029B6  C031  F068         	movff	?___fldiv,_gasRead$1532
  4135  0029BA  C032  F069         	movff	?___fldiv+1,_gasRead$1532+1
  4136  0029BE  C033  F06A         	movff	?___fldiv+2,_gasRead$1532+2
  4137  0029C2  C034  F06B         	movff	?___fldiv+3,_gasRead$1532+3
  4138  0029C6                     
  4139                           ;main.c: 622:     float gas = ((rawAnalog * 5.0) / 1023.0)*20;
  4140  0029C6  C068  F018         	movff	_gasRead$1532,___flmul@b
  4141  0029CA  C069  F019         	movff	_gasRead$1532+1,___flmul@b+1
  4142  0029CE  C06A  F01A         	movff	_gasRead$1532+2,___flmul@b+2
  4143  0029D2  C06B  F01B         	movff	_gasRead$1532+3,___flmul@b+3
  4144  0029D6  0E00               	movlw	0
  4145  0029D8  6E1C               	movwf	___flmul@a^0,c
  4146  0029DA  0E00               	movlw	0
  4147  0029DC  6E1D               	movwf	(___flmul@a+1)^0,c
  4148  0029DE  0EA0               	movlw	160
  4149  0029E0  6E1E               	movwf	(___flmul@a+2)^0,c
  4150  0029E2  0E41               	movlw	65
  4151  0029E4  6E1F               	movwf	(___flmul@a+3)^0,c
  4152  0029E6  EC77  F009         	call	___flmul	;wreg free
  4153  0029EA  C018  F064         	movff	?___flmul,gasRead@gas
  4154  0029EE  C019  F065         	movff	?___flmul+1,gasRead@gas+1
  4155  0029F2  C01A  F066         	movff	?___flmul+2,gasRead@gas+2
  4156  0029F6  C01B  F067         	movff	?___flmul+3,gasRead@gas+3
  4157  0029FA                     
  4158                           ;main.c: 623:  return gas;
  4159  0029FA  C064  F060         	movff	gasRead@gas,?_gasRead
  4160  0029FE  C065  F061         	movff	gasRead@gas+1,?_gasRead+1
  4161  002A02  C066  F062         	movff	gasRead@gas+2,?_gasRead+2
  4162  002A06  C067  F063         	movff	gasRead@gas+3,?_gasRead+3
  4163  002A0A  0012               	return		;funcret
  4164  002A0C                     __end_of_gasRead:
  4165                           	callstack 0
  4166                           
  4167 ;; *************** function _readAnalog *****************
  4168 ;; Defined at:
  4169 ;;		line 586 in file "main.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;  pin             1    wreg     unsigned char 
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;  pin             1   15[COMRAM] unsigned char 
  4174 ;;  result          2   13[COMRAM] unsigned int 
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  2    9[COMRAM] unsigned int 
  4177 ;; Registers used:
  4178 ;;		wreg, status,2, status,0
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4184 ;;      Params:         2       0       0       0       0       0       0       0       0
  4185 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4186 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4187 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4188 ;;Total ram usage:        7 bytes
  4189 ;; Hardware stack levels used: 1
  4190 ;; Hardware stack levels required when called: 2
  4191 ;; This function calls:
  4192 ;;		Nothing
  4193 ;; This function is called by:
  4194 ;;		_tempRead
  4195 ;;		_humidade
  4196 ;;		_gasRead
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           
  4200                           	psect	text9
  4201  002C6A                     __ptext9:
  4202                           	callstack 0
  4203  002C6A                     _readAnalog:
  4204                           	callstack 27
  4205                           
  4206                           ;incstack = 0
  4207                           ;readAnalog@pin stored from wreg
  4208  002C6A  6E10               	movwf	readAnalog@pin^0,c
  4209  002C6C                     
  4210                           ;main.c: 587:     if (pin > 12) {
  4211  002C6C  0E0C               	movlw	12
  4212  002C6E  6410               	cpfsgt	readAnalog@pin^0,c
  4213  002C70  EF3C  F016         	goto	u2441
  4214  002C74  EF3E  F016         	goto	u2440
  4215  002C78                     u2441:
  4216  002C78  EF44  F016         	goto	l2916
  4217  002C7C                     u2440:
  4218  002C7C                     
  4219                           ;main.c: 588:         return 0;
  4220  002C7C  0E00               	movlw	0
  4221  002C7E  6E0B               	movwf	(?_readAnalog+1)^0,c
  4222  002C80  0E00               	movlw	0
  4223  002C82  6E0A               	movwf	?_readAnalog^0,c
  4224  002C84  EF6B  F016         	goto	l225
  4225  002C88                     l2916:
  4226                           
  4227                           ;main.c: 592:     ADCON0bits.CHS = pin;
  4228  002C88  C010  F00C         	movff	readAnalog@pin,??_readAnalog
  4229  002C8C  460C               	rlncf	??_readAnalog^0,f,c
  4230  002C8E  460C               	rlncf	??_readAnalog^0,f,c
  4231  002C90  50C2               	movf	194,w,c	;volatile
  4232  002C92  180C               	xorwf	??_readAnalog^0,w,c
  4233  002C94  0BC3               	andlw	-61
  4234  002C96  180C               	xorwf	??_readAnalog^0,w,c
  4235  002C98  6EC2               	movwf	194,c	;volatile
  4236  002C9A                     
  4237                           ;main.c: 595:     _delay((unsigned long)((2)*(20000000/4000.0)));
  4238  002C9A  0E0D               	movlw	13
  4239  002C9C  6E0C               	movwf	??_readAnalog^0,c
  4240  002C9E  0EFC               	movlw	252
  4241  002CA0                     u5527:
  4242  002CA0  2EE8               	decfsz	wreg,f,c
  4243  002CA2  D7FE               	bra	u5527
  4244  002CA4  2E0C               	decfsz	??_readAnalog^0,f,c
  4245  002CA6  D7FC               	bra	u5527
  4246  002CA8                     
  4247                           ;main.c: 598:     ADCON0bits.GO_DONE = 1;
  4248  002CA8  82C2               	bsf	194,1,c	;volatile
  4249  002CAA                     l226:
  4250  002CAA  B2C2               	btfsc	194,1,c	;volatile
  4251  002CAC  EF5A  F016         	goto	u2451
  4252  002CB0  EF5C  F016         	goto	u2450
  4253  002CB4                     u2451:
  4254  002CB4  EF55  F016         	goto	l226
  4255  002CB8                     u2450:
  4256  002CB8                     
  4257                           ;main.c: 604:     unsigned int result = (ADRESH << 8) | ADRESL;
  4258  002CB8  50C3               	movf	195,w,c	;volatile
  4259  002CBA  CFC4 F00C          	movff	4036,??_readAnalog	;volatile
  4260  002CBE  6A0D               	clrf	(??_readAnalog+1)^0,c
  4261  002CC0  C00C  F00D         	movff	??_readAnalog,??_readAnalog+1
  4262  002CC4  6A0C               	clrf	??_readAnalog^0,c
  4263  002CC6  100C               	iorwf	??_readAnalog^0,w,c
  4264  002CC8  6E0E               	movwf	readAnalog@result^0,c
  4265  002CCA  500D               	movf	(??_readAnalog+1)^0,w,c
  4266  002CCC  6E0F               	movwf	(readAnalog@result+1)^0,c
  4267  002CCE                     
  4268                           ;main.c: 606:     return result;
  4269  002CCE  C00E  F00A         	movff	readAnalog@result,?_readAnalog
  4270  002CD2  C00F  F00B         	movff	readAnalog@result+1,?_readAnalog+1
  4271  002CD6                     l225:
  4272  002CD6  0012               	return		;funcret
  4273  002CD8                     __end_of_readAnalog:
  4274                           	callstack 0
  4275                           
  4276 ;; *************** function ___fldiv *****************
  4277 ;; Defined at:
  4278 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  4279 ;; Parameters:    Size  Location     Type
  4280 ;;  b               4   48[COMRAM] unsigned int 
  4281 ;;  a               4   52[COMRAM] unsigned int 
  4282 ;; Auto vars:     Size  Location     Type
  4283 ;;  grs             4   67[COMRAM] unsigned long 
  4284 ;;  rem             4   60[COMRAM] unsigned long 
  4285 ;;  new_exp         2   65[COMRAM] short 
  4286 ;;  aexp            1   72[COMRAM] unsigned char 
  4287 ;;  bexp            1   71[COMRAM] unsigned char 
  4288 ;;  sign            1   64[COMRAM] unsigned char 
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  4   48[COMRAM] unsigned char 
  4291 ;; Registers used:
  4292 ;;		wreg, status,2, status,0
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4298 ;;      Params:         8       0       0       0       0       0       0       0       0
  4299 ;;      Locals:        13       0       0       0       0       0       0       0       0
  4300 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4301 ;;      Totals:        25       0       0       0       0       0       0       0       0
  4302 ;;Total ram usage:       25 bytes
  4303 ;; Hardware stack levels used: 1
  4304 ;; Hardware stack levels required when called: 2
  4305 ;; This function calls:
  4306 ;;		Nothing
  4307 ;; This function is called by:
  4308 ;;		_tempRead
  4309 ;;		_humidade
  4310 ;;		_gasRead
  4311 ;; This function uses a non-reentrant model
  4312 ;;
  4313                           
  4314                           	psect	text10
  4315  001718                     __ptext10:
  4316                           	callstack 0
  4317  001718                     ___fldiv:
  4318                           	callstack 27
  4319  001718  5034               	movf	(___fldiv@b+3)^0,w,c
  4320  00171A  0B80               	andlw	128
  4321  00171C  6E41               	movwf	___fldiv@sign^0,c
  4322  00171E  5034               	movf	(___fldiv@b+3)^0,w,c
  4323  001720  2434               	addwf	(___fldiv@b+3)^0,w,c
  4324  001722  6E48               	movwf	___fldiv@bexp^0,c
  4325  001724  AE33               	btfss	(___fldiv@b+2)^0,7,c
  4326  001726  EF97  F00B         	goto	u2471
  4327  00172A  EF99  F00B         	goto	u2470
  4328  00172E                     u2471:
  4329  00172E  EF9A  F00B         	goto	l3022
  4330  001732                     u2470:
  4331  001732  8048               	bsf	___fldiv@bexp^0,0,c
  4332  001734                     l3022:
  4333  001734  5048               	movf	___fldiv@bexp^0,w,c
  4334  001736  B4D8               	btfsc	status,2,c
  4335  001738  EFA0  F00B         	goto	u2481
  4336  00173C  EFA2  F00B         	goto	u2480
  4337  001740                     u2481:
  4338  001740  EFB7  F00B         	goto	l3032
  4339  001744                     u2480:
  4340  001744  2848               	incf	___fldiv@bexp^0,w,c
  4341  001746  A4D8               	btfss	status,2,c
  4342  001748  EFA8  F00B         	goto	u2491
  4343  00174C  EFAA  F00B         	goto	u2490
  4344  001750                     u2491:
  4345  001750  EFB2  F00B         	goto	l3028
  4346  001754                     u2490:
  4347  001754  0E00               	movlw	0
  4348  001756  6E31               	movwf	___fldiv@b^0,c
  4349  001758  0E00               	movlw	0
  4350  00175A  6E32               	movwf	(___fldiv@b+1)^0,c
  4351  00175C  0E00               	movlw	0
  4352  00175E  6E33               	movwf	(___fldiv@b+2)^0,c
  4353  001760  0E00               	movlw	0
  4354  001762  6E34               	movwf	(___fldiv@b+3)^0,c
  4355  001764                     l3028:
  4356  001764  8E33               	bsf	(___fldiv@b+2)^0,7,c
  4357  001766  0E00               	movlw	0
  4358  001768  6E34               	movwf	(___fldiv@b+3)^0,c
  4359  00176A  EFBF  F00B         	goto	l3034
  4360  00176E                     l3032:
  4361  00176E  0E00               	movlw	0
  4362  001770  6E31               	movwf	___fldiv@b^0,c
  4363  001772  0E00               	movlw	0
  4364  001774  6E32               	movwf	(___fldiv@b+1)^0,c
  4365  001776  0E00               	movlw	0
  4366  001778  6E33               	movwf	(___fldiv@b+2)^0,c
  4367  00177A  0E00               	movlw	0
  4368  00177C  6E34               	movwf	(___fldiv@b+3)^0,c
  4369  00177E                     l3034:
  4370  00177E  5038               	movf	(___fldiv@a+3)^0,w,c
  4371  001780  0B80               	andlw	128
  4372  001782  1A41               	xorwf	___fldiv@sign^0,f,c
  4373  001784  5038               	movf	(___fldiv@a+3)^0,w,c
  4374  001786  2438               	addwf	(___fldiv@a+3)^0,w,c
  4375  001788  6E49               	movwf	___fldiv@aexp^0,c
  4376  00178A  AE37               	btfss	(___fldiv@a+2)^0,7,c
  4377  00178C  EFCA  F00B         	goto	u2501
  4378  001790  EFCC  F00B         	goto	u2500
  4379  001794                     u2501:
  4380  001794  EFCD  F00B         	goto	l3042
  4381  001798                     u2500:
  4382  001798  8049               	bsf	___fldiv@aexp^0,0,c
  4383  00179A                     l3042:
  4384  00179A  5049               	movf	___fldiv@aexp^0,w,c
  4385  00179C  B4D8               	btfsc	status,2,c
  4386  00179E  EFD3  F00B         	goto	u2511
  4387  0017A2  EFD5  F00B         	goto	u2510
  4388  0017A6                     u2511:
  4389  0017A6  EFEA  F00B         	goto	l3052
  4390  0017AA                     u2510:
  4391  0017AA  2849               	incf	___fldiv@aexp^0,w,c
  4392  0017AC  A4D8               	btfss	status,2,c
  4393  0017AE  EFDB  F00B         	goto	u2521
  4394  0017B2  EFDD  F00B         	goto	u2520
  4395  0017B6                     u2521:
  4396  0017B6  EFE5  F00B         	goto	l3048
  4397  0017BA                     u2520:
  4398  0017BA  0E00               	movlw	0
  4399  0017BC  6E35               	movwf	___fldiv@a^0,c
  4400  0017BE  0E00               	movlw	0
  4401  0017C0  6E36               	movwf	(___fldiv@a+1)^0,c
  4402  0017C2  0E00               	movlw	0
  4403  0017C4  6E37               	movwf	(___fldiv@a+2)^0,c
  4404  0017C6  0E00               	movlw	0
  4405  0017C8  6E38               	movwf	(___fldiv@a+3)^0,c
  4406  0017CA                     l3048:
  4407  0017CA  8E37               	bsf	(___fldiv@a+2)^0,7,c
  4408  0017CC  0E00               	movlw	0
  4409  0017CE  6E38               	movwf	(___fldiv@a+3)^0,c
  4410  0017D0  EFF2  F00B         	goto	l3054
  4411  0017D4                     l3052:
  4412  0017D4  0E00               	movlw	0
  4413  0017D6  6E35               	movwf	___fldiv@a^0,c
  4414  0017D8  0E00               	movlw	0
  4415  0017DA  6E36               	movwf	(___fldiv@a+1)^0,c
  4416  0017DC  0E00               	movlw	0
  4417  0017DE  6E37               	movwf	(___fldiv@a+2)^0,c
  4418  0017E0  0E00               	movlw	0
  4419  0017E2  6E38               	movwf	(___fldiv@a+3)^0,c
  4420  0017E4                     l3054:
  4421  0017E4  5035               	movf	___fldiv@a^0,w,c
  4422  0017E6  1036               	iorwf	(___fldiv@a+1)^0,w,c
  4423  0017E8  1037               	iorwf	(___fldiv@a+2)^0,w,c
  4424  0017EA  1038               	iorwf	(___fldiv@a+3)^0,w,c
  4425  0017EC  A4D8               	btfss	status,2,c
  4426  0017EE  EFFB  F00B         	goto	u2531
  4427  0017F2  EFFD  F00B         	goto	u2530
  4428  0017F6                     u2531:
  4429  0017F6  EF15  F00C         	goto	l3066
  4430  0017FA                     u2530:
  4431  0017FA  0E00               	movlw	0
  4432  0017FC  6E31               	movwf	___fldiv@b^0,c
  4433  0017FE  0E00               	movlw	0
  4434  001800  6E32               	movwf	(___fldiv@b+1)^0,c
  4435  001802  0E00               	movlw	0
  4436  001804  6E33               	movwf	(___fldiv@b+2)^0,c
  4437  001806  0E00               	movlw	0
  4438  001808  6E34               	movwf	(___fldiv@b+3)^0,c
  4439  00180A  0E80               	movlw	128
  4440  00180C  1233               	iorwf	(___fldiv@b+2)^0,f,c
  4441  00180E  0E7F               	movlw	127
  4442  001810  1234               	iorwf	(___fldiv@b+3)^0,f,c
  4443  001812                     l3060:
  4444  001812  5041               	movf	___fldiv@sign^0,w,c
  4445  001814  1234               	iorwf	(___fldiv@b+3)^0,f,c
  4446  001816  C031  F031         	movff	___fldiv@b,?___fldiv
  4447  00181A  C032  F032         	movff	___fldiv@b+1,?___fldiv+1
  4448  00181E  C033  F033         	movff	___fldiv@b+2,?___fldiv+2
  4449  001822  C034  F034         	movff	___fldiv@b+3,?___fldiv+3
  4450  001826  EF58  F00D         	goto	l959
  4451  00182A                     l3066:
  4452  00182A  5048               	movf	___fldiv@bexp^0,w,c
  4453  00182C  A4D8               	btfss	status,2,c
  4454  00182E  EF1B  F00C         	goto	u2541
  4455  001832  EF1D  F00C         	goto	u2540
  4456  001836                     u2541:
  4457  001836  EF27  F00C         	goto	l3074
  4458  00183A                     u2540:
  4459  00183A  0E00               	movlw	0
  4460  00183C  6E31               	movwf	?___fldiv^0,c
  4461  00183E  0E00               	movlw	0
  4462  001840  6E32               	movwf	(?___fldiv+1)^0,c
  4463  001842  0E00               	movlw	0
  4464  001844  6E33               	movwf	(?___fldiv+2)^0,c
  4465  001846  0E00               	movlw	0
  4466  001848  6E34               	movwf	(?___fldiv+3)^0,c
  4467  00184A  EF58  F00D         	goto	l959
  4468  00184E                     l3074:
  4469  00184E  5049               	movf	___fldiv@aexp^0,w,c
  4470  001850  C048  F039         	movff	___fldiv@bexp,??___fldiv
  4471  001854  6A3A               	clrf	(??___fldiv+1)^0,c
  4472  001856  5E39               	subwf	??___fldiv^0,f,c
  4473  001858  0E00               	movlw	0
  4474  00185A  5A3A               	subwfb	(??___fldiv+1)^0,f,c
  4475  00185C  0E7F               	movlw	127
  4476  00185E  2439               	addwf	??___fldiv^0,w,c
  4477  001860  6E42               	movwf	___fldiv@new_exp^0,c
  4478  001862  0E00               	movlw	0
  4479  001864  203A               	addwfc	(??___fldiv+1)^0,w,c
  4480  001866  6E43               	movwf	(___fldiv@new_exp+1)^0,c
  4481  001868  C031  F03D         	movff	___fldiv@b,___fldiv@rem
  4482  00186C  C032  F03E         	movff	___fldiv@b+1,___fldiv@rem+1
  4483  001870  C033  F03F         	movff	___fldiv@b+2,___fldiv@rem+2
  4484  001874  C034  F040         	movff	___fldiv@b+3,___fldiv@rem+3
  4485  001878  0E00               	movlw	0
  4486  00187A  6E31               	movwf	___fldiv@b^0,c
  4487  00187C  0E00               	movlw	0
  4488  00187E  6E32               	movwf	(___fldiv@b+1)^0,c
  4489  001880  0E00               	movlw	0
  4490  001882  6E33               	movwf	(___fldiv@b+2)^0,c
  4491  001884  0E00               	movlw	0
  4492  001886  6E34               	movwf	(___fldiv@b+3)^0,c
  4493  001888  0E00               	movlw	0
  4494  00188A  6E44               	movwf	___fldiv@grs^0,c
  4495  00188C  0E00               	movlw	0
  4496  00188E  6E45               	movwf	(___fldiv@grs+1)^0,c
  4497  001890  0E00               	movlw	0
  4498  001892  6E46               	movwf	(___fldiv@grs+2)^0,c
  4499  001894  0E00               	movlw	0
  4500  001896  6E47               	movwf	(___fldiv@grs+3)^0,c
  4501  001898  0E00               	movlw	0
  4502  00189A  6E49               	movwf	___fldiv@aexp^0,c
  4503  00189C  EF88  F00C         	goto	l961
  4504  0018A0                     l3084:
  4505  0018A0  5049               	movf	___fldiv@aexp^0,w,c
  4506  0018A2  B4D8               	btfsc	status,2,c
  4507  0018A4  EF56  F00C         	goto	u2551
  4508  0018A8  EF58  F00C         	goto	u2550
  4509  0018AC                     u2551:
  4510  0018AC  EF6F  F00C         	goto	l3092
  4511  0018B0                     u2550:
  4512  0018B0  90D8               	bcf	status,0,c
  4513  0018B2  363D               	rlcf	___fldiv@rem^0,f,c
  4514  0018B4  363E               	rlcf	(___fldiv@rem+1)^0,f,c
  4515  0018B6  363F               	rlcf	(___fldiv@rem+2)^0,f,c
  4516  0018B8  3640               	rlcf	(___fldiv@rem+3)^0,f,c
  4517  0018BA  90D8               	bcf	status,0,c
  4518  0018BC  3631               	rlcf	___fldiv@b^0,f,c
  4519  0018BE  3632               	rlcf	(___fldiv@b+1)^0,f,c
  4520  0018C0  3633               	rlcf	(___fldiv@b+2)^0,f,c
  4521  0018C2  3634               	rlcf	(___fldiv@b+3)^0,f,c
  4522  0018C4  AE47               	btfss	(___fldiv@grs+3)^0,7,c
  4523  0018C6  EF67  F00C         	goto	u2561
  4524  0018CA  EF69  F00C         	goto	u2560
  4525  0018CE                     u2561:
  4526  0018CE  EF6A  F00C         	goto	l964
  4527  0018D2                     u2560:
  4528  0018D2  8031               	bsf	___fldiv@b^0,0,c
  4529  0018D4                     l964:
  4530  0018D4  90D8               	bcf	status,0,c
  4531  0018D6  3644               	rlcf	___fldiv@grs^0,f,c
  4532  0018D8  3645               	rlcf	(___fldiv@grs+1)^0,f,c
  4533  0018DA  3646               	rlcf	(___fldiv@grs+2)^0,f,c
  4534  0018DC  3647               	rlcf	(___fldiv@grs+3)^0,f,c
  4535  0018DE                     l3092:
  4536  0018DE  5035               	movf	___fldiv@a^0,w,c
  4537  0018E0  5C3D               	subwf	___fldiv@rem^0,w,c
  4538  0018E2  5036               	movf	(___fldiv@a+1)^0,w,c
  4539  0018E4  583E               	subwfb	(___fldiv@rem+1)^0,w,c
  4540  0018E6  5037               	movf	(___fldiv@a+2)^0,w,c
  4541  0018E8  583F               	subwfb	(___fldiv@rem+2)^0,w,c
  4542  0018EA  5038               	movf	(___fldiv@a+3)^0,w,c
  4543  0018EC  5840               	subwfb	(___fldiv@rem+3)^0,w,c
  4544  0018EE  A0D8               	btfss	status,0,c
  4545  0018F0  EF7C  F00C         	goto	u2571
  4546  0018F4  EF7E  F00C         	goto	u2570
  4547  0018F8                     u2571:
  4548  0018F8  EF87  F00C         	goto	l3098
  4549  0018FC                     u2570:
  4550  0018FC  8C47               	bsf	(___fldiv@grs+3)^0,6,c
  4551  0018FE  5035               	movf	___fldiv@a^0,w,c
  4552  001900  5E3D               	subwf	___fldiv@rem^0,f,c
  4553  001902  5036               	movf	(___fldiv@a+1)^0,w,c
  4554  001904  5A3E               	subwfb	(___fldiv@rem+1)^0,f,c
  4555  001906  5037               	movf	(___fldiv@a+2)^0,w,c
  4556  001908  5A3F               	subwfb	(___fldiv@rem+2)^0,f,c
  4557  00190A  5038               	movf	(___fldiv@a+3)^0,w,c
  4558  00190C  5A40               	subwfb	(___fldiv@rem+3)^0,f,c
  4559  00190E                     l3098:
  4560  00190E  2A49               	incf	___fldiv@aexp^0,f,c
  4561  001910                     l961:
  4562  001910  0E19               	movlw	25
  4563  001912  6449               	cpfsgt	___fldiv@aexp^0,c
  4564  001914  EF8E  F00C         	goto	u2581
  4565  001918  EF90  F00C         	goto	u2580
  4566  00191C                     u2581:
  4567  00191C  EF50  F00C         	goto	l3084
  4568  001920                     u2580:
  4569  001920  503D               	movf	___fldiv@rem^0,w,c
  4570  001922  103E               	iorwf	(___fldiv@rem+1)^0,w,c
  4571  001924  103F               	iorwf	(___fldiv@rem+2)^0,w,c
  4572  001926  1040               	iorwf	(___fldiv@rem+3)^0,w,c
  4573  001928  B4D8               	btfsc	status,2,c
  4574  00192A  EF99  F00C         	goto	u2591
  4575  00192E  EF9B  F00C         	goto	u2590
  4576  001932                     u2591:
  4577  001932  EFB3  F00C         	goto	l3110
  4578  001936                     u2590:
  4579  001936  8044               	bsf	___fldiv@grs^0,0,c
  4580  001938  EFB3  F00C         	goto	l3110
  4581  00193C                     l3104:
  4582  00193C  90D8               	bcf	status,0,c
  4583  00193E  3631               	rlcf	___fldiv@b^0,f,c
  4584  001940  3632               	rlcf	(___fldiv@b+1)^0,f,c
  4585  001942  3633               	rlcf	(___fldiv@b+2)^0,f,c
  4586  001944  3634               	rlcf	(___fldiv@b+3)^0,f,c
  4587  001946  AE47               	btfss	(___fldiv@grs+3)^0,7,c
  4588  001948  EFA8  F00C         	goto	u2601
  4589  00194C  EFAA  F00C         	goto	u2600
  4590  001950                     u2601:
  4591  001950  EFAB  F00C         	goto	l970
  4592  001954                     u2600:
  4593  001954  8031               	bsf	___fldiv@b^0,0,c
  4594  001956                     l970:
  4595  001956  90D8               	bcf	status,0,c
  4596  001958  3644               	rlcf	___fldiv@grs^0,f,c
  4597  00195A  3645               	rlcf	(___fldiv@grs+1)^0,f,c
  4598  00195C  3646               	rlcf	(___fldiv@grs+2)^0,f,c
  4599  00195E  3647               	rlcf	(___fldiv@grs+3)^0,f,c
  4600  001960  0642               	decf	___fldiv@new_exp^0,f,c
  4601  001962  A0D8               	btfss	status,0,c
  4602  001964  0643               	decf	(___fldiv@new_exp+1)^0,f,c
  4603  001966                     l3110:
  4604  001966  AE33               	btfss	(___fldiv@b+2)^0,7,c
  4605  001968  EFB8  F00C         	goto	u2611
  4606  00196C  EFBA  F00C         	goto	u2610
  4607  001970                     u2611:
  4608  001970  EF9E  F00C         	goto	l3104
  4609  001974                     u2610:
  4610  001974  0E00               	movlw	0
  4611  001976  6E49               	movwf	___fldiv@aexp^0,c
  4612  001978  AE47               	btfss	(___fldiv@grs+3)^0,7,c
  4613  00197A  EFC1  F00C         	goto	u2621
  4614  00197E  EFC3  F00C         	goto	u2620
  4615  001982                     u2621:
  4616  001982  EFE7  F00C         	goto	l972
  4617  001986                     u2620:
  4618  001986  0EFF               	movlw	255
  4619  001988  1444               	andwf	___fldiv@grs^0,w,c
  4620  00198A  6E39               	movwf	??___fldiv^0,c
  4621  00198C  0EFF               	movlw	255
  4622  00198E  1445               	andwf	(___fldiv@grs+1)^0,w,c
  4623  001990  6E3A               	movwf	(??___fldiv+1)^0,c
  4624  001992  0EFF               	movlw	255
  4625  001994  1446               	andwf	(___fldiv@grs+2)^0,w,c
  4626  001996  6E3B               	movwf	(??___fldiv+2)^0,c
  4627  001998  0E7F               	movlw	127
  4628  00199A  1447               	andwf	(___fldiv@grs+3)^0,w,c
  4629  00199C  6E3C               	movwf	(??___fldiv+3)^0,c
  4630  00199E  5039               	movf	??___fldiv^0,w,c
  4631  0019A0  103A               	iorwf	(??___fldiv+1)^0,w,c
  4632  0019A2  103B               	iorwf	(??___fldiv+2)^0,w,c
  4633  0019A4  103C               	iorwf	(??___fldiv+3)^0,w,c
  4634  0019A6  B4D8               	btfsc	status,2,c
  4635  0019A8  EFD8  F00C         	goto	u2631
  4636  0019AC  EFDA  F00C         	goto	u2630
  4637  0019B0                     u2631:
  4638  0019B0  EFDE  F00C         	goto	l973
  4639  0019B4                     u2630:
  4640  0019B4                     l3118:
  4641  0019B4  0E01               	movlw	1
  4642  0019B6  6E49               	movwf	___fldiv@aexp^0,c
  4643  0019B8  EFE7  F00C         	goto	l972
  4644  0019BC                     l973:
  4645  0019BC  A031               	btfss	___fldiv@b^0,0,c
  4646  0019BE  EFE3  F00C         	goto	u2641
  4647  0019C2  EFE5  F00C         	goto	u2640
  4648  0019C6                     u2641:
  4649  0019C6  EFE7  F00C         	goto	l972
  4650  0019CA                     u2640:
  4651  0019CA  EFDA  F00C         	goto	l3118
  4652  0019CE                     l972:
  4653  0019CE  5049               	movf	___fldiv@aexp^0,w,c
  4654  0019D0  B4D8               	btfsc	status,2,c
  4655  0019D2  EFED  F00C         	goto	u2651
  4656  0019D6  EFEF  F00C         	goto	u2650
  4657  0019DA                     u2651:
  4658  0019DA  EF13  F00D         	goto	l3130
  4659  0019DE                     u2650:
  4660  0019DE  0E01               	movlw	1
  4661  0019E0  2631               	addwf	___fldiv@b^0,f,c
  4662  0019E2  0E00               	movlw	0
  4663  0019E4  2232               	addwfc	(___fldiv@b+1)^0,f,c
  4664  0019E6  2233               	addwfc	(___fldiv@b+2)^0,f,c
  4665  0019E8  2234               	addwfc	(___fldiv@b+3)^0,f,c
  4666  0019EA  A034               	btfss	(___fldiv@b+3)^0,0,c
  4667  0019EC  EFFA  F00C         	goto	u2661
  4668  0019F0  EFFC  F00C         	goto	u2660
  4669  0019F4                     u2661:
  4670  0019F4  EF13  F00D         	goto	l3130
  4671  0019F8                     u2660:
  4672  0019F8  C031  F039         	movff	___fldiv@b,??___fldiv
  4673  0019FC  C032  F03A         	movff	___fldiv@b+1,??___fldiv+1
  4674  001A00  C033  F03B         	movff	___fldiv@b+2,??___fldiv+2
  4675  001A04  C034  F03C         	movff	___fldiv@b+3,??___fldiv+3
  4676  001A08  343C               	rlcf	(??___fldiv+3)^0,w,c
  4677  001A0A  323C               	rrcf	(??___fldiv+3)^0,f,c
  4678  001A0C  323B               	rrcf	(??___fldiv+2)^0,f,c
  4679  001A0E  323A               	rrcf	(??___fldiv+1)^0,f,c
  4680  001A10  3239               	rrcf	??___fldiv^0,f,c
  4681  001A12  C039  F031         	movff	??___fldiv,___fldiv@b
  4682  001A16  C03A  F032         	movff	??___fldiv+1,___fldiv@b+1
  4683  001A1A  C03B  F033         	movff	??___fldiv+2,___fldiv@b+2
  4684  001A1E  C03C  F034         	movff	??___fldiv+3,___fldiv@b+3
  4685  001A22  4A42               	infsnz	___fldiv@new_exp^0,f,c
  4686  001A24  2A43               	incf	(___fldiv@new_exp+1)^0,f,c
  4687  001A26                     l3130:
  4688  001A26  BE43               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4689  001A28  EF1E  F00D         	goto	u2671
  4690  001A2C  5043               	movf	(___fldiv@new_exp+1)^0,w,c
  4691  001A2E  E108               	bnz	u2670
  4692  001A30  2842               	incf	___fldiv@new_exp^0,w,c
  4693  001A32  A0D8               	btfss	status,0,c
  4694  001A34  EF1E  F00D         	goto	u2671
  4695  001A38  EF20  F00D         	goto	u2670
  4696  001A3C                     u2671:
  4697  001A3C  EF2B  F00D         	goto	l3134
  4698  001A40                     u2670:
  4699  001A40  0E00               	movlw	0
  4700  001A42  6E43               	movwf	(___fldiv@new_exp+1)^0,c
  4701  001A44  6842               	setf	___fldiv@new_exp^0,c
  4702  001A46  0E00               	movlw	0
  4703  001A48  6E31               	movwf	___fldiv@b^0,c
  4704  001A4A  0E00               	movlw	0
  4705  001A4C  6E32               	movwf	(___fldiv@b+1)^0,c
  4706  001A4E  0E00               	movlw	0
  4707  001A50  6E33               	movwf	(___fldiv@b+2)^0,c
  4708  001A52  0E00               	movlw	0
  4709  001A54  6E34               	movwf	(___fldiv@b+3)^0,c
  4710  001A56                     l3134:
  4711  001A56  BE43               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4712  001A58  EF38  F00D         	goto	u2680
  4713  001A5C  5043               	movf	(___fldiv@new_exp+1)^0,w,c
  4714  001A5E  E106               	bnz	u2681
  4715  001A60  0442               	decf	___fldiv@new_exp^0,w,c
  4716  001A62  B0D8               	btfsc	status,0,c
  4717  001A64  EF36  F00D         	goto	u2681
  4718  001A68  EF38  F00D         	goto	u2680
  4719  001A6C                     u2681:
  4720  001A6C  EF46  F00D         	goto	l3138
  4721  001A70                     u2680:
  4722  001A70  0E00               	movlw	0
  4723  001A72  6E43               	movwf	(___fldiv@new_exp+1)^0,c
  4724  001A74  0E00               	movlw	0
  4725  001A76  6E42               	movwf	___fldiv@new_exp^0,c
  4726  001A78  0E00               	movlw	0
  4727  001A7A  6E31               	movwf	___fldiv@b^0,c
  4728  001A7C  0E00               	movlw	0
  4729  001A7E  6E32               	movwf	(___fldiv@b+1)^0,c
  4730  001A80  0E00               	movlw	0
  4731  001A82  6E33               	movwf	(___fldiv@b+2)^0,c
  4732  001A84  0E00               	movlw	0
  4733  001A86  6E34               	movwf	(___fldiv@b+3)^0,c
  4734  001A88  0E00               	movlw	0
  4735  001A8A  6E41               	movwf	___fldiv@sign^0,c
  4736  001A8C                     l3138:
  4737  001A8C  C042  F048         	movff	___fldiv@new_exp,___fldiv@bexp
  4738  001A90  A048               	btfss	___fldiv@bexp^0,0,c
  4739  001A92  EF4D  F00D         	goto	u2691
  4740  001A96  EF4F  F00D         	goto	u2690
  4741  001A9A                     u2691:
  4742  001A9A  EF52  F00D         	goto	l3144
  4743  001A9E                     u2690:
  4744  001A9E  8E33               	bsf	(___fldiv@b+2)^0,7,c
  4745  001AA0  EF53  F00D         	goto	l3146
  4746  001AA4                     l3144:
  4747  001AA4  9E33               	bcf	(___fldiv@b+2)^0,7,c
  4748  001AA6                     l3146:
  4749  001AA6  90D8               	bcf	status,0,c
  4750  001AA8  3048               	rrcf	___fldiv@bexp^0,w,c
  4751  001AAA  6E34               	movwf	(___fldiv@b+3)^0,c
  4752  001AAC  EF09  F00C         	goto	l3060
  4753  001AB0                     l959:
  4754  001AB0  0012               	return		;funcret
  4755  001AB2                     __end_of___fldiv:
  4756                           	callstack 0
  4757                           
  4758 ;; *************** function _floatToString *****************
  4759 ;; Defined at:
  4760 ;;		line 705 in file "main.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;  value           4   48[COMRAM] float 
  4763 ;;  buffer          2   52[COMRAM] PTR unsigned char 
  4764 ;;		 -> displayMenu@valueStr(10), 
  4765 ;;  precision       2   54[COMRAM] int 
  4766 ;; Auto vars:     Size  Location     Type
  4767 ;;  digit           2   16[BANK0 ] int 
  4768 ;;  i               2   12[BANK0 ] int 
  4769 ;;  i               2   20[BANK0 ] int 
  4770 ;;  intStr         12    0[BANK0 ] unsigned char [12]
  4771 ;;  index           2   22[BANK0 ] int 
  4772 ;;  temp            2   18[BANK0 ] int 
  4773 ;;  intPart         2   14[BANK0 ] int 
  4774 ;; Return value:  Size  Location     Type
  4775 ;;                  1    wreg      void 
  4776 ;; Registers used:
  4777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4778 ;; Tracked objects:
  4779 ;;		On entry : 0/0
  4780 ;;		On exit  : 0/0
  4781 ;;		Unchanged: 0/0
  4782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4783 ;;      Params:         8       0       0       0       0       0       0       0       0
  4784 ;;      Locals:         0      24       0       0       0       0       0       0       0
  4785 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4786 ;;      Totals:        10      24       0       0       0       0       0       0       0
  4787 ;;Total ram usage:       34 bytes
  4788 ;; Hardware stack levels used: 1
  4789 ;; Hardware stack levels required when called: 4
  4790 ;; This function calls:
  4791 ;;		___awdiv
  4792 ;;		___awmod
  4793 ;;		___flmul
  4794 ;;		___flneg
  4795 ;;		___flsub
  4796 ;;		___fltol
  4797 ;;		___xxtofl
  4798 ;; This function is called by:
  4799 ;;		_displayMenu
  4800 ;; This function uses a non-reentrant model
  4801 ;;
  4802                           
  4803                           	psect	text11
  4804  001D76                     __ptext11:
  4805                           	callstack 0
  4806  001D76                     _floatToString:
  4807                           	callstack 25
  4808  001D76                     
  4809                           ;main.c: 707:     if (value < 0) {
  4810  001D76  BE34               	btfsc	(floatToString@value+3)^0,7,c
  4811  001D78  EFC2  F00E         	goto	u4970
  4812  001D7C  EFC0  F00E         	goto	u4971
  4813  001D80                     u4971:
  4814  001D80  EFDC  F00E         	goto	l4860
  4815  001D84                     u4970:
  4816  001D84                     
  4817                           ;main.c: 708:         *buffer++ = '-';
  4818  001D84  C035  FFD9         	movff	floatToString@buffer,fsr2l
  4819  001D88  C036  FFDA         	movff	floatToString@buffer+1,fsr2h
  4820  001D8C  0E2D               	movlw	45
  4821  001D8E  6EDF               	movwf	indf2,c
  4822  001D90  4A35               	infsnz	floatToString@buffer^0,f,c
  4823  001D92  2A36               	incf	(floatToString@buffer+1)^0,f,c
  4824  001D94                     
  4825                           ;main.c: 709:         value = -value;
  4826  001D94  C031  F00A         	movff	floatToString@value,___flneg@f1
  4827  001D98  C032  F00B         	movff	floatToString@value+1,___flneg@f1+1
  4828  001D9C  C033  F00C         	movff	floatToString@value+2,___flneg@f1+2
  4829  001DA0  C034  F00D         	movff	floatToString@value+3,___flneg@f1+3
  4830  001DA4  EC56  F017         	call	___flneg	;wreg free
  4831  001DA8  C00A  F031         	movff	?___flneg,floatToString@value
  4832  001DAC  C00B  F032         	movff	?___flneg+1,floatToString@value+1
  4833  001DB0  C00C  F033         	movff	?___flneg+2,floatToString@value+2
  4834  001DB4  C00D  F034         	movff	?___flneg+3,floatToString@value+3
  4835  001DB8                     l4860:
  4836                           
  4837                           ;main.c: 713:     int intPart = (int)value;
  4838  001DB8  C031  F00A         	movff	floatToString@value,___fltol@f1
  4839  001DBC  C032  F00B         	movff	floatToString@value+1,___fltol@f1+1
  4840  001DC0  C033  F00C         	movff	floatToString@value+2,___fltol@f1+2
  4841  001DC4  C034  F00D         	movff	floatToString@value+3,___fltol@f1+3
  4842  001DC8  EC0B  F012         	call	___fltol	;wreg free
  4843  001DCC  C00A  F06E         	movff	?___fltol,floatToString@intPart
  4844  001DD0  C00B  F06F         	movff	?___fltol+1,floatToString@intPart+1
  4845  001DD4                     
  4846                           ;main.c: 714:     value -= intPart;
  4847  001DD4  C031  F01A         	movff	floatToString@value,___flsub@b
  4848  001DD8  C032  F01B         	movff	floatToString@value+1,___flsub@b+1
  4849  001DDC  C033  F01C         	movff	floatToString@value+2,___flsub@b+2
  4850  001DE0  C034  F01D         	movff	floatToString@value+3,___flsub@b+3
  4851  001DE4  C06E  F00A         	movff	floatToString@intPart,___xxtofl@val
  4852  001DE8  C06F  F00B         	movff	floatToString@intPart+1,___xxtofl@val+1
  4853  001DEC  0E00               	movlw	0
  4854  001DEE  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  4855  001DF0  0EFF               	movlw	-1
  4856  001DF2  6E0C               	movwf	(___xxtofl@val+2)^0,c
  4857  001DF4  6E0D               	movwf	(___xxtofl@val+3)^0,c
  4858  001DF6  0E01               	movlw	1
  4859  001DF8  ECFF  F00F         	call	___xxtofl
  4860  001DFC  C00A  F01E         	movff	?___xxtofl,___flsub@a
  4861  001E00  C00B  F01F         	movff	?___xxtofl+1,___flsub@a+1
  4862  001E04  C00C  F020         	movff	?___xxtofl+2,___flsub@a+2
  4863  001E08  C00D  F021         	movff	?___xxtofl+3,___flsub@a+3
  4864  001E0C  EC8F  F016         	call	___flsub	;wreg free
  4865  001E10  C01A  F031         	movff	?___flsub,floatToString@value
  4866  001E14  C01B  F032         	movff	?___flsub+1,floatToString@value+1
  4867  001E18  C01C  F033         	movff	?___flsub+2,floatToString@value+2
  4868  001E1C  C01D  F034         	movff	?___flsub+3,floatToString@value+3
  4869  001E20                     
  4870                           ;main.c: 717:     int temp = intPart;
  4871  001E20  C06E  F072         	movff	floatToString@intPart,floatToString@temp
  4872  001E24  C06F  F073         	movff	floatToString@intPart+1,floatToString@temp+1
  4873  001E28                     
  4874                           ;main.c: 718:     char intStr[12];;main.c: 719:     int index = 0;
  4875  001E28  0E00               	movlw	0
  4876  001E2A  0100               	movlb	0	; () banked
  4877  001E2C  6F77               	movwf	(floatToString@index+1)& (0+255),b
  4878  001E2E  0E00               	movlw	0
  4879  001E30  6F76               	movwf	floatToString@index& (0+255),b
  4880  001E32                     l4868:
  4881                           
  4882                           ; BSR set to: 0
  4883                           ;main.c: 721:         intStr[index++] = (temp % 10) + '0';
  4884  001E32  0E60               	movlw	low floatToString@intStr
  4885  001E34  2576               	addwf	floatToString@index& (0+255),w,b
  4886  001E36  6ED9               	movwf	fsr2l,c
  4887  001E38  0E00               	movlw	high floatToString@intStr
  4888  001E3A  2177               	addwfc	(floatToString@index+1)& (0+255),w,b
  4889  001E3C  6EDA               	movwf	fsr2h,c
  4890  001E3E  C072  F00A         	movff	floatToString@temp,___awmod@dividend
  4891  001E42  C073  F00B         	movff	floatToString@temp+1,___awmod@dividend+1
  4892  001E46  0E00               	movlw	0
  4893  001E48  6E0D               	movwf	(___awmod@divisor+1)^0,c
  4894  001E4A  0E0A               	movlw	10
  4895  001E4C  6E0C               	movwf	___awmod@divisor^0,c
  4896  001E4E  EC06  F015         	call	___awmod	;wreg free
  4897  001E52  500A               	movf	?___awmod^0,w,c
  4898  001E54  0F30               	addlw	48
  4899  001E56  6EDF               	movwf	indf2,c
  4900  001E58  0100               	movlb	0	; () banked
  4901  001E5A  4B76               	infsnz	floatToString@index& (0+255),f,b
  4902  001E5C  2B77               	incf	(floatToString@index+1)& (0+255),f,b
  4903  001E5E                     
  4904                           ; BSR set to: 0
  4905                           ;main.c: 722:         temp /= 10;
  4906  001E5E  C072  F00A         	movff	floatToString@temp,___awdiv@dividend
  4907  001E62  C073  F00B         	movff	floatToString@temp+1,___awdiv@dividend+1
  4908  001E66  0E00               	movlw	0
  4909  001E68  6E0D               	movwf	(___awdiv@divisor+1)^0,c
  4910  001E6A  0E0A               	movlw	10
  4911  001E6C  6E0C               	movwf	___awdiv@divisor^0,c
  4912  001E6E  EC87  F013         	call	___awdiv	;wreg free
  4913  001E72  C00A  F072         	movff	?___awdiv,floatToString@temp
  4914  001E76  C00B  F073         	movff	?___awdiv+1,floatToString@temp+1
  4915  001E7A                     
  4916                           ;main.c: 723:     } while (temp > 0);
  4917  001E7A  0100               	movlb	0	; () banked
  4918  001E7C  BF73               	btfsc	(floatToString@temp+1)& (0+255),7,b
  4919  001E7E  EF4B  F00F         	goto	u4980
  4920  001E82  5173               	movf	(floatToString@temp+1)& (0+255),w,b
  4921  001E84  E106               	bnz	u4981
  4922  001E86  0572               	decf	floatToString@temp& (0+255),w,b
  4923  001E88  B0D8               	btfsc	status,0,c
  4924  001E8A  EF49  F00F         	goto	u4981
  4925  001E8E  EF4B  F00F         	goto	u4980
  4926  001E92                     u4981:
  4927  001E92  EF19  F00F         	goto	l4868
  4928  001E96                     u4980:
  4929  001E96                     
  4930                           ; BSR set to: 0
  4931                           ;main.c: 726:     for (int i = 0; i < index; i++) {
  4932  001E96  0E00               	movlw	0
  4933  001E98  6F75               	movwf	(floatToString@i+1)& (0+255),b
  4934  001E9A  0E00               	movlw	0
  4935  001E9C  6F74               	movwf	floatToString@i& (0+255),b
  4936  001E9E  EF6D  F00F         	goto	l4882
  4937  001EA2                     l4878:
  4938                           
  4939                           ; BSR set to: 0
  4940                           ;main.c: 727:         buffer[i] = intStr[index - i - 1];
  4941  001EA2  0E60               	movlw	low floatToString@intStr
  4942  001EA4  6E39               	movwf	??_floatToString^0,c
  4943  001EA6  0E00               	movlw	high floatToString@intStr
  4944  001EA8  6E3A               	movwf	(??_floatToString+1)^0,c
  4945  001EAA  5174               	movf	floatToString@i& (0+255),w,b
  4946  001EAC  5E39               	subwf	??_floatToString^0,f,c
  4947  001EAE  5175               	movf	(floatToString@i+1)& (0+255),w,b
  4948  001EB0  5A3A               	subwfb	(??_floatToString+1)^0,f,c
  4949  001EB2  5176               	movf	floatToString@index& (0+255),w,b
  4950  001EB4  2639               	addwf	??_floatToString^0,f,c
  4951  001EB6  5177               	movf	(floatToString@index+1)& (0+255),w,b
  4952  001EB8  223A               	addwfc	(??_floatToString+1)^0,f,c
  4953  001EBA  0EFF               	movlw	255
  4954  001EBC  2439               	addwf	??_floatToString^0,w,c
  4955  001EBE  6ED9               	movwf	fsr2l,c
  4956  001EC0  0EFF               	movlw	255
  4957  001EC2  203A               	addwfc	(??_floatToString+1)^0,w,c
  4958  001EC4  6EDA               	movwf	fsr2h,c
  4959  001EC6  5174               	movf	floatToString@i& (0+255),w,b
  4960  001EC8  2435               	addwf	floatToString@buffer^0,w,c
  4961  001ECA  6EE1               	movwf	fsr1l,c
  4962  001ECC  5175               	movf	(floatToString@i+1)& (0+255),w,b
  4963  001ECE  2036               	addwfc	(floatToString@buffer+1)^0,w,c
  4964  001ED0  6EE2               	movwf	fsr1h,c
  4965  001ED2  CFDF FFE7          	movff	indf2,indf1
  4966  001ED6                     
  4967                           ; BSR set to: 0
  4968                           ;main.c: 728:     }
  4969  001ED6  4B74               	infsnz	floatToString@i& (0+255),f,b
  4970  001ED8  2B75               	incf	(floatToString@i+1)& (0+255),f,b
  4971  001EDA                     l4882:
  4972                           
  4973                           ; BSR set to: 0
  4974  001EDA  5176               	movf	floatToString@index& (0+255),w,b
  4975  001EDC  5D74               	subwf	floatToString@i& (0+255),w,b
  4976  001EDE  5175               	movf	(floatToString@i+1)& (0+255),w,b
  4977  001EE0  0A80               	xorlw	128
  4978  001EE2  6E39               	movwf	??_floatToString^0,c
  4979  001EE4  5177               	movf	(floatToString@index+1)& (0+255),w,b
  4980  001EE6  0A80               	xorlw	128
  4981  001EE8  5839               	subwfb	??_floatToString^0,w,c
  4982  001EEA  A0D8               	btfss	status,0,c
  4983  001EEC  EF7A  F00F         	goto	u4991
  4984  001EF0  EF7C  F00F         	goto	u4990
  4985  001EF4                     u4991:
  4986  001EF4  EF51  F00F         	goto	l4878
  4987  001EF8                     u4990:
  4988  001EF8                     
  4989                           ; BSR set to: 0
  4990                           ;main.c: 729:     buffer += index;
  4991  001EF8  5176               	movf	floatToString@index& (0+255),w,b
  4992  001EFA  2635               	addwf	floatToString@buffer^0,f,c
  4993  001EFC  5177               	movf	(floatToString@index+1)& (0+255),w,b
  4994  001EFE  2236               	addwfc	(floatToString@buffer+1)^0,f,c
  4995  001F00                     
  4996                           ; BSR set to: 0
  4997                           ;main.c: 732:     *buffer++ = '.';
  4998  001F00  C035  FFD9         	movff	floatToString@buffer,fsr2l
  4999  001F04  C036  FFDA         	movff	floatToString@buffer+1,fsr2h
  5000  001F08  0E2E               	movlw	46
  5001  001F0A  6EDF               	movwf	indf2,c
  5002  001F0C                     
  5003                           ; BSR set to: 0
  5004  001F0C  4A35               	infsnz	floatToString@buffer^0,f,c
  5005  001F0E  2A36               	incf	(floatToString@buffer+1)^0,f,c
  5006  001F10                     
  5007                           ; BSR set to: 0
  5008                           ;main.c: 735:     for (int i = 0; i < precision; i++) {
  5009  001F10  0E00               	movlw	0
  5010  001F12  6F6D               	movwf	(floatToString@i_805+1)& (0+255),b
  5011  001F14  0E00               	movlw	0
  5012  001F16  6F6C               	movwf	floatToString@i_805& (0+255),b
  5013  001F18  EFE9  F00F         	goto	l4904
  5014  001F1C                     l4892:
  5015                           
  5016                           ; BSR set to: 0
  5017                           ;main.c: 736:         value *= 10;
  5018  001F1C  C031  F018         	movff	floatToString@value,___flmul@b
  5019  001F20  C032  F019         	movff	floatToString@value+1,___flmul@b+1
  5020  001F24  C033  F01A         	movff	floatToString@value+2,___flmul@b+2
  5021  001F28  C034  F01B         	movff	floatToString@value+3,___flmul@b+3
  5022  001F2C  0E00               	movlw	0
  5023  001F2E  6E1C               	movwf	___flmul@a^0,c
  5024  001F30  0E00               	movlw	0
  5025  001F32  6E1D               	movwf	(___flmul@a+1)^0,c
  5026  001F34  0E20               	movlw	32
  5027  001F36  6E1E               	movwf	(___flmul@a+2)^0,c
  5028  001F38  0E41               	movlw	65
  5029  001F3A  6E1F               	movwf	(___flmul@a+3)^0,c
  5030  001F3C  EC77  F009         	call	___flmul	;wreg free
  5031  001F40  C018  F031         	movff	?___flmul,floatToString@value
  5032  001F44  C019  F032         	movff	?___flmul+1,floatToString@value+1
  5033  001F48  C01A  F033         	movff	?___flmul+2,floatToString@value+2
  5034  001F4C  C01B  F034         	movff	?___flmul+3,floatToString@value+3
  5035  001F50                     
  5036                           ;main.c: 737:         int digit = (int)value;
  5037  001F50  C031  F00A         	movff	floatToString@value,___fltol@f1
  5038  001F54  C032  F00B         	movff	floatToString@value+1,___fltol@f1+1
  5039  001F58  C033  F00C         	movff	floatToString@value+2,___fltol@f1+2
  5040  001F5C  C034  F00D         	movff	floatToString@value+3,___fltol@f1+3
  5041  001F60  EC0B  F012         	call	___fltol	;wreg free
  5042  001F64  C00A  F070         	movff	?___fltol,floatToString@digit
  5043  001F68  C00B  F071         	movff	?___fltol+1,floatToString@digit+1
  5044  001F6C                     
  5045                           ;main.c: 738:         *buffer++ = digit + '0';
  5046  001F6C  0100               	movlb	0	; () banked
  5047  001F6E  5170               	movf	floatToString@digit& (0+255),w,b
  5048  001F70  0F30               	addlw	48
  5049  001F72  C035  FFD9         	movff	floatToString@buffer,fsr2l
  5050  001F76  C036  FFDA         	movff	floatToString@buffer+1,fsr2h
  5051  001F7A  6EDF               	movwf	indf2,c
  5052  001F7C                     
  5053                           ; BSR set to: 0
  5054  001F7C  4A35               	infsnz	floatToString@buffer^0,f,c
  5055  001F7E  2A36               	incf	(floatToString@buffer+1)^0,f,c
  5056  001F80                     
  5057                           ; BSR set to: 0
  5058                           ;main.c: 739:         value -= digit;
  5059  001F80  C031  F01A         	movff	floatToString@value,___flsub@b
  5060  001F84  C032  F01B         	movff	floatToString@value+1,___flsub@b+1
  5061  001F88  C033  F01C         	movff	floatToString@value+2,___flsub@b+2
  5062  001F8C  C034  F01D         	movff	floatToString@value+3,___flsub@b+3
  5063  001F90  C070  F00A         	movff	floatToString@digit,___xxtofl@val
  5064  001F94  C071  F00B         	movff	floatToString@digit+1,___xxtofl@val+1
  5065  001F98  0E00               	movlw	0
  5066  001F9A  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  5067  001F9C  0EFF               	movlw	-1
  5068  001F9E  6E0C               	movwf	(___xxtofl@val+2)^0,c
  5069  001FA0  6E0D               	movwf	(___xxtofl@val+3)^0,c
  5070  001FA2  0E01               	movlw	1
  5071  001FA4  ECFF  F00F         	call	___xxtofl
  5072  001FA8  C00A  F01E         	movff	?___xxtofl,___flsub@a
  5073  001FAC  C00B  F01F         	movff	?___xxtofl+1,___flsub@a+1
  5074  001FB0  C00C  F020         	movff	?___xxtofl+2,___flsub@a+2
  5075  001FB4  C00D  F021         	movff	?___xxtofl+3,___flsub@a+3
  5076  001FB8  EC8F  F016         	call	___flsub	;wreg free
  5077  001FBC  C01A  F031         	movff	?___flsub,floatToString@value
  5078  001FC0  C01B  F032         	movff	?___flsub+1,floatToString@value+1
  5079  001FC4  C01C  F033         	movff	?___flsub+2,floatToString@value+2
  5080  001FC8  C01D  F034         	movff	?___flsub+3,floatToString@value+3
  5081  001FCC                     
  5082                           ;main.c: 740:     }
  5083  001FCC  0100               	movlb	0	; () banked
  5084  001FCE  4B6C               	infsnz	floatToString@i_805& (0+255),f,b
  5085  001FD0  2B6D               	incf	(floatToString@i_805+1)& (0+255),f,b
  5086  001FD2                     l4904:
  5087                           
  5088                           ; BSR set to: 0
  5089  001FD2  5037               	movf	floatToString@precision^0,w,c
  5090  001FD4  5D6C               	subwf	floatToString@i_805& (0+255),w,b
  5091  001FD6  516D               	movf	(floatToString@i_805+1)& (0+255),w,b
  5092  001FD8  0A80               	xorlw	128
  5093  001FDA  6E39               	movwf	??_floatToString^0,c
  5094  001FDC  5038               	movf	(floatToString@precision+1)^0,w,c
  5095  001FDE  0A80               	xorlw	128
  5096  001FE0  5839               	subwfb	??_floatToString^0,w,c
  5097  001FE2  A0D8               	btfss	status,0,c
  5098  001FE4  EFF6  F00F         	goto	u5001
  5099  001FE8  EFF8  F00F         	goto	u5000
  5100  001FEC                     u5001:
  5101  001FEC  EF8E  F00F         	goto	l4892
  5102  001FF0                     u5000:
  5103  001FF0                     
  5104                           ; BSR set to: 0
  5105                           ;main.c: 743:     *buffer = '\0';
  5106  001FF0  C035  FFD9         	movff	floatToString@buffer,fsr2l
  5107  001FF4  C036  FFDA         	movff	floatToString@buffer+1,fsr2h
  5108  001FF8  0E00               	movlw	0
  5109  001FFA  6EDF               	movwf	indf2,c
  5110  001FFC                     
  5111                           ; BSR set to: 0
  5112  001FFC  0012               	return		;funcret
  5113  001FFE                     __end_of_floatToString:
  5114                           	callstack 0
  5115                           
  5116 ;; *************** function ___xxtofl *****************
  5117 ;; Defined at:
  5118 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  5119 ;; Parameters:    Size  Location     Type
  5120 ;;  sign            1    wreg     unsigned char 
  5121 ;;  val             4    9[COMRAM] long 
  5122 ;; Auto vars:     Size  Location     Type
  5123 ;;  sign            1   17[COMRAM] unsigned char 
  5124 ;;  arg             4   19[COMRAM] unsigned long 
  5125 ;;  exp             1   18[COMRAM] unsigned char 
  5126 ;; Return value:  Size  Location     Type
  5127 ;;                  4    9[COMRAM] unsigned char 
  5128 ;; Registers used:
  5129 ;;		wreg, status,2, status,0
  5130 ;; Tracked objects:
  5131 ;;		On entry : 0/0
  5132 ;;		On exit  : 0/0
  5133 ;;		Unchanged: 0/0
  5134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5135 ;;      Params:         4       0       0       0       0       0       0       0       0
  5136 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5137 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5138 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5139 ;;Total ram usage:       14 bytes
  5140 ;; Hardware stack levels used: 1
  5141 ;; Hardware stack levels required when called: 2
  5142 ;; This function calls:
  5143 ;;		Nothing
  5144 ;; This function is called by:
  5145 ;;		_main
  5146 ;;		_displayMenu
  5147 ;;		_tempRead
  5148 ;;		_humidade
  5149 ;;		_gasRead
  5150 ;;		_floatToString
  5151 ;; This function uses a non-reentrant model
  5152 ;;
  5153                           
  5154                           	psect	text12
  5155  001FFE                     __ptext12:
  5156                           	callstack 0
  5157  001FFE                     ___xxtofl:
  5158                           	callstack 27
  5159                           
  5160                           ; BSR set to: 0
  5161                           ;incstack = 0
  5162                           ;___xxtofl@sign stored from wreg
  5163  001FFE  6E12               	movwf	___xxtofl@sign^0,c
  5164  002000  5012               	movf	___xxtofl@sign^0,w,c
  5165  002002  B4D8               	btfsc	status,2,c
  5166  002004  EF06  F010         	goto	u4871
  5167  002008  EF08  F010         	goto	u4870
  5168  00200C                     u4871:
  5169  00200C  EF2A  F010         	goto	l1032
  5170  002010                     u4870:
  5171  002010  BE0D               	btfsc	(___xxtofl@val+3)^0,7,c
  5172  002012  EF0F  F010         	goto	u4880
  5173  002016  EF0D  F010         	goto	u4881
  5174  00201A                     u4881:
  5175  00201A  EF2A  F010         	goto	l1032
  5176  00201E                     u4880:
  5177  00201E  C00A  F00E         	movff	___xxtofl@val,??___xxtofl
  5178  002022  C00B  F00F         	movff	___xxtofl@val+1,??___xxtofl+1
  5179  002026  C00C  F010         	movff	___xxtofl@val+2,??___xxtofl+2
  5180  00202A  C00D  F011         	movff	___xxtofl@val+3,??___xxtofl+3
  5181  00202E  1E0E               	comf	??___xxtofl^0,f,c
  5182  002030  1E0F               	comf	(??___xxtofl+1)^0,f,c
  5183  002032  1E10               	comf	(??___xxtofl+2)^0,f,c
  5184  002034  1E11               	comf	(??___xxtofl+3)^0,f,c
  5185  002036  2A0E               	incf	??___xxtofl^0,f,c
  5186  002038  0E00               	movlw	0
  5187  00203A  220F               	addwfc	(??___xxtofl+1)^0,f,c
  5188  00203C  2210               	addwfc	(??___xxtofl+2)^0,f,c
  5189  00203E  2211               	addwfc	(??___xxtofl+3)^0,f,c
  5190  002040  C00E  F014         	movff	??___xxtofl,___xxtofl@arg
  5191  002044  C00F  F015         	movff	??___xxtofl+1,___xxtofl@arg+1
  5192  002048  C010  F016         	movff	??___xxtofl+2,___xxtofl@arg+2
  5193  00204C  C011  F017         	movff	??___xxtofl+3,___xxtofl@arg+3
  5194  002050  EF32  F010         	goto	l4782
  5195  002054                     l1032:
  5196  002054  C00A  F014         	movff	___xxtofl@val,___xxtofl@arg
  5197  002058  C00B  F015         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5198  00205C  C00C  F016         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5199  002060  C00D  F017         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5200  002064                     l4782:
  5201  002064  500A               	movf	___xxtofl@val^0,w,c
  5202  002066  100B               	iorwf	(___xxtofl@val+1)^0,w,c
  5203  002068  100C               	iorwf	(___xxtofl@val+2)^0,w,c
  5204  00206A  100D               	iorwf	(___xxtofl@val+3)^0,w,c
  5205  00206C  A4D8               	btfss	status,2,c
  5206  00206E  EF3B  F010         	goto	u4891
  5207  002072  EF3D  F010         	goto	u4890
  5208  002076                     u4891:
  5209  002076  EF47  F010         	goto	l4788
  5210  00207A                     u4890:
  5211  00207A  0E00               	movlw	0
  5212  00207C  6E0A               	movwf	?___xxtofl^0,c
  5213  00207E  0E00               	movlw	0
  5214  002080  6E0B               	movwf	(?___xxtofl+1)^0,c
  5215  002082  0E00               	movlw	0
  5216  002084  6E0C               	movwf	(?___xxtofl+2)^0,c
  5217  002086  0E00               	movlw	0
  5218  002088  6E0D               	movwf	(?___xxtofl+3)^0,c
  5219  00208A  EFD8  F010         	goto	l1035
  5220  00208E                     l4788:
  5221  00208E  0E96               	movlw	150
  5222  002090  6E13               	movwf	___xxtofl@exp^0,c
  5223  002092  EF51  F010         	goto	l4792
  5224  002096                     l4790:
  5225  002096  2A13               	incf	___xxtofl@exp^0,f,c
  5226  002098  90D8               	bcf	status,0,c
  5227  00209A  3217               	rrcf	(___xxtofl@arg+3)^0,f,c
  5228  00209C  3216               	rrcf	(___xxtofl@arg+2)^0,f,c
  5229  00209E  3215               	rrcf	(___xxtofl@arg+1)^0,f,c
  5230  0020A0  3214               	rrcf	___xxtofl@arg^0,f,c
  5231  0020A2                     l4792:
  5232  0020A2  0E00               	movlw	0
  5233  0020A4  1414               	andwf	___xxtofl@arg^0,w,c
  5234  0020A6  6E0E               	movwf	??___xxtofl^0,c
  5235  0020A8  0E00               	movlw	0
  5236  0020AA  1415               	andwf	(___xxtofl@arg+1)^0,w,c
  5237  0020AC  6E0F               	movwf	(??___xxtofl+1)^0,c
  5238  0020AE  0E00               	movlw	0
  5239  0020B0  1416               	andwf	(___xxtofl@arg+2)^0,w,c
  5240  0020B2  6E10               	movwf	(??___xxtofl+2)^0,c
  5241  0020B4  0EFE               	movlw	254
  5242  0020B6  1417               	andwf	(___xxtofl@arg+3)^0,w,c
  5243  0020B8  6E11               	movwf	(??___xxtofl+3)^0,c
  5244  0020BA  500E               	movf	??___xxtofl^0,w,c
  5245  0020BC  100F               	iorwf	(??___xxtofl+1)^0,w,c
  5246  0020BE  1010               	iorwf	(??___xxtofl+2)^0,w,c
  5247  0020C0  1011               	iorwf	(??___xxtofl+3)^0,w,c
  5248  0020C2  A4D8               	btfss	status,2,c
  5249  0020C4  EF66  F010         	goto	u4901
  5250  0020C8  EF68  F010         	goto	u4900
  5251  0020CC                     u4901:
  5252  0020CC  EF4B  F010         	goto	l4790
  5253  0020D0                     u4900:
  5254  0020D0  EF76  F010         	goto	l1039
  5255  0020D4                     l4794:
  5256  0020D4  2A13               	incf	___xxtofl@exp^0,f,c
  5257  0020D6  0E01               	movlw	1
  5258  0020D8  2614               	addwf	___xxtofl@arg^0,f,c
  5259  0020DA  0E00               	movlw	0
  5260  0020DC  2215               	addwfc	(___xxtofl@arg+1)^0,f,c
  5261  0020DE  2216               	addwfc	(___xxtofl@arg+2)^0,f,c
  5262  0020E0  2217               	addwfc	(___xxtofl@arg+3)^0,f,c
  5263  0020E2  90D8               	bcf	status,0,c
  5264  0020E4  3217               	rrcf	(___xxtofl@arg+3)^0,f,c
  5265  0020E6  3216               	rrcf	(___xxtofl@arg+2)^0,f,c
  5266  0020E8  3215               	rrcf	(___xxtofl@arg+1)^0,f,c
  5267  0020EA  3214               	rrcf	___xxtofl@arg^0,f,c
  5268  0020EC                     l1039:
  5269  0020EC  0E00               	movlw	0
  5270  0020EE  1414               	andwf	___xxtofl@arg^0,w,c
  5271  0020F0  6E0E               	movwf	??___xxtofl^0,c
  5272  0020F2  0E00               	movlw	0
  5273  0020F4  1415               	andwf	(___xxtofl@arg+1)^0,w,c
  5274  0020F6  6E0F               	movwf	(??___xxtofl+1)^0,c
  5275  0020F8  0E00               	movlw	0
  5276  0020FA  1416               	andwf	(___xxtofl@arg+2)^0,w,c
  5277  0020FC  6E10               	movwf	(??___xxtofl+2)^0,c
  5278  0020FE  0EFF               	movlw	255
  5279  002100  1417               	andwf	(___xxtofl@arg+3)^0,w,c
  5280  002102  6E11               	movwf	(??___xxtofl+3)^0,c
  5281  002104  500E               	movf	??___xxtofl^0,w,c
  5282  002106  100F               	iorwf	(??___xxtofl+1)^0,w,c
  5283  002108  1010               	iorwf	(??___xxtofl+2)^0,w,c
  5284  00210A  1011               	iorwf	(??___xxtofl+3)^0,w,c
  5285  00210C  A4D8               	btfss	status,2,c
  5286  00210E  EF8B  F010         	goto	u4911
  5287  002112  EF8D  F010         	goto	u4910
  5288  002116                     u4911:
  5289  002116  EF6A  F010         	goto	l4794
  5290  00211A                     u4910:
  5291  00211A  EF95  F010         	goto	l4802
  5292  00211E                     l4800:
  5293  00211E  0613               	decf	___xxtofl@exp^0,f,c
  5294  002120  90D8               	bcf	status,0,c
  5295  002122  3614               	rlcf	___xxtofl@arg^0,f,c
  5296  002124  3615               	rlcf	(___xxtofl@arg+1)^0,f,c
  5297  002126  3616               	rlcf	(___xxtofl@arg+2)^0,f,c
  5298  002128  3617               	rlcf	(___xxtofl@arg+3)^0,f,c
  5299  00212A                     l4802:
  5300  00212A  BE16               	btfsc	(___xxtofl@arg+2)^0,7,c
  5301  00212C  EF9A  F010         	goto	u4921
  5302  002130  EF9C  F010         	goto	u4920
  5303  002134                     u4921:
  5304  002134  EFA4  F010         	goto	l1046
  5305  002138                     u4920:
  5306  002138  0E02               	movlw	2
  5307  00213A  6013               	cpfslt	___xxtofl@exp^0,c
  5308  00213C  EFA2  F010         	goto	u4931
  5309  002140  EFA4  F010         	goto	u4930
  5310  002144                     u4931:
  5311  002144  EF8F  F010         	goto	l4800
  5312  002148                     u4930:
  5313  002148                     l1046:
  5314  002148  B013               	btfsc	___xxtofl@exp^0,0,c
  5315  00214A  EFA9  F010         	goto	u4941
  5316  00214E  EFAB  F010         	goto	u4940
  5317  002152                     u4941:
  5318  002152  EFAC  F010         	goto	l4808
  5319  002156                     u4940:
  5320  002156  9E16               	bcf	(___xxtofl@arg+2)^0,7,c
  5321  002158                     l4808:
  5322  002158  90D8               	bcf	status,0,c
  5323  00215A  3213               	rrcf	___xxtofl@exp^0,f,c
  5324  00215C  C013  F00E         	movff	___xxtofl@exp,??___xxtofl
  5325  002160  6A0F               	clrf	(??___xxtofl+1)^0,c
  5326  002162  6A10               	clrf	(??___xxtofl+2)^0,c
  5327  002164  6A11               	clrf	(??___xxtofl+3)^0,c
  5328  002166  C00E  F011         	movff	??___xxtofl,??___xxtofl+3
  5329  00216A  6A10               	clrf	(??___xxtofl+2)^0,c
  5330  00216C  6A0F               	clrf	(??___xxtofl+1)^0,c
  5331  00216E  6A0E               	clrf	??___xxtofl^0,c
  5332  002170  500E               	movf	??___xxtofl^0,w,c
  5333  002172  1214               	iorwf	___xxtofl@arg^0,f,c
  5334  002174  500F               	movf	(??___xxtofl+1)^0,w,c
  5335  002176  1215               	iorwf	(___xxtofl@arg+1)^0,f,c
  5336  002178  5010               	movf	(??___xxtofl+2)^0,w,c
  5337  00217A  1216               	iorwf	(___xxtofl@arg+2)^0,f,c
  5338  00217C  5011               	movf	(??___xxtofl+3)^0,w,c
  5339  00217E  1217               	iorwf	(___xxtofl@arg+3)^0,f,c
  5340  002180  5012               	movf	___xxtofl@sign^0,w,c
  5341  002182  B4D8               	btfsc	status,2,c
  5342  002184  EFC6  F010         	goto	u4951
  5343  002188  EFC8  F010         	goto	u4950
  5344  00218C                     u4951:
  5345  00218C  EFD0  F010         	goto	l4818
  5346  002190                     u4950:
  5347  002190  BE0D               	btfsc	(___xxtofl@val+3)^0,7,c
  5348  002192  EFCF  F010         	goto	u4960
  5349  002196  EFCD  F010         	goto	u4961
  5350  00219A                     u4961:
  5351  00219A  EFD0  F010         	goto	l4818
  5352  00219E                     u4960:
  5353  00219E  8E17               	bsf	(___xxtofl@arg+3)^0,7,c
  5354  0021A0                     l4818:
  5355  0021A0  C014  F00A         	movff	___xxtofl@arg,?___xxtofl
  5356  0021A4  C015  F00B         	movff	___xxtofl@arg+1,?___xxtofl+1
  5357  0021A8  C016  F00C         	movff	___xxtofl@arg+2,?___xxtofl+2
  5358  0021AC  C017  F00D         	movff	___xxtofl@arg+3,?___xxtofl+3
  5359  0021B0                     l1035:
  5360  0021B0  0012               	return		;funcret
  5361  0021B2                     __end_of___xxtofl:
  5362                           	callstack 0
  5363                           
  5364 ;; *************** function ___fltol *****************
  5365 ;; Defined at:
  5366 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;  f1              4    9[COMRAM] unsigned char 
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;  exp1            1   18[COMRAM] unsigned char 
  5371 ;;  sign1           1   17[COMRAM] unsigned char 
  5372 ;; Return value:  Size  Location     Type
  5373 ;;                  4    9[COMRAM] long 
  5374 ;; Registers used:
  5375 ;;		wreg, status,2, status,0
  5376 ;; Tracked objects:
  5377 ;;		On entry : 0/0
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5381 ;;      Params:         4       0       0       0       0       0       0       0       0
  5382 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5383 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5384 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5385 ;;Total ram usage:       10 bytes
  5386 ;; Hardware stack levels used: 1
  5387 ;; Hardware stack levels required when called: 2
  5388 ;; This function calls:
  5389 ;;		Nothing
  5390 ;; This function is called by:
  5391 ;;		_floatToString
  5392 ;; This function uses a non-reentrant model
  5393 ;;
  5394                           
  5395                           	psect	text13
  5396  002416                     __ptext13:
  5397                           	callstack 0
  5398  002416                     ___fltol:
  5399                           	callstack 26
  5400  002416  340C               	rlcf	(___fltol@f1+2)^0,w,c
  5401  002418  340D               	rlcf	(___fltol@f1+3)^0,w,c
  5402  00241A  6E13               	movwf	___fltol@exp1^0,c
  5403  00241C  5013               	movf	___fltol@exp1^0,w,c
  5404  00241E  A4D8               	btfss	status,2,c
  5405  002420  EF14  F012         	goto	u4801
  5406  002424  EF16  F012         	goto	u4800
  5407  002428                     u4801:
  5408  002428  EF20  F012         	goto	l4738
  5409  00242C                     u4800:
  5410  00242C                     l4734:
  5411  00242C  0E00               	movlw	0
  5412  00242E  6E0A               	movwf	?___fltol^0,c
  5413  002430  0E00               	movlw	0
  5414  002432  6E0B               	movwf	(?___fltol+1)^0,c
  5415  002434  0E00               	movlw	0
  5416  002436  6E0C               	movwf	(?___fltol+2)^0,c
  5417  002438  0E00               	movlw	0
  5418  00243A  6E0D               	movwf	(?___fltol+3)^0,c
  5419  00243C  EF8D  F012         	goto	l674
  5420  002440                     l4738:
  5421  002440  C00A  F00E         	movff	___fltol@f1,??___fltol
  5422  002444  C00B  F00F         	movff	___fltol@f1+1,??___fltol+1
  5423  002448  C00C  F010         	movff	___fltol@f1+2,??___fltol+2
  5424  00244C  C00D  F011         	movff	___fltol@f1+3,??___fltol+3
  5425  002450  0E20               	movlw	32
  5426  002452  EF30  F012         	goto	u4810
  5427  002456                     u4815:
  5428  002456  90D8               	bcf	status,0,c
  5429  002458  3211               	rrcf	(??___fltol+3)^0,f,c
  5430  00245A  3210               	rrcf	(??___fltol+2)^0,f,c
  5431  00245C  320F               	rrcf	(??___fltol+1)^0,f,c
  5432  00245E  320E               	rrcf	??___fltol^0,f,c
  5433  002460                     u4810:
  5434  002460  2EE8               	decfsz	wreg,f,c
  5435  002462  EF2B  F012         	goto	u4815
  5436  002466  500E               	movf	??___fltol^0,w,c
  5437  002468  6E12               	movwf	___fltol@sign1^0,c
  5438  00246A  8E0C               	bsf	(___fltol@f1+2)^0,7,c
  5439  00246C  0EFF               	movlw	255
  5440  00246E  160A               	andwf	___fltol@f1^0,f,c
  5441  002470  0EFF               	movlw	255
  5442  002472  160B               	andwf	(___fltol@f1+1)^0,f,c
  5443  002474  0EFF               	movlw	255
  5444  002476  160C               	andwf	(___fltol@f1+2)^0,f,c
  5445  002478  0E00               	movlw	0
  5446  00247A  160D               	andwf	(___fltol@f1+3)^0,f,c
  5447  00247C  0E96               	movlw	150
  5448  00247E  5E13               	subwf	___fltol@exp1^0,f,c
  5449  002480  BE13               	btfsc	___fltol@exp1^0,7,c
  5450  002482  EF47  F012         	goto	u4820
  5451  002486  EF45  F012         	goto	u4821
  5452  00248A                     u4821:
  5453  00248A  EF5D  F012         	goto	l4758
  5454  00248E                     u4820:
  5455  00248E  5013               	movf	___fltol@exp1^0,w,c
  5456  002490  0A80               	xorlw	128
  5457  002492  0F97               	addlw	151
  5458  002494  B0D8               	btfsc	status,0,c
  5459  002496  EF4F  F012         	goto	u4831
  5460  00249A  EF51  F012         	goto	u4830
  5461  00249E                     u4831:
  5462  00249E  EF53  F012         	goto	l4754
  5463  0024A2                     u4830:
  5464  0024A2  EF16  F012         	goto	l4734
  5465  0024A6                     l4754:
  5466  0024A6  90D8               	bcf	status,0,c
  5467  0024A8  320D               	rrcf	(___fltol@f1+3)^0,f,c
  5468  0024AA  320C               	rrcf	(___fltol@f1+2)^0,f,c
  5469  0024AC  320B               	rrcf	(___fltol@f1+1)^0,f,c
  5470  0024AE  320A               	rrcf	___fltol@f1^0,f,c
  5471  0024B0  3E13               	incfsz	___fltol@exp1^0,f,c
  5472  0024B2  EF53  F012         	goto	l4754
  5473  0024B6  EF75  F012         	goto	l4768
  5474  0024BA                     l4758:
  5475  0024BA  0E1F               	movlw	31
  5476  0024BC  6413               	cpfsgt	___fltol@exp1^0,c
  5477  0024BE  EF63  F012         	goto	u4841
  5478  0024C2  EF65  F012         	goto	u4840
  5479  0024C6                     u4841:
  5480  0024C6  EF6D  F012         	goto	l4766
  5481  0024CA                     u4840:
  5482  0024CA  EF16  F012         	goto	l4734
  5483  0024CE                     l4764:
  5484  0024CE  90D8               	bcf	status,0,c
  5485  0024D0  360A               	rlcf	___fltol@f1^0,f,c
  5486  0024D2  360B               	rlcf	(___fltol@f1+1)^0,f,c
  5487  0024D4  360C               	rlcf	(___fltol@f1+2)^0,f,c
  5488  0024D6  360D               	rlcf	(___fltol@f1+3)^0,f,c
  5489  0024D8  0613               	decf	___fltol@exp1^0,f,c
  5490  0024DA                     l4766:
  5491  0024DA  5013               	movf	___fltol@exp1^0,w,c
  5492  0024DC  A4D8               	btfss	status,2,c
  5493  0024DE  EF73  F012         	goto	u4851
  5494  0024E2  EF75  F012         	goto	u4850
  5495  0024E6                     u4851:
  5496  0024E6  EF67  F012         	goto	l4764
  5497  0024EA                     u4850:
  5498  0024EA                     l4768:
  5499  0024EA  5012               	movf	___fltol@sign1^0,w,c
  5500  0024EC  B4D8               	btfsc	status,2,c
  5501  0024EE  EF7B  F012         	goto	u4861
  5502  0024F2  EF7D  F012         	goto	u4860
  5503  0024F6                     u4861:
  5504  0024F6  EF85  F012         	goto	l4772
  5505  0024FA                     u4860:
  5506  0024FA  1E0D               	comf	(___fltol@f1+3)^0,f,c
  5507  0024FC  1E0C               	comf	(___fltol@f1+2)^0,f,c
  5508  0024FE  1E0B               	comf	(___fltol@f1+1)^0,f,c
  5509  002500  6C0A               	negf	___fltol@f1^0,c
  5510  002502  0E00               	movlw	0
  5511  002504  220B               	addwfc	(___fltol@f1+1)^0,f,c
  5512  002506  220C               	addwfc	(___fltol@f1+2)^0,f,c
  5513  002508  220D               	addwfc	(___fltol@f1+3)^0,f,c
  5514  00250A                     l4772:
  5515  00250A  C00A  F00A         	movff	___fltol@f1,?___fltol
  5516  00250E  C00B  F00B         	movff	___fltol@f1+1,?___fltol+1
  5517  002512  C00C  F00C         	movff	___fltol@f1+2,?___fltol+2
  5518  002516  C00D  F00D         	movff	___fltol@f1+3,?___fltol+3
  5519  00251A                     l674:
  5520  00251A  0012               	return		;funcret
  5521  00251C                     __end_of___fltol:
  5522                           	callstack 0
  5523                           
  5524 ;; *************** function ___flsub *****************
  5525 ;; Defined at:
  5526 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;  b               4   25[COMRAM] long 
  5529 ;;  a               4   29[COMRAM] long 
  5530 ;; Auto vars:     Size  Location     Type
  5531 ;;		None
  5532 ;; Return value:  Size  Location     Type
  5533 ;;                  4   25[COMRAM] long 
  5534 ;; Registers used:
  5535 ;;		wreg, status,2, status,0, cstack
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5541 ;;      Params:         8       0       0       0       0       0       0       0       0
  5542 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5543 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5544 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5545 ;;Total ram usage:        8 bytes
  5546 ;; Hardware stack levels used: 1
  5547 ;; Hardware stack levels required when called: 3
  5548 ;; This function calls:
  5549 ;;		___fladd
  5550 ;; This function is called by:
  5551 ;;		_floatToString
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555                           	psect	text14
  5556  002D1E                     __ptext14:
  5557                           	callstack 0
  5558  002D1E                     ___flsub:
  5559                           	callstack 25
  5560  002D1E  0E00               	movlw	0
  5561  002D20  1A1E               	xorwf	___flsub@a^0,f,c
  5562  002D22  0E00               	movlw	0
  5563  002D24  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  5564  002D26  0E00               	movlw	0
  5565  002D28  1A20               	xorwf	(___flsub@a+2)^0,f,c
  5566  002D2A  0E80               	movlw	128
  5567  002D2C  1A21               	xorwf	(___flsub@a+3)^0,f,c
  5568  002D2E  C01A  F00A         	movff	___flsub@b,___fladd@b
  5569  002D32  C01B  F00B         	movff	___flsub@b+1,___fladd@b+1
  5570  002D36  C01C  F00C         	movff	___flsub@b+2,___fladd@b+2
  5571  002D3A  C01D  F00D         	movff	___flsub@b+3,___fladd@b+3
  5572  002D3E  C01E  F00E         	movff	___flsub@a,___fladd@a
  5573  002D42  C01F  F00F         	movff	___flsub@a+1,___fladd@a+1
  5574  002D46  C020  F010         	movff	___flsub@a+2,___fladd@a+2
  5575  002D4A  C021  F011         	movff	___flsub@a+3,___fladd@a+3
  5576  002D4E  EC17  F007         	call	___fladd	;wreg free
  5577  002D52  C00A  F01A         	movff	?___fladd,?___flsub
  5578  002D56  C00B  F01B         	movff	?___fladd+1,?___flsub+1
  5579  002D5A  C00C  F01C         	movff	?___fladd+2,?___flsub+2
  5580  002D5E  C00D  F01D         	movff	?___fladd+3,?___flsub+3
  5581  002D62  0012               	return		;funcret
  5582  002D64                     __end_of___flsub:
  5583                           	callstack 0
  5584                           
  5585 ;; *************** function ___fladd *****************
  5586 ;; Defined at:
  5587 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5588 ;; Parameters:    Size  Location     Type
  5589 ;;  b               4    9[COMRAM] long 
  5590 ;;  a               4   13[COMRAM] long 
  5591 ;; Auto vars:     Size  Location     Type
  5592 ;;  grs             1   24[COMRAM] unsigned char 
  5593 ;;  bexp            1   23[COMRAM] unsigned char 
  5594 ;;  aexp            1   22[COMRAM] unsigned char 
  5595 ;;  signs           1   21[COMRAM] unsigned char 
  5596 ;; Return value:  Size  Location     Type
  5597 ;;                  4    9[COMRAM] unsigned char 
  5598 ;; Registers used:
  5599 ;;		wreg, status,2, status,0
  5600 ;; Tracked objects:
  5601 ;;		On entry : 0/0
  5602 ;;		On exit  : 0/0
  5603 ;;		Unchanged: 0/0
  5604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5605 ;;      Params:         8       0       0       0       0       0       0       0       0
  5606 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5607 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5608 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5609 ;;Total ram usage:       16 bytes
  5610 ;; Hardware stack levels used: 1
  5611 ;; Hardware stack levels required when called: 2
  5612 ;; This function calls:
  5613 ;;		Nothing
  5614 ;; This function is called by:
  5615 ;;		___flsub
  5616 ;; This function uses a non-reentrant model
  5617 ;;
  5618                           
  5619                           	psect	text15
  5620  000E2E                     __ptext15:
  5621                           	callstack 0
  5622  000E2E                     ___fladd:
  5623                           	callstack 25
  5624  000E2E  500D               	movf	(___fladd@b+3)^0,w,c
  5625  000E30  0B80               	andlw	128
  5626  000E32  6E16               	movwf	___fladd@signs^0,c
  5627  000E34  500D               	movf	(___fladd@b+3)^0,w,c
  5628  000E36  240D               	addwf	(___fladd@b+3)^0,w,c
  5629  000E38  6E18               	movwf	___fladd@bexp^0,c
  5630  000E3A  AE0C               	btfss	(___fladd@b+2)^0,7,c
  5631  000E3C  EF22  F007         	goto	u4091
  5632  000E40  EF24  F007         	goto	u4090
  5633  000E44                     u4091:
  5634  000E44  EF25  F007         	goto	l4312
  5635  000E48                     u4090:
  5636  000E48  8018               	bsf	___fladd@bexp^0,0,c
  5637  000E4A                     l4312:
  5638  000E4A  5018               	movf	___fladd@bexp^0,w,c
  5639  000E4C  B4D8               	btfsc	status,2,c
  5640  000E4E  EF2B  F007         	goto	u4101
  5641  000E52  EF2D  F007         	goto	u4100
  5642  000E56                     u4101:
  5643  000E56  EF42  F007         	goto	l4322
  5644  000E5A                     u4100:
  5645  000E5A  2818               	incf	___fladd@bexp^0,w,c
  5646  000E5C  A4D8               	btfss	status,2,c
  5647  000E5E  EF33  F007         	goto	u4111
  5648  000E62  EF35  F007         	goto	u4110
  5649  000E66                     u4111:
  5650  000E66  EF3D  F007         	goto	l4318
  5651  000E6A                     u4110:
  5652  000E6A  0E00               	movlw	0
  5653  000E6C  6E0A               	movwf	___fladd@b^0,c
  5654  000E6E  0E00               	movlw	0
  5655  000E70  6E0B               	movwf	(___fladd@b+1)^0,c
  5656  000E72  0E00               	movlw	0
  5657  000E74  6E0C               	movwf	(___fladd@b+2)^0,c
  5658  000E76  0E00               	movlw	0
  5659  000E78  6E0D               	movwf	(___fladd@b+3)^0,c
  5660  000E7A                     l4318:
  5661  000E7A  8E0C               	bsf	(___fladd@b+2)^0,7,c
  5662  000E7C  0E00               	movlw	0
  5663  000E7E  6E0D               	movwf	(___fladd@b+3)^0,c
  5664  000E80  EF4A  F007         	goto	l4324
  5665  000E84                     l4322:
  5666  000E84  0E00               	movlw	0
  5667  000E86  6E0A               	movwf	___fladd@b^0,c
  5668  000E88  0E00               	movlw	0
  5669  000E8A  6E0B               	movwf	(___fladd@b+1)^0,c
  5670  000E8C  0E00               	movlw	0
  5671  000E8E  6E0C               	movwf	(___fladd@b+2)^0,c
  5672  000E90  0E00               	movlw	0
  5673  000E92  6E0D               	movwf	(___fladd@b+3)^0,c
  5674  000E94                     l4324:
  5675  000E94  5011               	movf	(___fladd@a+3)^0,w,c
  5676  000E96  0B80               	andlw	128
  5677  000E98  6E17               	movwf	___fladd@aexp^0,c
  5678  000E9A  5016               	movf	___fladd@signs^0,w,c
  5679  000E9C  1817               	xorwf	___fladd@aexp^0,w,c
  5680  000E9E  B4D8               	btfsc	status,2,c
  5681  000EA0  EF54  F007         	goto	u4121
  5682  000EA4  EF56  F007         	goto	u4120
  5683  000EA8                     u4121:
  5684  000EA8  EF57  F007         	goto	l4330
  5685  000EAC                     u4120:
  5686  000EAC  8C16               	bsf	___fladd@signs^0,6,c
  5687  000EAE                     l4330:
  5688  000EAE  5011               	movf	(___fladd@a+3)^0,w,c
  5689  000EB0  2411               	addwf	(___fladd@a+3)^0,w,c
  5690  000EB2  6E17               	movwf	___fladd@aexp^0,c
  5691  000EB4  AE10               	btfss	(___fladd@a+2)^0,7,c
  5692  000EB6  EF5F  F007         	goto	u4131
  5693  000EBA  EF61  F007         	goto	u4130
  5694  000EBE                     u4131:
  5695  000EBE  EF62  F007         	goto	l4336
  5696  000EC2                     u4130:
  5697  000EC2  8017               	bsf	___fladd@aexp^0,0,c
  5698  000EC4                     l4336:
  5699  000EC4  5017               	movf	___fladd@aexp^0,w,c
  5700  000EC6  B4D8               	btfsc	status,2,c
  5701  000EC8  EF68  F007         	goto	u4141
  5702  000ECC  EF6A  F007         	goto	u4140
  5703  000ED0                     u4141:
  5704  000ED0  EF7F  F007         	goto	l4346
  5705  000ED4                     u4140:
  5706  000ED4  2817               	incf	___fladd@aexp^0,w,c
  5707  000ED6  A4D8               	btfss	status,2,c
  5708  000ED8  EF70  F007         	goto	u4151
  5709  000EDC  EF72  F007         	goto	u4150
  5710  000EE0                     u4151:
  5711  000EE0  EF7A  F007         	goto	l4342
  5712  000EE4                     u4150:
  5713  000EE4  0E00               	movlw	0
  5714  000EE6  6E0E               	movwf	___fladd@a^0,c
  5715  000EE8  0E00               	movlw	0
  5716  000EEA  6E0F               	movwf	(___fladd@a+1)^0,c
  5717  000EEC  0E00               	movlw	0
  5718  000EEE  6E10               	movwf	(___fladd@a+2)^0,c
  5719  000EF0  0E00               	movlw	0
  5720  000EF2  6E11               	movwf	(___fladd@a+3)^0,c
  5721  000EF4                     l4342:
  5722  000EF4  8E10               	bsf	(___fladd@a+2)^0,7,c
  5723  000EF6  0E00               	movlw	0
  5724  000EF8  6E11               	movwf	(___fladd@a+3)^0,c
  5725  000EFA  EF87  F007         	goto	l4348
  5726  000EFE                     l4346:
  5727  000EFE  0E00               	movlw	0
  5728  000F00  6E0E               	movwf	___fladd@a^0,c
  5729  000F02  0E00               	movlw	0
  5730  000F04  6E0F               	movwf	(___fladd@a+1)^0,c
  5731  000F06  0E00               	movlw	0
  5732  000F08  6E10               	movwf	(___fladd@a+2)^0,c
  5733  000F0A  0E00               	movlw	0
  5734  000F0C  6E11               	movwf	(___fladd@a+3)^0,c
  5735  000F0E                     l4348:
  5736  000F0E  5018               	movf	___fladd@bexp^0,w,c
  5737  000F10  5C17               	subwf	___fladd@aexp^0,w,c
  5738  000F12  B0D8               	btfsc	status,0,c
  5739  000F14  EF8E  F007         	goto	u4161
  5740  000F18  EF90  F007         	goto	u4160
  5741  000F1C                     u4161:
  5742  000F1C  EFB7  F007         	goto	l4384
  5743  000F20                     u4160:
  5744  000F20  AC16               	btfss	___fladd@signs^0,6,c
  5745  000F22  EF95  F007         	goto	u4171
  5746  000F26  EF97  F007         	goto	u4170
  5747  000F2A                     u4171:
  5748  000F2A  EF99  F007         	goto	l4354
  5749  000F2E                     u4170:
  5750  000F2E  0E80               	movlw	128
  5751  000F30  1A16               	xorwf	___fladd@signs^0,f,c
  5752  000F32                     l4354:
  5753  000F32  C018  F019         	movff	___fladd@bexp,___fladd@grs
  5754  000F36  C017  F018         	movff	___fladd@aexp,___fladd@bexp
  5755  000F3A  C019  F017         	movff	___fladd@grs,___fladd@aexp
  5756  000F3E  C00A  F019         	movff	___fladd@b,___fladd@grs
  5757  000F42  C00E  F00A         	movff	___fladd@a,___fladd@b
  5758  000F46  C019  F00E         	movff	___fladd@grs,___fladd@a
  5759  000F4A  C00B  F019         	movff	___fladd@b+1,___fladd@grs
  5760  000F4E  C00F  F00B         	movff	___fladd@a+1,___fladd@b+1
  5761  000F52  C019  F00F         	movff	___fladd@grs,___fladd@a+1
  5762  000F56  C00C  F019         	movff	___fladd@b+2,___fladd@grs
  5763  000F5A  C010  F00C         	movff	___fladd@a+2,___fladd@b+2
  5764  000F5E  C019  F010         	movff	___fladd@grs,___fladd@a+2
  5765  000F62  C00D  F019         	movff	___fladd@b+3,___fladd@grs
  5766  000F66  C011  F00D         	movff	___fladd@a+3,___fladd@b+3
  5767  000F6A  C019  F011         	movff	___fladd@grs,___fladd@a+3
  5768  000F6E                     l4384:
  5769  000F6E  0E00               	movlw	0
  5770  000F70  6E19               	movwf	___fladd@grs^0,c
  5771  000F72  5018               	movf	___fladd@bexp^0,w,c
  5772  000F74  C017  F012         	movff	___fladd@aexp,??___fladd
  5773  000F78  6A13               	clrf	(??___fladd+1)^0,c
  5774  000F7A  5E12               	subwf	??___fladd^0,f,c
  5775  000F7C  0E00               	movlw	0
  5776  000F7E  5A13               	subwfb	(??___fladd+1)^0,f,c
  5777  000F80  BE13               	btfsc	(??___fladd+1)^0,7,c
  5778  000F82  EFCC  F007         	goto	u4181
  5779  000F86  5013               	movf	(??___fladd+1)^0,w,c
  5780  000F88  E109               	bnz	u4180
  5781  000F8A  0E1A               	movlw	26
  5782  000F8C  5C12               	subwf	??___fladd^0,w,c
  5783  000F8E  A0D8               	btfss	status,0,c
  5784  000F90  EFCC  F007         	goto	u4181
  5785  000F94  EFCE  F007         	goto	u4180
  5786  000F98                     u4181:
  5787  000F98  EF05  F008         	goto	l906
  5788  000F9C                     u4180:
  5789  000F9C  500A               	movf	___fladd@b^0,w,c
  5790  000F9E  100B               	iorwf	(___fladd@b+1)^0,w,c
  5791  000FA0  100C               	iorwf	(___fladd@b+2)^0,w,c
  5792  000FA2  100D               	iorwf	(___fladd@b+3)^0,w,c
  5793  000FA4  A4D8               	btfss	status,2,c
  5794  000FA6  EFD7  F007         	goto	u4191
  5795  000FAA  EFDA  F007         	goto	u4190
  5796  000FAE                     u4191:
  5797  000FAE  0E01               	movlw	1
  5798  000FB0  EFDB  F007         	goto	u4200
  5799  000FB4                     u4190:
  5800  000FB4  0E00               	movlw	0
  5801  000FB6                     u4200:
  5802  000FB6  6E19               	movwf	___fladd@grs^0,c
  5803  000FB8  0E00               	movlw	0
  5804  000FBA  6E0A               	movwf	___fladd@b^0,c
  5805  000FBC  0E00               	movlw	0
  5806  000FBE  6E0B               	movwf	(___fladd@b+1)^0,c
  5807  000FC0  0E00               	movlw	0
  5808  000FC2  6E0C               	movwf	(___fladd@b+2)^0,c
  5809  000FC4  0E00               	movlw	0
  5810  000FC6  6E0D               	movwf	(___fladd@b+3)^0,c
  5811  000FC8  C017  F018         	movff	___fladd@aexp,___fladd@bexp
  5812  000FCC  EF0E  F008         	goto	l905
  5813  000FD0                     l907:
  5814  000FD0  A019               	btfss	___fladd@grs^0,0,c
  5815  000FD2  EFED  F007         	goto	u4211
  5816  000FD6  EFEF  F007         	goto	u4210
  5817  000FDA                     u4211:
  5818  000FDA  EFF5  F007         	goto	l4396
  5819  000FDE                     u4210:
  5820  000FDE  90D8               	bcf	status,0,c
  5821  000FE0  3019               	rrcf	___fladd@grs^0,w,c
  5822  000FE2  0901               	iorlw	1
  5823  000FE4  6E19               	movwf	___fladd@grs^0,c
  5824  000FE6  EFF7  F007         	goto	l4398
  5825  000FEA                     l4396:
  5826  000FEA  90D8               	bcf	status,0,c
  5827  000FEC  3219               	rrcf	___fladd@grs^0,f,c
  5828  000FEE                     l4398:
  5829  000FEE  A00A               	btfss	___fladd@b^0,0,c
  5830  000FF0  EFFC  F007         	goto	u4221
  5831  000FF4  EFFE  F007         	goto	u4220
  5832  000FF8                     u4221:
  5833  000FF8  EFFF  F007         	goto	l4402
  5834  000FFC                     u4220:
  5835  000FFC  8E19               	bsf	___fladd@grs^0,7,c
  5836  000FFE                     l4402:
  5837  000FFE  340D               	rlcf	(___fladd@b+3)^0,w,c
  5838  001000  320D               	rrcf	(___fladd@b+3)^0,f,c
  5839  001002  320C               	rrcf	(___fladd@b+2)^0,f,c
  5840  001004  320B               	rrcf	(___fladd@b+1)^0,f,c
  5841  001006  320A               	rrcf	___fladd@b^0,f,c
  5842  001008  2A18               	incf	___fladd@bexp^0,f,c
  5843  00100A                     l906:
  5844  00100A  5017               	movf	___fladd@aexp^0,w,c
  5845  00100C  5C18               	subwf	___fladd@bexp^0,w,c
  5846  00100E  A0D8               	btfss	status,0,c
  5847  001010  EF0C  F008         	goto	u4231
  5848  001014  EF0E  F008         	goto	u4230
  5849  001018                     u4231:
  5850  001018  EFE8  F007         	goto	l907
  5851  00101C                     u4230:
  5852  00101C                     l905:
  5853  00101C  BC16               	btfsc	___fladd@signs^0,6,c
  5854  00101E  EF13  F008         	goto	u4241
  5855  001022  EF15  F008         	goto	u4240
  5856  001026                     u4241:
  5857  001026  EF55  F008         	goto	l4430
  5858  00102A                     u4240:
  5859  00102A  5018               	movf	___fladd@bexp^0,w,c
  5860  00102C  A4D8               	btfss	status,2,c
  5861  00102E  EF1B  F008         	goto	u4251
  5862  001032  EF1D  F008         	goto	u4250
  5863  001036                     u4251:
  5864  001036  EF27  F008         	goto	l4412
  5865  00103A                     u4250:
  5866  00103A  0E00               	movlw	0
  5867  00103C  6E0A               	movwf	?___fladd^0,c
  5868  00103E  0E00               	movlw	0
  5869  001040  6E0B               	movwf	(?___fladd+1)^0,c
  5870  001042  0E00               	movlw	0
  5871  001044  6E0C               	movwf	(?___fladd+2)^0,c
  5872  001046  0E00               	movlw	0
  5873  001048  6E0D               	movwf	(?___fladd+3)^0,c
  5874  00104A  EF76  F009         	goto	l914
  5875  00104E                     l4412:
  5876  00104E  500E               	movf	___fladd@a^0,w,c
  5877  001050  260A               	addwf	___fladd@b^0,f,c
  5878  001052  500F               	movf	(___fladd@a+1)^0,w,c
  5879  001054  220B               	addwfc	(___fladd@b+1)^0,f,c
  5880  001056  5010               	movf	(___fladd@a+2)^0,w,c
  5881  001058  220C               	addwfc	(___fladd@b+2)^0,f,c
  5882  00105A  5011               	movf	(___fladd@a+3)^0,w,c
  5883  00105C  220D               	addwfc	(___fladd@b+3)^0,f,c
  5884  00105E  A00D               	btfss	(___fladd@b+3)^0,0,c
  5885  001060  EF34  F008         	goto	u4261
  5886  001064  EF36  F008         	goto	u4260
  5887  001068                     u4261:
  5888  001068  EFE2  F008         	goto	l4466
  5889  00106C                     u4260:
  5890  00106C  A019               	btfss	___fladd@grs^0,0,c
  5891  00106E  EF3B  F008         	goto	u4271
  5892  001072  EF3D  F008         	goto	u4270
  5893  001076                     u4271:
  5894  001076  EF43  F008         	goto	l4420
  5895  00107A                     u4270:
  5896  00107A  90D8               	bcf	status,0,c
  5897  00107C  3019               	rrcf	___fladd@grs^0,w,c
  5898  00107E  0901               	iorlw	1
  5899  001080  6E19               	movwf	___fladd@grs^0,c
  5900  001082  EF45  F008         	goto	l4422
  5901  001086                     l4420:
  5902  001086  90D8               	bcf	status,0,c
  5903  001088  3219               	rrcf	___fladd@grs^0,f,c
  5904  00108A                     l4422:
  5905  00108A  A00A               	btfss	___fladd@b^0,0,c
  5906  00108C  EF4A  F008         	goto	u4281
  5907  001090  EF4C  F008         	goto	u4280
  5908  001094                     u4281:
  5909  001094  EF4D  F008         	goto	l4426
  5910  001098                     u4280:
  5911  001098  8E19               	bsf	___fladd@grs^0,7,c
  5912  00109A                     l4426:
  5913  00109A  340D               	rlcf	(___fladd@b+3)^0,w,c
  5914  00109C  320D               	rrcf	(___fladd@b+3)^0,f,c
  5915  00109E  320C               	rrcf	(___fladd@b+2)^0,f,c
  5916  0010A0  320B               	rrcf	(___fladd@b+1)^0,f,c
  5917  0010A2  320A               	rrcf	___fladd@b^0,f,c
  5918  0010A4  2A18               	incf	___fladd@bexp^0,f,c
  5919  0010A6  EFE2  F008         	goto	l4466
  5920  0010AA                     l4430:
  5921  0010AA  500E               	movf	___fladd@a^0,w,c
  5922  0010AC  5C0A               	subwf	___fladd@b^0,w,c
  5923  0010AE  500F               	movf	(___fladd@a+1)^0,w,c
  5924  0010B0  580B               	subwfb	(___fladd@b+1)^0,w,c
  5925  0010B2  5010               	movf	(___fladd@a+2)^0,w,c
  5926  0010B4  580C               	subwfb	(___fladd@b+2)^0,w,c
  5927  0010B6  500D               	movf	(___fladd@b+3)^0,w,c
  5928  0010B8  0A80               	xorlw	128
  5929  0010BA  6E12               	movwf	??___fladd^0,c
  5930  0010BC  5011               	movf	(___fladd@a+3)^0,w,c
  5931  0010BE  0A80               	xorlw	128
  5932  0010C0  5812               	subwfb	??___fladd^0,w,c
  5933  0010C2  B0D8               	btfsc	status,0,c
  5934  0010C4  EF66  F008         	goto	u4291
  5935  0010C8  EF68  F008         	goto	u4290
  5936  0010CC                     u4291:
  5937  0010CC  EF93  F008         	goto	l4440
  5938  0010D0                     u4290:
  5939  0010D0  500A               	movf	___fladd@b^0,w,c
  5940  0010D2  5C0E               	subwf	___fladd@a^0,w,c
  5941  0010D4  6E12               	movwf	??___fladd^0,c
  5942  0010D6  500B               	movf	(___fladd@b+1)^0,w,c
  5943  0010D8  580F               	subwfb	(___fladd@a+1)^0,w,c
  5944  0010DA  6E13               	movwf	(??___fladd+1)^0,c
  5945  0010DC  500C               	movf	(___fladd@b+2)^0,w,c
  5946  0010DE  5810               	subwfb	(___fladd@a+2)^0,w,c
  5947  0010E0  6E14               	movwf	(??___fladd+2)^0,c
  5948  0010E2  500D               	movf	(___fladd@b+3)^0,w,c
  5949  0010E4  5811               	subwfb	(___fladd@a+3)^0,w,c
  5950  0010E6  6E15               	movwf	(??___fladd+3)^0,c
  5951  0010E8  0EFF               	movlw	255
  5952  0010EA  2412               	addwf	??___fladd^0,w,c
  5953  0010EC  6E0A               	movwf	___fladd@b^0,c
  5954  0010EE  0EFF               	movlw	255
  5955  0010F0  2013               	addwfc	(??___fladd+1)^0,w,c
  5956  0010F2  6E0B               	movwf	(___fladd@b+1)^0,c
  5957  0010F4  0EFF               	movlw	255
  5958  0010F6  2014               	addwfc	(??___fladd+2)^0,w,c
  5959  0010F8  6E0C               	movwf	(___fladd@b+2)^0,c
  5960  0010FA  0EFF               	movlw	255
  5961  0010FC  2015               	addwfc	(??___fladd+3)^0,w,c
  5962  0010FE  6E0D               	movwf	(___fladd@b+3)^0,c
  5963  001100  0E80               	movlw	128
  5964  001102  1A16               	xorwf	___fladd@signs^0,f,c
  5965  001104  6C19               	negf	___fladd@grs^0,c
  5966  001106  5019               	movf	___fladd@grs^0,w,c
  5967  001108  A4D8               	btfss	status,2,c
  5968  00110A  EF89  F008         	goto	u4301
  5969  00110E  EF8B  F008         	goto	u4300
  5970  001112                     u4301:
  5971  001112  EF9B  F008         	goto	l922
  5972  001116                     u4300:
  5973  001116  0E01               	movlw	1
  5974  001118  260A               	addwf	___fladd@b^0,f,c
  5975  00111A  0E00               	movlw	0
  5976  00111C  220B               	addwfc	(___fladd@b+1)^0,f,c
  5977  00111E  220C               	addwfc	(___fladd@b+2)^0,f,c
  5978  001120  220D               	addwfc	(___fladd@b+3)^0,f,c
  5979  001122  EF9B  F008         	goto	l922
  5980  001126                     l4440:
  5981  001126  500E               	movf	___fladd@a^0,w,c
  5982  001128  5E0A               	subwf	___fladd@b^0,f,c
  5983  00112A  500F               	movf	(___fladd@a+1)^0,w,c
  5984  00112C  5A0B               	subwfb	(___fladd@b+1)^0,f,c
  5985  00112E  5010               	movf	(___fladd@a+2)^0,w,c
  5986  001130  5A0C               	subwfb	(___fladd@b+2)^0,f,c
  5987  001132  5011               	movf	(___fladd@a+3)^0,w,c
  5988  001134  5A0D               	subwfb	(___fladd@b+3)^0,f,c
  5989  001136                     l922:
  5990  001136  500A               	movf	___fladd@b^0,w,c
  5991  001138  100B               	iorwf	(___fladd@b+1)^0,w,c
  5992  00113A  100C               	iorwf	(___fladd@b+2)^0,w,c
  5993  00113C  100D               	iorwf	(___fladd@b+3)^0,w,c
  5994  00113E  A4D8               	btfss	status,2,c
  5995  001140  EFA4  F008         	goto	u4311
  5996  001144  EFA6  F008         	goto	u4310
  5997  001148                     u4311:
  5998  001148  EFDB  F008         	goto	l4464
  5999  00114C                     u4310:
  6000  00114C  5019               	movf	___fladd@grs^0,w,c
  6001  00114E  A4D8               	btfss	status,2,c
  6002  001150  EFAC  F008         	goto	u4321
  6003  001154  EFAE  F008         	goto	u4320
  6004  001158                     u4321:
  6005  001158  EFDB  F008         	goto	l4464
  6006  00115C                     u4320:
  6007  00115C  0E00               	movlw	0
  6008  00115E  6E0A               	movwf	?___fladd^0,c
  6009  001160  0E00               	movlw	0
  6010  001162  6E0B               	movwf	(?___fladd+1)^0,c
  6011  001164  0E00               	movlw	0
  6012  001166  6E0C               	movwf	(?___fladd+2)^0,c
  6013  001168  0E00               	movlw	0
  6014  00116A  6E0D               	movwf	(?___fladd+3)^0,c
  6015  00116C  EF76  F009         	goto	l914
  6016  001170                     l4448:
  6017  001170  90D8               	bcf	status,0,c
  6018  001172  360A               	rlcf	___fladd@b^0,f,c
  6019  001174  360B               	rlcf	(___fladd@b+1)^0,f,c
  6020  001176  360C               	rlcf	(___fladd@b+2)^0,f,c
  6021  001178  360D               	rlcf	(___fladd@b+3)^0,f,c
  6022  00117A  AE19               	btfss	___fladd@grs^0,7,c
  6023  00117C  EFC2  F008         	goto	u4331
  6024  001180  EFC4  F008         	goto	u4330
  6025  001184                     u4331:
  6026  001184  EFC5  F008         	goto	l4454
  6027  001188                     u4330:
  6028  001188  800A               	bsf	___fladd@b^0,0,c
  6029  00118A                     l4454:
  6030  00118A  A019               	btfss	___fladd@grs^0,0,c
  6031  00118C  EFCA  F008         	goto	u4341
  6032  001190  EFCC  F008         	goto	u4340
  6033  001194                     u4341:
  6034  001194  EFD0  F008         	goto	l4458
  6035  001198                     u4340:
  6036  001198  80D8               	bsf	status,0,c
  6037  00119A  3619               	rlcf	___fladd@grs^0,f,c
  6038  00119C  EFD2  F008         	goto	l4460
  6039  0011A0                     l4458:
  6040  0011A0  90D8               	bcf	status,0,c
  6041  0011A2  3619               	rlcf	___fladd@grs^0,f,c
  6042  0011A4                     l4460:
  6043  0011A4  5018               	movf	___fladd@bexp^0,w,c
  6044  0011A6  B4D8               	btfsc	status,2,c
  6045  0011A8  EFD8  F008         	goto	u4351
  6046  0011AC  EFDA  F008         	goto	u4350
  6047  0011B0                     u4351:
  6048  0011B0  EFDB  F008         	goto	l4464
  6049  0011B4                     u4350:
  6050  0011B4  0618               	decf	___fladd@bexp^0,f,c
  6051  0011B6                     l4464:
  6052  0011B6  AE0C               	btfss	(___fladd@b+2)^0,7,c
  6053  0011B8  EFE0  F008         	goto	u4361
  6054  0011BC  EFE2  F008         	goto	u4360
  6055  0011C0                     u4361:
  6056  0011C0  EFB8  F008         	goto	l4448
  6057  0011C4                     u4360:
  6058  0011C4                     l4466:
  6059  0011C4  0E00               	movlw	0
  6060  0011C6  6E17               	movwf	___fladd@aexp^0,c
  6061  0011C8  AE19               	btfss	___fladd@grs^0,7,c
  6062  0011CA  EFE9  F008         	goto	u4371
  6063  0011CE  EFEB  F008         	goto	u4370
  6064  0011D2                     u4371:
  6065  0011D2  EF03  F009         	goto	l931
  6066  0011D6                     u4370:
  6067  0011D6  C019  F012         	movff	___fladd@grs,??___fladd
  6068  0011DA  0E7F               	movlw	127
  6069  0011DC  1612               	andwf	??___fladd^0,f,c
  6070  0011DE  B4D8               	btfsc	status,2,c
  6071  0011E0  EFF4  F008         	goto	u4381
  6072  0011E4  EFF6  F008         	goto	u4380
  6073  0011E8                     u4381:
  6074  0011E8  EFFA  F008         	goto	l932
  6075  0011EC                     u4380:
  6076  0011EC                     l4472:
  6077  0011EC  0E01               	movlw	1
  6078  0011EE  6E17               	movwf	___fladd@aexp^0,c
  6079  0011F0  EF03  F009         	goto	l931
  6080  0011F4                     l932:
  6081  0011F4  A00A               	btfss	___fladd@b^0,0,c
  6082  0011F6  EFFF  F008         	goto	u4391
  6083  0011FA  EF01  F009         	goto	u4390
  6084  0011FE                     u4391:
  6085  0011FE  EF03  F009         	goto	l931
  6086  001202                     u4390:
  6087  001202  EFF6  F008         	goto	l4472
  6088  001206                     l931:
  6089  001206  5017               	movf	___fladd@aexp^0,w,c
  6090  001208  B4D8               	btfsc	status,2,c
  6091  00120A  EF09  F009         	goto	u4401
  6092  00120E  EF0B  F009         	goto	u4400
  6093  001212                     u4401:
  6094  001212  EF36  F009         	goto	l4484
  6095  001216                     u4400:
  6096  001216  0E01               	movlw	1
  6097  001218  260A               	addwf	___fladd@b^0,f,c
  6098  00121A  0E00               	movlw	0
  6099  00121C  220B               	addwfc	(___fladd@b+1)^0,f,c
  6100  00121E  220C               	addwfc	(___fladd@b+2)^0,f,c
  6101  001220  220D               	addwfc	(___fladd@b+3)^0,f,c
  6102  001222  A00D               	btfss	(___fladd@b+3)^0,0,c
  6103  001224  EF16  F009         	goto	u4411
  6104  001228  EF18  F009         	goto	u4410
  6105  00122C                     u4411:
  6106  00122C  EF36  F009         	goto	l4484
  6107  001230                     u4410:
  6108  001230  C00A  F012         	movff	___fladd@b,??___fladd
  6109  001234  C00B  F013         	movff	___fladd@b+1,??___fladd+1
  6110  001238  C00C  F014         	movff	___fladd@b+2,??___fladd+2
  6111  00123C  C00D  F015         	movff	___fladd@b+3,??___fladd+3
  6112  001240  3415               	rlcf	(??___fladd+3)^0,w,c
  6113  001242  3215               	rrcf	(??___fladd+3)^0,f,c
  6114  001244  3214               	rrcf	(??___fladd+2)^0,f,c
  6115  001246  3213               	rrcf	(??___fladd+1)^0,f,c
  6116  001248  3212               	rrcf	??___fladd^0,f,c
  6117  00124A  C012  F00A         	movff	??___fladd,___fladd@b
  6118  00124E  C013  F00B         	movff	??___fladd+1,___fladd@b+1
  6119  001252  C014  F00C         	movff	??___fladd+2,___fladd@b+2
  6120  001256  C015  F00D         	movff	??___fladd+3,___fladd@b+3
  6121  00125A  2818               	incf	___fladd@bexp^0,w,c
  6122  00125C  B4D8               	btfsc	status,2,c
  6123  00125E  EF33  F009         	goto	u4421
  6124  001262  EF35  F009         	goto	u4420
  6125  001266                     u4421:
  6126  001266  EF36  F009         	goto	l4484
  6127  00126A                     u4420:
  6128  00126A  2A18               	incf	___fladd@bexp^0,f,c
  6129  00126C                     l4484:
  6130  00126C  2818               	incf	___fladd@bexp^0,w,c
  6131  00126E  B4D8               	btfsc	status,2,c
  6132  001270  EF3C  F009         	goto	u4431
  6133  001274  EF3E  F009         	goto	u4430
  6134  001278                     u4431:
  6135  001278  EF46  F009         	goto	l4488
  6136  00127C                     u4430:
  6137  00127C  5018               	movf	___fladd@bexp^0,w,c
  6138  00127E  A4D8               	btfss	status,2,c
  6139  001280  EF44  F009         	goto	u4441
  6140  001284  EF46  F009         	goto	u4440
  6141  001288                     u4441:
  6142  001288  EF58  F009         	goto	l4492
  6143  00128C                     u4440:
  6144  00128C                     l4488:
  6145  00128C  0E00               	movlw	0
  6146  00128E  6E0A               	movwf	___fladd@b^0,c
  6147  001290  0E00               	movlw	0
  6148  001292  6E0B               	movwf	(___fladd@b+1)^0,c
  6149  001294  0E00               	movlw	0
  6150  001296  6E0C               	movwf	(___fladd@b+2)^0,c
  6151  001298  0E00               	movlw	0
  6152  00129A  6E0D               	movwf	(___fladd@b+3)^0,c
  6153  00129C  5018               	movf	___fladd@bexp^0,w,c
  6154  00129E  A4D8               	btfss	status,2,c
  6155  0012A0  EF54  F009         	goto	u4451
  6156  0012A4  EF56  F009         	goto	u4450
  6157  0012A8                     u4451:
  6158  0012A8  EF58  F009         	goto	l4492
  6159  0012AC                     u4450:
  6160  0012AC  0E00               	movlw	0
  6161  0012AE  6E16               	movwf	___fladd@signs^0,c
  6162  0012B0                     l4492:
  6163  0012B0  A018               	btfss	___fladd@bexp^0,0,c
  6164  0012B2  EF5D  F009         	goto	u4461
  6165  0012B6  EF5F  F009         	goto	u4460
  6166  0012BA                     u4461:
  6167  0012BA  EF62  F009         	goto	l4496
  6168  0012BE                     u4460:
  6169  0012BE  8E0C               	bsf	(___fladd@b+2)^0,7,c
  6170  0012C0  EF63  F009         	goto	l4498
  6171  0012C4                     l4496:
  6172  0012C4  9E0C               	bcf	(___fladd@b+2)^0,7,c
  6173  0012C6                     l4498:
  6174  0012C6  90D8               	bcf	status,0,c
  6175  0012C8  3018               	rrcf	___fladd@bexp^0,w,c
  6176  0012CA  6E0D               	movwf	(___fladd@b+3)^0,c
  6177  0012CC  AE16               	btfss	___fladd@signs^0,7,c
  6178  0012CE  EF6B  F009         	goto	u4471
  6179  0012D2  EF6D  F009         	goto	u4470
  6180  0012D6                     u4471:
  6181  0012D6  EF6E  F009         	goto	l4504
  6182  0012DA                     u4470:
  6183  0012DA  8E0D               	bsf	(___fladd@b+3)^0,7,c
  6184  0012DC                     l4504:
  6185  0012DC  C00A  F00A         	movff	___fladd@b,?___fladd
  6186  0012E0  C00B  F00B         	movff	___fladd@b+1,?___fladd+1
  6187  0012E4  C00C  F00C         	movff	___fladd@b+2,?___fladd+2
  6188  0012E8  C00D  F00D         	movff	___fladd@b+3,?___fladd+3
  6189  0012EC                     l914:
  6190  0012EC  0012               	return		;funcret
  6191  0012EE                     __end_of___fladd:
  6192                           	callstack 0
  6193                           
  6194 ;; *************** function ___flneg *****************
  6195 ;; Defined at:
  6196 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  6197 ;; Parameters:    Size  Location     Type
  6198 ;;  f1              4    9[COMRAM] unsigned char 
  6199 ;; Auto vars:     Size  Location     Type
  6200 ;;		None
  6201 ;; Return value:  Size  Location     Type
  6202 ;;                  4    9[COMRAM] unsigned char 
  6203 ;; Registers used:
  6204 ;;		wreg, status,2, status,0
  6205 ;; Tracked objects:
  6206 ;;		On entry : 0/0
  6207 ;;		On exit  : 0/0
  6208 ;;		Unchanged: 0/0
  6209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6210 ;;      Params:         4       0       0       0       0       0       0       0       0
  6211 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6212 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6213 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6214 ;;Total ram usage:        4 bytes
  6215 ;; Hardware stack levels used: 1
  6216 ;; Hardware stack levels required when called: 2
  6217 ;; This function calls:
  6218 ;;		Nothing
  6219 ;; This function is called by:
  6220 ;;		_floatToString
  6221 ;; This function uses a non-reentrant model
  6222 ;;
  6223                           
  6224                           	psect	text16
  6225  002EAC                     __ptext16:
  6226                           	callstack 0
  6227  002EAC                     ___flneg:
  6228                           	callstack 26
  6229  002EAC  500A               	movf	___flneg@f1^0,w,c
  6230  002EAE  100B               	iorwf	(___flneg@f1+1)^0,w,c
  6231  002EB0  100C               	iorwf	(___flneg@f1+2)^0,w,c
  6232  002EB2  100D               	iorwf	(___flneg@f1+3)^0,w,c
  6233  002EB4  B4D8               	btfsc	status,2,c
  6234  002EB6  EF5F  F017         	goto	u4791
  6235  002EBA  EF61  F017         	goto	u4790
  6236  002EBE                     u4791:
  6237  002EBE  EF69  F017         	goto	l4728
  6238  002EC2                     u4790:
  6239  002EC2  0E00               	movlw	0
  6240  002EC4  1A0A               	xorwf	___flneg@f1^0,f,c
  6241  002EC6  0E00               	movlw	0
  6242  002EC8  1A0B               	xorwf	(___flneg@f1+1)^0,f,c
  6243  002ECA  0E00               	movlw	0
  6244  002ECC  1A0C               	xorwf	(___flneg@f1+2)^0,f,c
  6245  002ECE  0E80               	movlw	128
  6246  002ED0  1A0D               	xorwf	(___flneg@f1+3)^0,f,c
  6247  002ED2                     l4728:
  6248  002ED2  C00A  F00A         	movff	___flneg@f1,?___flneg
  6249  002ED6  C00B  F00B         	movff	___flneg@f1+1,?___flneg+1
  6250  002EDA  C00C  F00C         	movff	___flneg@f1+2,?___flneg+2
  6251  002EDE  C00D  F00D         	movff	___flneg@f1+3,?___flneg+3
  6252  002EE2  0012               	return		;funcret
  6253  002EE4                     __end_of___flneg:
  6254                           	callstack 0
  6255                           
  6256 ;; *************** function ___flmul *****************
  6257 ;; Defined at:
  6258 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  6259 ;; Parameters:    Size  Location     Type
  6260 ;;  b               4   23[COMRAM] unsigned char 
  6261 ;;  a               4   27[COMRAM] unsigned char 
  6262 ;; Auto vars:     Size  Location     Type
  6263 ;;  prod            4   42[COMRAM] struct .
  6264 ;;  grs             4   37[COMRAM] unsigned long 
  6265 ;;  temp            2   46[COMRAM] struct .
  6266 ;;  bexp            1   41[COMRAM] unsigned char 
  6267 ;;  aexp            1   36[COMRAM] unsigned char 
  6268 ;;  sign            1   35[COMRAM] unsigned char 
  6269 ;; Return value:  Size  Location     Type
  6270 ;;                  4   23[COMRAM] unsigned char 
  6271 ;; Registers used:
  6272 ;;		wreg, status,2, status,0, prodl, prodh
  6273 ;; Tracked objects:
  6274 ;;		On entry : 0/0
  6275 ;;		On exit  : 0/0
  6276 ;;		Unchanged: 0/0
  6277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6278 ;;      Params:         8       0       0       0       0       0       0       0       0
  6279 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6280 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6281 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6282 ;;Total ram usage:       25 bytes
  6283 ;; Hardware stack levels used: 1
  6284 ;; Hardware stack levels required when called: 2
  6285 ;; This function calls:
  6286 ;;		Nothing
  6287 ;; This function is called by:
  6288 ;;		_tempRead
  6289 ;;		_humidade
  6290 ;;		_gasRead
  6291 ;;		_floatToString
  6292 ;; This function uses a non-reentrant model
  6293 ;;
  6294                           
  6295                           	psect	text17
  6296  0012EE                     __ptext17:
  6297                           	callstack 0
  6298  0012EE                     ___flmul:
  6299                           	callstack 27
  6300  0012EE  501B               	movf	(___flmul@b+3)^0,w,c
  6301  0012F0  0B80               	andlw	128
  6302  0012F2  6E24               	movwf	___flmul@sign^0,c
  6303  0012F4  501B               	movf	(___flmul@b+3)^0,w,c
  6304  0012F6  241B               	addwf	(___flmul@b+3)^0,w,c
  6305  0012F8  6E2A               	movwf	___flmul@bexp^0,c
  6306  0012FA  AE1A               	btfss	(___flmul@b+2)^0,7,c
  6307  0012FC  EF82  F009         	goto	u4481
  6308  001300  EF84  F009         	goto	u4480
  6309  001304                     u4481:
  6310  001304  EF85  F009         	goto	l4514
  6311  001308                     u4480:
  6312  001308  802A               	bsf	___flmul@bexp^0,0,c
  6313  00130A                     l4514:
  6314  00130A  502A               	movf	___flmul@bexp^0,w,c
  6315  00130C  B4D8               	btfsc	status,2,c
  6316  00130E  EF8B  F009         	goto	u4491
  6317  001312  EF8D  F009         	goto	u4490
  6318  001316                     u4491:
  6319  001316  EFA0  F009         	goto	l4522
  6320  00131A                     u4490:
  6321  00131A  282A               	incf	___flmul@bexp^0,w,c
  6322  00131C  A4D8               	btfss	status,2,c
  6323  00131E  EF93  F009         	goto	u4501
  6324  001322  EF95  F009         	goto	u4500
  6325  001326                     u4501:
  6326  001326  EF9D  F009         	goto	l4520
  6327  00132A                     u4500:
  6328  00132A  0E00               	movlw	0
  6329  00132C  6E18               	movwf	___flmul@b^0,c
  6330  00132E  0E00               	movlw	0
  6331  001330  6E19               	movwf	(___flmul@b+1)^0,c
  6332  001332  0E00               	movlw	0
  6333  001334  6E1A               	movwf	(___flmul@b+2)^0,c
  6334  001336  0E00               	movlw	0
  6335  001338  6E1B               	movwf	(___flmul@b+3)^0,c
  6336  00133A                     l4520:
  6337  00133A  8E1A               	bsf	(___flmul@b+2)^0,7,c
  6338  00133C  EFA8  F009         	goto	l4524
  6339  001340                     l4522:
  6340  001340  0E00               	movlw	0
  6341  001342  6E18               	movwf	___flmul@b^0,c
  6342  001344  0E00               	movlw	0
  6343  001346  6E19               	movwf	(___flmul@b+1)^0,c
  6344  001348  0E00               	movlw	0
  6345  00134A  6E1A               	movwf	(___flmul@b+2)^0,c
  6346  00134C  0E00               	movlw	0
  6347  00134E  6E1B               	movwf	(___flmul@b+3)^0,c
  6348  001350                     l4524:
  6349  001350  501F               	movf	(___flmul@a+3)^0,w,c
  6350  001352  0B80               	andlw	128
  6351  001354  1A24               	xorwf	___flmul@sign^0,f,c
  6352  001356  501F               	movf	(___flmul@a+3)^0,w,c
  6353  001358  241F               	addwf	(___flmul@a+3)^0,w,c
  6354  00135A  6E25               	movwf	___flmul@aexp^0,c
  6355  00135C  AE1E               	btfss	(___flmul@a+2)^0,7,c
  6356  00135E  EFB3  F009         	goto	u4511
  6357  001362  EFB5  F009         	goto	u4510
  6358  001366                     u4511:
  6359  001366  EFB6  F009         	goto	l4532
  6360  00136A                     u4510:
  6361  00136A  8025               	bsf	___flmul@aexp^0,0,c
  6362  00136C                     l4532:
  6363  00136C  5025               	movf	___flmul@aexp^0,w,c
  6364  00136E  B4D8               	btfsc	status,2,c
  6365  001370  EFBC  F009         	goto	u4521
  6366  001374  EFBE  F009         	goto	u4520
  6367  001378                     u4521:
  6368  001378  EFD1  F009         	goto	l4540
  6369  00137C                     u4520:
  6370  00137C  2825               	incf	___flmul@aexp^0,w,c
  6371  00137E  A4D8               	btfss	status,2,c
  6372  001380  EFC4  F009         	goto	u4531
  6373  001384  EFC6  F009         	goto	u4530
  6374  001388                     u4531:
  6375  001388  EFCE  F009         	goto	l4538
  6376  00138C                     u4530:
  6377  00138C  0E00               	movlw	0
  6378  00138E  6E1C               	movwf	___flmul@a^0,c
  6379  001390  0E00               	movlw	0
  6380  001392  6E1D               	movwf	(___flmul@a+1)^0,c
  6381  001394  0E00               	movlw	0
  6382  001396  6E1E               	movwf	(___flmul@a+2)^0,c
  6383  001398  0E00               	movlw	0
  6384  00139A  6E1F               	movwf	(___flmul@a+3)^0,c
  6385  00139C                     l4538:
  6386  00139C  8E1E               	bsf	(___flmul@a+2)^0,7,c
  6387  00139E  EFD9  F009         	goto	l991
  6388  0013A2                     l4540:
  6389  0013A2  0E00               	movlw	0
  6390  0013A4  6E1C               	movwf	___flmul@a^0,c
  6391  0013A6  0E00               	movlw	0
  6392  0013A8  6E1D               	movwf	(___flmul@a+1)^0,c
  6393  0013AA  0E00               	movlw	0
  6394  0013AC  6E1E               	movwf	(___flmul@a+2)^0,c
  6395  0013AE  0E00               	movlw	0
  6396  0013B0  6E1F               	movwf	(___flmul@a+3)^0,c
  6397  0013B2                     l991:
  6398  0013B2  5025               	movf	___flmul@aexp^0,w,c
  6399  0013B4  B4D8               	btfsc	status,2,c
  6400  0013B6  EFDF  F009         	goto	u4541
  6401  0013BA  EFE1  F009         	goto	u4540
  6402  0013BE                     u4541:
  6403  0013BE  EFE9  F009         	goto	l4544
  6404  0013C2                     u4540:
  6405  0013C2  502A               	movf	___flmul@bexp^0,w,c
  6406  0013C4  A4D8               	btfss	status,2,c
  6407  0013C6  EFE7  F009         	goto	u4551
  6408  0013CA  EFE9  F009         	goto	u4550
  6409  0013CE                     u4551:
  6410  0013CE  EFF3  F009         	goto	l4548
  6411  0013D2                     u4550:
  6412  0013D2                     l4544:
  6413  0013D2  0E00               	movlw	0
  6414  0013D4  6E18               	movwf	?___flmul^0,c
  6415  0013D6  0E00               	movlw	0
  6416  0013D8  6E19               	movwf	(?___flmul+1)^0,c
  6417  0013DA  0E00               	movlw	0
  6418  0013DC  6E1A               	movwf	(?___flmul+2)^0,c
  6419  0013DE  0E00               	movlw	0
  6420  0013E0  6E1B               	movwf	(?___flmul+3)^0,c
  6421  0013E2  EF8B  F00B         	goto	l995
  6422  0013E6                     l4548:
  6423  0013E6  501E               	movf	(___flmul@a+2)^0,w,c
  6424  0013E8  0218               	mulwf	___flmul@b^0,c
  6425  0013EA  CFF3 F02F          	movff	prodl,___flmul@temp
  6426  0013EE  CFF4 F030          	movff	prodh,___flmul@temp+1
  6427  0013F2  502F               	movf	___flmul@temp^0,w,c
  6428  0013F4  6E26               	movwf	___flmul@grs^0,c
  6429  0013F6  6A27               	clrf	(___flmul@grs+1)^0,c
  6430  0013F8  6A28               	clrf	(___flmul@grs+2)^0,c
  6431  0013FA  6A29               	clrf	(___flmul@grs+3)^0,c
  6432  0013FC  5030               	movf	(___flmul@temp+1)^0,w,c
  6433  0013FE  6E2B               	movwf	___flmul@prod^0,c
  6434  001400  6A2C               	clrf	(___flmul@prod+1)^0,c
  6435  001402  6A2D               	clrf	(___flmul@prod+2)^0,c
  6436  001404  6A2E               	clrf	(___flmul@prod+3)^0,c
  6437  001406  501D               	movf	(___flmul@a+1)^0,w,c
  6438  001408  0219               	mulwf	(___flmul@b+1)^0,c
  6439  00140A  CFF3 F02F          	movff	prodl,___flmul@temp
  6440  00140E  CFF4 F030          	movff	prodh,___flmul@temp+1
  6441  001412  502F               	movf	___flmul@temp^0,w,c
  6442  001414  2626               	addwf	___flmul@grs^0,f,c
  6443  001416  0E00               	movlw	0
  6444  001418  2227               	addwfc	(___flmul@grs+1)^0,f,c
  6445  00141A  2228               	addwfc	(___flmul@grs+2)^0,f,c
  6446  00141C  2229               	addwfc	(___flmul@grs+3)^0,f,c
  6447  00141E  5030               	movf	(___flmul@temp+1)^0,w,c
  6448  001420  262B               	addwf	___flmul@prod^0,f,c
  6449  001422  0E00               	movlw	0
  6450  001424  222C               	addwfc	(___flmul@prod+1)^0,f,c
  6451  001426  222D               	addwfc	(___flmul@prod+2)^0,f,c
  6452  001428  222E               	addwfc	(___flmul@prod+3)^0,f,c
  6453  00142A  501C               	movf	___flmul@a^0,w,c
  6454  00142C  021A               	mulwf	(___flmul@b+2)^0,c
  6455  00142E  CFF3 F02F          	movff	prodl,___flmul@temp
  6456  001432  CFF4 F030          	movff	prodh,___flmul@temp+1
  6457  001436  502F               	movf	___flmul@temp^0,w,c
  6458  001438  2626               	addwf	___flmul@grs^0,f,c
  6459  00143A  0E00               	movlw	0
  6460  00143C  2227               	addwfc	(___flmul@grs+1)^0,f,c
  6461  00143E  2228               	addwfc	(___flmul@grs+2)^0,f,c
  6462  001440  2229               	addwfc	(___flmul@grs+3)^0,f,c
  6463  001442  5030               	movf	(___flmul@temp+1)^0,w,c
  6464  001444  262B               	addwf	___flmul@prod^0,f,c
  6465  001446  0E00               	movlw	0
  6466  001448  222C               	addwfc	(___flmul@prod+1)^0,f,c
  6467  00144A  222D               	addwfc	(___flmul@prod+2)^0,f,c
  6468  00144C  222E               	addwfc	(___flmul@prod+3)^0,f,c
  6469  00144E  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  6470  001452  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  6471  001456  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  6472  00145A  6A26               	clrf	___flmul@grs^0,c
  6473  00145C  501C               	movf	___flmul@a^0,w,c
  6474  00145E  0219               	mulwf	(___flmul@b+1)^0,c
  6475  001460  CFF3 F02F          	movff	prodl,___flmul@temp
  6476  001464  CFF4 F030          	movff	prodh,___flmul@temp+1
  6477  001468  502F               	movf	___flmul@temp^0,w,c
  6478  00146A  2626               	addwf	___flmul@grs^0,f,c
  6479  00146C  5030               	movf	(___flmul@temp+1)^0,w,c
  6480  00146E  2227               	addwfc	(___flmul@grs+1)^0,f,c
  6481  001470  0E00               	movlw	0
  6482  001472  2228               	addwfc	(___flmul@grs+2)^0,f,c
  6483  001474  0E00               	movlw	0
  6484  001476  2229               	addwfc	(___flmul@grs+3)^0,f,c
  6485  001478  501D               	movf	(___flmul@a+1)^0,w,c
  6486  00147A  0218               	mulwf	___flmul@b^0,c
  6487  00147C  CFF3 F02F          	movff	prodl,___flmul@temp
  6488  001480  CFF4 F030          	movff	prodh,___flmul@temp+1
  6489  001484  502F               	movf	___flmul@temp^0,w,c
  6490  001486  2626               	addwf	___flmul@grs^0,f,c
  6491  001488  5030               	movf	(___flmul@temp+1)^0,w,c
  6492  00148A  2227               	addwfc	(___flmul@grs+1)^0,f,c
  6493  00148C  0E00               	movlw	0
  6494  00148E  2228               	addwfc	(___flmul@grs+2)^0,f,c
  6495  001490  0E00               	movlw	0
  6496  001492  2229               	addwfc	(___flmul@grs+3)^0,f,c
  6497  001494  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  6498  001498  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  6499  00149C  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  6500  0014A0  6A26               	clrf	___flmul@grs^0,c
  6501  0014A2  501C               	movf	___flmul@a^0,w,c
  6502  0014A4  0218               	mulwf	___flmul@b^0,c
  6503  0014A6  CFF3 F02F          	movff	prodl,___flmul@temp
  6504  0014AA  CFF4 F030          	movff	prodh,___flmul@temp+1
  6505  0014AE  502F               	movf	___flmul@temp^0,w,c
  6506  0014B0  2626               	addwf	___flmul@grs^0,f,c
  6507  0014B2  5030               	movf	(___flmul@temp+1)^0,w,c
  6508  0014B4  2227               	addwfc	(___flmul@grs+1)^0,f,c
  6509  0014B6  0E00               	movlw	0
  6510  0014B8  2228               	addwfc	(___flmul@grs+2)^0,f,c
  6511  0014BA  0E00               	movlw	0
  6512  0014BC  2229               	addwfc	(___flmul@grs+3)^0,f,c
  6513  0014BE  501E               	movf	(___flmul@a+2)^0,w,c
  6514  0014C0  0219               	mulwf	(___flmul@b+1)^0,c
  6515  0014C2  CFF3 F02F          	movff	prodl,___flmul@temp
  6516  0014C6  CFF4 F030          	movff	prodh,___flmul@temp+1
  6517  0014CA  502F               	movf	___flmul@temp^0,w,c
  6518  0014CC  262B               	addwf	___flmul@prod^0,f,c
  6519  0014CE  5030               	movf	(___flmul@temp+1)^0,w,c
  6520  0014D0  222C               	addwfc	(___flmul@prod+1)^0,f,c
  6521  0014D2  0E00               	movlw	0
  6522  0014D4  222D               	addwfc	(___flmul@prod+2)^0,f,c
  6523  0014D6  0E00               	movlw	0
  6524  0014D8  222E               	addwfc	(___flmul@prod+3)^0,f,c
  6525  0014DA  501D               	movf	(___flmul@a+1)^0,w,c
  6526  0014DC  021A               	mulwf	(___flmul@b+2)^0,c
  6527  0014DE  CFF3 F02F          	movff	prodl,___flmul@temp
  6528  0014E2  CFF4 F030          	movff	prodh,___flmul@temp+1
  6529  0014E6  502F               	movf	___flmul@temp^0,w,c
  6530  0014E8  262B               	addwf	___flmul@prod^0,f,c
  6531  0014EA  5030               	movf	(___flmul@temp+1)^0,w,c
  6532  0014EC  222C               	addwfc	(___flmul@prod+1)^0,f,c
  6533  0014EE  0E00               	movlw	0
  6534  0014F0  222D               	addwfc	(___flmul@prod+2)^0,f,c
  6535  0014F2  0E00               	movlw	0
  6536  0014F4  222E               	addwfc	(___flmul@prod+3)^0,f,c
  6537  0014F6  501E               	movf	(___flmul@a+2)^0,w,c
  6538  0014F8  021A               	mulwf	(___flmul@b+2)^0,c
  6539  0014FA  CFF3 F02F          	movff	prodl,___flmul@temp
  6540  0014FE  CFF4 F030          	movff	prodh,___flmul@temp+1
  6541  001502  502F               	movf	___flmul@temp^0,w,c
  6542  001504  6E20               	movwf	??___flmul^0,c
  6543  001506  5030               	movf	(___flmul@temp+1)^0,w,c
  6544  001508  6E21               	movwf	(??___flmul+1)^0,c
  6545  00150A  6A22               	clrf	(??___flmul+2)^0,c
  6546  00150C  6A23               	clrf	(??___flmul+3)^0,c
  6547  00150E  C022  F023         	movff	??___flmul+2,??___flmul+3
  6548  001512  C021  F022         	movff	??___flmul+1,??___flmul+2
  6549  001516  C020  F021         	movff	??___flmul,??___flmul+1
  6550  00151A  6A20               	clrf	??___flmul^0,c
  6551  00151C  5020               	movf	??___flmul^0,w,c
  6552  00151E  262B               	addwf	___flmul@prod^0,f,c
  6553  001520  5021               	movf	(??___flmul+1)^0,w,c
  6554  001522  222C               	addwfc	(___flmul@prod+1)^0,f,c
  6555  001524  5022               	movf	(??___flmul+2)^0,w,c
  6556  001526  222D               	addwfc	(___flmul@prod+2)^0,f,c
  6557  001528  5023               	movf	(??___flmul+3)^0,w,c
  6558  00152A  222E               	addwfc	(___flmul@prod+3)^0,f,c
  6559  00152C  C026  F020         	movff	___flmul@grs,??___flmul
  6560  001530  C027  F021         	movff	___flmul@grs+1,??___flmul+1
  6561  001534  C028  F022         	movff	___flmul@grs+2,??___flmul+2
  6562  001538  C029  F023         	movff	___flmul@grs+3,??___flmul+3
  6563  00153C  0E19               	movlw	25
  6564  00153E  EFA6  F00A         	goto	u4560
  6565  001542                     u4565:
  6566  001542  90D8               	bcf	status,0,c
  6567  001544  3223               	rrcf	(??___flmul+3)^0,f,c
  6568  001546  3222               	rrcf	(??___flmul+2)^0,f,c
  6569  001548  3221               	rrcf	(??___flmul+1)^0,f,c
  6570  00154A  3220               	rrcf	??___flmul^0,f,c
  6571  00154C                     u4560:
  6572  00154C  2EE8               	decfsz	wreg,f,c
  6573  00154E  EFA1  F00A         	goto	u4565
  6574  001552  5020               	movf	??___flmul^0,w,c
  6575  001554  262B               	addwf	___flmul@prod^0,f,c
  6576  001556  5021               	movf	(??___flmul+1)^0,w,c
  6577  001558  222C               	addwfc	(___flmul@prod+1)^0,f,c
  6578  00155A  5022               	movf	(??___flmul+2)^0,w,c
  6579  00155C  222D               	addwfc	(___flmul@prod+2)^0,f,c
  6580  00155E  5023               	movf	(??___flmul+3)^0,w,c
  6581  001560  222E               	addwfc	(___flmul@prod+3)^0,f,c
  6582  001562  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  6583  001566  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  6584  00156A  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  6585  00156E  6A26               	clrf	___flmul@grs^0,c
  6586  001570  5025               	movf	___flmul@aexp^0,w,c
  6587  001572  C02A  F020         	movff	___flmul@bexp,??___flmul
  6588  001576  6A21               	clrf	(??___flmul+1)^0,c
  6589  001578  2620               	addwf	??___flmul^0,f,c
  6590  00157A  0E00               	movlw	0
  6591  00157C  2221               	addwfc	(??___flmul+1)^0,f,c
  6592  00157E  0E82               	movlw	130
  6593  001580  2420               	addwf	??___flmul^0,w,c
  6594  001582  6E2F               	movwf	___flmul@temp^0,c
  6595  001584  0EFF               	movlw	255
  6596  001586  2021               	addwfc	(??___flmul+1)^0,w,c
  6597  001588  6E30               	movwf	(___flmul@temp+1)^0,c
  6598  00158A  EFDC  F00A         	goto	l4596
  6599  00158E                     l4590:
  6600  00158E  90D8               	bcf	status,0,c
  6601  001590  362B               	rlcf	___flmul@prod^0,f,c
  6602  001592  362C               	rlcf	(___flmul@prod+1)^0,f,c
  6603  001594  362D               	rlcf	(___flmul@prod+2)^0,f,c
  6604  001596  362E               	rlcf	(___flmul@prod+3)^0,f,c
  6605  001598  AE29               	btfss	(___flmul@grs+3)^0,7,c
  6606  00159A  EFD1  F00A         	goto	u4571
  6607  00159E  EFD3  F00A         	goto	u4570
  6608  0015A2                     u4571:
  6609  0015A2  EFD4  F00A         	goto	l998
  6610  0015A6                     u4570:
  6611  0015A6  802B               	bsf	___flmul@prod^0,0,c
  6612  0015A8                     l998:
  6613  0015A8  90D8               	bcf	status,0,c
  6614  0015AA  3626               	rlcf	___flmul@grs^0,f,c
  6615  0015AC  3627               	rlcf	(___flmul@grs+1)^0,f,c
  6616  0015AE  3628               	rlcf	(___flmul@grs+2)^0,f,c
  6617  0015B0  3629               	rlcf	(___flmul@grs+3)^0,f,c
  6618  0015B2  062F               	decf	___flmul@temp^0,f,c
  6619  0015B4  A0D8               	btfss	status,0,c
  6620  0015B6  0630               	decf	(___flmul@temp+1)^0,f,c
  6621  0015B8                     l4596:
  6622  0015B8  AE2D               	btfss	(___flmul@prod+2)^0,7,c
  6623  0015BA  EFE1  F00A         	goto	u4581
  6624  0015BE  EFE3  F00A         	goto	u4580
  6625  0015C2                     u4581:
  6626  0015C2  EFC7  F00A         	goto	l4590
  6627  0015C6                     u4580:
  6628  0015C6  0E00               	movlw	0
  6629  0015C8  6E25               	movwf	___flmul@aexp^0,c
  6630  0015CA  AE29               	btfss	(___flmul@grs+3)^0,7,c
  6631  0015CC  EFEA  F00A         	goto	u4591
  6632  0015D0  EFEC  F00A         	goto	u4590
  6633  0015D4                     u4591:
  6634  0015D4  EF10  F00B         	goto	l1000
  6635  0015D8                     u4590:
  6636  0015D8  0EFF               	movlw	255
  6637  0015DA  1426               	andwf	___flmul@grs^0,w,c
  6638  0015DC  6E20               	movwf	??___flmul^0,c
  6639  0015DE  0EFF               	movlw	255
  6640  0015E0  1427               	andwf	(___flmul@grs+1)^0,w,c
  6641  0015E2  6E21               	movwf	(??___flmul+1)^0,c
  6642  0015E4  0EFF               	movlw	255
  6643  0015E6  1428               	andwf	(___flmul@grs+2)^0,w,c
  6644  0015E8  6E22               	movwf	(??___flmul+2)^0,c
  6645  0015EA  0E7F               	movlw	127
  6646  0015EC  1429               	andwf	(___flmul@grs+3)^0,w,c
  6647  0015EE  6E23               	movwf	(??___flmul+3)^0,c
  6648  0015F0  5020               	movf	??___flmul^0,w,c
  6649  0015F2  1021               	iorwf	(??___flmul+1)^0,w,c
  6650  0015F4  1022               	iorwf	(??___flmul+2)^0,w,c
  6651  0015F6  1023               	iorwf	(??___flmul+3)^0,w,c
  6652  0015F8  B4D8               	btfsc	status,2,c
  6653  0015FA  EF01  F00B         	goto	u4601
  6654  0015FE  EF03  F00B         	goto	u4600
  6655  001602                     u4601:
  6656  001602  EF07  F00B         	goto	l1001
  6657  001606                     u4600:
  6658  001606                     l4604:
  6659  001606  0E01               	movlw	1
  6660  001608  6E25               	movwf	___flmul@aexp^0,c
  6661  00160A  EF10  F00B         	goto	l1000
  6662  00160E                     l1001:
  6663  00160E  A02B               	btfss	___flmul@prod^0,0,c
  6664  001610  EF0C  F00B         	goto	u4611
  6665  001614  EF0E  F00B         	goto	u4610
  6666  001618                     u4611:
  6667  001618  EF10  F00B         	goto	l1000
  6668  00161C                     u4610:
  6669  00161C  EF03  F00B         	goto	l4604
  6670  001620                     l1000:
  6671  001620  5025               	movf	___flmul@aexp^0,w,c
  6672  001622  B4D8               	btfsc	status,2,c
  6673  001624  EF16  F00B         	goto	u4621
  6674  001628  EF18  F00B         	goto	u4620
  6675  00162C                     u4621:
  6676  00162C  EF3C  F00B         	goto	l4616
  6677  001630                     u4620:
  6678  001630  0E01               	movlw	1
  6679  001632  262B               	addwf	___flmul@prod^0,f,c
  6680  001634  0E00               	movlw	0
  6681  001636  222C               	addwfc	(___flmul@prod+1)^0,f,c
  6682  001638  222D               	addwfc	(___flmul@prod+2)^0,f,c
  6683  00163A  222E               	addwfc	(___flmul@prod+3)^0,f,c
  6684  00163C  A02E               	btfss	(___flmul@prod+3)^0,0,c
  6685  00163E  EF23  F00B         	goto	u4631
  6686  001642  EF25  F00B         	goto	u4630
  6687  001646                     u4631:
  6688  001646  EF3C  F00B         	goto	l4616
  6689  00164A                     u4630:
  6690  00164A  C02B  F020         	movff	___flmul@prod,??___flmul
  6691  00164E  C02C  F021         	movff	___flmul@prod+1,??___flmul+1
  6692  001652  C02D  F022         	movff	___flmul@prod+2,??___flmul+2
  6693  001656  C02E  F023         	movff	___flmul@prod+3,??___flmul+3
  6694  00165A  3423               	rlcf	(??___flmul+3)^0,w,c
  6695  00165C  3223               	rrcf	(??___flmul+3)^0,f,c
  6696  00165E  3222               	rrcf	(??___flmul+2)^0,f,c
  6697  001660  3221               	rrcf	(??___flmul+1)^0,f,c
  6698  001662  3220               	rrcf	??___flmul^0,f,c
  6699  001664  C020  F02B         	movff	??___flmul,___flmul@prod
  6700  001668  C021  F02C         	movff	??___flmul+1,___flmul@prod+1
  6701  00166C  C022  F02D         	movff	??___flmul+2,___flmul@prod+2
  6702  001670  C023  F02E         	movff	??___flmul+3,___flmul@prod+3
  6703  001674  4A2F               	infsnz	___flmul@temp^0,f,c
  6704  001676  2A30               	incf	(___flmul@temp+1)^0,f,c
  6705  001678                     l4616:
  6706  001678  BE30               	btfsc	(___flmul@temp+1)^0,7,c
  6707  00167A  EF47  F00B         	goto	u4641
  6708  00167E  5030               	movf	(___flmul@temp+1)^0,w,c
  6709  001680  E108               	bnz	u4640
  6710  001682  282F               	incf	___flmul@temp^0,w,c
  6711  001684  A0D8               	btfss	status,0,c
  6712  001686  EF47  F00B         	goto	u4641
  6713  00168A  EF49  F00B         	goto	u4640
  6714  00168E                     u4641:
  6715  00168E  EF53  F00B         	goto	l4620
  6716  001692                     u4640:
  6717  001692  0E00               	movlw	0
  6718  001694  6E2B               	movwf	___flmul@prod^0,c
  6719  001696  0E00               	movlw	0
  6720  001698  6E2C               	movwf	(___flmul@prod+1)^0,c
  6721  00169A  0E80               	movlw	128
  6722  00169C  6E2D               	movwf	(___flmul@prod+2)^0,c
  6723  00169E  0E7F               	movlw	127
  6724  0016A0  6E2E               	movwf	(___flmul@prod+3)^0,c
  6725  0016A2  EF81  F00B         	goto	l4632
  6726  0016A6                     l4620:
  6727  0016A6  BE30               	btfsc	(___flmul@temp+1)^0,7,c
  6728  0016A8  EF60  F00B         	goto	u4650
  6729  0016AC  5030               	movf	(___flmul@temp+1)^0,w,c
  6730  0016AE  E106               	bnz	u4651
  6731  0016B0  042F               	decf	___flmul@temp^0,w,c
  6732  0016B2  B0D8               	btfsc	status,0,c
  6733  0016B4  EF5E  F00B         	goto	u4651
  6734  0016B8  EF60  F00B         	goto	u4650
  6735  0016BC                     u4651:
  6736  0016BC  EF6C  F00B         	goto	l1008
  6737  0016C0                     u4650:
  6738  0016C0  0E00               	movlw	0
  6739  0016C2  6E2B               	movwf	___flmul@prod^0,c
  6740  0016C4  0E00               	movlw	0
  6741  0016C6  6E2C               	movwf	(___flmul@prod+1)^0,c
  6742  0016C8  0E00               	movlw	0
  6743  0016CA  6E2D               	movwf	(___flmul@prod+2)^0,c
  6744  0016CC  0E00               	movlw	0
  6745  0016CE  6E2E               	movwf	(___flmul@prod+3)^0,c
  6746  0016D0  0E00               	movlw	0
  6747  0016D2  6E24               	movwf	___flmul@sign^0,c
  6748  0016D4  EF81  F00B         	goto	l4632
  6749  0016D8                     l1008:
  6750  0016D8  C02F  F02A         	movff	___flmul@temp,___flmul@bexp
  6751  0016DC  0EFF               	movlw	255
  6752  0016DE  162B               	andwf	___flmul@prod^0,f,c
  6753  0016E0  0EFF               	movlw	255
  6754  0016E2  162C               	andwf	(___flmul@prod+1)^0,f,c
  6755  0016E4  0E7F               	movlw	127
  6756  0016E6  162D               	andwf	(___flmul@prod+2)^0,f,c
  6757  0016E8  0E00               	movlw	0
  6758  0016EA  162E               	andwf	(___flmul@prod+3)^0,f,c
  6759  0016EC  A02A               	btfss	___flmul@bexp^0,0,c
  6760  0016EE  EF7B  F00B         	goto	u4661
  6761  0016F2  EF7D  F00B         	goto	u4660
  6762  0016F6                     u4661:
  6763  0016F6  EF7E  F00B         	goto	l4630
  6764  0016FA                     u4660:
  6765  0016FA  8E2D               	bsf	(___flmul@prod+2)^0,7,c
  6766  0016FC                     l4630:
  6767  0016FC  90D8               	bcf	status,0,c
  6768  0016FE  302A               	rrcf	___flmul@bexp^0,w,c
  6769  001700  6E2E               	movwf	(___flmul@prod+3)^0,c
  6770  001702                     l4632:
  6771  001702  5024               	movf	___flmul@sign^0,w,c
  6772  001704  122E               	iorwf	(___flmul@prod+3)^0,f,c
  6773  001706  C02B  F018         	movff	___flmul@prod,?___flmul
  6774  00170A  C02C  F019         	movff	___flmul@prod+1,?___flmul+1
  6775  00170E  C02D  F01A         	movff	___flmul@prod+2,?___flmul+2
  6776  001712  C02E  F01B         	movff	___flmul@prod+3,?___flmul+3
  6777  001716                     l995:
  6778  001716  0012               	return		;funcret
  6779  001718                     __end_of___flmul:
  6780                           	callstack 0
  6781                           
  6782 ;; *************** function ___awmod *****************
  6783 ;; Defined at:
  6784 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  6785 ;; Parameters:    Size  Location     Type
  6786 ;;  dividend        2    9[COMRAM] int 
  6787 ;;  divisor         2   11[COMRAM] int 
  6788 ;; Auto vars:     Size  Location     Type
  6789 ;;  sign            1   14[COMRAM] unsigned char 
  6790 ;;  counter         1   13[COMRAM] unsigned char 
  6791 ;; Return value:  Size  Location     Type
  6792 ;;                  2    9[COMRAM] int 
  6793 ;; Registers used:
  6794 ;;		wreg, status,2, status,0
  6795 ;; Tracked objects:
  6796 ;;		On entry : 0/0
  6797 ;;		On exit  : 0/0
  6798 ;;		Unchanged: 0/0
  6799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6800 ;;      Params:         4       0       0       0       0       0       0       0       0
  6801 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6802 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6803 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6804 ;;Total ram usage:        6 bytes
  6805 ;; Hardware stack levels used: 1
  6806 ;; Hardware stack levels required when called: 2
  6807 ;; This function calls:
  6808 ;;		Nothing
  6809 ;; This function is called by:
  6810 ;;		_itoa
  6811 ;;		_floatToString
  6812 ;; This function uses a non-reentrant model
  6813 ;;
  6814                           
  6815                           	psect	text18
  6816  002A0C                     __ptext18:
  6817                           	callstack 0
  6818  002A0C                     ___awmod:
  6819                           	callstack 26
  6820  002A0C  0E00               	movlw	0
  6821  002A0E  6E0F               	movwf	___awmod@sign^0,c
  6822  002A10  BE0B               	btfsc	(___awmod@dividend+1)^0,7,c
  6823  002A12  EF0F  F015         	goto	u4730
  6824  002A16  EF0D  F015         	goto	u4731
  6825  002A1A                     u4731:
  6826  002A1A  EF15  F015         	goto	l4696
  6827  002A1E                     u4730:
  6828  002A1E  6C0A               	negf	___awmod@dividend^0,c
  6829  002A20  1E0B               	comf	(___awmod@dividend+1)^0,f,c
  6830  002A22  B0D8               	btfsc	status,0,c
  6831  002A24  2A0B               	incf	(___awmod@dividend+1)^0,f,c
  6832  002A26  0E01               	movlw	1
  6833  002A28  6E0F               	movwf	___awmod@sign^0,c
  6834  002A2A                     l4696:
  6835  002A2A  BE0D               	btfsc	(___awmod@divisor+1)^0,7,c
  6836  002A2C  EF1C  F015         	goto	u4740
  6837  002A30  EF1A  F015         	goto	u4741
  6838  002A34                     u4741:
  6839  002A34  EF20  F015         	goto	l4700
  6840  002A38                     u4740:
  6841  002A38  6C0C               	negf	___awmod@divisor^0,c
  6842  002A3A  1E0D               	comf	(___awmod@divisor+1)^0,f,c
  6843  002A3C  B0D8               	btfsc	status,0,c
  6844  002A3E  2A0D               	incf	(___awmod@divisor+1)^0,f,c
  6845  002A40                     l4700:
  6846  002A40  500C               	movf	___awmod@divisor^0,w,c
  6847  002A42  100D               	iorwf	(___awmod@divisor+1)^0,w,c
  6848  002A44  B4D8               	btfsc	status,2,c
  6849  002A46  EF27  F015         	goto	u4751
  6850  002A4A  EF29  F015         	goto	u4750
  6851  002A4E                     u4751:
  6852  002A4E  EF4D  F015         	goto	l4716
  6853  002A52                     u4750:
  6854  002A52  0E01               	movlw	1
  6855  002A54  6E0E               	movwf	___awmod@counter^0,c
  6856  002A56  EF31  F015         	goto	l4706
  6857  002A5A                     l4704:
  6858  002A5A  90D8               	bcf	status,0,c
  6859  002A5C  360C               	rlcf	___awmod@divisor^0,f,c
  6860  002A5E  360D               	rlcf	(___awmod@divisor+1)^0,f,c
  6861  002A60  2A0E               	incf	___awmod@counter^0,f,c
  6862  002A62                     l4706:
  6863  002A62  AE0D               	btfss	(___awmod@divisor+1)^0,7,c
  6864  002A64  EF36  F015         	goto	u4761
  6865  002A68  EF38  F015         	goto	u4760
  6866  002A6C                     u4761:
  6867  002A6C  EF2D  F015         	goto	l4704
  6868  002A70                     u4760:
  6869  002A70                     l4708:
  6870  002A70  500C               	movf	___awmod@divisor^0,w,c
  6871  002A72  5C0A               	subwf	___awmod@dividend^0,w,c
  6872  002A74  500D               	movf	(___awmod@divisor+1)^0,w,c
  6873  002A76  580B               	subwfb	(___awmod@dividend+1)^0,w,c
  6874  002A78  A0D8               	btfss	status,0,c
  6875  002A7A  EF41  F015         	goto	u4771
  6876  002A7E  EF43  F015         	goto	u4770
  6877  002A82                     u4771:
  6878  002A82  EF47  F015         	goto	l4712
  6879  002A86                     u4770:
  6880  002A86  500C               	movf	___awmod@divisor^0,w,c
  6881  002A88  5E0A               	subwf	___awmod@dividend^0,f,c
  6882  002A8A  500D               	movf	(___awmod@divisor+1)^0,w,c
  6883  002A8C  5A0B               	subwfb	(___awmod@dividend+1)^0,f,c
  6884  002A8E                     l4712:
  6885  002A8E  90D8               	bcf	status,0,c
  6886  002A90  320D               	rrcf	(___awmod@divisor+1)^0,f,c
  6887  002A92  320C               	rrcf	___awmod@divisor^0,f,c
  6888  002A94  2E0E               	decfsz	___awmod@counter^0,f,c
  6889  002A96  EF38  F015         	goto	l4708
  6890  002A9A                     l4716:
  6891  002A9A  500F               	movf	___awmod@sign^0,w,c
  6892  002A9C  B4D8               	btfsc	status,2,c
  6893  002A9E  EF53  F015         	goto	u4781
  6894  002AA2  EF55  F015         	goto	u4780
  6895  002AA6                     u4781:
  6896  002AA6  EF59  F015         	goto	l4720
  6897  002AAA                     u4780:
  6898  002AAA  6C0A               	negf	___awmod@dividend^0,c
  6899  002AAC  1E0B               	comf	(___awmod@dividend+1)^0,f,c
  6900  002AAE  B0D8               	btfsc	status,0,c
  6901  002AB0  2A0B               	incf	(___awmod@dividend+1)^0,f,c
  6902  002AB2                     l4720:
  6903  002AB2  C00A  F00A         	movff	___awmod@dividend,?___awmod
  6904  002AB6  C00B  F00B         	movff	___awmod@dividend+1,?___awmod+1
  6905  002ABA  0012               	return		;funcret
  6906  002ABC                     __end_of___awmod:
  6907                           	callstack 0
  6908                           
  6909 ;; *************** function ___awdiv *****************
  6910 ;; Defined at:
  6911 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  6912 ;; Parameters:    Size  Location     Type
  6913 ;;  dividend        2    9[COMRAM] int 
  6914 ;;  divisor         2   11[COMRAM] int 
  6915 ;; Auto vars:     Size  Location     Type
  6916 ;;  quotient        2   15[COMRAM] int 
  6917 ;;  sign            1   14[COMRAM] unsigned char 
  6918 ;;  counter         1   13[COMRAM] unsigned char 
  6919 ;; Return value:  Size  Location     Type
  6920 ;;                  2    9[COMRAM] int 
  6921 ;; Registers used:
  6922 ;;		wreg, status,2, status,0
  6923 ;; Tracked objects:
  6924 ;;		On entry : 0/0
  6925 ;;		On exit  : 0/0
  6926 ;;		Unchanged: 0/0
  6927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6928 ;;      Params:         4       0       0       0       0       0       0       0       0
  6929 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6930 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6931 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6932 ;;Total ram usage:        8 bytes
  6933 ;; Hardware stack levels used: 1
  6934 ;; Hardware stack levels required when called: 2
  6935 ;; This function calls:
  6936 ;;		Nothing
  6937 ;; This function is called by:
  6938 ;;		_itoa
  6939 ;;		_floatToString
  6940 ;; This function uses a non-reentrant model
  6941 ;;
  6942                           
  6943                           	psect	text19
  6944  00270E                     __ptext19:
  6945                           	callstack 0
  6946  00270E                     ___awdiv:
  6947                           	callstack 26
  6948  00270E  0E00               	movlw	0
  6949  002710  6E0F               	movwf	___awdiv@sign^0,c
  6950  002712  BE0D               	btfsc	(___awdiv@divisor+1)^0,7,c
  6951  002714  EF90  F013         	goto	u4670
  6952  002718  EF8E  F013         	goto	u4671
  6953  00271C                     u4671:
  6954  00271C  EF96  F013         	goto	l4652
  6955  002720                     u4670:
  6956  002720  6C0C               	negf	___awdiv@divisor^0,c
  6957  002722  1E0D               	comf	(___awdiv@divisor+1)^0,f,c
  6958  002724  B0D8               	btfsc	status,0,c
  6959  002726  2A0D               	incf	(___awdiv@divisor+1)^0,f,c
  6960  002728  0E01               	movlw	1
  6961  00272A  6E0F               	movwf	___awdiv@sign^0,c
  6962  00272C                     l4652:
  6963  00272C  BE0B               	btfsc	(___awdiv@dividend+1)^0,7,c
  6964  00272E  EF9D  F013         	goto	u4680
  6965  002732  EF9B  F013         	goto	u4681
  6966  002736                     u4681:
  6967  002736  EFA3  F013         	goto	l4658
  6968  00273A                     u4680:
  6969  00273A  6C0A               	negf	___awdiv@dividend^0,c
  6970  00273C  1E0B               	comf	(___awdiv@dividend+1)^0,f,c
  6971  00273E  B0D8               	btfsc	status,0,c
  6972  002740  2A0B               	incf	(___awdiv@dividend+1)^0,f,c
  6973  002742  0E01               	movlw	1
  6974  002744  1A0F               	xorwf	___awdiv@sign^0,f,c
  6975  002746                     l4658:
  6976  002746  0E00               	movlw	0
  6977  002748  6E11               	movwf	(___awdiv@quotient+1)^0,c
  6978  00274A  0E00               	movlw	0
  6979  00274C  6E10               	movwf	___awdiv@quotient^0,c
  6980  00274E  500C               	movf	___awdiv@divisor^0,w,c
  6981  002750  100D               	iorwf	(___awdiv@divisor+1)^0,w,c
  6982  002752  B4D8               	btfsc	status,2,c
  6983  002754  EFAE  F013         	goto	u4691
  6984  002758  EFB0  F013         	goto	u4690
  6985  00275C                     u4691:
  6986  00275C  EFD8  F013         	goto	l4680
  6987  002760                     u4690:
  6988  002760  0E01               	movlw	1
  6989  002762  6E0E               	movwf	___awdiv@counter^0,c
  6990  002764  EFB8  F013         	goto	l4666
  6991  002768                     l4664:
  6992  002768  90D8               	bcf	status,0,c
  6993  00276A  360C               	rlcf	___awdiv@divisor^0,f,c
  6994  00276C  360D               	rlcf	(___awdiv@divisor+1)^0,f,c
  6995  00276E  2A0E               	incf	___awdiv@counter^0,f,c
  6996  002770                     l4666:
  6997  002770  AE0D               	btfss	(___awdiv@divisor+1)^0,7,c
  6998  002772  EFBD  F013         	goto	u4701
  6999  002776  EFBF  F013         	goto	u4700
  7000  00277A                     u4701:
  7001  00277A  EFB4  F013         	goto	l4664
  7002  00277E                     u4700:
  7003  00277E                     l4668:
  7004  00277E  90D8               	bcf	status,0,c
  7005  002780  3610               	rlcf	___awdiv@quotient^0,f,c
  7006  002782  3611               	rlcf	(___awdiv@quotient+1)^0,f,c
  7007  002784  500C               	movf	___awdiv@divisor^0,w,c
  7008  002786  5C0A               	subwf	___awdiv@dividend^0,w,c
  7009  002788  500D               	movf	(___awdiv@divisor+1)^0,w,c
  7010  00278A  580B               	subwfb	(___awdiv@dividend+1)^0,w,c
  7011  00278C  A0D8               	btfss	status,0,c
  7012  00278E  EFCB  F013         	goto	u4711
  7013  002792  EFCD  F013         	goto	u4710
  7014  002796                     u4711:
  7015  002796  EFD2  F013         	goto	l4676
  7016  00279A                     u4710:
  7017  00279A  500C               	movf	___awdiv@divisor^0,w,c
  7018  00279C  5E0A               	subwf	___awdiv@dividend^0,f,c
  7019  00279E  500D               	movf	(___awdiv@divisor+1)^0,w,c
  7020  0027A0  5A0B               	subwfb	(___awdiv@dividend+1)^0,f,c
  7021  0027A2  8010               	bsf	___awdiv@quotient^0,0,c
  7022  0027A4                     l4676:
  7023  0027A4  90D8               	bcf	status,0,c
  7024  0027A6  320D               	rrcf	(___awdiv@divisor+1)^0,f,c
  7025  0027A8  320C               	rrcf	___awdiv@divisor^0,f,c
  7026  0027AA  2E0E               	decfsz	___awdiv@counter^0,f,c
  7027  0027AC  EFBF  F013         	goto	l4668
  7028  0027B0                     l4680:
  7029  0027B0  500F               	movf	___awdiv@sign^0,w,c
  7030  0027B2  B4D8               	btfsc	status,2,c
  7031  0027B4  EFDE  F013         	goto	u4721
  7032  0027B8  EFE0  F013         	goto	u4720
  7033  0027BC                     u4721:
  7034  0027BC  EFE4  F013         	goto	l4684
  7035  0027C0                     u4720:
  7036  0027C0  6C10               	negf	___awdiv@quotient^0,c
  7037  0027C2  1E11               	comf	(___awdiv@quotient+1)^0,f,c
  7038  0027C4  B0D8               	btfsc	status,0,c
  7039  0027C6  2A11               	incf	(___awdiv@quotient+1)^0,f,c
  7040  0027C8                     l4684:
  7041  0027C8  C010  F00A         	movff	___awdiv@quotient,?___awdiv
  7042  0027CC  C011  F00B         	movff	___awdiv@quotient+1,?___awdiv+1
  7043  0027D0  0012               	return		;funcret
  7044  0027D2                     __end_of___awdiv:
  7045                           	callstack 0
  7046                           
  7047 ;; *************** function _displayStuff *****************
  7048 ;; Defined at:
  7049 ;;		line 627 in file "main.c"
  7050 ;; Parameters:    Size  Location     Type
  7051 ;;  row             2   10[COMRAM] int 
  7052 ;;  column          2   12[COMRAM] int 
  7053 ;;  stuff           2   14[COMRAM] PTR unsigned char 
  7054 ;;		 -> readTwoDigitValue@input(3), STR_27(13), STR_26(12), STR_25(17), 
  7055 ;;		 -> STR_24(14), STR_23(3), STR_22(10), STR_21(16), 
  7056 ;;		 -> STR_20(16), STR_19(16), STR_18(3), STR_17(9), 
  7057 ;;		 -> STR_16(5), STR_15(4), STR_14(5), STR_13(5), 
  7058 ;;		 -> STR_12(2), STR_11(7), STR_10(5), STR_9(2), 
  7059 ;;		 -> displayMenu@valueStr(10), STR_8(6), STR_7(15), STR_6(11), 
  7060 ;;		 -> STR_5(11), STR_4(13), STR_3(12), STR_2(12), 
  7061 ;;		 -> STR_1(13), 
  7062 ;; Auto vars:     Size  Location     Type
  7063 ;;  LCDWritePosi    2   16[COMRAM] int 
  7064 ;; Return value:  Size  Location     Type
  7065 ;;                  1    wreg      void 
  7066 ;; Registers used:
  7067 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7068 ;; Tracked objects:
  7069 ;;		On entry : 0/0
  7070 ;;		On exit  : 0/0
  7071 ;;		Unchanged: 0/0
  7072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7073 ;;      Params:         6       0       0       0       0       0       0       0       0
  7074 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7075 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7076 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7077 ;;Total ram usage:       10 bytes
  7078 ;; Hardware stack levels used: 1
  7079 ;; Hardware stack levels required when called: 4
  7080 ;; This function calls:
  7081 ;;		_WriteCmdXLCD
  7082 ;;		_WriteDataXLCD
  7083 ;; This function is called by:
  7084 ;;		_main
  7085 ;;		_displayMenu
  7086 ;;		_readTwoDigitValue
  7087 ;; This function uses a non-reentrant model
  7088 ;;
  7089                           
  7090                           	psect	text20
  7091  002ABC                     __ptext20:
  7092                           	callstack 0
  7093  002ABC                     _displayStuff:
  7094                           	callstack 25
  7095  002ABC                     
  7096                           ;main.c: 629:     int LCDWritePosition = (row == 0 ? 0x80 : 0xC0) + column;
  7097  002ABC  500B               	movf	displayStuff@row^0,w,c
  7098  002ABE  100C               	iorwf	(displayStuff@row+1)^0,w,c
  7099  002AC0  B4D8               	btfsc	status,2,c
  7100  002AC2  EF65  F015         	goto	u3331
  7101  002AC6  EF67  F015         	goto	u3330
  7102  002ACA                     u3331:
  7103  002ACA  EF6D  F015         	goto	l3556
  7104  002ACE                     u3330:
  7105  002ACE  0E00               	movlw	0
  7106  002AD0  6E14               	movwf	(_displayStuff$782+1)^0,c
  7107  002AD2  0EC0               	movlw	192
  7108  002AD4  6E13               	movwf	_displayStuff$782^0,c
  7109  002AD6  EF71  F015         	goto	l3558
  7110  002ADA                     l3556:
  7111  002ADA  0E00               	movlw	0
  7112  002ADC  6E14               	movwf	(_displayStuff$782+1)^0,c
  7113  002ADE  0E80               	movlw	128
  7114  002AE0  6E13               	movwf	_displayStuff$782^0,c
  7115  002AE2                     l3558:
  7116  002AE2  500D               	movf	displayStuff@column^0,w,c
  7117  002AE4  2413               	addwf	_displayStuff$782^0,w,c
  7118  002AE6  6E11               	movwf	displayStuff@LCDWritePosition^0,c
  7119  002AE8  500E               	movf	(displayStuff@column+1)^0,w,c
  7120  002AEA  2014               	addwfc	(_displayStuff$782+1)^0,w,c
  7121  002AEC  6E12               	movwf	(displayStuff@LCDWritePosition+1)^0,c
  7122  002AEE                     
  7123                           ;main.c: 631:     WriteCmdXLCD(LCDWritePosition);
  7124  002AEE  5011               	movf	displayStuff@LCDWritePosition^0,w,c
  7125  002AF0  EC37  F017         	call	_WriteCmdXLCD
  7126                           
  7127                           ;main.c: 634:     while (*stuff) {
  7128  002AF4  EF90  F015         	goto	l3566
  7129  002AF8                     l3562:
  7130                           
  7131                           ;main.c: 635:         WriteDataXLCD(*stuff);
  7132  002AF8  C00F  FFF6         	movff	displayStuff@stuff,tblptrl
  7133  002AFC  C010  FFF7         	movff	displayStuff@stuff+1,tblptrh
  7134  002B00  6AF8               	clrf	tblptru,c
  7135  002B02  0E07               	movlw	(high __ramtop+-1)
  7136  002B04  64F7               	cpfsgt	tblptrh,c
  7137  002B06  D003               	bra	u3347
  7138  002B08  0008               	tblrd		*
  7139  002B0A  50F5               	movf	tablat,w,c
  7140  002B0C  D005               	bra	u3340
  7141  002B0E                     u3347:
  7142  002B0E  CFF6 FFE1          	movff	tblptrl,fsr1l
  7143  002B12  CFF7 FFE2          	movff	tblptrh,fsr1h
  7144  002B16  50E7               	movf	indf1,w,c
  7145  002B18                     u3340:
  7146  002B18  EC18  F017         	call	_WriteDataXLCD
  7147  002B1C                     
  7148                           ;main.c: 636:         stuff++;
  7149  002B1C  4A0F               	infsnz	displayStuff@stuff^0,f,c
  7150  002B1E  2A10               	incf	(displayStuff@stuff+1)^0,f,c
  7151  002B20                     l3566:
  7152                           
  7153                           ;main.c: 634:     while (*stuff) {
  7154  002B20  C00F  FFF6         	movff	displayStuff@stuff,tblptrl
  7155  002B24  C010  FFF7         	movff	displayStuff@stuff+1,tblptrh
  7156  002B28  6AF8               	clrf	tblptru,c
  7157  002B2A  0E07               	movlw	(high __ramtop+-1)
  7158  002B2C  64F7               	cpfsgt	tblptrh,c
  7159  002B2E  D003               	bra	u3357
  7160  002B30  0008               	tblrd		*
  7161  002B32  50F5               	movf	tablat,w,c
  7162  002B34  D005               	bra	u3350
  7163  002B36                     u3357:
  7164  002B36  CFF6 FFE1          	movff	tblptrl,fsr1l
  7165  002B3A  CFF7 FFE2          	movff	tblptrh,fsr1h
  7166  002B3E  50E7               	movf	indf1,w,c
  7167  002B40                     u3350:
  7168  002B40  0900               	iorlw	0
  7169  002B42  A4D8               	btfss	status,2,c
  7170  002B44  EFA6  F015         	goto	u3361
  7171  002B48  EFA8  F015         	goto	u3360
  7172  002B4C                     u3361:
  7173  002B4C  EF7C  F015         	goto	l3562
  7174  002B50                     u3360:
  7175  002B50  0012               	return		;funcret
  7176  002B52                     __end_of_displayStuff:
  7177                           	callstack 0
  7178                           
  7179 ;; *************** function _WriteDataXLCD *****************
  7180 ;; Defined at:
  7181 ;;		line 449 in file "nxlcd.c"
  7182 ;; Parameters:    Size  Location     Type
  7183 ;;  data            1    wreg     unsigned char 
  7184 ;; Auto vars:     Size  Location     Type
  7185 ;;  data            1    9[COMRAM] unsigned char 
  7186 ;; Return value:  Size  Location     Type
  7187 ;;                  1    wreg      void 
  7188 ;; Registers used:
  7189 ;;		wreg, status,2, status,0, cstack
  7190 ;; Tracked objects:
  7191 ;;		On entry : 0/0
  7192 ;;		On exit  : 0/0
  7193 ;;		Unchanged: 0/0
  7194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7195 ;;      Params:         0       0       0       0       0       0       0       0       0
  7196 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7197 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7198 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7199 ;;Total ram usage:        1 bytes
  7200 ;; Hardware stack levels used: 1
  7201 ;; Hardware stack levels required when called: 3
  7202 ;; This function calls:
  7203 ;;		_DelayFor18TCY
  7204 ;; This function is called by:
  7205 ;;		_displayStuff
  7206 ;;		_putsXLCD
  7207 ;;		_putrsXLCD
  7208 ;; This function uses a non-reentrant model
  7209 ;;
  7210                           
  7211                           	psect	text21
  7212  002E30                     __ptext21:
  7213                           	callstack 0
  7214  002E30                     _WriteDataXLCD:
  7215                           	callstack 25
  7216                           
  7217                           ;incstack = 0
  7218                           ;WriteDataXLCD@data stored from wreg
  7219  002E30  6E0A               	movwf	WriteDataXLCD@data^0,c
  7220  002E32                     
  7221                           ;nxlcd.c: 449: void WriteDataXLCD(char data);nxlcd.c: 450: {;nxlcd.c: 464:         TRISD
      +                           &= 0x0f;
  7222  002E32  0E0F               	movlw	15
  7223  002E34  1695               	andwf	149,f,c	;volatile
  7224                           
  7225                           ;nxlcd.c: 465:         PORTD &= 0x0f;
  7226  002E36  0E0F               	movlw	15
  7227  002E38  1683               	andwf	131,f,c	;volatile
  7228                           
  7229                           ;nxlcd.c: 466:         PORTD |= data&0xf0;
  7230  002E3A  500A               	movf	WriteDataXLCD@data^0,w,c
  7231  002E3C  0BF0               	andlw	240
  7232  002E3E  1283               	iorwf	131,f,c	;volatile
  7233  002E40                     
  7234                           ;nxlcd.c: 472:         LATEbits.LATE0 = 1;
  7235  002E40  808D               	bsf	141,0,c	;volatile
  7236  002E42                     
  7237                           ;nxlcd.c: 473:         LATEbits.LATE2 = 0;
  7238  002E42  948D               	bcf	141,2,c	;volatile
  7239  002E44                     
  7240                           ;nxlcd.c: 474:         DelayFor18TCY();
  7241  002E44  ECB5  F017         	call	_DelayFor18TCY	;wreg free
  7242  002E48                     
  7243                           ;nxlcd.c: 475:         LATEbits.LATE1 = 1;
  7244  002E48  828D               	bsf	141,1,c	;volatile
  7245  002E4A                     
  7246                           ;nxlcd.c: 476:         DelayFor18TCY();
  7247  002E4A  ECB5  F017         	call	_DelayFor18TCY	;wreg free
  7248  002E4E                     
  7249                           ;nxlcd.c: 477:         LATEbits.LATE1 = 0;
  7250  002E4E  928D               	bcf	141,1,c	;volatile
  7251                           
  7252                           ;nxlcd.c: 479:         PORTD &= 0x0f;
  7253  002E50  0E0F               	movlw	15
  7254  002E52  1683               	andwf	131,f,c	;volatile
  7255                           
  7256                           ;nxlcd.c: 480:         PORTD |= ((data<<4)&0xf0);
  7257  002E54  380A               	swapf	WriteDataXLCD@data^0,w,c
  7258  002E56  0BF0               	andlw	240
  7259  002E58  0BF0               	andlw	240
  7260  002E5A  1283               	iorwf	131,f,c	;volatile
  7261  002E5C                     
  7262                           ;nxlcd.c: 485:         DelayFor18TCY();
  7263  002E5C  ECB5  F017         	call	_DelayFor18TCY	;wreg free
  7264  002E60                     
  7265                           ;nxlcd.c: 486:         LATEbits.LATE1 = 1;
  7266  002E60  828D               	bsf	141,1,c	;volatile
  7267  002E62                     
  7268                           ;nxlcd.c: 487:         DelayFor18TCY();
  7269  002E62  ECB5  F017         	call	_DelayFor18TCY	;wreg free
  7270  002E66                     
  7271                           ;nxlcd.c: 488:         LATEbits.LATE1 = 0;
  7272  002E66  928D               	bcf	141,1,c	;volatile
  7273                           
  7274                           ;nxlcd.c: 490:         TRISD |= 0xf0;
  7275  002E68  0EF0               	movlw	240
  7276  002E6A  1295               	iorwf	149,f,c	;volatile
  7277  002E6C  0012               	return		;funcret
  7278  002E6E                     __end_of_WriteDataXLCD:
  7279                           	callstack 0
  7280                           
  7281 ;; *************** function ___flge *****************
  7282 ;; Defined at:
  7283 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  7284 ;; Parameters:    Size  Location     Type
  7285 ;;  ff1             4   23[COMRAM] void 
  7286 ;;  ff2             4   27[COMRAM] void 
  7287 ;; Auto vars:     Size  Location     Type
  7288 ;;		None
  7289 ;; Return value:  Size  Location     Type
  7290 ;;		None               void
  7291 ;; Registers used:
  7292 ;;		wreg, status,2, status,0
  7293 ;; Tracked objects:
  7294 ;;		On entry : 0/0
  7295 ;;		On exit  : 0/0
  7296 ;;		Unchanged: 0/0
  7297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7298 ;;      Params:         8       0       0       0       0       0       0       0       0
  7299 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7300 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7301 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7302 ;;Total ram usage:       12 bytes
  7303 ;; Hardware stack levels used: 1
  7304 ;; Hardware stack levels required when called: 2
  7305 ;; This function calls:
  7306 ;;		Nothing
  7307 ;; This function is called by:
  7308 ;;		_main
  7309 ;;		_displayMenu
  7310 ;; This function uses a non-reentrant model
  7311 ;;
  7312                           
  7313                           	psect	text22
  7314  00251C                     __ptext22:
  7315                           	callstack 0
  7316  00251C                     ___flge:
  7317                           	callstack 27
  7318  00251C  0E00               	movlw	0
  7319  00251E  1418               	andwf	___flge@ff1^0,w,c
  7320  002520  6E20               	movwf	??___flge^0,c
  7321  002522  0E00               	movlw	0
  7322  002524  1419               	andwf	(___flge@ff1+1)^0,w,c
  7323  002526  6E21               	movwf	(??___flge+1)^0,c
  7324  002528  0E80               	movlw	128
  7325  00252A  141A               	andwf	(___flge@ff1+2)^0,w,c
  7326  00252C  6E22               	movwf	(??___flge+2)^0,c
  7327  00252E  0E7F               	movlw	127
  7328  002530  141B               	andwf	(___flge@ff1+3)^0,w,c
  7329  002532  6E23               	movwf	(??___flge+3)^0,c
  7330  002534  5020               	movf	??___flge^0,w,c
  7331  002536  1021               	iorwf	(??___flge+1)^0,w,c
  7332  002538  1022               	iorwf	(??___flge+2)^0,w,c
  7333  00253A  1023               	iorwf	(??___flge+3)^0,w,c
  7334  00253C  A4D8               	btfss	status,2,c
  7335  00253E  EFA3  F012         	goto	u3531
  7336  002542  EFA5  F012         	goto	u3530
  7337  002546                     u3531:
  7338  002546  EFAD  F012         	goto	l3762
  7339  00254A                     u3530:
  7340  00254A  0E00               	movlw	0
  7341  00254C  6E18               	movwf	___flge@ff1^0,c
  7342  00254E  0E00               	movlw	0
  7343  002550  6E19               	movwf	(___flge@ff1+1)^0,c
  7344  002552  0E00               	movlw	0
  7345  002554  6E1A               	movwf	(___flge@ff1+2)^0,c
  7346  002556  0E00               	movlw	0
  7347  002558  6E1B               	movwf	(___flge@ff1+3)^0,c
  7348  00255A                     l3762:
  7349  00255A  0E00               	movlw	0
  7350  00255C  141C               	andwf	___flge@ff2^0,w,c
  7351  00255E  6E20               	movwf	??___flge^0,c
  7352  002560  0E00               	movlw	0
  7353  002562  141D               	andwf	(___flge@ff2+1)^0,w,c
  7354  002564  6E21               	movwf	(??___flge+1)^0,c
  7355  002566  0E80               	movlw	128
  7356  002568  141E               	andwf	(___flge@ff2+2)^0,w,c
  7357  00256A  6E22               	movwf	(??___flge+2)^0,c
  7358  00256C  0E7F               	movlw	127
  7359  00256E  141F               	andwf	(___flge@ff2+3)^0,w,c
  7360  002570  6E23               	movwf	(??___flge+3)^0,c
  7361  002572  5020               	movf	??___flge^0,w,c
  7362  002574  1021               	iorwf	(??___flge+1)^0,w,c
  7363  002576  1022               	iorwf	(??___flge+2)^0,w,c
  7364  002578  1023               	iorwf	(??___flge+3)^0,w,c
  7365  00257A  A4D8               	btfss	status,2,c
  7366  00257C  EFC2  F012         	goto	u3541
  7367  002580  EFC4  F012         	goto	u3540
  7368  002584                     u3541:
  7369  002584  EFCC  F012         	goto	l3766
  7370  002588                     u3540:
  7371  002588  0E00               	movlw	0
  7372  00258A  6E1C               	movwf	___flge@ff2^0,c
  7373  00258C  0E00               	movlw	0
  7374  00258E  6E1D               	movwf	(___flge@ff2+1)^0,c
  7375  002590  0E00               	movlw	0
  7376  002592  6E1E               	movwf	(___flge@ff2+2)^0,c
  7377  002594  0E00               	movlw	0
  7378  002596  6E1F               	movwf	(___flge@ff2+3)^0,c
  7379  002598                     l3766:
  7380  002598  AE1B               	btfss	(___flge@ff1+3)^0,7,c
  7381  00259A  EFD1  F012         	goto	u3551
  7382  00259E  EFD3  F012         	goto	u3550
  7383  0025A2                     u3551:
  7384  0025A2  EFDC  F012         	goto	l3770
  7385  0025A6                     u3550:
  7386  0025A6  6C18               	negf	___flge@ff1^0,c
  7387  0025A8  1E19               	comf	(___flge@ff1+1)^0,f,c
  7388  0025AA  B0D8               	btfsc	status,0,c
  7389  0025AC  2A19               	incf	(___flge@ff1+1)^0,f,c
  7390  0025AE  1E1A               	comf	(___flge@ff1+2)^0,f,c
  7391  0025B0  B0D8               	btfsc	status,0,c
  7392  0025B2  2A1A               	incf	(___flge@ff1+2)^0,f,c
  7393  0025B4  0E80               	movlw	128
  7394  0025B6  561B               	subfwb	(___flge@ff1+3)^0,f,c
  7395  0025B8                     l3770:
  7396  0025B8  AE1F               	btfss	(___flge@ff2+3)^0,7,c
  7397  0025BA  EFE1  F012         	goto	u3561
  7398  0025BE  EFE3  F012         	goto	u3560
  7399  0025C2                     u3561:
  7400  0025C2  EFEC  F012         	goto	l642
  7401  0025C6                     u3560:
  7402  0025C6  6C1C               	negf	___flge@ff2^0,c
  7403  0025C8  1E1D               	comf	(___flge@ff2+1)^0,f,c
  7404  0025CA  B0D8               	btfsc	status,0,c
  7405  0025CC  2A1D               	incf	(___flge@ff2+1)^0,f,c
  7406  0025CE  1E1E               	comf	(___flge@ff2+2)^0,f,c
  7407  0025D0  B0D8               	btfsc	status,0,c
  7408  0025D2  2A1E               	incf	(___flge@ff2+2)^0,f,c
  7409  0025D4  0E80               	movlw	128
  7410  0025D6  561F               	subfwb	(___flge@ff2+3)^0,f,c
  7411  0025D8                     l642:
  7412  0025D8  0E00               	movlw	0
  7413  0025DA  1A18               	xorwf	___flge@ff1^0,f,c
  7414  0025DC  0E00               	movlw	0
  7415  0025DE  1A19               	xorwf	(___flge@ff1+1)^0,f,c
  7416  0025E0  0E00               	movlw	0
  7417  0025E2  1A1A               	xorwf	(___flge@ff1+2)^0,f,c
  7418  0025E4  0E80               	movlw	128
  7419  0025E6  1A1B               	xorwf	(___flge@ff1+3)^0,f,c
  7420  0025E8  0E00               	movlw	0
  7421  0025EA  1A1C               	xorwf	___flge@ff2^0,f,c
  7422  0025EC  0E00               	movlw	0
  7423  0025EE  1A1D               	xorwf	(___flge@ff2+1)^0,f,c
  7424  0025F0  0E00               	movlw	0
  7425  0025F2  1A1E               	xorwf	(___flge@ff2+2)^0,f,c
  7426  0025F4  0E80               	movlw	128
  7427  0025F6  1A1F               	xorwf	(___flge@ff2+3)^0,f,c
  7428  0025F8  501C               	movf	___flge@ff2^0,w,c
  7429  0025FA  5C18               	subwf	___flge@ff1^0,w,c
  7430  0025FC  501D               	movf	(___flge@ff2+1)^0,w,c
  7431  0025FE  5819               	subwfb	(___flge@ff1+1)^0,w,c
  7432  002600  501E               	movf	(___flge@ff2+2)^0,w,c
  7433  002602  581A               	subwfb	(___flge@ff1+2)^0,w,c
  7434  002604  501F               	movf	(___flge@ff2+3)^0,w,c
  7435  002606  581B               	subwfb	(___flge@ff1+3)^0,w,c
  7436  002608  B0D8               	btfsc	status,0,c
  7437  00260A  EF09  F013         	goto	u3571
  7438  00260E  EF0B  F013         	goto	u3570
  7439  002612                     u3571:
  7440  002612  EF0E  F013         	goto	l3776
  7441  002616                     u3570:
  7442  002616  90D8               	bcf	status,0,c
  7443  002618  EF0F  F013         	goto	l647
  7444  00261C                     l3776:
  7445  00261C  80D8               	bsf	status,0,c
  7446  00261E                     l647:
  7447  00261E  0012               	return		;funcret
  7448  002620                     __end_of___flge:
  7449                           	callstack 0
  7450                           
  7451 ;; *************** function _configureTimer *****************
  7452 ;; Defined at:
  7453 ;;		line 490 in file "main.c"
  7454 ;; Parameters:    Size  Location     Type
  7455 ;;		None
  7456 ;; Auto vars:     Size  Location     Type
  7457 ;;		None
  7458 ;; Return value:  Size  Location     Type
  7459 ;;                  1    wreg      void 
  7460 ;; Registers used:
  7461 ;;		wreg, status,2
  7462 ;; Tracked objects:
  7463 ;;		On entry : 0/0
  7464 ;;		On exit  : 0/0
  7465 ;;		Unchanged: 0/0
  7466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7467 ;;      Params:         0       0       0       0       0       0       0       0       0
  7468 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7469 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7470 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7471 ;;Total ram usage:        0 bytes
  7472 ;; Hardware stack levels used: 1
  7473 ;; Hardware stack levels required when called: 2
  7474 ;; This function calls:
  7475 ;;		Nothing
  7476 ;; This function is called by:
  7477 ;;		_main
  7478 ;; This function uses a non-reentrant model
  7479 ;;
  7480                           
  7481                           	psect	text23
  7482  002F52                     __ptext23:
  7483                           	callstack 0
  7484  002F52                     _configureTimer:
  7485                           	callstack 28
  7486  002F52                     
  7487                           ;main.c: 491:     T0CON = 0b11000100;
  7488  002F52  0EC4               	movlw	196
  7489  002F54  6ED5               	movwf	213,c	;volatile
  7490                           
  7491                           ;main.c: 497:     TMR0L = 100;
  7492  002F56  0E64               	movlw	100
  7493  002F58  6ED6               	movwf	214,c	;volatile
  7494  002F5A                     
  7495                           ;main.c: 499:     INTCONbits.TMR0IF = 0;
  7496  002F5A  94F2               	bcf	242,2,c	;volatile
  7497  002F5C  0012               	return		;funcret
  7498  002F5E                     __end_of_configureTimer:
  7499                           	callstack 0
  7500                           
  7501 ;; *************** function _configureLCD *****************
  7502 ;; Defined at:
  7503 ;;		line 458 in file "main.c"
  7504 ;; Parameters:    Size  Location     Type
  7505 ;;		None
  7506 ;; Auto vars:     Size  Location     Type
  7507 ;;		None
  7508 ;; Return value:  Size  Location     Type
  7509 ;;                  1    wreg      void 
  7510 ;; Registers used:
  7511 ;;		wreg, status,2, status,0, cstack
  7512 ;; Tracked objects:
  7513 ;;		On entry : 0/0
  7514 ;;		On exit  : 0/0
  7515 ;;		Unchanged: 0/0
  7516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7517 ;;      Params:         0       0       0       0       0       0       0       0       0
  7518 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7519 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7520 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7521 ;;Total ram usage:        1 bytes
  7522 ;; Hardware stack levels used: 1
  7523 ;; Hardware stack levels required when called: 5
  7524 ;; This function calls:
  7525 ;;		_OpenXLCD
  7526 ;;		_WriteCmdXLCD
  7527 ;; This function is called by:
  7528 ;;		_main
  7529 ;; This function uses a non-reentrant model
  7530 ;;
  7531                           
  7532                           	psect	text24
  7533  002D64                     __ptext24:
  7534                           	callstack 0
  7535  002D64                     _configureLCD:
  7536                           	callstack 25
  7537  002D64                     
  7538                           ;main.c: 459:     OpenXLCD(0b00101100 & 0b00111000);
  7539  002D64  0E28               	movlw	40
  7540  002D66  EC10  F013         	call	_OpenXLCD
  7541                           
  7542                           ;main.c: 460:     WriteCmdXLCD(0x01);
  7543  002D6A  0E01               	movlw	1
  7544  002D6C  EC37  F017         	call	_WriteCmdXLCD
  7545  002D70                     
  7546                           ;main.c: 461:     _delay((unsigned long)((10)*(20000000/4000.0)));
  7547  002D70  0E41               	movlw	65
  7548  002D72  6E0C               	movwf	??_configureLCD^0,c
  7549  002D74  0EEE               	movlw	238
  7550  002D76                     u5537:
  7551  002D76  2EE8               	decfsz	wreg,f,c
  7552  002D78  D7FE               	bra	u5537
  7553  002D7A  2E0C               	decfsz	??_configureLCD^0,f,c
  7554  002D7C  D7FC               	bra	u5537
  7555  002D7E  D000               	nop2	
  7556  002D80                     
  7557                           ;main.c: 464:     WriteCmdXLCD(0x02);
  7558  002D80  0E02               	movlw	2
  7559  002D82  EC37  F017         	call	_WriteCmdXLCD
  7560                           
  7561                           ;main.c: 465:     _delay((unsigned long)((2)*(20000000/4000.0)));
  7562  002D86  0E0D               	movlw	13
  7563  002D88  6E0C               	movwf	??_configureLCD^0,c
  7564  002D8A  0EFC               	movlw	252
  7565  002D8C                     u5547:
  7566  002D8C  2EE8               	decfsz	wreg,f,c
  7567  002D8E  D7FE               	bra	u5547
  7568  002D90  2E0C               	decfsz	??_configureLCD^0,f,c
  7569  002D92  D7FC               	bra	u5547
  7570  002D94                     
  7571                           ;main.c: 466:     WriteCmdXLCD(0x0C);
  7572  002D94  0E0C               	movlw	12
  7573  002D96  EC37  F017         	call	_WriteCmdXLCD
  7574  002D9A                     
  7575                           ;main.c: 467:     _delay((unsigned long)((2)*(20000000/4000.0)));
  7576  002D9A  0E0D               	movlw	13
  7577  002D9C  6E0C               	movwf	??_configureLCD^0,c
  7578  002D9E  0EFC               	movlw	252
  7579  002DA0                     u5557:
  7580  002DA0  2EE8               	decfsz	wreg,f,c
  7581  002DA2  D7FE               	bra	u5557
  7582  002DA4  2E0C               	decfsz	??_configureLCD^0,f,c
  7583  002DA6  D7FC               	bra	u5557
  7584  002DA8  0012               	return		;funcret
  7585  002DAA                     __end_of_configureLCD:
  7586                           	callstack 0
  7587                           
  7588 ;; *************** function _OpenXLCD *****************
  7589 ;; Defined at:
  7590 ;;		line 41 in file "nxlcd.c"
  7591 ;; Parameters:    Size  Location     Type
  7592 ;;  lcdtype         1    wreg     unsigned char 
  7593 ;; Auto vars:     Size  Location     Type
  7594 ;;  lcdtype         1   10[COMRAM] unsigned char 
  7595 ;; Return value:  Size  Location     Type
  7596 ;;                  1    wreg      void 
  7597 ;; Registers used:
  7598 ;;		wreg, status,2, status,0, cstack
  7599 ;; Tracked objects:
  7600 ;;		On entry : 0/0
  7601 ;;		On exit  : 0/0
  7602 ;;		Unchanged: 0/0
  7603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7604 ;;      Params:         0       0       0       0       0       0       0       0       0
  7605 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7606 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7607 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7608 ;;Total ram usage:        1 bytes
  7609 ;; Hardware stack levels used: 1
  7610 ;; Hardware stack levels required when called: 4
  7611 ;; This function calls:
  7612 ;;		_BusyXLCD
  7613 ;;		_DelayPORXLCD
  7614 ;;		_DelayXLCD
  7615 ;;		_SetDDRamAddr
  7616 ;;		_WriteCmdXLCD
  7617 ;; This function is called by:
  7618 ;;		_configureLCD
  7619 ;; This function uses a non-reentrant model
  7620 ;;
  7621                           
  7622                           	psect	text25
  7623  002620                     __ptext25:
  7624                           	callstack 0
  7625  002620                     _OpenXLCD:
  7626                           	callstack 25
  7627                           
  7628                           ;incstack = 0
  7629                           ;OpenXLCD@lcdtype stored from wreg
  7630  002620  6E0B               	movwf	OpenXLCD@lcdtype^0,c
  7631  002622                     
  7632                           ;nxlcd.c: 41: void OpenXLCD(unsigned char lcdtype);nxlcd.c: 42: {;nxlcd.c: 50:         P
      +                          ORTD &= 0x0f;
  7633  002622  0E0F               	movlw	15
  7634  002624  1683               	andwf	131,f,c	;volatile
  7635                           
  7636                           ;nxlcd.c: 51:         TRISD &= 0x0F;
  7637  002626  0E0F               	movlw	15
  7638  002628  1695               	andwf	149,f,c	;volatile
  7639  00262A                     
  7640                           ;nxlcd.c: 57:         TRISEbits.TRISE2 = 0;
  7641  00262A  9496               	bcf	150,2,c	;volatile
  7642  00262C                     
  7643                           ;nxlcd.c: 58:         TRISEbits.TRISE0 = 0;
  7644  00262C  9096               	bcf	150,0,c	;volatile
  7645  00262E                     
  7646                           ;nxlcd.c: 59:         TRISEbits.TRISE1 = 0;
  7647  00262E  9296               	bcf	150,1,c	;volatile
  7648  002630                     
  7649                           ;nxlcd.c: 60:         LATEbits.LATE2 = 0;
  7650  002630  948D               	bcf	141,2,c	;volatile
  7651  002632                     
  7652                           ;nxlcd.c: 61:         LATEbits.LATE0 = 0;
  7653  002632  908D               	bcf	141,0,c	;volatile
  7654  002634                     
  7655                           ;nxlcd.c: 62:         LATEbits.LATE1 = 0;
  7656  002634  928D               	bcf	141,1,c	;volatile
  7657  002636                     
  7658                           ;nxlcd.c: 65:         DelayPORXLCD();
  7659  002636  ECA1  F017         	call	_DelayPORXLCD	;wreg free
  7660  00263A                     
  7661                           ;nxlcd.c: 67:    WriteCmdXLCD(0x30);
  7662  00263A  0E30               	movlw	48
  7663  00263C  EC37  F017         	call	_WriteCmdXLCD
  7664  002640                     
  7665                           ;nxlcd.c: 68:    DelayXLCD();
  7666  002640  EC8F  F017         	call	_DelayXLCD	;wreg free
  7667  002644                     
  7668                           ;nxlcd.c: 69:    DelayXLCD();
  7669  002644  EC8F  F017         	call	_DelayXLCD	;wreg free
  7670  002648                     
  7671                           ;nxlcd.c: 70:    WriteCmdXLCD(0x30);
  7672  002648  0E30               	movlw	48
  7673  00264A  EC37  F017         	call	_WriteCmdXLCD
  7674  00264E                     
  7675                           ;nxlcd.c: 71:    DelayXLCD();
  7676  00264E  EC8F  F017         	call	_DelayXLCD	;wreg free
  7677  002652                     
  7678                           ;nxlcd.c: 72:    DelayXLCD();
  7679  002652  EC8F  F017         	call	_DelayXLCD	;wreg free
  7680  002656                     
  7681                           ;nxlcd.c: 73:    WriteCmdXLCD(0x32);
  7682  002656  0E32               	movlw	50
  7683  002658  EC37  F017         	call	_WriteCmdXLCD
  7684  00265C                     l3730:
  7685  00265C  ECD5  F016         	call	_BusyXLCD	;wreg free
  7686  002660  0900               	iorlw	0
  7687  002662  A4D8               	btfss	status,2,c
  7688  002664  EF36  F013         	goto	u3461
  7689  002668  EF38  F013         	goto	u3460
  7690  00266C                     u3461:
  7691  00266C  EF2E  F013         	goto	l3730
  7692  002670                     u3460:
  7693  002670                     l3732:
  7694  002670  ECD5  F016         	call	_BusyXLCD	;wreg free
  7695  002674  0900               	iorlw	0
  7696  002676  A4D8               	btfss	status,2,c
  7697  002678  EF40  F013         	goto	u3471
  7698  00267C  EF42  F013         	goto	u3470
  7699  002680                     u3471:
  7700  002680  EF38  F013         	goto	l3732
  7701  002684                     u3470:
  7702  002684                     
  7703                           ;nxlcd.c: 80:         WriteCmdXLCD(lcdtype);
  7704  002684  500B               	movf	OpenXLCD@lcdtype^0,w,c
  7705  002686  EC37  F017         	call	_WriteCmdXLCD
  7706  00268A                     l3736:
  7707  00268A  ECD5  F016         	call	_BusyXLCD	;wreg free
  7708  00268E  0900               	iorlw	0
  7709  002690  A4D8               	btfss	status,2,c
  7710  002692  EF4D  F013         	goto	u3481
  7711  002696  EF4F  F013         	goto	u3480
  7712  00269A                     u3481:
  7713  00269A  EF45  F013         	goto	l3736
  7714  00269E                     u3480:
  7715  00269E                     
  7716                           ;nxlcd.c: 84:         WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  7717  00269E  0E08               	movlw	8
  7718  0026A0  EC37  F017         	call	_WriteCmdXLCD
  7719  0026A4                     l3740:
  7720  0026A4  ECD5  F016         	call	_BusyXLCD	;wreg free
  7721  0026A8  0900               	iorlw	0
  7722  0026AA  A4D8               	btfss	status,2,c
  7723  0026AC  EF5A  F013         	goto	u3491
  7724  0026B0  EF5C  F013         	goto	u3490
  7725  0026B4                     u3491:
  7726  0026B4  EF52  F013         	goto	l3740
  7727  0026B8                     u3490:
  7728  0026B8                     
  7729                           ;nxlcd.c: 86:         WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  7730  0026B8  0E0F               	movlw	15
  7731  0026BA  EC37  F017         	call	_WriteCmdXLCD
  7732  0026BE                     l3744:
  7733  0026BE  ECD5  F016         	call	_BusyXLCD	;wreg free
  7734  0026C2  0900               	iorlw	0
  7735  0026C4  A4D8               	btfss	status,2,c
  7736  0026C6  EF67  F013         	goto	u3501
  7737  0026CA  EF69  F013         	goto	u3500
  7738  0026CE                     u3501:
  7739  0026CE  EF5F  F013         	goto	l3744
  7740  0026D2                     u3500:
  7741  0026D2                     
  7742                           ;nxlcd.c: 90:         WriteCmdXLCD(0x01);
  7743  0026D2  0E01               	movlw	1
  7744  0026D4  EC37  F017         	call	_WriteCmdXLCD
  7745  0026D8                     l3748:
  7746  0026D8  ECD5  F016         	call	_BusyXLCD	;wreg free
  7747  0026DC  0900               	iorlw	0
  7748  0026DE  A4D8               	btfss	status,2,c
  7749  0026E0  EF74  F013         	goto	u3511
  7750  0026E4  EF76  F013         	goto	u3510
  7751  0026E8                     u3511:
  7752  0026E8  EF6C  F013         	goto	l3748
  7753  0026EC                     u3510:
  7754  0026EC                     
  7755                           ;nxlcd.c: 94:         WriteCmdXLCD(0b00000100);
  7756  0026EC  0E04               	movlw	4
  7757  0026EE  EC37  F017         	call	_WriteCmdXLCD
  7758  0026F2                     l3752:
  7759  0026F2  ECD5  F016         	call	_BusyXLCD	;wreg free
  7760  0026F6  0900               	iorlw	0
  7761  0026F8  A4D8               	btfss	status,2,c
  7762  0026FA  EF81  F013         	goto	u3521
  7763  0026FE  EF83  F013         	goto	u3520
  7764  002702                     u3521:
  7765  002702  EF79  F013         	goto	l3752
  7766  002706                     u3520:
  7767  002706                     
  7768                           ;nxlcd.c: 98:         SetDDRamAddr(0x80);
  7769  002706  0E80               	movlw	128
  7770  002708  ECF8  F016         	call	_SetDDRamAddr
  7771  00270C  0012               	return		;funcret
  7772  00270E                     __end_of_OpenXLCD:
  7773                           	callstack 0
  7774                           
  7775 ;; *************** function _WriteCmdXLCD *****************
  7776 ;; Defined at:
  7777 ;;		line 388 in file "nxlcd.c"
  7778 ;; Parameters:    Size  Location     Type
  7779 ;;  cmd             1    wreg     unsigned char 
  7780 ;; Auto vars:     Size  Location     Type
  7781 ;;  cmd             1    9[COMRAM] unsigned char 
  7782 ;; Return value:  Size  Location     Type
  7783 ;;                  1    wreg      void 
  7784 ;; Registers used:
  7785 ;;		wreg, status,2, status,0, cstack
  7786 ;; Tracked objects:
  7787 ;;		On entry : 0/0
  7788 ;;		On exit  : 0/0
  7789 ;;		Unchanged: 0/0
  7790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7791 ;;      Params:         0       0       0       0       0       0       0       0       0
  7792 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7793 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7794 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7795 ;;Total ram usage:        1 bytes
  7796 ;; Hardware stack levels used: 1
  7797 ;; Hardware stack levels required when called: 3
  7798 ;; This function calls:
  7799 ;;		_DelayFor18TCY
  7800 ;; This function is called by:
  7801 ;;		_displayMenu
  7802 ;;		_readTwoDigitValue
  7803 ;;		_configureLCD
  7804 ;;		_displayStuff
  7805 ;;		_OpenXLCD
  7806 ;; This function uses a non-reentrant model
  7807 ;;
  7808                           
  7809                           	psect	text26
  7810  002E6E                     __ptext26:
  7811                           	callstack 0
  7812  002E6E                     _WriteCmdXLCD:
  7813                           	callstack 25
  7814                           
  7815                           ;incstack = 0
  7816                           ;WriteCmdXLCD@cmd stored from wreg
  7817  002E6E  6E0A               	movwf	WriteCmdXLCD@cmd^0,c
  7818  002E70                     
  7819                           ;nxlcd.c: 388: void WriteCmdXLCD(unsigned char cmd);nxlcd.c: 389: {;nxlcd.c: 403:       
      +                            TRISD &= 0x0f;
  7820  002E70  0E0F               	movlw	15
  7821  002E72  1695               	andwf	149,f,c	;volatile
  7822                           
  7823                           ;nxlcd.c: 404:         PORTD &= 0x0f;
  7824  002E74  0E0F               	movlw	15
  7825  002E76  1683               	andwf	131,f,c	;volatile
  7826                           
  7827                           ;nxlcd.c: 405:         PORTD |= cmd&0xf0;
  7828  002E78  500A               	movf	WriteCmdXLCD@cmd^0,w,c
  7829  002E7A  0BF0               	andlw	240
  7830  002E7C  1283               	iorwf	131,f,c	;volatile
  7831  002E7E                     
  7832                           ;nxlcd.c: 411:         LATEbits.LATE2 = 0;
  7833  002E7E  948D               	bcf	141,2,c	;volatile
  7834  002E80                     
  7835                           ;nxlcd.c: 412:         LATEbits.LATE0 = 0;
  7836  002E80  908D               	bcf	141,0,c	;volatile
  7837  002E82                     
  7838                           ;nxlcd.c: 413:         DelayFor18TCY();
  7839  002E82  ECB5  F017         	call	_DelayFor18TCY	;wreg free
  7840  002E86                     
  7841                           ;nxlcd.c: 414:         LATEbits.LATE1 = 1;
  7842  002E86  828D               	bsf	141,1,c	;volatile
  7843  002E88                     
  7844                           ;nxlcd.c: 415:         DelayFor18TCY();
  7845  002E88  ECB5  F017         	call	_DelayFor18TCY	;wreg free
  7846  002E8C                     
  7847                           ;nxlcd.c: 416:         LATEbits.LATE1 = 0;
  7848  002E8C  928D               	bcf	141,1,c	;volatile
  7849                           
  7850                           ;nxlcd.c: 418:         PORTD &= 0x0f;
  7851  002E8E  0E0F               	movlw	15
  7852  002E90  1683               	andwf	131,f,c	;volatile
  7853                           
  7854                           ;nxlcd.c: 419:         PORTD |= (cmd<<4)&0xf0;
  7855  002E92  380A               	swapf	WriteCmdXLCD@cmd^0,w,c
  7856  002E94  0BF0               	andlw	240
  7857  002E96  0BF0               	andlw	240
  7858  002E98  1283               	iorwf	131,f,c	;volatile
  7859  002E9A                     
  7860                           ;nxlcd.c: 424:         DelayFor18TCY();
  7861  002E9A  ECB5  F017         	call	_DelayFor18TCY	;wreg free
  7862  002E9E                     
  7863                           ;nxlcd.c: 425:         LATEbits.LATE1 = 1;
  7864  002E9E  828D               	bsf	141,1,c	;volatile
  7865  002EA0                     
  7866                           ;nxlcd.c: 426:         DelayFor18TCY();
  7867  002EA0  ECB5  F017         	call	_DelayFor18TCY	;wreg free
  7868  002EA4                     
  7869                           ;nxlcd.c: 427:         LATEbits.LATE1 = 0;
  7870  002EA4  928D               	bcf	141,1,c	;volatile
  7871                           
  7872                           ;nxlcd.c: 429:         TRISD |= 0xf0;
  7873  002EA6  0EF0               	movlw	240
  7874  002EA8  1295               	iorwf	149,f,c	;volatile
  7875  002EAA  0012               	return		;funcret
  7876  002EAC                     __end_of_WriteCmdXLCD:
  7877                           	callstack 0
  7878                           
  7879 ;; *************** function _SetDDRamAddr *****************
  7880 ;; Defined at:
  7881 ;;		line 171 in file "nxlcd.c"
  7882 ;; Parameters:    Size  Location     Type
  7883 ;;  DDaddr          1    wreg     unsigned char 
  7884 ;; Auto vars:     Size  Location     Type
  7885 ;;  DDaddr          1    9[COMRAM] unsigned char 
  7886 ;; Return value:  Size  Location     Type
  7887 ;;                  1    wreg      void 
  7888 ;; Registers used:
  7889 ;;		wreg, status,2, status,0, cstack
  7890 ;; Tracked objects:
  7891 ;;		On entry : 0/0
  7892 ;;		On exit  : 0/0
  7893 ;;		Unchanged: 0/0
  7894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7895 ;;      Params:         0       0       0       0       0       0       0       0       0
  7896 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7897 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7898 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7899 ;;Total ram usage:        1 bytes
  7900 ;; Hardware stack levels used: 1
  7901 ;; Hardware stack levels required when called: 3
  7902 ;; This function calls:
  7903 ;;		_DelayFor18TCY
  7904 ;; This function is called by:
  7905 ;;		_OpenXLCD
  7906 ;; This function uses a non-reentrant model
  7907 ;;
  7908                           
  7909                           	psect	text27
  7910  002DF0                     __ptext27:
  7911                           	callstack 0
  7912  002DF0                     _SetDDRamAddr:
  7913                           	callstack 25
  7914                           
  7915                           ;incstack = 0
  7916                           ;SetDDRamAddr@DDaddr stored from wreg
  7917  002DF0  6E0A               	movwf	SetDDRamAddr@DDaddr^0,c
  7918  002DF2                     
  7919                           ;nxlcd.c: 171: void SetDDRamAddr(unsigned char DDaddr);nxlcd.c: 172: {;nxlcd.c: 186:    
      +                               TRISD &= 0x0f;
  7920  002DF2  0E0F               	movlw	15
  7921  002DF4  1695               	andwf	149,f,c	;volatile
  7922                           
  7923                           ;nxlcd.c: 187:         PORTD &= 0x0f;
  7924  002DF6  0E0F               	movlw	15
  7925  002DF8  1683               	andwf	131,f,c	;volatile
  7926                           
  7927                           ;nxlcd.c: 188:         PORTD |= ((DDaddr | 0b10000000) & 0xf0);
  7928  002DFA  500A               	movf	SetDDRamAddr@DDaddr^0,w,c
  7929  002DFC  0980               	iorlw	128
  7930  002DFE  0BF0               	andlw	240
  7931  002E00  1283               	iorwf	131,f,c	;volatile
  7932  002E02                     
  7933                           ;nxlcd.c: 194:         LATEbits.LATE2 = 0;
  7934  002E02  948D               	bcf	141,2,c	;volatile
  7935  002E04                     
  7936                           ;nxlcd.c: 195:         LATEbits.LATE0 = 0;
  7937  002E04  908D               	bcf	141,0,c	;volatile
  7938  002E06                     
  7939                           ;nxlcd.c: 196:         DelayFor18TCY();
  7940  002E06  ECB5  F017         	call	_DelayFor18TCY	;wreg free
  7941  002E0A                     
  7942                           ;nxlcd.c: 197:         LATEbits.LATE1 = 1;
  7943  002E0A  828D               	bsf	141,1,c	;volatile
  7944  002E0C                     
  7945                           ;nxlcd.c: 198:         DelayFor18TCY();
  7946  002E0C  ECB5  F017         	call	_DelayFor18TCY	;wreg free
  7947  002E10                     
  7948                           ;nxlcd.c: 199:         LATEbits.LATE1 = 0;
  7949  002E10  928D               	bcf	141,1,c	;volatile
  7950                           
  7951                           ;nxlcd.c: 201:         PORTD &= 0x0f;
  7952  002E12  0E0F               	movlw	15
  7953  002E14  1683               	andwf	131,f,c	;volatile
  7954                           
  7955                           ;nxlcd.c: 202:         PORTD |= ((DDaddr<<4)&0xf0);
  7956  002E16  380A               	swapf	SetDDRamAddr@DDaddr^0,w,c
  7957  002E18  0BF0               	andlw	240
  7958  002E1A  0BF0               	andlw	240
  7959  002E1C  1283               	iorwf	131,f,c	;volatile
  7960  002E1E                     
  7961                           ;nxlcd.c: 207:         DelayFor18TCY();
  7962  002E1E  ECB5  F017         	call	_DelayFor18TCY	;wreg free
  7963  002E22                     
  7964                           ;nxlcd.c: 208:         LATEbits.LATE1 = 1;
  7965  002E22  828D               	bsf	141,1,c	;volatile
  7966  002E24                     
  7967                           ;nxlcd.c: 209:         DelayFor18TCY();
  7968  002E24  ECB5  F017         	call	_DelayFor18TCY	;wreg free
  7969  002E28                     
  7970                           ;nxlcd.c: 210:         LATEbits.LATE1 = 0;
  7971  002E28  928D               	bcf	141,1,c	;volatile
  7972                           
  7973                           ;nxlcd.c: 212:         TRISD |= 0xf0;
  7974  002E2A  0EF0               	movlw	240
  7975  002E2C  1295               	iorwf	149,f,c	;volatile
  7976  002E2E  0012               	return		;funcret
  7977  002E30                     __end_of_SetDDRamAddr:
  7978                           	callstack 0
  7979                           
  7980 ;; *************** function _DelayXLCD *****************
  7981 ;; Defined at:
  7982 ;;		line 22 in file "nxlcd.c"
  7983 ;; Parameters:    Size  Location     Type
  7984 ;;		None
  7985 ;; Auto vars:     Size  Location     Type
  7986 ;;		None
  7987 ;; Return value:  Size  Location     Type
  7988 ;;                  1    wreg      void 
  7989 ;; Registers used:
  7990 ;;		wreg
  7991 ;; Tracked objects:
  7992 ;;		On entry : 0/0
  7993 ;;		On exit  : 0/0
  7994 ;;		Unchanged: 0/0
  7995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7996 ;;      Params:         0       0       0       0       0       0       0       0       0
  7997 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7998 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7999 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8000 ;;Total ram usage:        1 bytes
  8001 ;; Hardware stack levels used: 1
  8002 ;; Hardware stack levels required when called: 2
  8003 ;; This function calls:
  8004 ;;		Nothing
  8005 ;; This function is called by:
  8006 ;;		_OpenXLCD
  8007 ;; This function uses a non-reentrant model
  8008 ;;
  8009                           
  8010                           	psect	text28
  8011  002F1E                     __ptext28:
  8012                           	callstack 0
  8013  002F1E                     _DelayXLCD:
  8014                           	callstack 26
  8015  002F1E                     
  8016                           ;nxlcd.c: 24:     _delay((unsigned long)((5)*(20000000/4000.0)));
  8017  002F1E  0E21               	movlw	33
  8018  002F20  6E0A               	movwf	??_DelayXLCD^0,c
  8019  002F22  0E76               	movlw	118
  8020  002F24                     u5567:
  8021  002F24  2EE8               	decfsz	wreg,f,c
  8022  002F26  D7FE               	bra	u5567
  8023  002F28  2E0A               	decfsz	??_DelayXLCD^0,f,c
  8024  002F2A  D7FC               	bra	u5567
  8025  002F2C  D000               	nop2	
  8026  002F2E  0012               	return		;funcret
  8027  002F30                     __end_of_DelayXLCD:
  8028                           	callstack 0
  8029                           
  8030 ;; *************** function _DelayPORXLCD *****************
  8031 ;; Defined at:
  8032 ;;		line 17 in file "nxlcd.c"
  8033 ;; Parameters:    Size  Location     Type
  8034 ;;		None
  8035 ;; Auto vars:     Size  Location     Type
  8036 ;;		None
  8037 ;; Return value:  Size  Location     Type
  8038 ;;                  1    wreg      void 
  8039 ;; Registers used:
  8040 ;;		wreg
  8041 ;; Tracked objects:
  8042 ;;		On entry : 0/0
  8043 ;;		On exit  : 0/0
  8044 ;;		Unchanged: 0/0
  8045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8046 ;;      Params:         0       0       0       0       0       0       0       0       0
  8047 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8048 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8049 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8050 ;;Total ram usage:        1 bytes
  8051 ;; Hardware stack levels used: 1
  8052 ;; Hardware stack levels required when called: 2
  8053 ;; This function calls:
  8054 ;;		Nothing
  8055 ;; This function is called by:
  8056 ;;		_OpenXLCD
  8057 ;; This function uses a non-reentrant model
  8058 ;;
  8059                           
  8060                           	psect	text29
  8061  002F42                     __ptext29:
  8062                           	callstack 0
  8063  002F42                     _DelayPORXLCD:
  8064                           	callstack 26
  8065  002F42                     
  8066                           ;nxlcd.c: 19:     _delay((unsigned long)((15)*(20000000/4000.0)));
  8067  002F42  0E62               	movlw	98
  8068  002F44  6E0A               	movwf	??_DelayPORXLCD^0,c
  8069  002F46  0E66               	movlw	102
  8070  002F48                     u5577:
  8071  002F48  2EE8               	decfsz	wreg,f,c
  8072  002F4A  D7FE               	bra	u5577
  8073  002F4C  2E0A               	decfsz	??_DelayPORXLCD^0,f,c
  8074  002F4E  D7FC               	bra	u5577
  8075  002F50  0012               	return		;funcret
  8076  002F52                     __end_of_DelayPORXLCD:
  8077                           	callstack 0
  8078                           
  8079 ;; *************** function _BusyXLCD *****************
  8080 ;; Defined at:
  8081 ;;		line 227 in file "nxlcd.c"
  8082 ;; Parameters:    Size  Location     Type
  8083 ;;		None
  8084 ;; Auto vars:     Size  Location     Type
  8085 ;;		None
  8086 ;; Return value:  Size  Location     Type
  8087 ;;                  1    wreg      unsigned char 
  8088 ;; Registers used:
  8089 ;;		wreg, cstack
  8090 ;; Tracked objects:
  8091 ;;		On entry : 0/0
  8092 ;;		On exit  : 0/0
  8093 ;;		Unchanged: 0/0
  8094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8095 ;;      Params:         0       0       0       0       0       0       0       0       0
  8096 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8097 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8098 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8099 ;;Total ram usage:        0 bytes
  8100 ;; Hardware stack levels used: 1
  8101 ;; Hardware stack levels required when called: 3
  8102 ;; This function calls:
  8103 ;;		_DelayFor18TCY
  8104 ;; This function is called by:
  8105 ;;		_OpenXLCD
  8106 ;;		_putsXLCD
  8107 ;;		_putrsXLCD
  8108 ;; This function uses a non-reentrant model
  8109 ;;
  8110                           
  8111                           	psect	text30
  8112  002DAA                     __ptext30:
  8113                           	callstack 0
  8114  002DAA                     _BusyXLCD:
  8115                           	callstack 25
  8116  002DAA                     
  8117                           ;nxlcd.c: 229:         LATEbits.LATE2 = 1;
  8118  002DAA  848D               	bsf	141,2,c	;volatile
  8119                           
  8120                           ;nxlcd.c: 230:         LATEbits.LATE0 = 0;
  8121  002DAC  908D               	bcf	141,0,c	;volatile
  8122  002DAE                     
  8123                           ;nxlcd.c: 231:         DelayFor18TCY();
  8124  002DAE  ECB5  F017         	call	_DelayFor18TCY	;wreg free
  8125  002DB2                     
  8126                           ;nxlcd.c: 232:         LATEbits.LATE1 = 1;
  8127  002DB2  828D               	bsf	141,1,c	;volatile
  8128                           
  8129                           ;nxlcd.c: 233:         DelayFor18TCY();
  8130  002DB4  ECB5  F017         	call	_DelayFor18TCY	;wreg free
  8131  002DB8                     
  8132                           ;nxlcd.c: 249:         if(PORTD&0x80)
  8133  002DB8  AE83               	btfss	131,7,c	;volatile
  8134  002DBA  EFE1  F016         	goto	u2461
  8135  002DBE  EFE3  F016         	goto	u2460
  8136  002DC2                     u2461:
  8137  002DC2  EFEE  F016         	goto	l342
  8138  002DC6                     u2460:
  8139  002DC6                     
  8140                           ;nxlcd.c: 253:         {;nxlcd.c: 254:                 LATEbits.LATE1 = 0;
  8141  002DC6  928D               	bcf	141,1,c	;volatile
  8142  002DC8                     
  8143                           ;nxlcd.c: 255:                 DelayFor18TCY();
  8144  002DC8  ECB5  F017         	call	_DelayFor18TCY	;wreg free
  8145  002DCC                     
  8146                           ;nxlcd.c: 256:                 LATEbits.LATE1 = 1;
  8147  002DCC  828D               	bsf	141,1,c	;volatile
  8148                           
  8149                           ;nxlcd.c: 257:                 DelayFor18TCY();
  8150  002DCE  ECB5  F017         	call	_DelayFor18TCY	;wreg free
  8151  002DD2                     
  8152                           ;nxlcd.c: 258:                 LATEbits.LATE1 = 0;
  8153  002DD2  928D               	bcf	141,1,c	;volatile
  8154  002DD4                     
  8155                           ;nxlcd.c: 259:                 LATEbits.LATE2 = 0;
  8156  002DD4  948D               	bcf	141,2,c	;volatile
  8157  002DD6                     
  8158                           ;nxlcd.c: 260:                 return 1;
  8159  002DD6  0E01               	movlw	1
  8160  002DD8  EFF7  F016         	goto	l343
  8161  002DDC                     l342:
  8162                           
  8163                           ;nxlcd.c: 263:         {;nxlcd.c: 264:                 LATEbits.LATE1 = 0;
  8164  002DDC  928D               	bcf	141,1,c	;volatile
  8165  002DDE                     
  8166                           ;nxlcd.c: 265:                 DelayFor18TCY();
  8167  002DDE  ECB5  F017         	call	_DelayFor18TCY	;wreg free
  8168  002DE2                     
  8169                           ;nxlcd.c: 266:                 LATEbits.LATE1 = 1;
  8170  002DE2  828D               	bsf	141,1,c	;volatile
  8171                           
  8172                           ;nxlcd.c: 267:                 DelayFor18TCY();
  8173  002DE4  ECB5  F017         	call	_DelayFor18TCY	;wreg free
  8174  002DE8                     
  8175                           ;nxlcd.c: 268:                 LATEbits.LATE1 = 0;
  8176  002DE8  928D               	bcf	141,1,c	;volatile
  8177  002DEA                     
  8178                           ;nxlcd.c: 269:                 LATEbits.LATE2 = 0;
  8179  002DEA  948D               	bcf	141,2,c	;volatile
  8180  002DEC                     
  8181                           ;nxlcd.c: 270:                 return 0;
  8182  002DEC  0E00               	movlw	0
  8183  002DEE                     l343:
  8184  002DEE  0012               	return		;funcret
  8185  002DF0                     __end_of_BusyXLCD:
  8186                           	callstack 0
  8187                           
  8188 ;; *************** function _DelayFor18TCY *****************
  8189 ;; Defined at:
  8190 ;;		line 12 in file "nxlcd.c"
  8191 ;; Parameters:    Size  Location     Type
  8192 ;;		None
  8193 ;; Auto vars:     Size  Location     Type
  8194 ;;		None
  8195 ;; Return value:  Size  Location     Type
  8196 ;;                  1    wreg      void 
  8197 ;; Registers used:
  8198 ;;		wreg
  8199 ;; Tracked objects:
  8200 ;;		On entry : 0/0
  8201 ;;		On exit  : 0/0
  8202 ;;		Unchanged: 0/0
  8203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8204 ;;      Params:         0       0       0       0       0       0       0       0       0
  8205 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8206 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8207 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8208 ;;Total ram usage:        0 bytes
  8209 ;; Hardware stack levels used: 1
  8210 ;; Hardware stack levels required when called: 2
  8211 ;; This function calls:
  8212 ;;		Nothing
  8213 ;; This function is called by:
  8214 ;;		_SetDDRamAddr
  8215 ;;		_BusyXLCD
  8216 ;;		_WriteCmdXLCD
  8217 ;;		_WriteDataXLCD
  8218 ;;		_SetCGRamAddr
  8219 ;;		_ReadAddrXLCD
  8220 ;;		_ReadDataXLCD
  8221 ;; This function uses a non-reentrant model
  8222 ;;
  8223                           
  8224                           	psect	text31
  8225  002F6A                     __ptext31:
  8226                           	callstack 0
  8227  002F6A                     _DelayFor18TCY:
  8228                           	callstack 25
  8229  002F6A                     
  8230                           ;nxlcd.c: 14:     _delay((unsigned long)((20)*(20000000/4000000.0)));
  8231  002F6A  0E21               	movlw	33
  8232  002F6C                     u5587:
  8233  002F6C  2EE8               	decfsz	wreg,f,c
  8234  002F6E  D7FE               	bra	u5587
  8235  002F70  F000               	nop	
  8236  002F72  0012               	return		;funcret
  8237  002F74                     __end_of_DelayFor18TCY:
  8238                           	callstack 0
  8239                           
  8240 ;; *************** function _configureInterrupt *****************
  8241 ;; Defined at:
  8242 ;;		line 472 in file "main.c"
  8243 ;; Parameters:    Size  Location     Type
  8244 ;;		None
  8245 ;; Auto vars:     Size  Location     Type
  8246 ;;		None
  8247 ;; Return value:  Size  Location     Type
  8248 ;;                  1    wreg      void 
  8249 ;; Registers used:
  8250 ;;		None
  8251 ;; Tracked objects:
  8252 ;;		On entry : 0/0
  8253 ;;		On exit  : 0/0
  8254 ;;		Unchanged: 0/0
  8255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8256 ;;      Params:         0       0       0       0       0       0       0       0       0
  8257 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8258 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8259 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8260 ;;Total ram usage:        0 bytes
  8261 ;; Hardware stack levels used: 1
  8262 ;; Hardware stack levels required when called: 2
  8263 ;; This function calls:
  8264 ;;		Nothing
  8265 ;; This function is called by:
  8266 ;;		_main
  8267 ;; This function uses a non-reentrant model
  8268 ;;
  8269                           
  8270                           	psect	text32
  8271  002F0A                     __ptext32:
  8272                           	callstack 0
  8273  002F0A                     _configureInterrupt:
  8274                           	callstack 28
  8275  002F0A                     
  8276                           ;main.c: 475:     RCONbits.IPEN = 1;
  8277  002F0A  8ED0               	bsf	208,7,c	;volatile
  8278                           
  8279                           ;main.c: 476:     INTCONbits.GIE = 1;
  8280  002F0C  8EF2               	bsf	242,7,c	;volatile
  8281                           
  8282                           ;main.c: 477:     INTCONbits.PEIE = 1;
  8283  002F0E  8CF2               	bsf	242,6,c	;volatile
  8284                           
  8285                           ;main.c: 479:     INTCON2bits.TMR0IP = 1;
  8286  002F10  84F1               	bsf	241,2,c	;volatile
  8287                           
  8288                           ;main.c: 480:     INTCONbits.TMR0IE = 1;
  8289  002F12  8AF2               	bsf	242,5,c	;volatile
  8290                           
  8291                           ;main.c: 481:     INTCONbits.TMR0IF = 0;
  8292  002F14  94F2               	bcf	242,2,c	;volatile
  8293                           
  8294                           ;main.c: 483:     INTCON2bits.RBIP = 0;
  8295  002F16  90F1               	bcf	241,0,c	;volatile
  8296                           
  8297                           ;main.c: 484:     INTCONbits.RBIE = 1;
  8298  002F18  86F2               	bsf	242,3,c	;volatile
  8299                           
  8300                           ;main.c: 485:     INTCONbits.RBIF = 0;
  8301  002F1A  90F2               	bcf	242,0,c	;volatile
  8302  002F1C  0012               	return		;funcret
  8303  002F1E                     __end_of_configureInterrupt:
  8304                           	callstack 0
  8305                           
  8306 ;; *************** function _configureIO *****************
  8307 ;; Defined at:
  8308 ;;		line 446 in file "main.c"
  8309 ;; Parameters:    Size  Location     Type
  8310 ;;		None
  8311 ;; Auto vars:     Size  Location     Type
  8312 ;;		None
  8313 ;; Return value:  Size  Location     Type
  8314 ;;                  1    wreg      void 
  8315 ;; Registers used:
  8316 ;;		wreg, status,2
  8317 ;; Tracked objects:
  8318 ;;		On entry : 0/0
  8319 ;;		On exit  : 0/0
  8320 ;;		Unchanged: 0/0
  8321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8322 ;;      Params:         0       0       0       0       0       0       0       0       0
  8323 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8324 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8325 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8326 ;;Total ram usage:        0 bytes
  8327 ;; Hardware stack levels used: 1
  8328 ;; Hardware stack levels required when called: 2
  8329 ;; This function calls:
  8330 ;;		Nothing
  8331 ;; This function is called by:
  8332 ;;		_main
  8333 ;; This function uses a non-reentrant model
  8334 ;;
  8335                           
  8336                           	psect	text33
  8337  002F30                     __ptext33:
  8338                           	callstack 0
  8339  002F30                     _configureIO:
  8340                           	callstack 28
  8341  002F30                     
  8342                           ;main.c: 447:     TRISB = 0xF0;
  8343  002F30  0EF0               	movlw	240
  8344  002F32  6E93               	movwf	147,c	;volatile
  8345  002F34                     
  8346                           ;main.c: 448:     TRISAbits.RA3 = 1;
  8347  002F34  8692               	bsf	146,3,c	;volatile
  8348  002F36                     
  8349                           ;main.c: 449:     TRISDbits.TRISD0 = 0;
  8350  002F36  9095               	bcf	149,0,c	;volatile
  8351  002F38                     
  8352                           ;main.c: 450:     TRISDbits.TRISD1 = 0;
  8353  002F38  9295               	bcf	149,1,c	;volatile
  8354  002F3A                     
  8355                           ;main.c: 451:     TRISCbits.TRISC2 = 0;
  8356  002F3A  9494               	bcf	148,2,c	;volatile
  8357  002F3C                     
  8358                           ;main.c: 452:     PORTDbits.RD0 = 0;
  8359  002F3C  9083               	bcf	131,0,c	;volatile
  8360  002F3E                     
  8361                           ;main.c: 453:     PORTDbits.RD1 = 0;
  8362  002F3E  9283               	bcf	131,1,c	;volatile
  8363  002F40  0012               	return		;funcret
  8364  002F42                     __end_of_configureIO:
  8365                           	callstack 0
  8366                           
  8367 ;; *************** function _configureADC *****************
  8368 ;; Defined at:
  8369 ;;		line 580 in file "main.c"
  8370 ;; Parameters:    Size  Location     Type
  8371 ;;		None
  8372 ;; Auto vars:     Size  Location     Type
  8373 ;;		None
  8374 ;; Return value:  Size  Location     Type
  8375 ;;                  1    wreg      void 
  8376 ;; Registers used:
  8377 ;;		wreg, status,2
  8378 ;; Tracked objects:
  8379 ;;		On entry : 0/0
  8380 ;;		On exit  : 0/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8383 ;;      Params:         0       0       0       0       0       0       0       0       0
  8384 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8385 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8386 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8387 ;;Total ram usage:        0 bytes
  8388 ;; Hardware stack levels used: 1
  8389 ;; Hardware stack levels required when called: 2
  8390 ;; This function calls:
  8391 ;;		Nothing
  8392 ;; This function is called by:
  8393 ;;		_main
  8394 ;; This function uses a non-reentrant model
  8395 ;;
  8396                           
  8397                           	psect	text34
  8398  002F5E                     __ptext34:
  8399                           	callstack 0
  8400  002F5E                     _configureADC:
  8401                           	callstack 28
  8402  002F5E                     
  8403                           ;main.c: 581:     ADCON1 = 0b00001011;
  8404  002F5E  0E0B               	movlw	11
  8405  002F60  6EC1               	movwf	193,c	;volatile
  8406                           
  8407                           ;main.c: 582:     ADCON2 = 0b10010101;
  8408  002F62  0E95               	movlw	149
  8409  002F64  6EC0               	movwf	192,c	;volatile
  8410  002F66                     
  8411                           ;main.c: 583:     ADCON0bits.ADON = 1;
  8412  002F66  80C2               	bsf	194,0,c	;volatile
  8413  002F68  0012               	return		;funcret
  8414  002F6A                     __end_of_configureADC:
  8415                           	callstack 0
  8416                           
  8417 ;; *************** function _buzzer *****************
  8418 ;; Defined at:
  8419 ;;		line 651 in file "main.c"
  8420 ;; Parameters:    Size  Location     Type
  8421 ;;  buzzerStatus    2    9[COMRAM] int 
  8422 ;; Auto vars:     Size  Location     Type
  8423 ;;		None
  8424 ;; Return value:  Size  Location     Type
  8425 ;;                  1    wreg      void 
  8426 ;; Registers used:
  8427 ;;		wreg, status,2, status,0
  8428 ;; Tracked objects:
  8429 ;;		On entry : 0/0
  8430 ;;		On exit  : 0/0
  8431 ;;		Unchanged: 0/0
  8432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8433 ;;      Params:         2       0       0       0       0       0       0       0       0
  8434 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8435 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8436 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8437 ;;Total ram usage:        2 bytes
  8438 ;; Hardware stack levels used: 1
  8439 ;; Hardware stack levels required when called: 2
  8440 ;; This function calls:
  8441 ;;		Nothing
  8442 ;; This function is called by:
  8443 ;;		_main
  8444 ;; This function uses a non-reentrant model
  8445 ;;
  8446                           
  8447                           	psect	text35
  8448  002F7A                     __ptext35:
  8449                           	callstack 0
  8450  002F7A                     _buzzer:
  8451                           	callstack 28
  8452  002F7A  0012               	return		;funcret
  8453  002F7C                     __end_of_buzzer:
  8454                           	callstack 0
  8455                           
  8456 ;; *************** function _ISR *****************
  8457 ;; Defined at:
  8458 ;;		line 404 in file "main.c"
  8459 ;; Parameters:    Size  Location     Type
  8460 ;;		None
  8461 ;; Auto vars:     Size  Location     Type
  8462 ;;		None
  8463 ;; Return value:  Size  Location     Type
  8464 ;;                  1    wreg      void 
  8465 ;; Registers used:
  8466 ;;		wreg, status,2, status,0, cstack
  8467 ;; Tracked objects:
  8468 ;;		On entry : 0/0
  8469 ;;		On exit  : 0/0
  8470 ;;		Unchanged: 0/0
  8471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8472 ;;      Params:         0       0       0       0       0       0       0       0       0
  8473 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8474 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8475 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8476 ;;Total ram usage:        0 bytes
  8477 ;; Hardware stack levels used: 1
  8478 ;; Hardware stack levels required when called: 1
  8479 ;; This function calls:
  8480 ;;		___llmod
  8481 ;; This function is called by:
  8482 ;;		Interrupt level 2
  8483 ;; This function uses a non-reentrant model
  8484 ;;
  8485                           
  8486                           	psect	intcode
  8487  000008                     __pintcode:
  8488                           	callstack 0
  8489  000008                     _ISR:
  8490                           	callstack 25
  8491                           
  8492                           ;incstack = 0
  8493  000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8494  00000A  EDA9  F015         	call	int_func,f	;refresh shadow registers
  8495                           
  8496                           	psect	intcode_body
  8497  002B52                     __pintcode_body:
  8498                           	callstack 25
  8499  002B52                     int_func:
  8500                           	callstack 25
  8501  002B52  0006               	pop		; remove dummy address from shadow register refresh
  8502  002B54                     
  8503                           ;main.c: 406:     if (INTCONbits.TMR0IF) {
  8504  002B54  A4F2               	btfss	242,2,c	;volatile
  8505  002B56  EFAF  F015         	goto	i2u402_41
  8506  002B5A  EFB1  F015         	goto	i2u402_40
  8507  002B5E                     i2u402_41:
  8508  002B5E  EFEF  F015         	goto	i2l179
  8509  002B62                     i2u402_40:
  8510  002B62                     
  8511                           ;main.c: 408:         TMR0L = 100;
  8512  002B62  0E64               	movlw	100
  8513  002B64  6ED6               	movwf	214,c	;volatile
  8514  002B66                     
  8515                           ;main.c: 409:         milliseconds++;
  8516  002B66  0E01               	movlw	1
  8517  002B68  264C               	addwf	_milliseconds^0,f,c	;volatile
  8518  002B6A  0E00               	movlw	0
  8519  002B6C  224D               	addwfc	(_milliseconds+1)^0,f,c	;volatile
  8520  002B6E  224E               	addwfc	(_milliseconds+2)^0,f,c	;volatile
  8521  002B70  224F               	addwfc	(_milliseconds+3)^0,f,c	;volatile
  8522  002B72                     
  8523                           ;main.c: 410:         if(milliseconds%1000==0){
  8524  002B72  C04C  F001         	movff	_milliseconds,___llmod@dividend	;volatile
  8525  002B76  C04D  F002         	movff	_milliseconds+1,___llmod@dividend+1	;volatile
  8526  002B7A  C04E  F003         	movff	_milliseconds+2,___llmod@dividend+2	;volatile
  8527  002B7E  C04F  F004         	movff	_milliseconds+3,___llmod@dividend+3	;volatile
  8528  002B82  0EE8               	movlw	232
  8529  002B84  6E05               	movwf	___llmod@divisor^0,c
  8530  002B86  0E03               	movlw	3
  8531  002B88  6E06               	movwf	(___llmod@divisor+1)^0,c
  8532  002B8A  0E00               	movlw	0
  8533  002B8C  6E07               	movwf	(___llmod@divisor+2)^0,c
  8534  002B8E  0E00               	movlw	0
  8535  002B90  6E08               	movwf	(___llmod@divisor+3)^0,c
  8536  002B92  ECF1  F015         	call	___llmod	;wreg free
  8537  002B96  5001               	movf	?___llmod^0,w,c
  8538  002B98  1002               	iorwf	(?___llmod+1)^0,w,c
  8539  002B9A  1003               	iorwf	(?___llmod+2)^0,w,c
  8540  002B9C  1004               	iorwf	(?___llmod+3)^0,w,c
  8541  002B9E  A4D8               	btfss	status,2,c
  8542  002BA0  EFD4  F015         	goto	i2u403_41
  8543  002BA4  EFD6  F015         	goto	i2u403_40
  8544  002BA8                     i2u403_41:
  8545  002BA8  EFEE  F015         	goto	i2l4150
  8546  002BAC                     i2u403_40:
  8547  002BAC                     
  8548                           ;main.c: 411:             if(tak>1){
  8549  002BAC  BE53               	btfsc	(_tak+1)^0,7,c	;volatile
  8550  002BAE  EFE2  F015         	goto	i2u404_41
  8551  002BB2  5053               	movf	(_tak+1)^0,w,c	;volatile
  8552  002BB4  E109               	bnz	i2u404_40
  8553  002BB6  0E02               	movlw	2
  8554  002BB8  5C52               	subwf	_tak^0,w,c	;volatile
  8555  002BBA  A0D8               	btfss	status,0,c
  8556  002BBC  EFE2  F015         	goto	i2u404_41
  8557  002BC0  EFE4  F015         	goto	i2u404_40
  8558  002BC4                     i2u404_41:
  8559  002BC4  EFEA  F015         	goto	i2l4148
  8560  002BC8                     i2u404_40:
  8561  002BC8                     
  8562                           ;main.c: 412:                 tak=0;
  8563  002BC8  0E00               	movlw	0
  8564  002BCA  6E53               	movwf	(_tak+1)^0,c	;volatile
  8565  002BCC  0E00               	movlw	0
  8566  002BCE  6E52               	movwf	_tak^0,c	;volatile
  8567                           
  8568                           ;main.c: 413:             }else{
  8569  002BD0  EFEE  F015         	goto	i2l4150
  8570  002BD4                     i2l4148:
  8571                           
  8572                           ;main.c: 414:                tak=1;
  8573  002BD4  0E00               	movlw	0
  8574  002BD6  6E53               	movwf	(_tak+1)^0,c	;volatile
  8575  002BD8  0E01               	movlw	1
  8576  002BDA  6E52               	movwf	_tak^0,c	;volatile
  8577  002BDC                     i2l4150:
  8578                           
  8579                           ;main.c: 417:         INTCONbits.TMR0IF = 0;
  8580  002BDC  94F2               	bcf	242,2,c	;volatile
  8581  002BDE                     i2l179:
  8582  002BDE  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8583  002BE0  0011               	retfie		f
  8584  002BE2                     __end_of_ISR:
  8585                           	callstack 0
  8586                           
  8587 ;; *************** function ___llmod *****************
  8588 ;; Defined at:
  8589 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\llmod.c"
  8590 ;; Parameters:    Size  Location     Type
  8591 ;;  dividend        4    0[COMRAM] unsigned long 
  8592 ;;  divisor         4    4[COMRAM] unsigned long 
  8593 ;; Auto vars:     Size  Location     Type
  8594 ;;  counter         1    8[COMRAM] unsigned char 
  8595 ;; Return value:  Size  Location     Type
  8596 ;;                  4    0[COMRAM] unsigned long 
  8597 ;; Registers used:
  8598 ;;		wreg, status,2, status,0
  8599 ;; Tracked objects:
  8600 ;;		On entry : 0/0
  8601 ;;		On exit  : 0/0
  8602 ;;		Unchanged: 0/0
  8603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8604 ;;      Params:         8       0       0       0       0       0       0       0       0
  8605 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8606 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8607 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8608 ;;Total ram usage:        9 bytes
  8609 ;; Hardware stack levels used: 1
  8610 ;; This function calls:
  8611 ;;		Nothing
  8612 ;; This function is called by:
  8613 ;;		_ISR
  8614 ;; This function uses a non-reentrant model
  8615 ;;
  8616                           
  8617                           	psect	text37
  8618  002BE2                     __ptext37:
  8619                           	callstack 0
  8620  002BE2                     ___llmod:
  8621                           	callstack 25
  8622  002BE2  5005               	movf	___llmod@divisor^0,w,c
  8623  002BE4  1006               	iorwf	(___llmod@divisor+1)^0,w,c
  8624  002BE6  1007               	iorwf	(___llmod@divisor+2)^0,w,c
  8625  002BE8  1008               	iorwf	(___llmod@divisor+3)^0,w,c
  8626  002BEA  B4D8               	btfsc	status,2,c
  8627  002BEC  EFFA  F015         	goto	i2u377_41
  8628  002BF0  EFFC  F015         	goto	i2u377_40
  8629  002BF4                     i2u377_41:
  8630  002BF4  EF2C  F016         	goto	i2l797
  8631  002BF8                     i2u377_40:
  8632  002BF8  0E01               	movlw	1
  8633  002BFA  6E09               	movwf	___llmod@counter^0,c
  8634  002BFC  EF06  F016         	goto	i2l4000
  8635  002C00                     i2l3998:
  8636  002C00  90D8               	bcf	status,0,c
  8637  002C02  3605               	rlcf	___llmod@divisor^0,f,c
  8638  002C04  3606               	rlcf	(___llmod@divisor+1)^0,f,c
  8639  002C06  3607               	rlcf	(___llmod@divisor+2)^0,f,c
  8640  002C08  3608               	rlcf	(___llmod@divisor+3)^0,f,c
  8641  002C0A  2A09               	incf	___llmod@counter^0,f,c
  8642  002C0C                     i2l4000:
  8643  002C0C  AE08               	btfss	(___llmod@divisor+3)^0,7,c
  8644  002C0E  EF0B  F016         	goto	i2u378_41
  8645  002C12  EF0D  F016         	goto	i2u378_40
  8646  002C16                     i2u378_41:
  8647  002C16  EF00  F016         	goto	i2l3998
  8648  002C1A                     i2u378_40:
  8649  002C1A                     i2l4002:
  8650  002C1A  5005               	movf	___llmod@divisor^0,w,c
  8651  002C1C  5C01               	subwf	___llmod@dividend^0,w,c
  8652  002C1E  5006               	movf	(___llmod@divisor+1)^0,w,c
  8653  002C20  5802               	subwfb	(___llmod@dividend+1)^0,w,c
  8654  002C22  5007               	movf	(___llmod@divisor+2)^0,w,c
  8655  002C24  5803               	subwfb	(___llmod@dividend+2)^0,w,c
  8656  002C26  5008               	movf	(___llmod@divisor+3)^0,w,c
  8657  002C28  5804               	subwfb	(___llmod@dividend+3)^0,w,c
  8658  002C2A  A0D8               	btfss	status,0,c
  8659  002C2C  EF1A  F016         	goto	i2u379_41
  8660  002C30  EF1C  F016         	goto	i2u379_40
  8661  002C34                     i2u379_41:
  8662  002C34  EF24  F016         	goto	i2l4006
  8663  002C38                     i2u379_40:
  8664  002C38  5005               	movf	___llmod@divisor^0,w,c
  8665  002C3A  5E01               	subwf	___llmod@dividend^0,f,c
  8666  002C3C  5006               	movf	(___llmod@divisor+1)^0,w,c
  8667  002C3E  5A02               	subwfb	(___llmod@dividend+1)^0,f,c
  8668  002C40  5007               	movf	(___llmod@divisor+2)^0,w,c
  8669  002C42  5A03               	subwfb	(___llmod@dividend+2)^0,f,c
  8670  002C44  5008               	movf	(___llmod@divisor+3)^0,w,c
  8671  002C46  5A04               	subwfb	(___llmod@dividend+3)^0,f,c
  8672  002C48                     i2l4006:
  8673  002C48  90D8               	bcf	status,0,c
  8674  002C4A  3208               	rrcf	(___llmod@divisor+3)^0,f,c
  8675  002C4C  3207               	rrcf	(___llmod@divisor+2)^0,f,c
  8676  002C4E  3206               	rrcf	(___llmod@divisor+1)^0,f,c
  8677  002C50  3205               	rrcf	___llmod@divisor^0,f,c
  8678  002C52  2E09               	decfsz	___llmod@counter^0,f,c
  8679  002C54  EF0D  F016         	goto	i2l4002
  8680  002C58                     i2l797:
  8681  002C58  C001  F001         	movff	___llmod@dividend,?___llmod
  8682  002C5C  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  8683  002C60  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  8684  002C64  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  8685  002C68  0012               	return		;funcret
  8686  002C6A                     __end_of___llmod:
  8687                           	callstack 0
  8688                           
  8689                           	psect	rparam
  8690  0000                     
  8691                           	psect	temp
  8692  000056                     btemp:
  8693                           	callstack 0
  8694  000056                     	ds	1
  8695  0000                     int$flags	set	btemp
  8696  0000                     wtemp8	set	btemp+1
  8697  0000                     ttemp5	set	btemp+1
  8698  0000                     ttemp6	set	btemp+4
  8699  0000                     ttemp7	set	btemp+8
  8700                           
  8701                           	psect	idloc
  8702                           
  8703                           ;Config register IDLOC0 @ 0x200000
  8704                           ;	unspecified, using default values
  8705  200000                     	org	2097152
  8706  200000  FF                 	db	255
  8707                           
  8708                           ;Config register IDLOC1 @ 0x200001
  8709                           ;	unspecified, using default values
  8710  200001                     	org	2097153
  8711  200001  FF                 	db	255
  8712                           
  8713                           ;Config register IDLOC2 @ 0x200002
  8714                           ;	unspecified, using default values
  8715  200002                     	org	2097154
  8716  200002  FF                 	db	255
  8717                           
  8718                           ;Config register IDLOC3 @ 0x200003
  8719                           ;	unspecified, using default values
  8720  200003                     	org	2097155
  8721  200003  FF                 	db	255
  8722                           
  8723                           ;Config register IDLOC4 @ 0x200004
  8724                           ;	unspecified, using default values
  8725  200004                     	org	2097156
  8726  200004  FF                 	db	255
  8727                           
  8728                           ;Config register IDLOC5 @ 0x200005
  8729                           ;	unspecified, using default values
  8730  200005                     	org	2097157
  8731  200005  FF                 	db	255
  8732                           
  8733                           ;Config register IDLOC6 @ 0x200006
  8734                           ;	unspecified, using default values
  8735  200006                     	org	2097158
  8736  200006  FF                 	db	255
  8737                           
  8738                           ;Config register IDLOC7 @ 0x200007
  8739                           ;	unspecified, using default values
  8740  200007                     	org	2097159
  8741  200007  FF                 	db	255
  8742                           
  8743                           	psect	config
  8744                           
  8745                           ;Config register CONFIG1L @ 0x300000
  8746                           ;	PLL Prescaler Selection bits
  8747                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  8748                           ;	System Clock Postscaler Selection bits
  8749                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  8750                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8751                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  8752  300000                     	org	3145728
  8753  300000  00                 	db	0
  8754                           
  8755                           ;Config register CONFIG1H @ 0x300001
  8756                           ;	Oscillator Selection bits
  8757                           ;	FOSC = HS, HS oscillator (HS)
  8758                           ;	Fail-Safe Clock Monitor Enable bit
  8759                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8760                           ;	Internal/External Oscillator Switchover bit
  8761                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8762  300001                     	org	3145729
  8763  300001  0C                 	db	12
  8764                           
  8765                           ;Config register CONFIG2L @ 0x300002
  8766                           ;	Power-up Timer Enable bit
  8767                           ;	PWRT = OFF, PWRT disabled
  8768                           ;	Brown-out Reset Enable bits
  8769                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  8770                           ;	Brown-out Reset Voltage bits
  8771                           ;	BORV = 3, Minimum setting 2.05V
  8772                           ;	USB Voltage Regulator Enable bit
  8773                           ;	VREGEN = OFF, USB voltage regulator disabled
  8774  300002                     	org	3145730
  8775  300002  19                 	db	25
  8776                           
  8777                           ;Config register CONFIG2H @ 0x300003
  8778                           ;	Watchdog Timer Enable bit
  8779                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8780                           ;	Watchdog Timer Postscale Select bits
  8781                           ;	WDTPS = 32768, 1:32768
  8782  300003                     	org	3145731
  8783  300003  1E                 	db	30
  8784                           
  8785                           ; Padding undefined space
  8786  300004                     	org	3145732
  8787  300004  FF                 	db	255
  8788                           
  8789                           ;Config register CONFIG3H @ 0x300005
  8790                           ;	CCP2 MUX bit
  8791                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
  8792                           ;	PORTB A/D Enable bit
  8793                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8794                           ;	Low-Power Timer 1 Oscillator Enable bit
  8795                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8796                           ;	MCLR Pin Enable bit
  8797                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8798  300005                     	org	3145733
  8799  300005  80                 	db	128
  8800                           
  8801                           ;Config register CONFIG4L @ 0x300006
  8802                           ;	Stack Full/Underflow Reset Enable bit
  8803                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  8804                           ;	Single-Supply ICSP Enable bit
  8805                           ;	LVP = OFF, Single-Supply ICSP disabled
  8806                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8807                           ;	ICPRT = OFF, ICPORT disabled
  8808                           ;	Extended Instruction Set Enable bit
  8809                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8810                           ;	Background Debugger Enable bit
  8811                           ;	DEBUG = 0x1, unprogrammed default
  8812  300006                     	org	3145734
  8813  300006  80                 	db	128
  8814                           
  8815                           ; Padding undefined space
  8816  300007                     	org	3145735
  8817  300007  FF                 	db	255
  8818                           
  8819                           ;Config register CONFIG5L @ 0x300008
  8820                           ;	Code Protection bit
  8821                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  8822                           ;	Code Protection bit
  8823                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  8824                           ;	Code Protection bit
  8825                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  8826                           ;	Code Protection bit
  8827                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  8828  300008                     	org	3145736
  8829  300008  0F                 	db	15
  8830                           
  8831                           ;Config register CONFIG5H @ 0x300009
  8832                           ;	Boot Block Code Protection bit
  8833                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  8834                           ;	Data EEPROM Code Protection bit
  8835                           ;	CPD = OFF, Data EEPROM is not code-protected
  8836  300009                     	org	3145737
  8837  300009  C0                 	db	192
  8838                           
  8839                           ;Config register CONFIG6L @ 0x30000A
  8840                           ;	Write Protection bit
  8841                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  8842                           ;	Write Protection bit
  8843                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  8844                           ;	Write Protection bit
  8845                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  8846                           ;	Write Protection bit
  8847                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  8848  30000A                     	org	3145738
  8849  30000A  0F                 	db	15
  8850                           
  8851                           ;Config register CONFIG6H @ 0x30000B
  8852                           ;	Configuration Register Write Protection bit
  8853                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  8854                           ;	Boot Block Write Protection bit
  8855                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  8856                           ;	Data EEPROM Write Protection bit
  8857                           ;	WRTD = OFF, Data EEPROM is not write-protected
  8858  30000B                     	org	3145739
  8859  30000B  E0                 	db	224
  8860                           
  8861                           ;Config register CONFIG7L @ 0x30000C
  8862                           ;	Table Read Protection bit
  8863                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8864                           ;	Table Read Protection bit
  8865                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8866                           ;	Table Read Protection bit
  8867                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8868                           ;	Table Read Protection bit
  8869                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8870  30000C                     	org	3145740
  8871  30000C  0F                 	db	15
  8872                           
  8873                           ;Config register CONFIG7H @ 0x30000D
  8874                           ;	Boot Block Table Read Protection bit
  8875                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  8876  30000D                     	org	3145741
  8877  30000D  40                 	db	64
  8878                           tosu	equ	0xFFF
  8879                           tosh	equ	0xFFE
  8880                           tosl	equ	0xFFD
  8881                           stkptr	equ	0xFFC
  8882                           pclatu	equ	0xFFB
  8883                           pclath	equ	0xFFA
  8884                           pcl	equ	0xFF9
  8885                           tblptru	equ	0xFF8
  8886                           tblptrh	equ	0xFF7
  8887                           tblptrl	equ	0xFF6
  8888                           tablat	equ	0xFF5
  8889                           prodh	equ	0xFF4
  8890                           prodl	equ	0xFF3
  8891                           indf0	equ	0xFEF
  8892                           postinc0	equ	0xFEE
  8893                           postdec0	equ	0xFED
  8894                           preinc0	equ	0xFEC
  8895                           plusw0	equ	0xFEB
  8896                           fsr0h	equ	0xFEA
  8897                           fsr0l	equ	0xFE9
  8898                           wreg	equ	0xFE8
  8899                           indf1	equ	0xFE7
  8900                           postinc1	equ	0xFE6
  8901                           postdec1	equ	0xFE5
  8902                           preinc1	equ	0xFE4
  8903                           plusw1	equ	0xFE3
  8904                           fsr1h	equ	0xFE2
  8905                           fsr1l	equ	0xFE1
  8906                           bsr	equ	0xFE0
  8907                           indf2	equ	0xFDF
  8908                           postinc2	equ	0xFDE
  8909                           postdec2	equ	0xFDD
  8910                           preinc2	equ	0xFDC
  8911                           plusw2	equ	0xFDB
  8912                           fsr2h	equ	0xFDA
  8913                           fsr2l	equ	0xFD9
  8914                           status	equ	0xFD8

Data Sizes:
    Strings     238
    Constant    24
    Data        6
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     75      85
    BANK0           160     88     122
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    floatToString@buffer	PTR unsigned char  size(2) Largest target is 10
		 -> displayMenu@valueStr(BANK0[10]), 

    itoa@ptr	PTR unsigned char  size(2) Largest target is 10
		 -> displayMenu@valueStr(BANK0[10]), 

    itoa@start	PTR unsigned char  size(2) Largest target is 10
		 -> displayMenu@valueStr(BANK0[10]), 

    displayStuff@stuff	PTR unsigned char  size(2) Largest target is 17
		 -> readTwoDigitValue@input(COMRAM[3]), STR_27(CODE[13]), STR_26(CODE[12]), STR_25(CODE[17]), 
		 -> STR_24(CODE[14]), STR_23(CODE[3]), STR_22(CODE[10]), STR_21(CODE[16]), 
		 -> STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[3]), STR_17(CODE[9]), 
		 -> STR_16(CODE[5]), STR_15(CODE[4]), STR_14(CODE[5]), STR_13(CODE[5]), 
		 -> STR_12(CODE[2]), STR_11(CODE[7]), STR_10(CODE[5]), STR_9(CODE[2]), 
		 -> displayMenu@valueStr(BANK0[10]), STR_8(CODE[6]), STR_7(CODE[15]), STR_6(CODE[11]), 
		 -> STR_5(CODE[11]), STR_4(CODE[13]), STR_3(CODE[12]), STR_2(CODE[12]), 
		 -> STR_1(CODE[13]), 

    readTwoDigitValue@prompt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[11]), STR_3(CODE[12]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_displayMenu
    _readTwoDigitValue->_readKey
    _readKey->_millis
    _tempRead->___fldiv
    _itoa->___awdiv
    _humidade->___fldiv
    _gasRead->___fldiv
    ___fldiv->___flmul
    _floatToString->___flmul
    ___flsub->___fladd
    ___flmul->___xxtofl
    _displayStuff->_WriteCmdXLCD
    _displayStuff->_WriteDataXLCD
    ___flge->___xxtofl
    _configureLCD->_OpenXLCD
    _OpenXLCD->_DelayPORXLCD
    _OpenXLCD->_DelayXLCD
    _OpenXLCD->_SetDDRamAddr
    _OpenXLCD->_WriteCmdXLCD

Critical Paths under _ISR in COMRAM

    _ISR->___llmod

Critical Paths under _main in BANK0

    _main->_displayMenu
    _displayMenu->_floatToString

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                34    34      0  102895
                                             54 BANK0     34    34      0
                             ___flge
                           ___xxtofl
                             _buzzer
                       _configureADC
                        _configureIO
                 _configureInterrupt
                       _configureLCD
                     _configureTimer
                        _displayMenu
                       _displayStuff
                            _gasRead
                           _humidade
                             _millis
                            _readKey
                  _readTwoDigitValue
                           _tempRead
 ---------------------------------------------------------------------------------
 (1) _readTwoDigitValue                                   10     8      2    8690
                                             40 COMRAM    10     8      2
                       _WriteCmdXLCD
                       _displayStuff
                            _readKey
 ---------------------------------------------------------------------------------
 (2) _readKey                                             23    23      0     603
                                             17 COMRAM    23    23      0
                             _millis
 ---------------------------------------------------------------------------------
 (1) _displayMenu                                         32    30      2   55309
                                             73 COMRAM     2     0      2
                                             24 BANK0     30    30      0
                       _WriteCmdXLCD
                             ___flge
                           ___xxtofl
                       _displayStuff
                      _floatToString
                            _gasRead
                           _humidade
                               _itoa
                             _millis
                           _tempRead
 ---------------------------------------------------------------------------------
 (1) _tempRead                                            14    10      4    7983
                                              0 BANK0     14    10      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
                         _readAnalog
 ---------------------------------------------------------------------------------
 (3) _millis                                               8     4      4      23
                                              9 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _itoa                                                10     6      4    2992
                                             17 COMRAM     8     4      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _humidade                                            14    10      4    7983
                                              0 BANK0     14    10      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
                         _readAnalog
 ---------------------------------------------------------------------------------
 (1) _gasRead                                             14    10      4    7983
                                              0 BANK0     14    10      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
                         _readAnalog
 ---------------------------------------------------------------------------------
 (2) _readAnalog                                           7     5      2      67
                                              9 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1855
                                             48 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _floatToString                                       34    26      8   14039
                                             48 COMRAM    10     2      8
                                              0 BANK0     24    24      0
                            ___awdiv
                            ___awmod
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    2546
                                              9 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     517
                                              9 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3827
                                             25 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    3262
                                              9 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     155
                                              9 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    3413
                                             23 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     793
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     985
                                              9 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _displayStuff                                        10     4      6    7520
                                             10 COMRAM    10     4      6
                       _WriteCmdXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (3) _WriteDataXLCD                                        1     1      0      44
                                              9 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    2918
                                             23 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _configureTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureLCD                                         1     1      0     154
                                             11 COMRAM     1     1      0
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0     110
                                             10 COMRAM     1     1      0
                           _BusyXLCD
                       _DelayPORXLCD
                          _DelayXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (3) _WriteCmdXLCD                                         1     1      0      44
                                              9 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         1     1      0      44
                                              9 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayXLCD                                            1     1      0       0
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         1     1      0       0
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (4) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureInterrupt                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureIO                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureADC                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buzzer                                               2     0      2     174
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  0     0      0     311
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     311
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flge
     ___xxtofl (ARG)
   ___xxtofl
   _buzzer
   _configureADC
   _configureIO
   _configureInterrupt
   _configureLCD
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
       _DelayPORXLCD
       _DelayXLCD
       _SetDDRamAddr
         _DelayFor18TCY
       _WriteCmdXLCD
         _DelayFor18TCY
     _WriteCmdXLCD
   _configureTimer
   _displayMenu
     _WriteCmdXLCD
     ___flge
     ___xxtofl
     _displayStuff
       _WriteCmdXLCD
       _WriteDataXLCD
         _DelayFor18TCY
     _floatToString
       ___awdiv
       ___awmod
       ___flmul
         ___xxtofl (ARG)
       ___flneg
       ___flsub
         ___fladd
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
     _gasRead
       ___fldiv
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___flmul
       ___xxtofl
       _readAnalog
     _humidade
       ___fldiv
       ___flmul
       ___xxtofl
       _readAnalog
     _itoa
       ___awdiv
       ___awmod
     _millis
     _tempRead
       ___fldiv
       ___flmul
       ___xxtofl
       _readAnalog
   _displayStuff
   _gasRead
   _humidade
   _millis
   _readKey
     _millis
   _readTwoDigitValue
     _WriteCmdXLCD
     _displayStuff
     _readKey
   _tempRead

 _ISR (ROOT)
   ___llmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     58      7A       5       76.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4B      55       1       90.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CF      20        0.0%
DATA                 0      0      CF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Dec 20 18:15:41 2024

                ?_configureIO 0001                 ?_configureADC 0001                 ?_configureLCD 0001  
                ___fldiv@aexp 0049                  ___fldiv@bexp 0048                  ___fldiv@sign 0041  
                ?_displayMenu 004A                  ___awdiv@sign 000F                 _floatToString 1D76  
               ?_displayStuff 000B                           l111 0D28                           l112 0D7A  
                         l114 0DCE                           l116 0E20                           l221 2F68  
                         l125 0064                           l117 0E22                           l126 08C6  
                         l303 2F72                           l231 288E                           l216 1D74  
                         l225 2CD6                           l306 2F50                           l226 2CAA  
                         l234 294C                           l260 2F7A                           l309 2F2E  
                         l333 270C                           l237 2A0A                           l342 2DDC  
                         l182 2F08                           l191 2F1C                           l343 2DEE  
                         l247 2B50                           l264 22F0                           l185 2F40  
                         l353 2EAA                           l169 2414                           l194 2F5C  
                         l339 2E2E                           l188 2DA8                           l356 2E6C  
                         l284 1FFC                           l621 2ABA                           l608 27D0  
                         l642 25D8                           l651 2EE2                           l647 261E  
                         l905 101C                           l922 1136                           l914 12EC  
                         l906 100A                           l674 251A                           l931 1206  
                         l907 0FD0                           l932 11F4                           l961 1910  
                         l970 1956                           l947 2D62                           l972 19CE  
                         l964 18D4                           l973 19BC                           l991 13B2  
                         l959 1AB0                           l995 1716                           l998 15A8  
                         _ISR 0008               ?_configureTimer 0001                           _tak 0052  
       __size_of_WriteCmdXLCD 003E                  ___awmod@sign 000F                           wreg 000FE8  
                ___flmul@aexp 0025                  ___flmul@bexp 002A                  ___flmul@sign 0024  
                ___flmul@temp 002F                  ___flmul@prod 002B                          ?_ISR 0001  
                ___fltol@exp1 0013                          l1000 1620                          l1001 160E  
                        l1008 16D8                          l1032 2054                          l1035 21B0  
                        l1046 2148                          l1039 20EC                          l3000 2E0A  
                        l3010 2E24                          l3002 2E0C                          l3012 2E28  
                        l3004 2E10                          l3100 1920                          l3020 1732  
                        l3006 2E1E                          l3102 1936                          l3110 1966  
                        l3030 1766                          l3022 1734                          l3008 2E22  
                        l3112 1974                          l3104 193C                          l3040 1798  
                        l3024 1744                          l3032 176E                          l3016 1718  
                        l3122 19DE                          l3130 1A26                          l3114 1978  
                        l3106 1946                          l3050 17CC                          l3042 179A  
                        l3034 177E                          l3026 1754                          l3018 1724  
                        l3140 1A90                          l3132 1A40                          l3124 19EA  
                        l3116 1986                          l3108 1954                          l3060 1812  
                        l3044 17AA                          l3052 17D4                          l3036 1784  
                        l3028 1764                          l3142 1A9E                          l3134 1A56  
                        l3126 19F8                          l3118 19B4                          l3070 183A  
                        l3062 1816                          l3054 17E4                          l3046 17BA  
                        l3038 178A                          l3144 1AA4                          l3136 1A70  
                        l3128 1A22                          l3080 1888                          l3056 17FA  
                        l3048 17CA                          l5000 025C                          l3146 1AA6  
                        l3138 1A8C                          l3090 18D2                          l3082 1898  
                        l3074 184E                          l3058 180A                          l3066 182A  
                        l5002 0280                          l3092 18DE                          l3084 18A0  
                        l3076 1868                          l3068 183A                          l5020 03E6  
                        l5012 02EC                          l5004 029C                          l3500 1C4E  
                        l5100 08D8                          l4310 0E48                          l3094 18FC  
                        l3086 18B0                          l3078 1878                          l5030 047C  
                        l5022 0406                          l5014 0308                          l5006 02B8  
                        l3502 1C5E                          l5110 08E8                          l5102 08DC  
                        l4400 0FFC                          l4320 0E7C                          l4312 0E4A  
                        l3096 18FE                          l3088 18C4                          l5032 049C  
                        l5024 040A                          l5016 0352                          l5008 02D4  
                        l3520 1CE8                          l3504 1C70                          l3512 1C92  
                        l5200 0C2E                          l5120 0952                          l5112 08F0  
                        l5104 08DE                          l4402 0FFE                          l4330 0EAE  
                        l4314 0E5A                          l4322 0E84                          l4306 0E2E  
                        l3098 190E                          l5050 0656                          l5034 04E6  
                        l5026 0426                          l5042 0570                          l5018 039C  
                        l3514 1CA2                          l3506 1C78                          l5210 0D72  
                        l5202 0C78                          l5130 0998                          l5122 095E  
                        l5114 0900                          l5106 08E0                          l2900 2E9A  
                        l3700 2622                          l4500 12CC                          l4420 1086  
                        l4412 104E                          l4404 1008                          l4340 0EE4  
                        l4332 0EB4                          l4324 0E94                          l4316 0E6A  
                        l4308 0E3A                          l5060 06EE                          l5052 06A0  
                        l5044 05A6                          l5036 0506                          l5028 0432  
                        l3540 1D3E                          l3516 1CD6                          l3524 1CEE  
                        l3508 1C7C                          l5212 0D7E                          l5204 0CC2  
                        l5140 09EE                          l5132 09B4                          l5124 096E  
                        l5116 0908                          l5108 08E2                          l2902 2E9E  
                        l3710 2632                          l3702 262A                          l4510 12FA  
                        l4502 12DA                          l4422 108A                          l4414 105E  
                        l4406 102A                          l4430 10AA                          l4350 0F20  
                        l4342 0EF4                          l4334 0EC2                          l4326 0E9A  
                        l4318 0E7A                          l2910 2C6C                          l5070 080C  
                        l5062 0738                          l5054 06C0                          l5046 05C2  
                        l5038 0550                          l3542 1D5A                          l3526 1CFE  
                        l3518 1CD8                          l3534 1D34                          l3470 1ACA  
                        l5214 0DC8                          l5206 0D0C                          l5150 0A52  
                        l5142 0A02                          l5134 09BC                          l5126 0982  
                        l5118 091C                          l2680 2F6A                          l2904 2EA0  
                        l3720 2644                          l3712 2634                          l3704 262C  
                        l3800 2D70                          l3560 2AEE                          l3552 2ABC  
                        l4600 15CA                          l4520 133A                          l4512 1308  
                        l4504 12DC                          l4432 10D0                          l4440 1126  
                        l4424 1098                          l4416 106C                          l4408 103A  
                        l4360 0F3E                          l4352 0F2E                          l4344 0EF6  
                        l4336 0EC4                          l4328 0EAC                          l2920 2CA8  
                        l2912 2C7C                          l5064 0758                          l5056 06C6  
                        l5048 060C                          l5080 0880                          l3480 1B24  
                        l3472 1ADE                          l5216 0DD0                          l5208 0D1C  
                        l5160 0AA0                          l5152 0A66                          l5144 0A18  
                        l5128 0994                          l5136 09C8                          l2906 2EA4  
                        l3730 265C                          l3722 2648                          l3714 2636  
                        l3706 262E                          l3802 2D80                          l3810 2F5A  
                        l2930 2E40                          l3562 2AF8                          l3554 2ACE  
                        l4610 163C                          l4602 15D8                          l4530 136A  
                        l4522 1340                          l4514 130A                          l4450 117A  
                        l4442 114C                          l4434 1104                          l4426 109A  
                        l4418 107A                          l4370 0F52                          l4362 0F42  
                        l4354 0F32                          l4338 0ED4                          l4346 0EFE  
                        l2922 2CB8                          l5066 07A2                          l5058 06E2  
                        l5074 082C                          l3490 1B6C                          l3538 1D3A  
                        l3482 1B34                          l3546 1D62                          l3474 1AE6  
                        l5218 0E1A                          l5162 0AB4                          l5170 0B00  
                        l5154 0A6E                          l5146 0A20                          l5138 09DC  
                        l3812 2F0A                          l3740 26A4                          l3732 2670  
                        l3724 264E                          l3716 263A                          l3708 2630  
                        l3804 2D94                          l2940 2E4E                          l2932 2E42  
                        l3564 2B1C                          l3556 2ADA                          l4700 2A40  
                        l4620 16A6                          l4612 164A                          l4604 1606  
                        l4540 13A2                          l4532 136C                          l4524 1350  
                        l4516 131A                          l4508 12EE                          l4460 11A4  
                        l4452 1188                          l4444 115C                          l4436 1106  
                        l4428 10A4                          l4380 0F66                          l4372 0F56  
                        l4364 0F46                          l4356 0F36                          l4348 0F0E  
                        l2924 2CCE                          l2916 2C88                          l5076 0860  
                        l5068 07C2                          l3492 1BC0                          l3468 1AB2  
                        l5180 0B58                          l5172 0B14                          l5164 0ACA  
                        l5148 0A3C                          l5156 0A7A                          l3750 26EC  
                        l3742 26B8                          l3734 2684                          l3726 2652  
                        l3718 2640                          l3806 2D9A                          l2942 2E5C  
                        l2934 2E44                          l3566 2B20                          l3558 2AE2  
                        l4710 2A86                          l4702 2A52                          l4630 16FC  
                        l4622 16C0                          l4614 1674                          l4550 13F2  
                        l4542 13C2                          l4534 137C                          l4526 1356  
                        l4518 132A                          l4470 11D6                          l4462 11B4  
                        l4454 118A                          l4438 1116                          l4390 0FB8  
                        l4382 0F6A                          l4374 0F5A                          l4366 0F4A  
                        l4358 0F3A                          l2918 2C9A                          l3494 1BD2  
                        l3478 1B06                          l5190 0BC4                          l5182 0B74  
                        l5174 0B26                          l5166 0AD2                          l5158 0A8E  
                        l5094 08C8                          l2960 2DB2                          l2952 2F42  
                        l3752 26F2                          l3744 26BE                          l3736 268A  
                        l3728 2656                          l3808 2F52                          l3760 254A  
                        l2944 2E60                          l2936 2E48                          l2928 2E32  
                        l4720 2AB2                          l4712 2A8E                          l4704 2A5A  
                        l4624 16DC                          l4632 1702                          l4608 1630  
                        l4616 1678                          l4560 1442                          l4552 13FC  
                        l4544 13D2                          l4536 138C                          l4528 135C  
                        l4480 1230                          l4472 11EC                          l4456 1198  
                        l4448 1170                          l4464 11B6                          l4392 0FC8  
                        l4376 0F5E                          l4368 0F4E                          l4384 0F6E  
                        l4640 2D2E                          l4800 211E                          l5280 0588  
                        l3496 1BE6                          l3488 1B3C                          l5192 0BE0  
                        l5176 0B3A                          l5184 0B86                          l5168 0AEE  
                        l5096 08D0                          l2970 2DD2                          l2962 2DB8  
                        l2954 2F1E                          l2890 2E80                          l3754 2706  
                        l3746 26D2                          l3738 269E                          l3770 25B8  
                        l3762 255A                          l2946 2E62                          l2938 2E4A  
                        l4650 2728                          l4714 2A94                          l4706 2A62  
                        l4634 1706                          l4626 16EC                          l4618 1692  
                        l4570 1484                          l4562 144E                          l4554 1412  
                        l4538 139C                          l4490 12AC                          l4482 126A  
                        l4458 11A0                          l4466 11C4                          l4394 0FDE  
                        l4386 0F72                          l4378 0F62                          l4810 215C  
                        l4802 212A                          l5282 0842                          l3498 1C1A  
                        l5186 0B9A                          l5194 0BF2                          l5178 0B50  
                        l5098 08D4                          l3780 2F30                          l2980 2DDE  
                        l2972 2DD4                          l2964 2DC6                          l2956 2DAA  
                        l2892 2E82                          l3748 26D8                          l3772 25C6  
                        l3764 2588                          l2948 2E66                          l4660 274E  
                        l4652 272C                          l4644 270E                          l4708 2A70  
                        l4716 2A9A                          l4628 16FA                          l4580 14E6  
                        l4572 1494                          l4564 145C                          l4556 141E  
                        l4548 13E6                          l4724 2EAC                          l4492 12B0  
                        l4476 1216                          l4484 126C                          l4468 11C8  
                        l4396 0FEA                          l4388 0F9C                          l4740 246A  
                        l4732 2416                          l4812 2180                          l4804 2138  
                        l4900 1F80                          l2884 2EE4                          l5284 0898  
                        l5196 0C06                          l5188 0BAC                          l3790 2F3C  
                        l3782 2F34                          l2982 2DE2                          l2974 2DD6  
                        l2966 2DC8                          l2958 2DAE                          l2894 2E86  
                        l2886 2E70                          l3774 2616                          l3766 2598  
                        l3758 251C                          l4670 2784                          l4662 2760  
                        l4654 273A                          l4646 2712                          l4718 2AAA  
                        l4590 158E                          l4582 1502                          l4574 14AE  
                        l4566 1468                          l4558 1436                          l4726 2EC2  
                        l4494 12BE                          l4486 127C                          l4478 1222  
                        l4398 0FEE                          l4638 2D1E                          l4742 246C  
                        l4734 242C                          l4814 2190                          l4806 2156  
                        l4902 1FCC                          l4910 21BA                          l4822 27D2  
                        l5198 0C1A                          l3792 2F3E                          l3784 2F36  
                        l2984 2DE8                          l2968 2DCC                          l2992 2DF2  
                        l2896 2E88                          l2888 2E7E                          l3776 261C  
                        l3768 25A6                          l4672 279A                          l4664 2768  
                        l4680 27B0                          l4656 2742                          l4648 2720  
                        l4592 1598                          l4584 152C                          l4576 14BE  
                        l4568 1478                          l4728 2ED2                          l4496 12C4  
                        l4488 128C                          l4744 247C                          l4816 219E  
                        l4808 2158                          l4904 1FD2                          l4832 2890  
                        l4920 21EE                          l4912 21BA                          l4824 27E0  
                        l3960 231A                          l3794 2F5E                          l3786 2F38  
                        l2986 2DEA                          l2994 2E02                          l2898 2E8C  
                        l4682 27C0                          l4674 27A2                          l4666 2770  
                        l4658 2746                          l4690 2A10                          l4594 15A6  
                        l4586 1562                          l4578 14DA                          l4498 12C6  
                        l4770 24FA                          l4754 24A6                          l4746 2480  
                        l4738 2440                          l4818 21A0                          l4906 1FF0  
                        l4842 294E                          l4834 289E                          l4930 2224  
                        l4826 284A                          l3970 2364                          l3962 2320  
                        l3954 22F2                          l3796 2F66                          l3788 2F3A  
                        l2988 2DEC                          l2996 2E04                          l4684 27C8  
                        l4676 27A4                          l4668 277E                          l4692 2A1E  
                        l4596 15B8                          l4588 1570                          l4772 250A  
                        l4764 24CE                          l4756 24B0                          l4748 248E  
                        l4780 201E                          l4860 1DB8                          l4852 1D76  
                        l4844 295C                          l4836 2908                          l4940 2254  
                        l4932 2228                          l4924 2202                          l4916 21D0  
                        l4908 21B2                          l4828 287E                          l3972 2374  
                        l3980 23BE                          l3964 232E                          l3956 2306  
                        l3990 2F7A                          l2998 2E06                          l3798 2D64  
                        l4678 27AA                          l4694 2A26                          l4598 15C6  
                        l4766 24DA                          l4758 24BA                          l4790 2096  
                        l4782 2064                          l4870 1E58                          l4862 1DD4  
                        l4854 1D84                          l4846 29C6                          l4838 293C  
                        l4950 22BA                          l4942 2258                          l4934 222C  
                        l4926 2210                          l4918 21E2                          l3982 23D0  
                        l3974 2384                          l3966 234E                          l3958 230C  
                        l4696 2A2A                          l4688 2A0C                          l4768 24EA  
                        l4792 20A2                          l4784 207A                          l4776 2000  
                        l4880 1ED6                          l4872 1E5E                          l4864 1E20  
                        l4856 1D90                          l4848 29FA                          l4952 22D6  
                        l4944 2272                          l4928 2218                          l4936 222C  
                        l4960 0074                          l3976 23A4                          l3968 2354  
                        l3984 23D8                          l4698 2A38                          l4794 20D4  
                        l4778 2010                          l4890 1F10                          l4882 1EDA  
                        l4874 1E7A                          l4866 1E28                          l4858 1D94  
                        l4946 2282                          l4938 2238                          l4970 00CC  
                        l4962 007A                          l4954 0012                          l3986 23F4  
                        l3978 23A8                          l4796 20D6                          l4788 208E  
                        l4892 1F1C                          l4884 1EF8                          l4876 1E96  
                        l4868 1E32                          l4948 228E                          l4980 0160  
                        l4972 00E8                          l4964 008C                          l4956 0026  
                        l4798 20E2                          l4894 1F50                          l4886 1F00  
                        l4878 1EA2                          l4990 01F0                          l4982 0174  
                        l4974 010C                          l4966 00A0                          l4958 0060  
                        l4896 1F6C                          l4888 1F0C                          l4992 020C  
                        l4984 0194                          l4976 0128                          l4968 00B4  
                        l4898 1F7C                          l4994 0228                          l4986 01B0  
                        l4978 0144                          l4988 01D4                          l4998 0240  
                        STR_1 7F7C                          STR_2 7F96                          STR_3 7FA2  
                        STR_4 7F6F                          STR_5 7FC5                          STR_6 7FBA  
                        STR_7 7F52                          STR_8 7F83                          STR_9 7FFD  
                        _LATB 000F8A                          u3200 1B02                          u3201 1AFE  
                        u4100 0E5A                          u2500 1798                          u3300 1CFE  
                 main@lastKey 00B6                          u4101 0E56                          u2501 1794  
                        u3301 1CFA                          u4110 0E6A                          u2510 17AA  
                        u3310 1D30                          u3230 1B6C                          u3214 1B18  
                        u4111 0E66                          u2511 17A6                          u3311 1D2C  
                        u3231 1B68                          u3215 1B14                          u4200 0FB6  
                        u4120 0EAC                          u5000 1FF0                          u2600 1954  
                        u2520 17BA                          u2440 2C7C                          u3320 1D5A  
                        u3240 1BD2                          u3224 1B52                          u4121 0EA8  
                        u5001 1FEC                          u2601 1950                          u2521 17B6  
                        u2441 2C78                          u3321 1D56                          u3241 1BCE  
                        u3225 1B4E                          u3330 2ACE                          u4210 0FDE  
                        u4130 0EC2                          u2610 1974                          u2530 17FA  
                        u2450 2CB8                          u5010 21CC                          u3250 1C1A  
                        u3331 2ACA                          u4211 0FDA                          u4131 0EBE  
                        u2611 1970                          u2531 17F6                          u2451 2CB4  
                        u5011 21C8                          u3251 1C16                          u2460 2DC6  
                        u3500 26D2                          u3340 2B18                          u4300 1116  
                        u4220 0FFC                          u4140 0ED4                          u2620 1986  
                        u2540 183A                          u5020 21E2                          u5100 0426  
                        u3260 1C4E                          u2461 2DC2                          u3501 26CE  
                        u4301 1112                          u4221 0FF8                          u4141 0ED0  
                        u2621 1982                          u2541 1836                          u5021 21DE  
                        u5101 0422                          u3261 1C4A                          u3510 26EC  
                        u3350 2B40                          u4310 114C                          u4230 101C  
                        u4150 0EE4                          u2630 19B4                          u2550 18B0  
                        u2470 1732                          u5030 2210                          u5110 047C  
                        u3270 1C70                          u3190 1AC0                          u3511 26E8  
                        u4311 1148                          u4231 1018                          u4151 0EE0  
                        u2631 19B0                          u2551 18AC                          u2471 172E  
                        u5031 220C                          u5111 0478                          u3271 1C6C  
                        u3520 2706                          u3360 2B50                          u4400 1216  
                        u4320 115C                          u4240 102A                          u4160 0F20  
                        u2640 19CA                          u2560 18D2                          u2480 1744  
                        u5040 2272                          u5200 080C                          u5120 04E6  
                        u3280 1CA2                          u3521 2702                          u3361 2B4C  
                        u4401 1212                          u4321 1158                          u4241 1026  
                        u4161 0F1C                          u2641 19C6                          u2561 18CE  
                        u2481 1740                          u5041 226E                          u5201 0808  
                        u5121 04E2                          u3281 1C9E                          u3530 254A  
                        u4410 1230                          u4330 1188                          u4250 103A  
                        u4170 0F2E                          u4090 0E48                          u2650 19DE  
                        u2570 18FC                          u2490 1754                          u5050 22F0  
                        u5130 0550                          u3290 1CD6                          u5210 0952  
                        u3531 2546                          u3347 2B0E                          u4411 122C  
                        u4331 1184                          u4251 1036                          u4171 0F2A  
                        u4091 0E44                          u2651 19DA                          u2571 18F8  
                        u2491 1750                          u5051 22EC                          u5131 054C  
                        u3291 1CD2                          u5211 094E                          u3460 2670  
                        u3540 2588                          u4500 132A                          u4420 126A  
                        u4340 1198                          u4260 106C                          u4180 0F9C  
                        u2660 19F8                          u2580 1920                          u5140 060C  
                        u5060 005C                          u5300 0AA0                          u5220 0982  
                        u3461 266C                          u3541 2584                          u3357 2B36  
                        u4501 1326                          u4421 1266                          u4341 1194  
                        u4261 1068                          u4181 0F98                          u2661 19F4  
                        u2581 191C                          u5141 0608                          u5061 0058  
                        u5301 0A9C                          u5221 097E                          u3470 2684  
                        u3550 25A6                          u4510 136A                          u4430 127C  
                        u4350 11B4                          u4270 107A                          u4190 0FB4  
                        u2670 1A40                          u2590 1936                          u5150 0656  
                        u5070 0352                          u5310 0ACA                          u5230 0994  
                        u3471 2680                          u3551 25A2                          u4511 1366  
                        u4431 1278                          u4351 11B0                          u4271 1076  
                        u4191 0FAE                          u2671 1A3C                          u2591 1932  
                        u5151 0652                          u5071 034E                          u5311 0AC6  
                        u5231 0990                          u3480 269E                          u3560 25C6  
                        u4600 1606                          u4520 137C                          u4440 128C  
                        u4360 11C4                          u4280 1098                          u2680 1A70  
                        u5160 06A0                          u5080 039C                          u5400 0D72  
                        u5320 0B14                          u5240 09B4                          u3481 269A  
                        u3561 25C2                          u4601 1602                          u4521 1378  
                        u4441 1288                          u4361 11C0                          u4281 1094  
                        u2681 1A6C                          u5161 069C                          u5081 0398  
                        u5401 0D6E                          u5321 0B10                          u5241 09B0  
                        u3490 26B8                          u3570 2616                          u4610 161C  
                        u4530 138C                          u4450 12AC                          u4370 11D6  
                        u4290 10D0                          u2690 1A9E                          u5170 06E2  
                        u5090 03E6                          u3730 2364                          u5410 0DC8  
                        u5330 0B26                          u5250 09DC                          u3491 26B4  
                        u3571 2612                          u4611 1618                          u4531 1388  
                        u4451 12A8                          u4371 11D2                          u4291 10CC  
                        u2691 1A9A                          u5171 06DE                          u5091 03E2  
                        u3731 2360                          u5411 0DC4                          u5331 0B22  
                        u5251 09D8                          u4700 277E                          u4620 1630  
                        u4540 13C2                          u4460 12BE                          u4380 11EC  
                        u5180 0738                          u3740 2374                          u5420 0E1A  
                        u5340 0B50                          u5260 09EE                          u4701 277A  
                        u4621 162C                          u4541 13BE                          u4461 12BA  
                        u4381 11E8                          u5181 0734                          u3741 2370  
                        u5421 0E16                          u5341 0B4C                          u5261 09EA  
                        u4710 279A                          u4630 164A                          u4550 13D2  
                        u4470 12DA                          u4390 1202                          u5190 07A2  
                        u3750 23D0                          u5350 0B9A                          u5270 0A18  
                        u4711 2796                          u4631 1646                          u4551 13CE  
                        u4471 12D6                          u4391 11FE                          u5191 079E  
                        u3751 23CC                          u5351 0B96                          u5271 0A14  
                        u4720 27C0                          u4640 1692                          u4560 154C  
                        u4480 1308                          u4800 242C                          u3760 23F4  
                        u5360 0BAC                          u5280 0A66                          u4721 27BC  
                        u4641 168E                          u4481 1304                          u4801 2428  
                        u3761 23F0                          u5361 0BA8                          u5281 0A62  
                        u4730 2A1E                          u4650 16C0                          u4570 15A6  
                        u4490 131A                          u4810 2460                          u5370 0C78  
                        u5290 0A8E                          u4731 2A1A                          u4651 16BC  
                        u4571 15A2                          u4491 1316                          u5507 1B2A  
                        u5371 0C74                          u5291 0A8A                          u4740 2A38  
                        u4660 16FA                          u4580 15C6                          u4820 248E  
                        u4900 20D0                          u5380 0CC2                          u4741 2A34  
                        u4661 16F6                          u4581 15C2                          u4565 1542  
                        u4821 248A                          u4901 20CC                          u5517 0082  
                        u5381 0CBE                          u5437 0A44                          u4670 2720  
                        u4750 2A52                          u4590 15D8                          u4830 24A2  
                        u4910 211A                          u5390 0D0C                          u4671 271C  
                        u4751 2A4E                          u4591 15D4                          u4831 249E  
                        u4815 2456                          u4911 2116                          u5527 2CA0  
                        u5391 0D08                          u5447 0AF6                          u4680 273A  
                        u4760 2A70                          u4840 24CA                          u4920 2138  
                        u5537 2D76                          u4681 2736                          u4761 2A6C  
                        u4841 24C6                          u4921 2134                          u5457 0B7C  
                        u4690 2760                          u4770 2A86                          u4850 24EA  
                        u4930 2148                          u5547 2D8C                          u4691 275C  
                        u4771 2A82                          u4851 24E6                          u4931 2144  
                        u5467 0BE8                          u4780 2AAA                          u4860 24FA  
                        u4940 2156                          u5557 2DA0                          u4781 2AA6  
                        u4861 24F6                          u4941 2152                          u5477 2312  
                        u4790 2EC2                          u4950 2190                          u4870 2010  
                        u5567 2F24                          u4791 2EBE                          u4951 218C  
                        u4871 200C                          u5487 2326                          u4960 219E  
                        u4880 201E                          u5577 2F48                          u4961 219A  
                        u4881 201A                          u5497 23B2                          u4890 207A  
                        u4970 1D84                          u5587 2F6C                          u4891 2076  
                        u4971 1D80                          u4980 1E96                          u4981 1E92  
                        u4990 1EF8                          u4991 1EF4                          _Glim 00D4  
                        _Hlim 00D6                          _Tlim 00D8                          _main 08C8  
                        _itoa 21B2                          fsr1h 000FE2                          fsr2h 000FDA  
                        indf1 000FE7                          indf2 000FDF                          fsr1l 000FE1  
                        fsr2l 000FD9                          btemp 0056        __size_of_WriteDataXLCD 003E  
                        prodh 000FF4                          prodl 000FF3                          start 000E  
             ___fldiv@new_exp 0042                ??_configureADC 000A                ??_configureLCD 000C  
                ___param_bank 000000            readKey@currentTime 0025                         ??_ISR 000A  
                main@gasLimit 00B0    __end_of_configureInterrupt 2F1E                  _WriteCmdXLCD 2E6E  
              ?_floatToString 0031                ??_displayStuff 0011                 ___fltol@sign1 0012  
               ?_SetDDRamAddr 0001               __end_of___fladd 12EE                         ?_main 0001  
             __end_of___fldiv 1AB2                         ?_itoa 0012               __end_of___awdiv 27D2  
             __end_of___flneg 2EE4                         STR_10 7FEA                         STR_11 7FE3  
                       STR_12 7FFB                         STR_20 7F22                         STR_13 7FEA  
                       STR_21 7F42                         STR_14 7FEF                         STR_22 7FD0  
                       STR_23 7FF8                         STR_15 7FF4                         STR_16 7FEA  
                       STR_24 7F61                         STR_17 7FDA                         STR_25 7F11  
                       STR_18 7FF8                         STR_26 7FAE                         STR_27 7F89  
                       STR_19 7F32               __end_of___awmod 2ABC               __end_of___flmul 1718  
             __end_of___flsub 2D64               __end_of___fltol 251C                         _T0CON 000FD5  
             ___awdiv@divisor 000C               __end_of___llmod 2C6A                         i2l179 2BDE  
                       i2l804 2C68               ___awdiv@counter 000E                         i2l797 2C58  
                       _TMR0L 000FD6                         _PORTB 000F81                         _PORTD 000F83  
                main@humLimit 00AE                         _TRISB 000F93                         _TRISD 000F95  
             __end_of_gasRead 2A0C               __end_of_readKey 1D76             readKey@pressedKey 0024  
  __size_of_readTwoDigitValue 0124                         tablat 000FF5          __end_ofreadKey@F3297 7F11  
                       ttemp5 0057                         ttemp6 005A                         ttemp7 005E  
                       status 000FD8                         wtemp8 0057                 humidade@Humid 0064  
             __initialization 2CD8                  __end_of_main 0E2E                  __end_of_itoa 22F2  
            __end_of_BusyXLCD 2DF0            __size_of_DelayXLCD 0012         __size_of_DelayPORXLCD 0010  
              ??_SetDDRamAddr 000A              __end_of_OpenXLCD 270E                        ??_main 0096  
                      ??_itoa 0016                 __activetblptr 000002                 _WriteDataXLCD 2E30  
        displayMenu@menuIndex 004A          readKey@lastStableKey 0054                        _ADCON1 000FC1  
                      _ADCON2 000FC0              ___llmod@dividend 0001                        _ADRESH 000FC4  
                      _ADRESL 000FC3              ___awdiv@dividend 000A                        i2l4000 2C0C  
                      i2l4002 2C1A                        i2l4004 2C38                        i2l4006 2C48  
                      i2l4008 2C52                        i2l4140 2B66                        i2l4150 2BDC  
                      i2l4142 2B72                        i2l4144 2BAC                        i2l4136 2B54  
                      i2l4146 2BC8                        i2l4138 2B62                        i2l4148 2BD4  
                      i2l3994 2BE2                        i2l3996 2BF8                        i2l3998 2C00  
               main@menuIndex 00B4              __end_of___xxtofl 21B2                  _DelayPORXLCD 2F42  
                      ___flge 251C                     ??___fladd 0012               ??_floatToString 0039  
                   ??___fldiv 0039                     ??___awdiv 000E                     ??___flneg 000E  
                   ??___awmod 000E                     ??___flmul 0020                     ??___flsub 0022  
                   ??___fltol 000E                     ??___llmod 0009          __size_of_configureIO 0012  
                      _keymap 7EF9                        _buzzer 2F7A                        _millis 2EE4  
                      clear_0 2CFE                        clear_1 2D0A                 main@tempLimit 00B2  
            ___awdiv@quotient 0010                     ??_gasRead 004A               ___awmod@divisor 000C  
                      isa$std 000001              __end_of_humidade 294E               ___awmod@counter 000E  
        __size_of_displayMenu 08B6                ?_WriteDataXLCD 0001                     ??_readKey 0012  
            __end_of_tempRead 2890             humidade@rawAnalog 006C                  __mediumconst 7EF8  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
        __end_of_configureADC 2F6A          __end_of_configureLCD 2DAA             __end_of_DelayXLCD 2F30  
                  ___flge@ff1 0018                    ___flge@ff2 001C                  ___xxtofl@arg 0014  
                ___xxtofl@exp 0013                  ___xxtofl@val 000A                    __accesstop 0060  
     __end_of__initialization 2D10  displayStuff@LCDWritePosition 0011                    ___flneg@f1 000A  
        __end_of_displayStuff 2B52                 ___rparam_used 000001        readTwoDigitValue@F3277 00CF  
                  ___fltol@f1 000A                __pcstackCOMRAM 0001                  __pidataBANK0 2F74  
                _gasRead$1532 0068              ??_configureTimer 000A            displayStuff@column 000D  
      readTwoDigitValue@input 002D        __size_of_DelayFor18TCY 000A                    __pbssBANK0 00B8  
                   ?_BusyXLCD 0001               WriteCmdXLCD@cmd 000A          __end_of_SetDDRamAddr 2E30  
        readTwoDigitValue@key 0032       displayMenu@currentHumid 008E                     ?_OpenXLCD 0001  
       displayMenu@errorCycle 0050         displayMenu@currentGas 0092                       ?___flge 0018  
           WriteDataXLCD@data 000A               ??_WriteDataXLCD 000A                       ?_buzzer 000A  
                     ?_millis 000A                  readKey@F3297 7F09                     ?___xxtofl 000A  
          _configureInterrupt 2F0A                main@currentGas 00AA                    ??_BusyXLCD 000A  
         ?_configureInterrupt 0001                     ?_humidade 0060                    ??_OpenXLCD 000B  
                     __Hparam 0000                    _keyPressed 0055                       __Lparam 0000  
                   ?_tempRead 0060                    _readAnalog 2C6A               __size_of___flge 0104  
                     ___fladd 0E2E                       ___fldiv 1718                       ___awdiv 270E  
               _DelayFor18TCY 2F6A                       ___flneg 2EAC                       ___awmod 2A0C  
                     ___flmul 12EE                       ___flsub 2D1E                       ___fltol 2416  
                     ___llmod 2BE2                 _humidade$1531 0068          ??_configureInterrupt 000A  
                     __pcinit 2CD8                       _gasRead 294E               __size_of_buzzer 0002  
             __size_of_millis 0026                       __ramtop 0800                       __ptext0 08C8  
                     __ptext1 22F2                       __ptext2 1AB2                       __ptext3 0012  
                     __ptext4 27D2                       __ptext5 2EE4                       __ptext6 21B2  
                     __ptext7 2890                       __ptext8 294E                       __ptext9 2C6A  
       __size_of_configureADC 000C         __size_of_configureLCD 0046                  __size_of_ISR 2BDA  
                     _readKey 1AB2                    ??___xxtofl 000E              ___awmod@dividend 000A  
                  gasRead@gas 0064         __size_of_displayStuff 0096                __pintcode_body 2B52  
        end_of_initialization 2D10                       itoa@ptr 0014                 __Lmediumconst 7EF8  
                     int_func 2B52                    ??_humidade 004A                    ??_tempRead 004A  
              ?_DelayFor18TCY 0001                       postdec1 000FE5                       postdec2 000FDD  
                _configureADC 2F5E                  _configureLCD 2D64                       postinc0 000FEE  
                     postinc2 000FDE           floatToString@buffer 0035           floatToString@intStr 0060  
                   _PORTCbits 000F82                     _PORTDbits 000F83                  _displayStuff 2ABC  
                 ___fladd@grs 0019                 ___xxtofl@sign 0012                     _TRISAbits 000F92  
                   _TRISCbits 000F94                     _TRISDbits 000F95                     _TRISEbits 000F96  
                 ___fldiv@grs 0044             tempRead@rawAnalog 006C                   ___fldiv@rem 003D  
       __size_of_SetDDRamAddr 0040   readTwoDigitValue@digitCount 0030                   ___flmul@grs 0026  
            main@currentHumid 00A6                     _DelayXLCD 2F1E                 ??_configureIO 000A  
                 ?_readAnalog 000A                 ??_displayMenu 0078                __end_of___flge 2620  
       __end_of_floatToString 1FFE                __end_of_keymap 7F09                __end_of_buzzer 2F7C  
              __end_of_millis 2F0A                  _SetDDRamAddr 2DF0            SetDDRamAddr@DDaddr 000A  
         start_initialization 2CD8                   __end_of_ISR 2BE2       readTwoDigitValue@prompt 0029  
            readAnalog@result 000E               ___llmod@divisor 0005             __size_of_BusyXLCD 0046  
             ___llmod@counter 0009                    ?_DelayXLCD 0001                    readKey@col 0020  
                  readKey@row 0022               ??_DelayFor18TCY 000A           displayMenu@valueStr 007C  
           __size_of_OpenXLCD 00EE                      ??___flge 0020                floatToString@i 0074  
               ?_WriteCmdXLCD 0001                   __pdataBANK0 00D4                      ??_buzzer 000C  
                    ??_millis 000E           __end_of_configureIO 2F42                     ___fladd@a 000E  
                   ___fladd@b 000A           __end_of_displayMenu 08C8                     ___fldiv@a 0035  
                   ___fldiv@b 0031                     ___flmul@a 001C                     ___flmul@b 0018  
                 __pbssCOMRAM 004C                     ___flsub@a 001E                     ___flsub@b 001A  
               __pcstackBANK0 0060             __size_of___xxtofl 01B4           __size_of_readAnalog 006E  
            gasRead@rawAnalog 006C             displayStuff@stuff 000F                 tempRead@TempC 0064  
      displayMenu@currentTemp 008A        displayMenu@currentTime 0086             __size_of_humidade 00BE  
                   __pintcode 0008       readKey@lastDebounceTime 00C7                 __pmediumconst 7EF8  
               _tempRead$1530 0068                ??_WriteCmdXLCD 000A                      ?___fladd 000A  
                    ?___fldiv 0031                      ?___awdiv 000A                      ?___flneg 000A  
                    ?___awmod 000A                      ?___flmul 0018                      ?___flsub 001A  
                    ?___fltol 000A             __size_of_tempRead 00BE                      ?___llmod 0001  
   displayMenu@lastUpdateTime 00CB                      ?_gasRead 0060         __end_of_WriteDataXLCD 2E6E  
                    ?_readKey 0001                 readAnalog@pin 0010       __size_of_configureTimer 000C  
                    _LATEbits 000F8D                  _milliseconds 004C                   ??_DelayXLCD 000A  
               ?_DelayPORXLCD 0001                      i2u402_40 2B62                      i2u402_41 2B5E  
                    i2u403_40 2BAC                      i2u403_41 2BA8                      i2u404_40 2BC8  
                    i2u404_41 2BC4            floatToString@i_805 006C               OpenXLCD@lcdtype 000B  
                    i2u377_40 2BF8                      i2u377_41 2BF4                      i2u378_40 2C1A  
                    i2u378_41 2C16                      i2u379_40 2C38                      i2u379_41 2C34  
               readKey@InvCol 0018                      _RCONbits 000FD0                   _configureIO 2F30  
          floatToString@digit 0070            floatToString@index 0076            floatToString@value 0031  
                 _displayMenu 0012   __size_of_configureInterrupt 0014                    _ADCON0bits 000FC2  
             main@currentTemp 00A2               main@currentTime 009E                   _INTCON2bits 000FF1  
                   copy_data0 2CEC                      _BusyXLCD 2DAA                ??_DelayPORXLCD 000A  
                    _OpenXLCD 2620                      __Hrparam 0000                      __Lrparam 0000  
                ??_readAnalog 000C                     itoa@count 0016                     itoa@value 0012  
            __size_of___fladd 04C0              __size_of___fldiv 039A              __size_of___awdiv 00C4  
            __size_of___flneg 0038              __size_of___awmod 00B0              __size_of___flmul 042A  
            __size_of___flsub 0046              __size_of___fltol 0106              __size_of___llmod 0088  
            _displayStuff$782 0013              __size_of_gasRead 00BE                      ___xxtofl 1FFE  
            __size_of_readKey 02C4                      __ptext10 1718                      __ptext11 1D76  
                    __ptext20 2ABC                      __ptext12 1FFE                      __ptext21 2E30  
                    __ptext13 2416                      __ptext30 2DAA                      __ptext22 251C  
                    __ptext14 2D1E                      __ptext31 2F6A                      __ptext23 2F52  
                    __ptext15 0E2E                      __ptext32 2F0A                      __ptext24 2D64  
                    __ptext16 2EAC                      __ptext33 2F30                      __ptext25 2620  
                    __ptext17 12EE                      __ptext34 2F5E                      __ptext26 2E6E  
                    __ptext18 2A0C                      __ptext35 2F7A                      __ptext27 2DF0  
                    __ptext19 270E                      __ptext28 2F1E                      __ptext37 2BE2  
                    __ptext29 2F42          __end_of_WriteCmdXLCD 2EAC            __end_of_readAnalog 2CD8  
                    _keyState 00B8            buzzer@buzzerStatus 000A                 __size_of_main 0566  
               __size_of_itoa 0140                      _humidade 2890                      _tempRead 27D2  
      floatToString@precision 0037                      isa$xinst 000000             floatToString@temp 0072  
                    int$flags 0056         main@lastDisplayUpdate 009A                    _INTCONbits 000FF2  
              _configureTimer 2F52                      itoa@temp 0018               main@pressed_key 00B7  
                    millis@ms 000E               displayStuff@row 000B                      intlevel2 0000  
      __size_of_floatToString 0288             _readTwoDigitValue 22F2            ?_readTwoDigitValue 0029  
       __end_of_DelayFor18TCY 2F74           ??_readTwoDigitValue 002B        __end_of_configureTimer 2F5E  
        floatToString@intPart 006E          __end_of_DelayPORXLCD 2F52        displayMenu@systemCycle 00D2  
     readKey@lastKeyPressTime 00C3                 ___fladd@signs 0016     __end_of_readTwoDigitValue 2416  
                ___fladd@aexp 0017                  ___fladd@bexp 0018  
