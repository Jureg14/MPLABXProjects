

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Feb 06 17:56:44 2025

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59  0000                     
    60                           ; Version 2.32
    61                           ; Generated 02/02/2021 GMT
    62                           ; 
    63                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F4550 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     
    96                           	psect	idataBANK0
    97  002FF2                     __pidataBANK0:
    98                           	callstack 0
    99                           
   100                           ;initializer for _Glim
   101  002FF2  0014               	dw	20
   102                           
   103                           ;initializer for _Hlim
   104  002FF4  0032               	dw	50
   105                           
   106                           ;initializer for _Tlim
   107  002FF6  001E               	dw	30
   108                           
   109                           	psect	mediumconst
   110  007EF8                     __pmediumconst:
   111                           	callstack 0
   112  007EF8  00                 	db	0
   113  007EF9                     _keymap:
   114                           	callstack 0
   115  007EF9  31                 	db	49
   116  007EFA  32                 	db	50
   117  007EFB  33                 	db	51
   118  007EFC  41                 	db	65
   119  007EFD  34                 	db	52
   120  007EFE  35                 	db	53
   121  007EFF  36                 	db	54
   122  007F00  42                 	db	66
   123  007F01  37                 	db	55
   124  007F02  38                 	db	56
   125  007F03  39                 	db	57
   126  007F04  43                 	db	67
   127  007F05  46                 	db	70
   128  007F06  30                 	db	48
   129  007F07  45                 	db	69
   130  007F08  44                 	db	68
   131  007F09                     __end_of_keymap:
   132                           	callstack 0
   133  007F09                     readKey@F3616:
   134                           	callstack 0
   135  007F09  0003               	dw	3
   136  007F0B  0002               	dw	2
   137  007F0D  0001               	dw	1
   138  007F0F  0000               	dw	0
   139  007F11                     __end_ofreadKey@F3616:
   140                           	callstack 0
   141  0000                     _LATEbits	set	3981
   142  0000                     _TRISEbits	set	3990
   143  0000                     _TRISD	set	3989
   144  0000                     _PORTD	set	3971
   145  0000                     _ADRESL	set	4035
   146  0000                     _ADRESH	set	4036
   147  0000                     _ADCON0bits	set	4034
   148  0000                     _ADCON2	set	4032
   149  0000                     _ADCON1	set	4033
   150  0000                     _PORTB	set	3969
   151  0000                     _LATB	set	3978
   152  0000                     _T0CON	set	4053
   153  0000                     _INTCON2bits	set	4081
   154  0000                     _RCONbits	set	4048
   155  0000                     _TRISCbits	set	3988
   156  0000                     _TRISAbits	set	3986
   157  0000                     _TRISB	set	3987
   158  0000                     _TMR0L	set	4054
   159  0000                     _INTCONbits	set	4082
   160  0000                     _PORTCbits	set	3970
   161  0000                     _PORTDbits	set	3971
   162  0000                     _TRISDbits	set	3989
   163  007F11                     STR_25:
   164  007F11  48                 	db	72	;'H'
   165  007F12  75                 	db	117	;'u'
   166  007F13  6D                 	db	109	;'m'
   167  007F14  69                 	db	105	;'i'
   168  007F15  64                 	db	100	;'d'
   169  007F16  69                 	db	105	;'i'
   170  007F17  66                 	db	102	;'f'
   171  007F18  69                 	db	105	;'i'
   172  007F19  63                 	db	99	;'c'
   173  007F1A  61                 	db	97	;'a'
   174  007F1B  64                 	db	100	;'d'
   175  007F1C  6F                 	db	111	;'o'
   176  007F1D  72                 	db	114	;'r'
   177  007F1E  20                 	db	32
   178  007F1F  4F                 	db	79	;'O'
   179  007F20  4E                 	db	78	;'N'
   180  007F21  00                 	db	0
   181  007F22                     STR_20:
   182  007F22  48                 	db	72	;'H'
   183  007F23  5F                 	db	95	;'_'
   184  007F24  6C                 	db	108	;'l'
   185  007F25  69                 	db	105	;'i'
   186  007F26  6D                 	db	109	;'m'
   187  007F27  20                 	db	32
   188  007F28  65                 	db	101	;'e'
   189  007F29  78                 	db	120	;'x'
   190  007F2A  63                 	db	99	;'c'
   191  007F2B  65                 	db	101	;'e'
   192  007F2C  64                 	db	100	;'d'
   193  007F2D  69                 	db	105	;'i'
   194  007F2E  64                 	db	100	;'d'
   195  007F2F  61                 	db	97	;'a'
   196  007F30  21                 	db	33
   197  007F31  00                 	db	0
   198  007F32                     STR_19:
   199  007F32  54                 	db	84	;'T'
   200  007F33  5F                 	db	95	;'_'
   201  007F34  6C                 	db	108	;'l'
   202  007F35  69                 	db	105	;'i'
   203  007F36  6D                 	db	109	;'m'
   204  007F37  20                 	db	32
   205  007F38  65                 	db	101	;'e'
   206  007F39  78                 	db	120	;'x'
   207  007F3A  63                 	db	99	;'c'
   208  007F3B  65                 	db	101	;'e'
   209  007F3C  64                 	db	100	;'d'
   210  007F3D  69                 	db	105	;'i'
   211  007F3E  64                 	db	100	;'d'
   212  007F3F  61                 	db	97	;'a'
   213  007F40  21                 	db	33
   214  007F41  00                 	db	0
   215  007F42                     STR_21:
   216  007F42  47                 	db	71	;'G'
   217  007F43  5F                 	db	95	;'_'
   218  007F44  6C                 	db	108	;'l'
   219  007F45  69                 	db	105	;'i'
   220  007F46  6D                 	db	109	;'m'
   221  007F47  20                 	db	32
   222  007F48  65                 	db	101	;'e'
   223  007F49  78                 	db	120	;'x'
   224  007F4A  63                 	db	99	;'c'
   225  007F4B  65                 	db	101	;'e'
   226  007F4C  64                 	db	100	;'d'
   227  007F4D  69                 	db	105	;'i'
   228  007F4E  64                 	db	100	;'d'
   229  007F4F  6F                 	db	111	;'o'
   230  007F50  21                 	db	33
   231  007F51  00                 	db	0
   232  007F52                     STR_7:
   233  007F52  4C                 	db	76	;'L'
   234  007F53  69                 	db	105	;'i'
   235  007F54  6D                 	db	109	;'m'
   236  007F55  20                 	db	32
   237  007F56  72                 	db	114	;'r'
   238  007F57  65                 	db	101	;'e'
   239  007F58  73                 	db	115	;'s'
   240  007F59  65                 	db	101	;'e'
   241  007F5A  74                 	db	116	;'t'
   242  007F5B  61                 	db	97	;'a'
   243  007F5C  64                 	db	100	;'d'
   244  007F5D  6F                 	db	111	;'o'
   245  007F5E  73                 	db	115	;'s'
   246  007F5F  21                 	db	33
   247  007F60  00                 	db	0
   248  007F61                     STR_24:
   249  007F61  52                 	db	82	;'R'
   250  007F62  65                 	db	101	;'e'
   251  007F63  73                 	db	115	;'s'
   252  007F64  66                 	db	102	;'f'
   253  007F65  72                 	db	114	;'r'
   254  007F66  69                 	db	105	;'i'
   255  007F67  61                 	db	97	;'a'
   256  007F68  64                 	db	100	;'d'
   257  007F69  6F                 	db	111	;'o'
   258  007F6A  72                 	db	114	;'r'
   259  007F6B  20                 	db	32
   260  007F6C  4F                 	db	79	;'O'
   261  007F6D  4E                 	db	78	;'N'
   262  007F6E  00                 	db	0
   263  007F6F                     STR_4:
   264  007F6F  48                 	db	72	;'H'
   265  007F70  75                 	db	117	;'u'
   266  007F71  6D                 	db	109	;'m'
   267  007F72  69                 	db	105	;'i'
   268  007F73  64                 	db	100	;'d'
   269  007F74  20                 	db	32
   270  007F75  53                 	db	83	;'S'
   271  007F76  61                 	db	97	;'a'
   272  007F77  6C                 	db	108	;'l'
   273  007F78  76                 	db	118	;'v'
   274  007F79  6F                 	db	111	;'o'
   275  007F7A  21                 	db	33
   276  007F7B  00                 	db	0
   277  007F7C                     STR_1:
   278  007F7C  4C                 	db	76	;'L'
   279  007F7D  69                 	db	105	;'i'
   280  007F7E  6D                 	db	109	;'m'
   281  007F7F  69                 	db	105	;'i'
   282  007F80  74                 	db	116	;'t'
   283  007F81  65                 	db	101	;'e'
   284  007F82  20                 	db	32
   285  007F83  54                 	db	84	;'T'
   286  007F84  65                 	db	101	;'e'
   287  007F85  6D                 	db	109	;'m'
   288  007F86  70                 	db	112	;'p'
   289  007F87  3A                 	db	58	;':'
   290  007F88  00                 	db	0
   291  007F89                     STR_27:
   292  007F89  49                 	db	73	;'I'
   293  007F8A  6E                 	db	110	;'n'
   294  007F8B  76                 	db	118	;'v'
   295  007F8C  61                 	db	97	;'a'
   296  007F8D  6C                 	db	108	;'l'
   297  007F8E  69                 	db	105	;'i'
   298  007F8F  64                 	db	100	;'d'
   299  007F90  20                 	db	32
   300  007F91  4D                 	db	77	;'M'
   301  007F92  65                 	db	101	;'e'
   302  007F93  6E                 	db	110	;'n'
   303  007F94  75                 	db	117	;'u'
   304  007F95  00                 	db	0
   305  007F96                     STR_2:
   306  007F96  54                 	db	84	;'T'
   307  007F97  65                 	db	101	;'e'
   308  007F98  6D                 	db	109	;'m'
   309  007F99  70                 	db	112	;'p'
   310  007F9A  20                 	db	32
   311  007F9B  53                 	db	83	;'S'
   312  007F9C  61                 	db	97	;'a'
   313  007F9D  6C                 	db	108	;'l'
   314  007F9E  76                 	db	118	;'v'
   315  007F9F  61                 	db	97	;'a'
   316  007FA0  21                 	db	33
   317  007FA1  00                 	db	0
   318  007FA2                     STR_3:
   319  007FA2  4C                 	db	76	;'L'
   320  007FA3  69                 	db	105	;'i'
   321  007FA4  6D                 	db	109	;'m'
   322  007FA5  69                 	db	105	;'i'
   323  007FA6  74                 	db	116	;'t'
   324  007FA7  65                 	db	101	;'e'
   325  007FA8  20                 	db	32
   326  007FA9  48                 	db	72	;'H'
   327  007FAA  75                 	db	117	;'u'
   328  007FAB  6D                 	db	109	;'m'
   329  007FAC  3A                 	db	58	;':'
   330  007FAD  00                 	db	0
   331  007FAE                     STR_26:
   332  007FAE  45                 	db	69	;'E'
   333  007FAF  78                 	db	120	;'x'
   334  007FB0  61                 	db	97	;'a'
   335  007FB1  75                 	db	117	;'u'
   336  007FB2  73                 	db	115	;'s'
   337  007FB3  74                 	db	116	;'t'
   338  007FB4  6F                 	db	111	;'o'
   339  007FB5  72                 	db	114	;'r'
   340  007FB6  20                 	db	32
   341  007FB7  4F                 	db	79	;'O'
   342  007FB8  4E                 	db	78	;'N'
   343  007FB9  00                 	db	0
   344  007FBA                     STR_6:
   345  007FBA  47                 	db	71	;'G'
   346  007FBB  61                 	db	97	;'a'
   347  007FBC  73                 	db	115	;'s'
   348  007FBD  20                 	db	32
   349  007FBE  53                 	db	83	;'S'
   350  007FBF  61                 	db	97	;'a'
   351  007FC0  6C                 	db	108	;'l'
   352  007FC1  76                 	db	118	;'v'
   353  007FC2  6F                 	db	111	;'o'
   354  007FC3  21                 	db	33
   355  007FC4  00                 	db	0
   356  007FC5                     STR_5:
   357  007FC5  4C                 	db	76	;'L'
   358  007FC6  69                 	db	105	;'i'
   359  007FC7  6D                 	db	109	;'m'
   360  007FC8  69                 	db	105	;'i'
   361  007FC9  74                 	db	116	;'t'
   362  007FCA  65                 	db	101	;'e'
   363  007FCB  20                 	db	32
   364  007FCC  47                 	db	71	;'G'
   365  007FCD  61                 	db	97	;'a'
   366  007FCE  73                 	db	115	;'s'
   367  007FCF  00                 	db	0
   368  007FD0                     STR_22:
   369  007FD0  53                 	db	83	;'S'
   370  007FD1  69                 	db	105	;'i'
   371  007FD2  73                 	db	115	;'s'
   372  007FD3  74                 	db	116	;'t'
   373  007FD4  65                 	db	101	;'e'
   374  007FD5  6D                 	db	109	;'m'
   375  007FD6  61                 	db	97	;'a'
   376  007FD7  73                 	db	115	;'s'
   377  007FD8  3A                 	db	58	;':'
   378  007FD9  00                 	db	0
   379  007FDA                     STR_17:
   380  007FDA  4C                 	db	76	;'L'
   381  007FDB  65                 	db	101	;'e'
   382  007FDC  69                 	db	105	;'i'
   383  007FDD  74                 	db	116	;'t'
   384  007FDE  75                 	db	117	;'u'
   385  007FDF  72                 	db	114	;'r'
   386  007FE0  61                 	db	97	;'a'
   387  007FE1  73                 	db	115	;'s'
   388  007FE2  00                 	db	0
   389  007FE3                     STR_11:
   390  007FE3  48                 	db	72	;'H'
   391  007FE4  75                 	db	117	;'u'
   392  007FE5  6D                 	db	109	;'m'
   393  007FE6  69                 	db	105	;'i'
   394  007FE7  64                 	db	100	;'d'
   395  007FE8  3A                 	db	58	;':'
   396  007FE9  00                 	db	0
   397  007FEA                     STR_10:
   398  007FEA  4C                 	db	76	;'L'
   399  007FEB  69                 	db	105	;'i'
   400  007FEC  6D                 	db	109	;'m'
   401  007FED  3A                 	db	58	;':'
   402  007FEE  00                 	db	0
   403  007FEF                     STR_14:
   404  007FEF  47                 	db	71	;'G'
   405  007FF0  61                 	db	97	;'a'
   406  007FF1  73                 	db	115	;'s'
   407  007FF2  3A                 	db	58	;':'
   408  007FF3  00                 	db	0
   409  007FF4                     STR_15:
   410  007FF4  70                 	db	112	;'p'
   411  007FF5  70                 	db	112	;'p'
   412  007FF6  6D                 	db	109	;'m'
   413  007FF7  00                 	db	0
   414  007FF8                     STR_18:
   415  007FF8  4F                 	db	79	;'O'
   416  007FF9  4B                 	db	75	;'K'
   417  007FFA  00                 	db	0
   418  007FFB                     STR_12:
   419  007FFB  25                 	db	37
   420  007FFC  00                 	db	0
   421  007FFD                     STR_9:
   422  007FFD  43                 	db	67	;'C'
   423  007FFE  00                 	db	0
   424  007FFF  00                 	db	0	; dummy byte at the end
   425  0000                     
   426                           ; #config settings
   427                           
   428                           	psect	cinit
   429  002D50                     __pcinit:
   430                           	callstack 0
   431  002D50                     start_initialization:
   432                           	callstack 0
   433  002D50                     __initialization:
   434                           	callstack 0
   435                           
   436                           ; Initialize objects allocated to BANK0 (6 bytes)
   437                           ; load TBLPTR registers with __pidataBANK0
   438  002D50  0EF2               	movlw	low __pidataBANK0
   439  002D52  6EF6               	movwf	tblptrl,c
   440  002D54  0E2F               	movlw	high __pidataBANK0
   441  002D56  6EF7               	movwf	tblptrh,c
   442  002D58  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   443  002D5A  6EF8               	movwf	tblptru,c
   444  002D5C  EE00  F0D2         	lfsr	0,__pdataBANK0
   445  002D60  EE10 F006          	lfsr	1,6
   446  002D64                     copy_data0:
   447  002D64  0009               	tblrd		*+
   448  002D66  CFF5 FFEE          	movff	tablat,postinc0
   449  002D6A  50E5               	movf	postdec1,w,c
   450  002D6C  50E1               	movf	fsr1l,w,c
   451  002D6E  E1FA               	bnz	copy_data0
   452                           
   453                           ; Clear objects allocated to BANK0 (26 bytes)
   454  002D70  EE00  F0B8         	lfsr	0,__pbssBANK0
   455  002D74  0E1A               	movlw	26
   456  002D76                     clear_0:
   457  002D76  6AEE               	clrf	postinc0,c
   458  002D78  06E8               	decf	wreg,f,c
   459  002D7A  E1FD               	bnz	clear_0
   460                           
   461                           ; Clear objects allocated to COMRAM (12 bytes)
   462  002D7C  EE00  F04A         	lfsr	0,__pbssCOMRAM
   463  002D80  0E0C               	movlw	12
   464  002D82                     clear_1:
   465  002D82  6AEE               	clrf	postinc0,c
   466  002D84  06E8               	decf	wreg,f,c
   467  002D86  E1FD               	bnz	clear_1
   468  002D88                     end_of_initialization:
   469                           	callstack 0
   470  002D88                     __end_of__initialization:
   471                           	callstack 0
   472  002D88  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   473  002D8A  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   474  002D8C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   475  002D8E  6EF8               	movwf	tblptru,c
   476  002D90  0100               	movlb	0
   477  002D92  EF64  F004         	goto	_main	;jump to C main() function
   478                           
   479                           	psect	bssCOMRAM
   480  00004A                     __pbssCOMRAM:
   481                           	callstack 0
   482  00004A                     _milliseconds:
   483                           	callstack 0
   484  00004A                     	ds	4
   485  00004E                     displayMenu@systemCycle:
   486                           	callstack 0
   487  00004E                     	ds	2
   488  000050                     displayMenu@errorCycle:
   489                           	callstack 0
   490  000050                     	ds	2
   491  000052                     _tak:
   492                           	callstack 0
   493  000052                     	ds	2
   494  000054                     readKey@lastStableKey:
   495                           	callstack 0
   496  000054                     	ds	1
   497  000055                     _keyPressed:
   498                           	callstack 0
   499  000055                     	ds	1
   500                           
   501                           	psect	bssBANK0
   502  0000B8                     __pbssBANK0:
   503                           	callstack 0
   504  0000B8                     _keyState:
   505                           	callstack 0
   506  0000B8                     	ds	11
   507  0000C3                     readKey@lastKeyPressTime:
   508                           	callstack 0
   509  0000C3                     	ds	4
   510  0000C7                     readKey@lastDebounceTime:
   511                           	callstack 0
   512  0000C7                     	ds	4
   513  0000CB                     displayMenu@lastUpdateTime:
   514                           	callstack 0
   515  0000CB                     	ds	4
   516  0000CF                     	ds	3
   517                           
   518                           	psect	dataBANK0
   519  0000D2                     __pdataBANK0:
   520                           	callstack 0
   521  0000D2                     _Glim:
   522                           	callstack 0
   523  0000D2                     	ds	2
   524  0000D4                     _Hlim:
   525                           	callstack 0
   526  0000D4                     	ds	2
   527  0000D6                     _Tlim:
   528                           	callstack 0
   529  0000D6                     	ds	2
   530                           
   531                           	psect	cstackBANK0
   532  000060                     __pcstackBANK0:
   533                           	callstack 0
   534  000060                     ?_tempRead:
   535                           	callstack 0
   536  000060                     ?_humidade:
   537                           	callstack 0
   538  000060                     ?_gasRead:
   539                           	callstack 0
   540  000060                     floatToString@intStr:
   541                           	callstack 0
   542                           
   543                           ; 12 bytes @ 0x0
   544  000060                     	ds	4
   545  000064                     tempRead@TempC:
   546                           	callstack 0
   547  000064                     humidade@Humid:
   548                           	callstack 0
   549  000064                     gasRead@gas:
   550                           	callstack 0
   551                           
   552                           ; 4 bytes @ 0x4
   553  000064                     	ds	4
   554  000068                     _tempRead$1533:
   555                           	callstack 0
   556  000068                     _humidade$1534:
   557                           	callstack 0
   558  000068                     _gasRead$1535:
   559                           	callstack 0
   560                           
   561                           ; 4 bytes @ 0x8
   562  000068                     	ds	4
   563  00006C                     tempRead@rawAnalog:
   564                           	callstack 0
   565  00006C                     humidade@rawAnalog:
   566                           	callstack 0
   567  00006C                     gasRead@rawAnalog:
   568                           	callstack 0
   569  00006C                     floatToString@digit:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0xC
   573  00006C                     	ds	2
   574  00006E                     floatToString@intPart:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0xE
   578  00006E                     	ds	2
   579  000070                     floatToString@temp:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x10
   583  000070                     	ds	2
   584  000072                     floatToString@i:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x12
   588  000072                     	ds	2
   589  000074                     floatToString@index:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x14
   593  000074                     	ds	2
   594  000076                     displayMenu@menuIndex:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x16
   598  000076                     	ds	2
   599  000078                     ??_displayMenu:
   600                           
   601                           ; 1 bytes @ 0x18
   602  000078                     	ds	4
   603  00007C                     displayMenu@valueStr:
   604                           	callstack 0
   605                           
   606                           ; 10 bytes @ 0x1C
   607  00007C                     	ds	10
   608  000086                     displayMenu@currentTime:
   609                           	callstack 0
   610                           
   611                           ; 4 bytes @ 0x26
   612  000086                     	ds	4
   613  00008A                     displayMenu@currentTemp:
   614                           	callstack 0
   615                           
   616                           ; 4 bytes @ 0x2A
   617  00008A                     	ds	4
   618  00008E                     displayMenu@currentHumid:
   619                           	callstack 0
   620                           
   621                           ; 4 bytes @ 0x2E
   622  00008E                     	ds	4
   623  000092                     displayMenu@currentGas:
   624                           	callstack 0
   625                           
   626                           ; 4 bytes @ 0x32
   627  000092                     	ds	4
   628  000096                     ??_main:
   629                           
   630                           ; 1 bytes @ 0x36
   631  000096                     	ds	4
   632  00009A                     main@lastDisplayUpdate:
   633                           	callstack 0
   634                           
   635                           ; 4 bytes @ 0x3A
   636  00009A                     	ds	4
   637  00009E                     main@currentTime:
   638                           	callstack 0
   639                           
   640                           ; 4 bytes @ 0x3E
   641  00009E                     	ds	4
   642  0000A2                     main@currentTemp:
   643                           	callstack 0
   644                           
   645                           ; 4 bytes @ 0x42
   646  0000A2                     	ds	4
   647  0000A6                     main@currentHumid:
   648                           	callstack 0
   649                           
   650                           ; 4 bytes @ 0x46
   651  0000A6                     	ds	4
   652  0000AA                     main@currentGas:
   653                           	callstack 0
   654                           
   655                           ; 4 bytes @ 0x4A
   656  0000AA                     	ds	4
   657  0000AE                     main@tempLimit:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x4E
   661  0000AE                     	ds	2
   662  0000B0                     main@humLimit:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x50
   666  0000B0                     	ds	2
   667  0000B2                     main@gasLimit:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x52
   671  0000B2                     	ds	2
   672  0000B4                     main@lastKey:
   673                           	callstack 0
   674                           
   675                           ; 1 bytes @ 0x54
   676  0000B4                     	ds	1
   677  0000B5                     main@pressed_key:
   678                           	callstack 0
   679                           
   680                           ; 1 bytes @ 0x55
   681  0000B5                     	ds	1
   682  0000B6                     main@menuIndex:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x56
   686  0000B6                     	ds	2
   687                           
   688                           	psect	cstackCOMRAM
   689  000001                     __pcstackCOMRAM:
   690                           	callstack 0
   691  000001                     ?___llmod:
   692                           	callstack 0
   693  000001                     ___llmod@dividend:
   694                           	callstack 0
   695                           
   696                           ; 4 bytes @ 0x0
   697  000001                     	ds	4
   698  000005                     ___llmod@divisor:
   699                           	callstack 0
   700                           
   701                           ; 4 bytes @ 0x4
   702  000005                     	ds	4
   703  000009                     ___llmod@counter:
   704                           	callstack 0
   705                           
   706                           ; 1 bytes @ 0x8
   707  000009                     	ds	1
   708  00000A                     ??_DelayPORXLCD:
   709  00000A                     ??_DelayXLCD:
   710  00000A                     ?_readAnalog:
   711                           	callstack 0
   712  00000A                     ?___awdiv:
   713                           	callstack 0
   714  00000A                     ?___awmod:
   715                           	callstack 0
   716  00000A                     ?_millis:
   717                           	callstack 0
   718  00000A                     ?___fladd:
   719                           	callstack 0
   720  00000A                     ?___flneg:
   721                           	callstack 0
   722  00000A                     ?___fltol:
   723                           	callstack 0
   724  00000A                     ?___xxtofl:
   725                           	callstack 0
   726  00000A                     SetDDRamAddr@DDaddr:
   727                           	callstack 0
   728  00000A                     WriteCmdXLCD@cmd:
   729                           	callstack 0
   730  00000A                     WriteDataXLCD@data:
   731                           	callstack 0
   732  00000A                     setCoolerSpeed@PWMset:
   733                           	callstack 0
   734  00000A                     setMoist@moistSet:
   735                           	callstack 0
   736  00000A                     buzzer@buzzerStatus:
   737                           	callstack 0
   738  00000A                     ___awdiv@dividend:
   739                           	callstack 0
   740  00000A                     ___awmod@dividend:
   741                           	callstack 0
   742  00000A                     ___flneg@f1:
   743                           	callstack 0
   744  00000A                     ___fltol@f1:
   745                           	callstack 0
   746  00000A                     ___fladd@b:
   747                           	callstack 0
   748  00000A                     ___xxtofl@val:
   749                           	callstack 0
   750                           
   751                           ; 4 bytes @ 0x9
   752  00000A                     	ds	1
   753  00000B                     OpenXLCD@lcdtype:
   754                           	callstack 0
   755  00000B                     displayStuff@row:
   756                           	callstack 0
   757                           
   758                           ; 2 bytes @ 0xA
   759  00000B                     	ds	1
   760  00000C                     ??_configureLCD:
   761  00000C                     ??_readAnalog:
   762  00000C                     ___awdiv@divisor:
   763                           	callstack 0
   764  00000C                     ___awmod@divisor:
   765                           	callstack 0
   766                           
   767                           ; 2 bytes @ 0xB
   768  00000C                     	ds	1
   769  00000D                     displayStuff@column:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0xC
   773  00000D                     	ds	1
   774  00000E                     ??___fltol:
   775  00000E                     ??___xxtofl:
   776  00000E                     ___awdiv@counter:
   777                           	callstack 0
   778  00000E                     ___awmod@counter:
   779                           	callstack 0
   780  00000E                     readAnalog@result:
   781                           	callstack 0
   782  00000E                     millis@ms:
   783                           	callstack 0
   784  00000E                     ___fladd@a:
   785                           	callstack 0
   786                           
   787                           ; 4 bytes @ 0xD
   788  00000E                     	ds	1
   789  00000F                     ___awdiv@sign:
   790                           	callstack 0
   791  00000F                     ___awmod@sign:
   792                           	callstack 0
   793  00000F                     displayStuff@stuff:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0xE
   797  00000F                     	ds	1
   798  000010                     readAnalog@pin:
   799                           	callstack 0
   800  000010                     ___awdiv@quotient:
   801                           	callstack 0
   802                           
   803                           ; 2 bytes @ 0xF
   804  000010                     	ds	1
   805  000011                     displayStuff@LCDWritePosition:
   806                           	callstack 0
   807                           
   808                           ; 2 bytes @ 0x10
   809  000011                     	ds	1
   810  000012                     ??_readKey:
   811  000012                     ??___fladd:
   812  000012                     ___fltol@sign1:
   813                           	callstack 0
   814  000012                     ___xxtofl@sign:
   815                           	callstack 0
   816  000012                     itoa@value:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x11
   820  000012                     	ds	1
   821  000013                     ___fltol@exp1:
   822                           	callstack 0
   823  000013                     ___xxtofl@exp:
   824                           	callstack 0
   825  000013                     _displayStuff$792:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x12
   829  000013                     	ds	1
   830  000014                     itoa@ptr:
   831                           	callstack 0
   832  000014                     ___xxtofl@arg:
   833                           	callstack 0
   834                           
   835                           ; 4 bytes @ 0x13
   836  000014                     	ds	2
   837  000016                     ___fladd@signs:
   838                           	callstack 0
   839  000016                     itoa@count:
   840                           	callstack 0
   841                           
   842                           ; 2 bytes @ 0x15
   843  000016                     	ds	1
   844  000017                     ___fladd@aexp:
   845                           	callstack 0
   846                           
   847                           ; 1 bytes @ 0x16
   848  000017                     	ds	1
   849  000018                     ?___flmul:
   850                           	callstack 0
   851  000018                     ___fladd@bexp:
   852                           	callstack 0
   853  000018                     itoa@temp:
   854                           	callstack 0
   855  000018                     ___flge@ff1:
   856                           	callstack 0
   857  000018                     ___flmul@b:
   858                           	callstack 0
   859  000018                     readKey@InvCol:
   860                           	callstack 0
   861                           
   862                           ; 8 bytes @ 0x17
   863  000018                     	ds	1
   864  000019                     ___fladd@grs:
   865                           	callstack 0
   866                           
   867                           ; 1 bytes @ 0x18
   868  000019                     	ds	1
   869  00001A                     ?___flsub:
   870                           	callstack 0
   871  00001A                     ___flsub@b:
   872                           	callstack 0
   873                           
   874                           ; 4 bytes @ 0x19
   875  00001A                     	ds	2
   876  00001C                     ___flge@ff2:
   877                           	callstack 0
   878  00001C                     ___flmul@a:
   879                           	callstack 0
   880                           
   881                           ; 4 bytes @ 0x1B
   882  00001C                     	ds	2
   883  00001E                     ___flsub@a:
   884                           	callstack 0
   885                           
   886                           ; 4 bytes @ 0x1D
   887  00001E                     	ds	2
   888  000020                     ??___flmul:
   889  000020                     ??___flge:
   890  000020                     readKey@currentTime:
   891                           	callstack 0
   892                           
   893                           ; 4 bytes @ 0x1F
   894  000020                     	ds	2
   895  000022                     
   896                           ; 1 bytes @ 0x21
   897  000022                     	ds	2
   898  000024                     ___flmul@sign:
   899                           	callstack 0
   900  000024                     readKey@col:
   901                           	callstack 0
   902                           
   903                           ; 2 bytes @ 0x23
   904  000024                     	ds	1
   905  000025                     ___flmul@aexp:
   906                           	callstack 0
   907                           
   908                           ; 1 bytes @ 0x24
   909  000025                     	ds	1
   910  000026                     readKey@row:
   911                           	callstack 0
   912  000026                     ___flmul@grs:
   913                           	callstack 0
   914                           
   915                           ; 4 bytes @ 0x25
   916  000026                     	ds	2
   917  000028                     readKey@pressedKey:
   918                           	callstack 0
   919                           
   920                           ; 1 bytes @ 0x27
   921  000028                     	ds	1
   922  000029                     ?_readTwoDigitValue:
   923                           	callstack 0
   924  000029                     readTwoDigitValue@prompt:
   925                           	callstack 0
   926                           
   927                           ; 2 bytes @ 0x28
   928  000029                     	ds	1
   929  00002A                     ___flmul@bexp:
   930                           	callstack 0
   931                           
   932                           ; 1 bytes @ 0x29
   933  00002A                     	ds	1
   934  00002B                     ??_readTwoDigitValue:
   935  00002B                     ___flmul@prod:
   936                           	callstack 0
   937                           
   938                           ; 4 bytes @ 0x2A
   939  00002B                     	ds	2
   940  00002D                     readTwoDigitValue@input:
   941                           	callstack 0
   942                           
   943                           ; 3 bytes @ 0x2C
   944  00002D                     	ds	2
   945  00002F                     ___flmul@temp:
   946                           	callstack 0
   947                           
   948                           ; 2 bytes @ 0x2E
   949  00002F                     	ds	1
   950  000030                     readTwoDigitValue@digitCount:
   951                           	callstack 0
   952                           
   953                           ; 2 bytes @ 0x2F
   954  000030                     	ds	1
   955  000031                     ?___fldiv:
   956                           	callstack 0
   957  000031                     floatToString@value:
   958                           	callstack 0
   959  000031                     ___fldiv@b:
   960                           	callstack 0
   961                           
   962                           ; 4 bytes @ 0x30
   963  000031                     	ds	1
   964  000032                     readTwoDigitValue@key:
   965                           	callstack 0
   966                           
   967                           ; 1 bytes @ 0x31
   968  000032                     	ds	3
   969  000035                     floatToString@buffer:
   970                           	callstack 0
   971  000035                     ___fldiv@a:
   972                           	callstack 0
   973                           
   974                           ; 4 bytes @ 0x34
   975  000035                     	ds	2
   976  000037                     floatToString@precision:
   977                           	callstack 0
   978                           
   979                           ; 2 bytes @ 0x36
   980  000037                     	ds	2
   981  000039                     ??_floatToString:
   982  000039                     ??___fldiv:
   983                           
   984                           ; 1 bytes @ 0x38
   985  000039                     	ds	4
   986  00003D                     ___fldiv@rem:
   987                           	callstack 0
   988                           
   989                           ; 4 bytes @ 0x3C
   990  00003D                     	ds	4
   991  000041                     ___fldiv@sign:
   992                           	callstack 0
   993                           
   994                           ; 1 bytes @ 0x40
   995  000041                     	ds	1
   996  000042                     ___fldiv@new_exp:
   997                           	callstack 0
   998                           
   999                           ; 2 bytes @ 0x41
  1000  000042                     	ds	2
  1001  000044                     ___fldiv@grs:
  1002                           	callstack 0
  1003                           
  1004                           ; 4 bytes @ 0x43
  1005  000044                     	ds	4
  1006  000048                     ___fldiv@bexp:
  1007                           	callstack 0
  1008                           
  1009                           ; 1 bytes @ 0x47
  1010  000048                     	ds	1
  1011  000049                     ___fldiv@aexp:
  1012                           	callstack 0
  1013                           
  1014                           ; 1 bytes @ 0x48
  1015  000049                     	ds	1
  1016  00004A                     
  1017                           ; 1 bytes @ 0x49
  1018 ;;
  1019 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1020 ;;
  1021 ;; *************** function _main *****************
  1022 ;; Defined at:
  1023 ;;		line 135 in file "main.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;		None
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;  gasLimit        2   82[BANK0 ] int 
  1028 ;;  humLimit        2   80[BANK0 ] int 
  1029 ;;  tempLimit       2   78[BANK0 ] int 
  1030 ;;  currentGas      4   74[BANK0 ] float 
  1031 ;;  currentHumid    4   70[BANK0 ] float 
  1032 ;;  currentTemp     4   66[BANK0 ] float 
  1033 ;;  currentTime     4   62[BANK0 ] unsigned long 
  1034 ;;  lastDisplayU    4   58[BANK0 ] unsigned long 
  1035 ;;  menuIndex       2   86[BANK0 ] int 
  1036 ;;  pressed_key     1   85[BANK0 ] unsigned char 
  1037 ;;  lastKey         1   84[BANK0 ] unsigned char 
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  1    wreg      void 
  1040 ;; Registers used:
  1041 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1047 ;;      Params:         0       0       0       0       0       0       0       0       0
  1048 ;;      Locals:         0      30       0       0       0       0       0       0       0
  1049 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1050 ;;      Totals:         0      34       0       0       0       0       0       0       0
  1051 ;;Total ram usage:       34 bytes
  1052 ;; Hardware stack levels required when called: 6
  1053 ;; This function calls:
  1054 ;;		___flge
  1055 ;;		___xxtofl
  1056 ;;		_buzzer
  1057 ;;		_configureADC
  1058 ;;		_configureIO
  1059 ;;		_configureInterrupt
  1060 ;;		_configureLCD
  1061 ;;		_configureTimer
  1062 ;;		_displayMenu
  1063 ;;		_displayStuff
  1064 ;;		_gasRead
  1065 ;;		_humidade
  1066 ;;		_millis
  1067 ;;		_readKey
  1068 ;;		_readTwoDigitValue
  1069 ;;		_setCoolerSpeed
  1070 ;;		_setMoist
  1071 ;;		_tempRead
  1072 ;; This function is called by:
  1073 ;;		Startup code after reset
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           	psect	text0
  1078  0008C8                     __ptext0:
  1079                           	callstack 0
  1080  0008C8                     _main:
  1081                           	callstack 25
  1082  0008C8                     
  1083                           ;main.c: 136:     char lastKey = '\0';
  1084  0008C8  0E00               	movlw	0
  1085  0008CA  0100               	movlb	0	; () banked
  1086  0008CC  6FB4               	movwf	main@lastKey& (0+255),b
  1087                           
  1088                           ;main.c: 137:     int menuIndex = 0;
  1089  0008CE  0E00               	movlw	0
  1090  0008D0  6FB7               	movwf	(main@menuIndex+1)& (0+255),b
  1091  0008D2  0E00               	movlw	0
  1092  0008D4  6FB6               	movwf	main@menuIndex& (0+255),b
  1093                           
  1094                           ;main.c: 138:     unsigned long lastDisplayUpdate = 0;
  1095  0008D6  0E00               	movlw	0
  1096  0008D8  6F9A               	movwf	main@lastDisplayUpdate& (0+255),b
  1097  0008DA  0E00               	movlw	0
  1098  0008DC  6F9B               	movwf	(main@lastDisplayUpdate+1)& (0+255),b
  1099  0008DE  0E00               	movlw	0
  1100  0008E0  6F9C               	movwf	(main@lastDisplayUpdate+2)& (0+255),b
  1101  0008E2  0E00               	movlw	0
  1102  0008E4  6F9D               	movwf	(main@lastDisplayUpdate+3)& (0+255),b
  1103  0008E6                     
  1104                           ; BSR set to: 0
  1105                           ;main.c: 139:     char pressed_key;;main.c: 140:     unsigned long currentTime;;main.c: 
      +                          141:     float currentTemp;;main.c: 142:     float currentHumid;;main.c: 143:     float 
      +                          currentGas;;main.c: 147:     configureIO();
  1106  0008E6  ECC1  F017         	call	_configureIO	;wreg free
  1107  0008EA                     
  1108                           ;main.c: 148:     configureADC();
  1109  0008EA  ECEE  F017         	call	_configureADC	;wreg free
  1110  0008EE                     
  1111                           ;main.c: 149:     configureLCD();
  1112  0008EE  ECEE  F016         	call	_configureLCD	;wreg free
  1113  0008F2                     
  1114                           ;main.c: 150:     configureTimer();
  1115  0008F2  ECE8  F017         	call	_configureTimer	;wreg free
  1116  0008F6                     
  1117                           ;main.c: 151:     configureInterrupt();
  1118  0008F6  ECCD  F017         	call	_configureInterrupt	;wreg free
  1119  0008FA                     
  1120                           ;main.c: 155:     TRISDbits.TRISD0 = 0;
  1121  0008FA  9095               	bcf	149,0,c	;volatile
  1122  0008FC                     
  1123                           ;main.c: 156:     TRISDbits.TRISD1 = 0;
  1124  0008FC  9295               	bcf	149,1,c	;volatile
  1125  0008FE                     
  1126                           ;main.c: 157:     TRISDbits.TRISD2 = 0;
  1127  0008FE  9495               	bcf	149,2,c	;volatile
  1128  000900                     l5195:
  1129                           
  1130                           ;main.c: 162:         pressed_key = readKey();
  1131  000900  EC3F  F00F         	call	_readKey	;wreg free
  1132  000904  0100               	movlb	0	; () banked
  1133  000906  6FB5               	movwf	main@pressed_key& (0+255),b
  1134  000908                     
  1135                           ; BSR set to: 0
  1136                           ;main.c: 163:         currentTime = millis();
  1137  000908  ECAE  F017         	call	_millis	;wreg free
  1138  00090C  C00A  F09E         	movff	?_millis,main@currentTime
  1139  000910  C00B  F09F         	movff	?_millis+1,main@currentTime+1
  1140  000914  C00C  F0A0         	movff	?_millis+2,main@currentTime+2
  1141  000918  C00D  F0A1         	movff	?_millis+3,main@currentTime+3
  1142  00091C                     
  1143                           ;main.c: 167:         if (currentTime - lastDisplayUpdate >= 500) {
  1144  00091C  0100               	movlb	0	; () banked
  1145  00091E  519A               	movf	main@lastDisplayUpdate& (0+255),w,b
  1146  000920  5D9E               	subwf	main@currentTime& (0+255),w,b
  1147  000922  6F96               	movwf	??_main& (0+255),b
  1148  000924  519B               	movf	(main@lastDisplayUpdate+1)& (0+255),w,b
  1149  000926  599F               	subwfb	(main@currentTime+1)& (0+255),w,b
  1150  000928  6F97               	movwf	(??_main+1)& (0+255),b
  1151  00092A  519C               	movf	(main@lastDisplayUpdate+2)& (0+255),w,b
  1152  00092C  59A0               	subwfb	(main@currentTime+2)& (0+255),w,b
  1153  00092E  6F98               	movwf	(??_main+2)& (0+255),b
  1154  000930  519D               	movf	(main@lastDisplayUpdate+3)& (0+255),w,b
  1155  000932  59A1               	subwfb	(main@currentTime+3)& (0+255),w,b
  1156  000934  6F99               	movwf	(??_main+3)& (0+255),b
  1157  000936  5199               	movf	(??_main+3)& (0+255),w,b
  1158  000938  1198               	iorwf	(??_main+2)& (0+255),w,b
  1159  00093A  E10B               	bnz	u5240
  1160  00093C  0EF4               	movlw	244
  1161  00093E  5D96               	subwf	??_main& (0+255),w,b
  1162  000940  0E01               	movlw	1
  1163  000942  5997               	subwfb	(??_main+1)& (0+255),w,b
  1164  000944  A0D8               	btfss	status,0,c
  1165  000946  EFA7  F004         	goto	u5241
  1166  00094A  EFA9  F004         	goto	u5240
  1167  00094E                     u5241:
  1168  00094E  EFB7  F004         	goto	l5205
  1169  000952                     u5240:
  1170  000952                     
  1171                           ; BSR set to: 0
  1172                           ;main.c: 168:             displayMenu(menuIndex);
  1173  000952  C0B6  F076         	movff	main@menuIndex,displayMenu@menuIndex
  1174  000956  C0B7  F077         	movff	main@menuIndex+1,displayMenu@menuIndex+1
  1175  00095A  EC09  F000         	call	_displayMenu	;wreg free
  1176  00095E                     
  1177                           ;main.c: 169:             lastDisplayUpdate = currentTime;
  1178  00095E  C09E  F09A         	movff	main@currentTime,main@lastDisplayUpdate
  1179  000962  C09F  F09B         	movff	main@currentTime+1,main@lastDisplayUpdate+1
  1180  000966  C0A0  F09C         	movff	main@currentTime+2,main@lastDisplayUpdate+2
  1181  00096A  C0A1  F09D         	movff	main@currentTime+3,main@lastDisplayUpdate+3
  1182  00096E                     l5205:
  1183                           
  1184                           ;main.c: 174:         if (pressed_key == 'E' && lastKey != 'E') {
  1185  00096E  0E45               	movlw	69
  1186  000970  0100               	movlb	0	; () banked
  1187  000972  19B5               	xorwf	main@pressed_key& (0+255),w,b
  1188  000974  A4D8               	btfss	status,2,c
  1189  000976  EFBF  F004         	goto	u5251
  1190  00097A  EFC1  F004         	goto	u5250
  1191  00097E                     u5251:
  1192  00097E  EFE4  F004         	goto	l5217
  1193  000982                     u5250:
  1194  000982                     
  1195                           ; BSR set to: 0
  1196  000982  0E45               	movlw	69
  1197  000984  19B4               	xorwf	main@lastKey& (0+255),w,b
  1198  000986  B4D8               	btfsc	status,2,c
  1199  000988  EFC8  F004         	goto	u5261
  1200  00098C  EFCA  F004         	goto	u5260
  1201  000990                     u5261:
  1202  000990  EFE4  F004         	goto	l5217
  1203  000994                     u5260:
  1204  000994                     
  1205                           ; BSR set to: 0
  1206                           ;main.c: 175:             menuIndex++;
  1207  000994  4BB6               	infsnz	main@menuIndex& (0+255),f,b
  1208  000996  2BB7               	incf	(main@menuIndex+1)& (0+255),f,b
  1209  000998                     
  1210                           ; BSR set to: 0
  1211                           ;main.c: 176:             if (menuIndex > 4) {
  1212  000998  BFB7               	btfsc	(main@menuIndex+1)& (0+255),7,b
  1213  00099A  EFD8  F004         	goto	u5271
  1214  00099E  51B7               	movf	(main@menuIndex+1)& (0+255),w,b
  1215  0009A0  E109               	bnz	u5270
  1216  0009A2  0E05               	movlw	5
  1217  0009A4  5DB6               	subwf	main@menuIndex& (0+255),w,b
  1218  0009A6  A0D8               	btfss	status,0,c
  1219  0009A8  EFD8  F004         	goto	u5271
  1220  0009AC  EFDA  F004         	goto	u5270
  1221  0009B0                     u5271:
  1222  0009B0  EFDE  F004         	goto	l5215
  1223  0009B4                     u5270:
  1224  0009B4                     
  1225                           ; BSR set to: 0
  1226                           ;main.c: 177:                 menuIndex = 0;
  1227  0009B4  0E00               	movlw	0
  1228  0009B6  6FB7               	movwf	(main@menuIndex+1)& (0+255),b
  1229  0009B8  0E00               	movlw	0
  1230  0009BA  6FB6               	movwf	main@menuIndex& (0+255),b
  1231  0009BC                     l5215:
  1232                           
  1233                           ; BSR set to: 0
  1234                           ;main.c: 179:             displayMenu(menuIndex);
  1235  0009BC  C0B6  F076         	movff	main@menuIndex,displayMenu@menuIndex
  1236  0009C0  C0B7  F077         	movff	main@menuIndex+1,displayMenu@menuIndex+1
  1237  0009C4  EC09  F000         	call	_displayMenu	;wreg free
  1238  0009C8                     l5217:
  1239                           
  1240                           ;main.c: 181:         if (pressed_key == 'F' && lastKey != 'F'){
  1241  0009C8  0E46               	movlw	70
  1242  0009CA  0100               	movlb	0	; () banked
  1243  0009CC  19B5               	xorwf	main@pressed_key& (0+255),w,b
  1244  0009CE  A4D8               	btfss	status,2,c
  1245  0009D0  EFEC  F004         	goto	u5281
  1246  0009D4  EFEE  F004         	goto	u5280
  1247  0009D8                     u5281:
  1248  0009D8  EF0B  F005         	goto	l5229
  1249  0009DC                     u5280:
  1250  0009DC                     
  1251                           ; BSR set to: 0
  1252  0009DC  0E46               	movlw	70
  1253  0009DE  19B4               	xorwf	main@lastKey& (0+255),w,b
  1254  0009E0  B4D8               	btfsc	status,2,c
  1255  0009E2  EFF5  F004         	goto	u5291
  1256  0009E6  EFF7  F004         	goto	u5290
  1257  0009EA                     u5291:
  1258  0009EA  EF0B  F005         	goto	l5229
  1259  0009EE                     u5290:
  1260  0009EE                     
  1261                           ; BSR set to: 0
  1262                           ;main.c: 182:             menuIndex--;
  1263  0009EE  07B6               	decf	main@menuIndex& (0+255),f,b
  1264  0009F0  A0D8               	btfss	status,0,c
  1265  0009F2  07B7               	decf	(main@menuIndex+1)& (0+255),f,b
  1266  0009F4                     
  1267                           ; BSR set to: 0
  1268                           ;main.c: 183:             if (menuIndex < 0) {
  1269  0009F4  BFB7               	btfsc	(main@menuIndex+1)& (0+255),7,b
  1270  0009F6  EF01  F005         	goto	u5300
  1271  0009FA  EFFF  F004         	goto	u5301
  1272  0009FE                     u5301:
  1273  0009FE  EF05  F005         	goto	l5227
  1274  000A02                     u5300:
  1275  000A02                     
  1276                           ; BSR set to: 0
  1277                           ;main.c: 184:                 menuIndex = 4;
  1278  000A02  0E00               	movlw	0
  1279  000A04  6FB7               	movwf	(main@menuIndex+1)& (0+255),b
  1280  000A06  0E04               	movlw	4
  1281  000A08  6FB6               	movwf	main@menuIndex& (0+255),b
  1282  000A0A                     l5227:
  1283                           
  1284                           ; BSR set to: 0
  1285                           ;main.c: 186:             displayMenu(menuIndex);
  1286  000A0A  C0B6  F076         	movff	main@menuIndex,displayMenu@menuIndex
  1287  000A0E  C0B7  F077         	movff	main@menuIndex+1,displayMenu@menuIndex+1
  1288  000A12  EC09  F000         	call	_displayMenu	;wreg free
  1289  000A16                     l5229:
  1290                           
  1291                           ;main.c: 191:         if (pressed_key == 'A' && lastKey != 'A') {
  1292  000A16  0E41               	movlw	65
  1293  000A18  0100               	movlb	0	; () banked
  1294  000A1A  19B5               	xorwf	main@pressed_key& (0+255),w,b
  1295  000A1C  A4D8               	btfss	status,2,c
  1296  000A1E  EF13  F005         	goto	u5311
  1297  000A22  EF15  F005         	goto	u5310
  1298  000A26                     u5311:
  1299  000A26  EF6B  F005         	goto	l5253
  1300  000A2A                     u5310:
  1301  000A2A                     
  1302                           ; BSR set to: 0
  1303  000A2A  0E41               	movlw	65
  1304  000A2C  19B4               	xorwf	main@lastKey& (0+255),w,b
  1305  000A2E  B4D8               	btfsc	status,2,c
  1306  000A30  EF1C  F005         	goto	u5321
  1307  000A34  EF1E  F005         	goto	u5320
  1308  000A38                     u5321:
  1309  000A38  EF6B  F005         	goto	l5253
  1310  000A3C                     u5320:
  1311  000A3C                     
  1312                           ; BSR set to: 0
  1313                           ;main.c: 192:             int tempLimit = readTwoDigitValue("Limite Temp:");
  1314  000A3C  0E7C               	movlw	low STR_1
  1315  000A3E  6E29               	movwf	readTwoDigitValue@prompt^0,c
  1316  000A40  0E7F               	movlw	high STR_1
  1317  000A42  6E2A               	movwf	(readTwoDigitValue@prompt+1)^0,c
  1318  000A44  ECB5  F011         	call	_readTwoDigitValue	;wreg free
  1319  000A48  C029  F0AE         	movff	?_readTwoDigitValue,main@tempLimit
  1320  000A4C  C02A  F0AF         	movff	?_readTwoDigitValue+1,main@tempLimit+1
  1321  000A50                     
  1322                           ;main.c: 193:             if (tempLimit != -1) {
  1323  000A50  0100               	movlb	0	; () banked
  1324  000A52  29AE               	incf	main@tempLimit& (0+255),w,b
  1325  000A54  E108               	bnz	u5330
  1326  000A56  29AF               	incf	(main@tempLimit+1)& (0+255),w,b
  1327  000A58  B4D8               	btfsc	status,2,c
  1328  000A5A  EF31  F005         	goto	u5331
  1329  000A5E  EF33  F005         	goto	u5330
  1330  000A62                     u5331:
  1331  000A62  EF5F  F005         	goto	l5247
  1332  000A66                     u5330:
  1333  000A66                     
  1334                           ; BSR set to: 0
  1335                           ;main.c: 194:                 Tlim = tempLimit;
  1336  000A66  C0AE  F0D6         	movff	main@tempLimit,_Tlim
  1337  000A6A  C0AF  F0D7         	movff	main@tempLimit+1,_Tlim+1
  1338  000A6E                     
  1339                           ; BSR set to: 0
  1340                           ;main.c: 195:                 displayStuff(1, 0, "Temp Salva!");
  1341  000A6E  0E00               	movlw	0
  1342  000A70  6E0C               	movwf	(displayStuff@row+1)^0,c
  1343  000A72  0E01               	movlw	1
  1344  000A74  6E0B               	movwf	displayStuff@row^0,c
  1345  000A76  0E00               	movlw	0
  1346  000A78  6E0E               	movwf	(displayStuff@column+1)^0,c
  1347  000A7A  0E00               	movlw	0
  1348  000A7C  6E0D               	movwf	displayStuff@column^0,c
  1349  000A7E  0E96               	movlw	low STR_2
  1350  000A80  6E0F               	movwf	displayStuff@stuff^0,c
  1351  000A82  0E7F               	movlw	high STR_2
  1352  000A84  6E10               	movwf	(displayStuff@stuff+1)^0,c
  1353  000A86  EC9A  F015         	call	_displayStuff	;wreg free
  1354  000A8A                     
  1355                           ;main.c: 196:                 _delay((unsigned long)((1000)*(20000000/4000.0)));
  1356  000A8A  0E1A               	movlw	26
  1357  000A8C  0100               	movlb	0	; () banked
  1358  000A8E  6F97               	movwf	(??_main+1)& (0+255),b
  1359  000A90  0E5E               	movlw	94
  1360  000A92  6F96               	movwf	??_main& (0+255),b
  1361  000A94  0E6E               	movlw	110
  1362  000A96                     u5517:
  1363  000A96  2EE8               	decfsz	wreg,f,c
  1364  000A98  D7FE               	bra	u5517
  1365  000A9A  2F96               	decfsz	??_main& (0+255),f,b
  1366  000A9C  D7FC               	bra	u5517
  1367  000A9E  2F97               	decfsz	(??_main+1)& (0+255),f,b
  1368  000AA0  D7FA               	bra	u5517
  1369  000AA2  F000               	nop	
  1370  000AA4                     l5243:
  1371                           
  1372                           ;main.c: 197:                 menuIndex = 0;
  1373  000AA4  0E00               	movlw	0
  1374  000AA6  0100               	movlb	0	; () banked
  1375  000AA8  6FB7               	movwf	(main@menuIndex+1)& (0+255),b
  1376  000AAA  0E00               	movlw	0
  1377  000AAC  6FB6               	movwf	main@menuIndex& (0+255),b
  1378  000AAE                     
  1379                           ; BSR set to: 0
  1380                           ;main.c: 198:                 displayMenu(menuIndex);
  1381  000AAE  0E00               	movlw	0
  1382  000AB0  6F77               	movwf	(displayMenu@menuIndex+1)& (0+255),b
  1383  000AB2  0E00               	movlw	0
  1384  000AB4  6F76               	movwf	displayMenu@menuIndex& (0+255),b
  1385  000AB6  EC09  F000         	call	_displayMenu	;wreg free
  1386                           
  1387                           ;main.c: 199:             } else if (tempLimit == -1) {
  1388  000ABA  EF6B  F005         	goto	l5253
  1389  000ABE                     l5247:
  1390                           
  1391                           ; BSR set to: 0
  1392  000ABE  29AE               	incf	main@tempLimit& (0+255),w,b
  1393  000AC0  E106               	bnz	u5341
  1394  000AC2  29AF               	incf	(main@tempLimit+1)& (0+255),w,b
  1395  000AC4  A4D8               	btfss	status,2,c
  1396  000AC6  EF67  F005         	goto	u5341
  1397  000ACA  EF69  F005         	goto	u5340
  1398  000ACE                     u5341:
  1399  000ACE  EF6B  F005         	goto	l5253
  1400  000AD2                     u5340:
  1401  000AD2  EF52  F005         	goto	l5243
  1402  000AD6                     l5253:
  1403                           
  1404                           ;main.c: 206:         if (pressed_key == 'B' && lastKey != 'B') {
  1405  000AD6  0E42               	movlw	66
  1406  000AD8  0100               	movlb	0	; () banked
  1407  000ADA  19B5               	xorwf	main@pressed_key& (0+255),w,b
  1408  000ADC  A4D8               	btfss	status,2,c
  1409  000ADE  EF73  F005         	goto	u5351
  1410  000AE2  EF75  F005         	goto	u5350
  1411  000AE6                     u5351:
  1412  000AE6  EFCB  F005         	goto	l5277
  1413  000AEA                     u5350:
  1414  000AEA                     
  1415                           ; BSR set to: 0
  1416  000AEA  0E42               	movlw	66
  1417  000AEC  19B4               	xorwf	main@lastKey& (0+255),w,b
  1418  000AEE  B4D8               	btfsc	status,2,c
  1419  000AF0  EF7C  F005         	goto	u5361
  1420  000AF4  EF7E  F005         	goto	u5360
  1421  000AF8                     u5361:
  1422  000AF8  EFCB  F005         	goto	l5277
  1423  000AFC                     u5360:
  1424  000AFC                     
  1425                           ; BSR set to: 0
  1426                           ;main.c: 207:             int humLimit = readTwoDigitValue("Limite Hum:");
  1427  000AFC  0EA2               	movlw	low STR_3
  1428  000AFE  6E29               	movwf	readTwoDigitValue@prompt^0,c
  1429  000B00  0E7F               	movlw	high STR_3
  1430  000B02  6E2A               	movwf	(readTwoDigitValue@prompt+1)^0,c
  1431  000B04  ECB5  F011         	call	_readTwoDigitValue	;wreg free
  1432  000B08  C029  F0B0         	movff	?_readTwoDigitValue,main@humLimit
  1433  000B0C  C02A  F0B1         	movff	?_readTwoDigitValue+1,main@humLimit+1
  1434  000B10                     
  1435                           ;main.c: 208:             if (humLimit != -1) {
  1436  000B10  0100               	movlb	0	; () banked
  1437  000B12  29B0               	incf	main@humLimit& (0+255),w,b
  1438  000B14  E108               	bnz	u5370
  1439  000B16  29B1               	incf	(main@humLimit+1)& (0+255),w,b
  1440  000B18  B4D8               	btfsc	status,2,c
  1441  000B1A  EF91  F005         	goto	u5371
  1442  000B1E  EF93  F005         	goto	u5370
  1443  000B22                     u5371:
  1444  000B22  EFBF  F005         	goto	l5271
  1445  000B26                     u5370:
  1446  000B26                     
  1447                           ; BSR set to: 0
  1448                           ;main.c: 209:                 Hlim = humLimit;
  1449  000B26  C0B0  F0D4         	movff	main@humLimit,_Hlim
  1450  000B2A  C0B1  F0D5         	movff	main@humLimit+1,_Hlim+1
  1451  000B2E                     
  1452                           ; BSR set to: 0
  1453                           ;main.c: 210:                 displayStuff(1, 0, "Humid Salvo!");
  1454  000B2E  0E00               	movlw	0
  1455  000B30  6E0C               	movwf	(displayStuff@row+1)^0,c
  1456  000B32  0E01               	movlw	1
  1457  000B34  6E0B               	movwf	displayStuff@row^0,c
  1458  000B36  0E00               	movlw	0
  1459  000B38  6E0E               	movwf	(displayStuff@column+1)^0,c
  1460  000B3A  0E00               	movlw	0
  1461  000B3C  6E0D               	movwf	displayStuff@column^0,c
  1462  000B3E  0E6F               	movlw	low STR_4
  1463  000B40  6E0F               	movwf	displayStuff@stuff^0,c
  1464  000B42  0E7F               	movlw	high STR_4
  1465  000B44  6E10               	movwf	(displayStuff@stuff+1)^0,c
  1466  000B46  EC9A  F015         	call	_displayStuff	;wreg free
  1467  000B4A                     
  1468                           ;main.c: 211:                 _delay((unsigned long)((1000)*(20000000/4000.0)));
  1469  000B4A  0E1A               	movlw	26
  1470  000B4C  0100               	movlb	0	; () banked
  1471  000B4E  6F97               	movwf	(??_main+1)& (0+255),b
  1472  000B50  0E5E               	movlw	94
  1473  000B52  6F96               	movwf	??_main& (0+255),b
  1474  000B54  0E6E               	movlw	110
  1475  000B56                     u5527:
  1476  000B56  2EE8               	decfsz	wreg,f,c
  1477  000B58  D7FE               	bra	u5527
  1478  000B5A  2F96               	decfsz	??_main& (0+255),f,b
  1479  000B5C  D7FC               	bra	u5527
  1480  000B5E  2F97               	decfsz	(??_main+1)& (0+255),f,b
  1481  000B60  D7FA               	bra	u5527
  1482  000B62  F000               	nop	
  1483  000B64                     l5267:
  1484                           
  1485                           ;main.c: 212:                 menuIndex = 0;
  1486  000B64  0E00               	movlw	0
  1487  000B66  0100               	movlb	0	; () banked
  1488  000B68  6FB7               	movwf	(main@menuIndex+1)& (0+255),b
  1489  000B6A  0E00               	movlw	0
  1490  000B6C  6FB6               	movwf	main@menuIndex& (0+255),b
  1491  000B6E                     
  1492                           ; BSR set to: 0
  1493                           ;main.c: 213:                 displayMenu(menuIndex);
  1494  000B6E  0E00               	movlw	0
  1495  000B70  6F77               	movwf	(displayMenu@menuIndex+1)& (0+255),b
  1496  000B72  0E00               	movlw	0
  1497  000B74  6F76               	movwf	displayMenu@menuIndex& (0+255),b
  1498  000B76  EC09  F000         	call	_displayMenu	;wreg free
  1499                           
  1500                           ;main.c: 214:             } else if (humLimit == -1) {
  1501  000B7A  EFCB  F005         	goto	l5277
  1502  000B7E                     l5271:
  1503                           
  1504                           ; BSR set to: 0
  1505  000B7E  29B0               	incf	main@humLimit& (0+255),w,b
  1506  000B80  E106               	bnz	u5381
  1507  000B82  29B1               	incf	(main@humLimit+1)& (0+255),w,b
  1508  000B84  A4D8               	btfss	status,2,c
  1509  000B86  EFC7  F005         	goto	u5381
  1510  000B8A  EFC9  F005         	goto	u5380
  1511  000B8E                     u5381:
  1512  000B8E  EFCB  F005         	goto	l5277
  1513  000B92                     u5380:
  1514  000B92  EFB2  F005         	goto	l5267
  1515  000B96                     l5277:
  1516                           
  1517                           ;main.c: 221:         if (pressed_key == 'C' && lastKey != 'C') {
  1518  000B96  0E43               	movlw	67
  1519  000B98  0100               	movlb	0	; () banked
  1520  000B9A  19B5               	xorwf	main@pressed_key& (0+255),w,b
  1521  000B9C  A4D8               	btfss	status,2,c
  1522  000B9E  EFD3  F005         	goto	u5391
  1523  000BA2  EFD5  F005         	goto	u5390
  1524  000BA6                     u5391:
  1525  000BA6  EF2B  F006         	goto	l5301
  1526  000BAA                     u5390:
  1527  000BAA                     
  1528                           ; BSR set to: 0
  1529  000BAA  0E43               	movlw	67
  1530  000BAC  19B4               	xorwf	main@lastKey& (0+255),w,b
  1531  000BAE  B4D8               	btfsc	status,2,c
  1532  000BB0  EFDC  F005         	goto	u5401
  1533  000BB4  EFDE  F005         	goto	u5400
  1534  000BB8                     u5401:
  1535  000BB8  EF2B  F006         	goto	l5301
  1536  000BBC                     u5400:
  1537  000BBC                     
  1538                           ; BSR set to: 0
  1539                           ;main.c: 222:             int gasLimit = readTwoDigitValue("Limite Gas");
  1540  000BBC  0EC5               	movlw	low STR_5
  1541  000BBE  6E29               	movwf	readTwoDigitValue@prompt^0,c
  1542  000BC0  0E7F               	movlw	high STR_5
  1543  000BC2  6E2A               	movwf	(readTwoDigitValue@prompt+1)^0,c
  1544  000BC4  ECB5  F011         	call	_readTwoDigitValue	;wreg free
  1545  000BC8  C029  F0B2         	movff	?_readTwoDigitValue,main@gasLimit
  1546  000BCC  C02A  F0B3         	movff	?_readTwoDigitValue+1,main@gasLimit+1
  1547  000BD0                     
  1548                           ;main.c: 223:             if (gasLimit != -1) {
  1549  000BD0  0100               	movlb	0	; () banked
  1550  000BD2  29B2               	incf	main@gasLimit& (0+255),w,b
  1551  000BD4  E108               	bnz	u5410
  1552  000BD6  29B3               	incf	(main@gasLimit+1)& (0+255),w,b
  1553  000BD8  B4D8               	btfsc	status,2,c
  1554  000BDA  EFF1  F005         	goto	u5411
  1555  000BDE  EFF3  F005         	goto	u5410
  1556  000BE2                     u5411:
  1557  000BE2  EF1F  F006         	goto	l5295
  1558  000BE6                     u5410:
  1559  000BE6                     
  1560                           ; BSR set to: 0
  1561                           ;main.c: 224:                 Glim = gasLimit;
  1562  000BE6  C0B2  F0D2         	movff	main@gasLimit,_Glim
  1563  000BEA  C0B3  F0D3         	movff	main@gasLimit+1,_Glim+1
  1564  000BEE                     
  1565                           ; BSR set to: 0
  1566                           ;main.c: 225:                 displayStuff(1, 0, "Gas Salvo!");
  1567  000BEE  0E00               	movlw	0
  1568  000BF0  6E0C               	movwf	(displayStuff@row+1)^0,c
  1569  000BF2  0E01               	movlw	1
  1570  000BF4  6E0B               	movwf	displayStuff@row^0,c
  1571  000BF6  0E00               	movlw	0
  1572  000BF8  6E0E               	movwf	(displayStuff@column+1)^0,c
  1573  000BFA  0E00               	movlw	0
  1574  000BFC  6E0D               	movwf	displayStuff@column^0,c
  1575  000BFE  0EBA               	movlw	low STR_6
  1576  000C00  6E0F               	movwf	displayStuff@stuff^0,c
  1577  000C02  0E7F               	movlw	high STR_6
  1578  000C04  6E10               	movwf	(displayStuff@stuff+1)^0,c
  1579  000C06  EC9A  F015         	call	_displayStuff	;wreg free
  1580  000C0A                     
  1581                           ;main.c: 226:                 _delay((unsigned long)((1000)*(20000000/4000.0)));
  1582  000C0A  0E1A               	movlw	26
  1583  000C0C  0100               	movlb	0	; () banked
  1584  000C0E  6F97               	movwf	(??_main+1)& (0+255),b
  1585  000C10  0E5E               	movlw	94
  1586  000C12  6F96               	movwf	??_main& (0+255),b
  1587  000C14  0E6E               	movlw	110
  1588  000C16                     u5537:
  1589  000C16  2EE8               	decfsz	wreg,f,c
  1590  000C18  D7FE               	bra	u5537
  1591  000C1A  2F96               	decfsz	??_main& (0+255),f,b
  1592  000C1C  D7FC               	bra	u5537
  1593  000C1E  2F97               	decfsz	(??_main+1)& (0+255),f,b
  1594  000C20  D7FA               	bra	u5537
  1595  000C22  F000               	nop	
  1596  000C24                     l5291:
  1597                           
  1598                           ;main.c: 227:                 menuIndex = 0;
  1599  000C24  0E00               	movlw	0
  1600  000C26  0100               	movlb	0	; () banked
  1601  000C28  6FB7               	movwf	(main@menuIndex+1)& (0+255),b
  1602  000C2A  0E00               	movlw	0
  1603  000C2C  6FB6               	movwf	main@menuIndex& (0+255),b
  1604  000C2E                     
  1605                           ; BSR set to: 0
  1606                           ;main.c: 228:                 displayMenu(menuIndex);
  1607  000C2E  0E00               	movlw	0
  1608  000C30  6F77               	movwf	(displayMenu@menuIndex+1)& (0+255),b
  1609  000C32  0E00               	movlw	0
  1610  000C34  6F76               	movwf	displayMenu@menuIndex& (0+255),b
  1611  000C36  EC09  F000         	call	_displayMenu	;wreg free
  1612                           
  1613                           ;main.c: 229:             } else if (gasLimit == -1) {
  1614  000C3A  EF2B  F006         	goto	l5301
  1615  000C3E                     l5295:
  1616                           
  1617                           ; BSR set to: 0
  1618  000C3E  29B2               	incf	main@gasLimit& (0+255),w,b
  1619  000C40  E106               	bnz	u5421
  1620  000C42  29B3               	incf	(main@gasLimit+1)& (0+255),w,b
  1621  000C44  A4D8               	btfss	status,2,c
  1622  000C46  EF27  F006         	goto	u5421
  1623  000C4A  EF29  F006         	goto	u5420
  1624  000C4E                     u5421:
  1625  000C4E  EF2B  F006         	goto	l5301
  1626  000C52                     u5420:
  1627  000C52  EF12  F006         	goto	l5291
  1628  000C56                     l5301:
  1629                           
  1630                           ;main.c: 236:         if (pressed_key == 'D' && lastKey != 'D') {
  1631  000C56  0E44               	movlw	68
  1632  000C58  0100               	movlb	0	; () banked
  1633  000C5A  19B5               	xorwf	main@pressed_key& (0+255),w,b
  1634  000C5C  A4D8               	btfss	status,2,c
  1635  000C5E  EF33  F006         	goto	u5431
  1636  000C62  EF35  F006         	goto	u5430
  1637  000C66                     u5431:
  1638  000C66  EF70  F006         	goto	l5315
  1639  000C6A                     u5430:
  1640  000C6A                     
  1641                           ; BSR set to: 0
  1642  000C6A  0E44               	movlw	68
  1643  000C6C  19B4               	xorwf	main@lastKey& (0+255),w,b
  1644  000C6E  B4D8               	btfsc	status,2,c
  1645  000C70  EF3C  F006         	goto	u5441
  1646  000C74  EF3E  F006         	goto	u5440
  1647  000C78                     u5441:
  1648  000C78  EF70  F006         	goto	l5315
  1649  000C7C                     u5440:
  1650  000C7C                     
  1651                           ; BSR set to: 0
  1652                           ;main.c: 237:             Tlim = 30;
  1653  000C7C  0E00               	movlw	0
  1654  000C7E  6FD7               	movwf	(_Tlim+1)& (0+255),b
  1655  000C80  0E1E               	movlw	30
  1656  000C82  6FD6               	movwf	_Tlim& (0+255),b
  1657                           
  1658                           ;main.c: 238:             Hlim = 50;
  1659  000C84  0E00               	movlw	0
  1660  000C86  6FD5               	movwf	(_Hlim+1)& (0+255),b
  1661  000C88  0E32               	movlw	50
  1662  000C8A  6FD4               	movwf	_Hlim& (0+255),b
  1663                           
  1664                           ;main.c: 239:             Glim = 20;
  1665  000C8C  0E00               	movlw	0
  1666  000C8E  6FD3               	movwf	(_Glim+1)& (0+255),b
  1667  000C90  0E14               	movlw	20
  1668  000C92  6FD2               	movwf	_Glim& (0+255),b
  1669  000C94                     
  1670                           ; BSR set to: 0
  1671                           ;main.c: 240:             displayStuff(0, 0, "Lim resetados!");
  1672  000C94  0E00               	movlw	0
  1673  000C96  6E0C               	movwf	(displayStuff@row+1)^0,c
  1674  000C98  0E00               	movlw	0
  1675  000C9A  6E0B               	movwf	displayStuff@row^0,c
  1676  000C9C  0E00               	movlw	0
  1677  000C9E  6E0E               	movwf	(displayStuff@column+1)^0,c
  1678  000CA0  0E00               	movlw	0
  1679  000CA2  6E0D               	movwf	displayStuff@column^0,c
  1680  000CA4  0E52               	movlw	low STR_7
  1681  000CA6  6E0F               	movwf	displayStuff@stuff^0,c
  1682  000CA8  0E7F               	movlw	high STR_7
  1683  000CAA  6E10               	movwf	(displayStuff@stuff+1)^0,c
  1684  000CAC  EC9A  F015         	call	_displayStuff	;wreg free
  1685  000CB0                     
  1686                           ;main.c: 241:             _delay((unsigned long)((1000)*(20000000/4000.0)));
  1687  000CB0  0E1A               	movlw	26
  1688  000CB2  0100               	movlb	0	; () banked
  1689  000CB4  6F97               	movwf	(??_main+1)& (0+255),b
  1690  000CB6  0E5E               	movlw	94
  1691  000CB8  6F96               	movwf	??_main& (0+255),b
  1692  000CBA  0E6E               	movlw	110
  1693  000CBC                     u5547:
  1694  000CBC  2EE8               	decfsz	wreg,f,c
  1695  000CBE  D7FE               	bra	u5547
  1696  000CC0  2F96               	decfsz	??_main& (0+255),f,b
  1697  000CC2  D7FC               	bra	u5547
  1698  000CC4  2F97               	decfsz	(??_main+1)& (0+255),f,b
  1699  000CC6  D7FA               	bra	u5547
  1700  000CC8  F000               	nop	
  1701  000CCA                     
  1702                           ;main.c: 242:             menuIndex = 0;
  1703  000CCA  0E00               	movlw	0
  1704  000CCC  0100               	movlb	0	; () banked
  1705  000CCE  6FB7               	movwf	(main@menuIndex+1)& (0+255),b
  1706  000CD0  0E00               	movlw	0
  1707  000CD2  6FB6               	movwf	main@menuIndex& (0+255),b
  1708  000CD4                     
  1709                           ; BSR set to: 0
  1710                           ;main.c: 243:             displayMenu(menuIndex);
  1711  000CD4  0E00               	movlw	0
  1712  000CD6  6F77               	movwf	(displayMenu@menuIndex+1)& (0+255),b
  1713  000CD8  0E00               	movlw	0
  1714  000CDA  6F76               	movwf	displayMenu@menuIndex& (0+255),b
  1715  000CDC  EC09  F000         	call	_displayMenu	;wreg free
  1716  000CE0                     l5315:
  1717                           
  1718                           ;main.c: 248:         currentTemp = tempRead();
  1719  000CE0  EC25  F014         	call	_tempRead	;wreg free
  1720  000CE4  C060  F0A2         	movff	?_tempRead,main@currentTemp
  1721  000CE8  C061  F0A3         	movff	?_tempRead+1,main@currentTemp+1
  1722  000CEC  C062  F0A4         	movff	?_tempRead+2,main@currentTemp+2
  1723  000CF0  C063  F0A5         	movff	?_tempRead+3,main@currentTemp+3
  1724  000CF4                     
  1725                           ;main.c: 249:         currentHumid = humidade();
  1726  000CF4  EC84  F014         	call	_humidade	;wreg free
  1727  000CF8  C060  F0A6         	movff	?_humidade,main@currentHumid
  1728  000CFC  C061  F0A7         	movff	?_humidade+1,main@currentHumid+1
  1729  000D00  C062  F0A8         	movff	?_humidade+2,main@currentHumid+2
  1730  000D04  C063  F0A9         	movff	?_humidade+3,main@currentHumid+3
  1731  000D08                     
  1732                           ;main.c: 250:         currentGas = gasRead();
  1733  000D08  ECE3  F014         	call	_gasRead	;wreg free
  1734  000D0C  C060  F0AA         	movff	?_gasRead,main@currentGas
  1735  000D10  C061  F0AB         	movff	?_gasRead+1,main@currentGas+1
  1736  000D14  C062  F0AC         	movff	?_gasRead+2,main@currentGas+2
  1737  000D18  C063  F0AD         	movff	?_gasRead+3,main@currentGas+3
  1738  000D1C                     
  1739                           ;main.c: 254:         if (currentTemp > Tlim || currentHumid > Hlim || currentGas > Glim
      +                          ) {
  1740  000D1C  C0D6  F00A         	movff	_Tlim,___xxtofl@val
  1741  000D20  C0D7  F00B         	movff	_Tlim+1,___xxtofl@val+1
  1742  000D24  0E00               	movlw	0
  1743  000D26  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  1744  000D28  0EFF               	movlw	-1
  1745  000D2A  6E0C               	movwf	(___xxtofl@val+2)^0,c
  1746  000D2C  6E0D               	movwf	(___xxtofl@val+3)^0,c
  1747  000D2E  0E01               	movlw	1
  1748  000D30  EC3B  F010         	call	___xxtofl
  1749  000D34  C00A  F018         	movff	?___xxtofl,___flge@ff1
  1750  000D38  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  1751  000D3C  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  1752  000D40  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  1753  000D44  C0A2  F01C         	movff	main@currentTemp,___flge@ff2
  1754  000D48  C0A3  F01D         	movff	main@currentTemp+1,___flge@ff2+1
  1755  000D4C  C0A4  F01E         	movff	main@currentTemp+2,___flge@ff2+2
  1756  000D50  C0A5  F01F         	movff	main@currentTemp+3,___flge@ff2+3
  1757  000D54  ECCA  F012         	call	___flge	;wreg free
  1758  000D58  A0D8               	btfss	status,0,c
  1759  000D5A  EFB1  F006         	goto	u5451
  1760  000D5E  EFB3  F006         	goto	u5450
  1761  000D62                     u5451:
  1762  000D62  EFFD  F006         	goto	l5327
  1763  000D66                     u5450:
  1764  000D66  C0D4  F00A         	movff	_Hlim,___xxtofl@val
  1765  000D6A  C0D5  F00B         	movff	_Hlim+1,___xxtofl@val+1
  1766  000D6E  0E00               	movlw	0
  1767  000D70  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  1768  000D72  0EFF               	movlw	-1
  1769  000D74  6E0C               	movwf	(___xxtofl@val+2)^0,c
  1770  000D76  6E0D               	movwf	(___xxtofl@val+3)^0,c
  1771  000D78  0E01               	movlw	1
  1772  000D7A  EC3B  F010         	call	___xxtofl
  1773  000D7E  C00A  F018         	movff	?___xxtofl,___flge@ff1
  1774  000D82  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  1775  000D86  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  1776  000D8A  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  1777  000D8E  C0A6  F01C         	movff	main@currentHumid,___flge@ff2
  1778  000D92  C0A7  F01D         	movff	main@currentHumid+1,___flge@ff2+1
  1779  000D96  C0A8  F01E         	movff	main@currentHumid+2,___flge@ff2+2
  1780  000D9A  C0A9  F01F         	movff	main@currentHumid+3,___flge@ff2+3
  1781  000D9E  ECCA  F012         	call	___flge	;wreg free
  1782  000DA2  A0D8               	btfss	status,0,c
  1783  000DA4  EFD6  F006         	goto	u5461
  1784  000DA8  EFD8  F006         	goto	u5460
  1785  000DAC                     u5461:
  1786  000DAC  EFFD  F006         	goto	l5327
  1787  000DB0                     u5460:
  1788  000DB0  C0D2  F00A         	movff	_Glim,___xxtofl@val
  1789  000DB4  C0D3  F00B         	movff	_Glim+1,___xxtofl@val+1
  1790  000DB8  0E00               	movlw	0
  1791  000DBA  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  1792  000DBC  0EFF               	movlw	-1
  1793  000DBE  6E0C               	movwf	(___xxtofl@val+2)^0,c
  1794  000DC0  6E0D               	movwf	(___xxtofl@val+3)^0,c
  1795  000DC2  0E01               	movlw	1
  1796  000DC4  EC3B  F010         	call	___xxtofl
  1797  000DC8  C00A  F018         	movff	?___xxtofl,___flge@ff1
  1798  000DCC  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  1799  000DD0  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  1800  000DD4  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  1801  000DD8  C0AA  F01C         	movff	main@currentGas,___flge@ff2
  1802  000DDC  C0AB  F01D         	movff	main@currentGas+1,___flge@ff2+1
  1803  000DE0  C0AC  F01E         	movff	main@currentGas+2,___flge@ff2+2
  1804  000DE4  C0AD  F01F         	movff	main@currentGas+3,___flge@ff2+3
  1805  000DE8  ECCA  F012         	call	___flge	;wreg free
  1806  000DEC  B0D8               	btfsc	status,0,c
  1807  000DEE  EFFB  F006         	goto	u5471
  1808  000DF2  EFFD  F006         	goto	u5470
  1809  000DF6                     u5471:
  1810  000DF6  EF05  F007         	goto	l5329
  1811  000DFA                     u5470:
  1812  000DFA                     l5327:
  1813                           
  1814                           ;main.c: 255:             buzzer(1);
  1815  000DFA  0E00               	movlw	0
  1816  000DFC  6E0B               	movwf	(buzzer@buzzerStatus+1)^0,c
  1817  000DFE  0E01               	movlw	1
  1818  000E00  6E0A               	movwf	buzzer@buzzerStatus^0,c
  1819  000E02  ECFE  F017         	call	_buzzer	;wreg free
  1820                           
  1821                           ;main.c: 256:         } else {
  1822  000E06  EF0B  F007         	goto	l121
  1823  000E0A                     l5329:
  1824                           
  1825                           ;main.c: 257:             buzzer(0);
  1826  000E0A  0E00               	movlw	0
  1827  000E0C  6E0B               	movwf	(buzzer@buzzerStatus+1)^0,c
  1828  000E0E  0E00               	movlw	0
  1829  000E10  6E0A               	movwf	buzzer@buzzerStatus^0,c
  1830  000E12  ECFE  F017         	call	_buzzer	;wreg free
  1831  000E16                     l121:
  1832                           
  1833                           ;main.c: 261:         if (currentTemp > Tlim) {
  1834  000E16  C0D6  F00A         	movff	_Tlim,___xxtofl@val
  1835  000E1A  C0D7  F00B         	movff	_Tlim+1,___xxtofl@val+1
  1836  000E1E  0E00               	movlw	0
  1837  000E20  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  1838  000E22  0EFF               	movlw	-1
  1839  000E24  6E0C               	movwf	(___xxtofl@val+2)^0,c
  1840  000E26  6E0D               	movwf	(___xxtofl@val+3)^0,c
  1841  000E28  0E01               	movlw	1
  1842  000E2A  EC3B  F010         	call	___xxtofl
  1843  000E2E  C00A  F018         	movff	?___xxtofl,___flge@ff1
  1844  000E32  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  1845  000E36  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  1846  000E3A  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  1847  000E3E  C0A2  F01C         	movff	main@currentTemp,___flge@ff2
  1848  000E42  C0A3  F01D         	movff	main@currentTemp+1,___flge@ff2+1
  1849  000E46  C0A4  F01E         	movff	main@currentTemp+2,___flge@ff2+2
  1850  000E4A  C0A5  F01F         	movff	main@currentTemp+3,___flge@ff2+3
  1851  000E4E  ECCA  F012         	call	___flge	;wreg free
  1852  000E52  B0D8               	btfsc	status,0,c
  1853  000E54  EF2E  F007         	goto	u5481
  1854  000E58  EF30  F007         	goto	u5480
  1855  000E5C                     u5481:
  1856  000E5C  EF34  F007         	goto	l122
  1857  000E60                     u5480:
  1858  000E60                     
  1859                           ;main.c: 262:             PORTDbits.RD0 = 1;
  1860  000E60  8083               	bsf	131,0,c	;volatile
  1861                           
  1862                           ;main.c: 263:             PORTCbits.RC2 = 1;
  1863  000E62  8482               	bsf	130,2,c	;volatile
  1864                           
  1865                           ;main.c: 264:         } else {
  1866  000E64  EF36  F007         	goto	l5333
  1867  000E68                     l122:
  1868                           
  1869                           ;main.c: 265:             PORTDbits.RD0 = 0;
  1870  000E68  9083               	bcf	131,0,c	;volatile
  1871                           
  1872                           ;main.c: 266:             PORTCbits.RC2 = 0;
  1873  000E6A  9482               	bcf	130,2,c	;volatile
  1874  000E6C                     l5333:
  1875                           
  1876                           ;main.c: 270:         if (currentHumid > Hlim) {
  1877  000E6C  C0D4  F00A         	movff	_Hlim,___xxtofl@val
  1878  000E70  C0D5  F00B         	movff	_Hlim+1,___xxtofl@val+1
  1879  000E74  0E00               	movlw	0
  1880  000E76  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  1881  000E78  0EFF               	movlw	-1
  1882  000E7A  6E0C               	movwf	(___xxtofl@val+2)^0,c
  1883  000E7C  6E0D               	movwf	(___xxtofl@val+3)^0,c
  1884  000E7E  0E01               	movlw	1
  1885  000E80  EC3B  F010         	call	___xxtofl
  1886  000E84  C00A  F018         	movff	?___xxtofl,___flge@ff1
  1887  000E88  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  1888  000E8C  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  1889  000E90  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  1890  000E94  C0A6  F01C         	movff	main@currentHumid,___flge@ff2
  1891  000E98  C0A7  F01D         	movff	main@currentHumid+1,___flge@ff2+1
  1892  000E9C  C0A8  F01E         	movff	main@currentHumid+2,___flge@ff2+2
  1893  000EA0  C0A9  F01F         	movff	main@currentHumid+3,___flge@ff2+3
  1894  000EA4  ECCA  F012         	call	___flge	;wreg free
  1895  000EA8  B0D8               	btfsc	status,0,c
  1896  000EAA  EF59  F007         	goto	u5491
  1897  000EAE  EF5B  F007         	goto	u5490
  1898  000EB2                     u5491:
  1899  000EB2  EF64  F007         	goto	l124
  1900  000EB6                     u5490:
  1901  000EB6                     
  1902                           ;main.c: 271:             PORTDbits.RD1 = 1;
  1903  000EB6  8283               	bsf	131,1,c	;volatile
  1904  000EB8                     
  1905                           ;main.c: 272:             setMoist(1);
  1906  000EB8  0E00               	movlw	0
  1907  000EBA  6E0B               	movwf	(setMoist@moistSet+1)^0,c
  1908  000EBC  0E01               	movlw	1
  1909  000EBE  6E0A               	movwf	setMoist@moistSet^0,c
  1910  000EC0  ECFC  F017         	call	_setMoist	;wreg free
  1911                           
  1912                           ;main.c: 273:         } else {
  1913  000EC4  EF6B  F007         	goto	l125
  1914  000EC8                     l124:
  1915                           
  1916                           ;main.c: 274:             PORTDbits.RD1 = 0;
  1917  000EC8  9283               	bcf	131,1,c	;volatile
  1918  000ECA                     
  1919                           ;main.c: 275:             setMoist(0);
  1920  000ECA  0E00               	movlw	0
  1921  000ECC  6E0B               	movwf	(setMoist@moistSet+1)^0,c
  1922  000ECE  0E00               	movlw	0
  1923  000ED0  6E0A               	movwf	setMoist@moistSet^0,c
  1924  000ED2  ECFC  F017         	call	_setMoist	;wreg free
  1925  000ED6                     l125:
  1926                           
  1927                           ;main.c: 279:         if (currentGas > Glim) {
  1928  000ED6  C0D2  F00A         	movff	_Glim,___xxtofl@val
  1929  000EDA  C0D3  F00B         	movff	_Glim+1,___xxtofl@val+1
  1930  000EDE  0E00               	movlw	0
  1931  000EE0  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  1932  000EE2  0EFF               	movlw	-1
  1933  000EE4  6E0C               	movwf	(___xxtofl@val+2)^0,c
  1934  000EE6  6E0D               	movwf	(___xxtofl@val+3)^0,c
  1935  000EE8  0E01               	movlw	1
  1936  000EEA  EC3B  F010         	call	___xxtofl
  1937  000EEE  C00A  F018         	movff	?___xxtofl,___flge@ff1
  1938  000EF2  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  1939  000EF6  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  1940  000EFA  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  1941  000EFE  C0AA  F01C         	movff	main@currentGas,___flge@ff2
  1942  000F02  C0AB  F01D         	movff	main@currentGas+1,___flge@ff2+1
  1943  000F06  C0AC  F01E         	movff	main@currentGas+2,___flge@ff2+2
  1944  000F0A  C0AD  F01F         	movff	main@currentGas+3,___flge@ff2+3
  1945  000F0E  ECCA  F012         	call	___flge	;wreg free
  1946  000F12  B0D8               	btfsc	status,0,c
  1947  000F14  EF8E  F007         	goto	u5501
  1948  000F18  EF90  F007         	goto	u5500
  1949  000F1C                     u5501:
  1950  000F1C  EF98  F007         	goto	l126
  1951  000F20                     u5500:
  1952  000F20                     
  1953                           ;main.c: 280:             PORTDbits.RD2 = 1;
  1954  000F20  8483               	bsf	131,2,c	;volatile
  1955  000F22                     
  1956                           ;main.c: 281:             setCoolerSpeed(255);
  1957  000F22  0E00               	movlw	0
  1958  000F24  6E0B               	movwf	(setCoolerSpeed@PWMset+1)^0,c
  1959  000F26  680A               	setf	setCoolerSpeed@PWMset^0,c
  1960  000F28  ECFD  F017         	call	_setCoolerSpeed	;wreg free
  1961                           
  1962                           ;main.c: 282:         } else {
  1963  000F2C  EF9F  F007         	goto	l5347
  1964  000F30                     l126:
  1965                           
  1966                           ;main.c: 283:             PORTDbits.RD2 = 0;
  1967  000F30  9483               	bcf	131,2,c	;volatile
  1968  000F32                     
  1969                           ;main.c: 284:             setCoolerSpeed(0);
  1970  000F32  0E00               	movlw	0
  1971  000F34  6E0B               	movwf	(setCoolerSpeed@PWMset+1)^0,c
  1972  000F36  0E00               	movlw	0
  1973  000F38  6E0A               	movwf	setCoolerSpeed@PWMset^0,c
  1974  000F3A  ECFD  F017         	call	_setCoolerSpeed	;wreg free
  1975  000F3E                     l5347:
  1976                           
  1977                           ;main.c: 288:         lastKey = pressed_key;
  1978  000F3E  C0B5  F0B4         	movff	main@pressed_key,main@lastKey
  1979  000F42  EF80  F004         	goto	l5195
  1980  000F46  EF07  F000         	goto	start
  1981  000F4A                     __end_of_main:
  1982                           	callstack 0
  1983                           
  1984 ;; *************** function _setMoist *****************
  1985 ;; Defined at:
  1986 ;;		line 700 in file "main.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;  moistSet        2    9[COMRAM] int 
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;		None
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  1    wreg      void 
  1993 ;; Registers used:
  1994 ;;		wreg, status,2, status,0
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2000 ;;      Params:         2       0       0       0       0       0       0       0       0
  2001 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2002 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2003 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2004 ;;Total ram usage:        2 bytes
  2005 ;; Hardware stack levels used: 1
  2006 ;; Hardware stack levels required when called: 2
  2007 ;; This function calls:
  2008 ;;		Nothing
  2009 ;; This function is called by:
  2010 ;;		_main
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           	psect	text1
  2015  002FF8                     __ptext1:
  2016                           	callstack 0
  2017  002FF8                     _setMoist:
  2018                           	callstack 28
  2019  002FF8  0012               	return		;funcret
  2020  002FFA                     __end_of_setMoist:
  2021                           	callstack 0
  2022                           
  2023 ;; *************** function _setCoolerSpeed *****************
  2024 ;; Defined at:
  2025 ;;		line 692 in file "main.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;  PWMset          2    9[COMRAM] int 
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;		None
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      void 
  2032 ;; Registers used:
  2033 ;;		None
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2039 ;;      Params:         2       0       0       0       0       0       0       0       0
  2040 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2041 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2042 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2043 ;;Total ram usage:        2 bytes
  2044 ;; Hardware stack levels used: 1
  2045 ;; Hardware stack levels required when called: 2
  2046 ;; This function calls:
  2047 ;;		Nothing
  2048 ;; This function is called by:
  2049 ;;		_main
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053                           	psect	text2
  2054  002FFA                     __ptext2:
  2055                           	callstack 0
  2056  002FFA                     _setCoolerSpeed:
  2057                           	callstack 28
  2058  002FFA  0012               	return		;funcret
  2059  002FFC                     __end_of_setCoolerSpeed:
  2060                           	callstack 0
  2061                           
  2062 ;; *************** function _readTwoDigitValue *****************
  2063 ;; Defined at:
  2064 ;;		line 426 in file "main.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;  prompt          2   40[COMRAM] PTR unsigned char 
  2067 ;;		 -> STR_5(11), STR_3(12), STR_1(13), 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;  input           3   44[COMRAM] unsigned char [3]
  2070 ;;  digitCount      2   47[COMRAM] int 
  2071 ;;  key             1   49[COMRAM] unsigned char 
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  2   40[COMRAM] int 
  2074 ;; Registers used:
  2075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2081 ;;      Params:         2       0       0       0       0       0       0       0       0
  2082 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2083 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2084 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2085 ;;Total ram usage:       10 bytes
  2086 ;; Hardware stack levels used: 1
  2087 ;; Hardware stack levels required when called: 5
  2088 ;; This function calls:
  2089 ;;		_WriteCmdXLCD
  2090 ;;		_displayStuff
  2091 ;;		_readKey
  2092 ;; This function is called by:
  2093 ;;		_main
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           	psect	text3
  2098  00236A                     __ptext3:
  2099                           	callstack 0
  2100  00236A                     _readTwoDigitValue:
  2101                           	callstack 25
  2102  00236A                     
  2103                           ;main.c: 427:     char input[3] = {0};
  2104  00236A  0E00               	movlw	0
  2105  00236C  6E2D               	movwf	readTwoDigitValue@input^0,c
  2106  00236E  0E00               	movlw	0
  2107  002370  6E2E               	movwf	(readTwoDigitValue@input+1)^0,c
  2108  002372  0E00               	movlw	0
  2109  002374  6E2F               	movwf	(readTwoDigitValue@input+2)^0,c
  2110                           
  2111                           ;main.c: 428:     int digitCount = 0;
  2112  002376  0E00               	movlw	0
  2113  002378  6E31               	movwf	(readTwoDigitValue@digitCount+1)^0,c
  2114  00237A  0E00               	movlw	0
  2115  00237C  6E30               	movwf	readTwoDigitValue@digitCount^0,c
  2116  00237E                     
  2117                           ;main.c: 429:     char key;;main.c: 431:     WriteCmdXLCD(0x01);
  2118  00237E  0E01               	movlw	1
  2119  002380  EC73  F017         	call	_WriteCmdXLCD
  2120  002384                     
  2121                           ;main.c: 432:     _delay((unsigned long)((2)*(20000000/4000.0)));
  2122  002384  0E0D               	movlw	13
  2123  002386  6E2B               	movwf	??_readTwoDigitValue^0,c
  2124  002388  0EFC               	movlw	252
  2125  00238A                     u5557:
  2126  00238A  2EE8               	decfsz	wreg,f,c
  2127  00238C  D7FE               	bra	u5557
  2128  00238E  2E2B               	decfsz	??_readTwoDigitValue^0,f,c
  2129  002390  D7FC               	bra	u5557
  2130  002392                     
  2131                           ;main.c: 433:     WriteCmdXLCD(0x02);
  2132  002392  0E02               	movlw	2
  2133  002394  EC73  F017         	call	_WriteCmdXLCD
  2134  002398                     
  2135                           ;main.c: 434:     _delay((unsigned long)((2)*(20000000/4000.0)));
  2136  002398  0E0D               	movlw	13
  2137  00239A  6E2B               	movwf	??_readTwoDigitValue^0,c
  2138  00239C  0EFC               	movlw	252
  2139  00239E                     u5567:
  2140  00239E  2EE8               	decfsz	wreg,f,c
  2141  0023A0  D7FE               	bra	u5567
  2142  0023A2  2E2B               	decfsz	??_readTwoDigitValue^0,f,c
  2143  0023A4  D7FC               	bra	u5567
  2144  0023A6                     
  2145                           ;main.c: 436:     displayStuff(0, 0, prompt);
  2146  0023A6  0E00               	movlw	0
  2147  0023A8  6E0C               	movwf	(displayStuff@row+1)^0,c
  2148  0023AA  0E00               	movlw	0
  2149  0023AC  6E0B               	movwf	displayStuff@row^0,c
  2150  0023AE  0E00               	movlw	0
  2151  0023B0  6E0E               	movwf	(displayStuff@column+1)^0,c
  2152  0023B2  0E00               	movlw	0
  2153  0023B4  6E0D               	movwf	displayStuff@column^0,c
  2154  0023B6  C029  F00F         	movff	readTwoDigitValue@prompt,displayStuff@stuff
  2155  0023BA  C02A  F010         	movff	readTwoDigitValue@prompt+1,displayStuff@stuff+1
  2156  0023BE  EC9A  F015         	call	_displayStuff	;wreg free
  2157                           
  2158                           ;main.c: 438:     while (digitCount < 2) {
  2159  0023C2  EF28  F012         	goto	l4011
  2160  0023C6                     l3993:
  2161                           
  2162                           ;main.c: 439:         key = readKey();
  2163  0023C6  EC3F  F00F         	call	_readKey	;wreg free
  2164  0023CA  6E32               	movwf	readTwoDigitValue@key^0,c
  2165  0023CC                     
  2166                           ;main.c: 441:         if (key >= '0' && key <= '9') {
  2167  0023CC  0E2F               	movlw	47
  2168  0023CE  6432               	cpfsgt	readTwoDigitValue@key^0,c
  2169  0023D0  EFEC  F011         	goto	u3701
  2170  0023D4  EFEE  F011         	goto	u3700
  2171  0023D8                     u3701:
  2172  0023D8  EF1B  F012         	goto	l4007
  2173  0023DC                     u3700:
  2174  0023DC  0E3A               	movlw	58
  2175  0023DE  6032               	cpfslt	readTwoDigitValue@key^0,c
  2176  0023E0  EFF4  F011         	goto	u3711
  2177  0023E4  EFF6  F011         	goto	u3710
  2178  0023E8                     u3711:
  2179  0023E8  EF1B  F012         	goto	l4007
  2180  0023EC                     u3710:
  2181  0023EC                     
  2182                           ;main.c: 442:             input[digitCount] = key;
  2183  0023EC  0E2D               	movlw	low readTwoDigitValue@input
  2184  0023EE  2430               	addwf	readTwoDigitValue@digitCount^0,w,c
  2185  0023F0  6ED9               	movwf	fsr2l,c
  2186  0023F2  0E00               	movlw	high readTwoDigitValue@input
  2187  0023F4  2031               	addwfc	(readTwoDigitValue@digitCount+1)^0,w,c
  2188  0023F6  6EDA               	movwf	fsr2h,c
  2189  0023F8  C032  FFDF         	movff	readTwoDigitValue@key,indf2
  2190  0023FC                     
  2191                           ;main.c: 443:             displayStuff(1, digitCount, &input[digitCount]);
  2192  0023FC  0E00               	movlw	0
  2193  0023FE  6E0C               	movwf	(displayStuff@row+1)^0,c
  2194  002400  0E01               	movlw	1
  2195  002402  6E0B               	movwf	displayStuff@row^0,c
  2196  002404  C030  F00D         	movff	readTwoDigitValue@digitCount,displayStuff@column
  2197  002408  C031  F00E         	movff	readTwoDigitValue@digitCount+1,displayStuff@column+1
  2198  00240C  0E2D               	movlw	low readTwoDigitValue@input
  2199  00240E  2430               	addwf	readTwoDigitValue@digitCount^0,w,c
  2200  002410  6E0F               	movwf	displayStuff@stuff^0,c
  2201  002412  0E00               	movlw	high readTwoDigitValue@input
  2202  002414  2031               	addwfc	(readTwoDigitValue@digitCount+1)^0,w,c
  2203  002416  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2204  002418  EC9A  F015         	call	_displayStuff	;wreg free
  2205  00241C                     
  2206                           ;main.c: 444:             digitCount++;
  2207  00241C  4A30               	infsnz	readTwoDigitValue@digitCount^0,f,c
  2208  00241E  2A31               	incf	(readTwoDigitValue@digitCount+1)^0,f,c
  2209  002420                     
  2210                           ;main.c: 445:             _delay((unsigned long)((200)*(20000000/4000.0)));
  2211  002420  0E06               	movlw	6
  2212  002422  6E2C               	movwf	(??_readTwoDigitValue+1)^0,c
  2213  002424  0E13               	movlw	19
  2214  002426  6E2B               	movwf	??_readTwoDigitValue^0,c
  2215  002428  0EAE               	movlw	174
  2216  00242A                     u5577:
  2217  00242A  2EE8               	decfsz	wreg,f,c
  2218  00242C  D7FE               	bra	u5577
  2219  00242E  2E2B               	decfsz	??_readTwoDigitValue^0,f,c
  2220  002430  D7FC               	bra	u5577
  2221  002432  2E2C               	decfsz	(??_readTwoDigitValue+1)^0,f,c
  2222  002434  D7FA               	bra	u5577
  2223  002436                     l4007:
  2224                           
  2225                           ;main.c: 448:         if (key == 'F') {
  2226  002436  0E46               	movlw	70
  2227  002438  1832               	xorwf	readTwoDigitValue@key^0,w,c
  2228  00243A  A4D8               	btfss	status,2,c
  2229  00243C  EF22  F012         	goto	u3721
  2230  002440  EF24  F012         	goto	u3720
  2231  002444                     u3721:
  2232  002444  EF28  F012         	goto	l4011
  2233  002448                     u3720:
  2234  002448                     
  2235                           ;main.c: 449:             return -1;
  2236  002448  6829               	setf	?_readTwoDigitValue^0,c
  2237  00244A  682A               	setf	(?_readTwoDigitValue+1)^0,c
  2238  00244C  EF46  F012         	goto	l179
  2239  002450                     l4011:
  2240                           
  2241                           ;main.c: 438:     while (digitCount < 2) {
  2242  002450  BE31               	btfsc	(readTwoDigitValue@digitCount+1)^0,7,c
  2243  002452  EF34  F012         	goto	u3731
  2244  002456  5031               	movf	(readTwoDigitValue@digitCount+1)^0,w,c
  2245  002458  E109               	bnz	u3730
  2246  00245A  0E02               	movlw	2
  2247  00245C  5C30               	subwf	readTwoDigitValue@digitCount^0,w,c
  2248  00245E  A0D8               	btfss	status,0,c
  2249  002460  EF34  F012         	goto	u3731
  2250  002464  EF36  F012         	goto	u3730
  2251  002468                     u3731:
  2252  002468  EFE3  F011         	goto	l3993
  2253  00246C                     u3730:
  2254  00246C                     
  2255                           ;main.c: 454:     return (input[0] - '0') * 10 + (input[1] - '0');
  2256  00246C  502D               	movf	readTwoDigitValue@input^0,w,c
  2257  00246E  0D0A               	mullw	10
  2258  002470  CFF3 F02B          	movff	prodl,??_readTwoDigitValue
  2259  002474  CFF4 F02C          	movff	prodh,??_readTwoDigitValue+1
  2260  002478  502E               	movf	(readTwoDigitValue@input+1)^0,w,c
  2261  00247A  262B               	addwf	??_readTwoDigitValue^0,f,c
  2262  00247C  0E00               	movlw	0
  2263  00247E  222C               	addwfc	(??_readTwoDigitValue+1)^0,f,c
  2264  002480  0EF0               	movlw	240
  2265  002482  242B               	addwf	??_readTwoDigitValue^0,w,c
  2266  002484  6E29               	movwf	?_readTwoDigitValue^0,c
  2267  002486  0EFD               	movlw	253
  2268  002488  202C               	addwfc	(??_readTwoDigitValue+1)^0,w,c
  2269  00248A  6E2A               	movwf	(?_readTwoDigitValue+1)^0,c
  2270  00248C                     l179:
  2271  00248C  0012               	return		;funcret
  2272  00248E                     __end_of_readTwoDigitValue:
  2273                           	callstack 0
  2274                           
  2275 ;; *************** function _readKey *****************
  2276 ;; Defined at:
  2277 ;;		line 565 in file "main.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;		None
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;  pressedKey      1   39[COMRAM] unsigned char 
  2282 ;;  InvCol          8   23[COMRAM] const int [4]
  2283 ;;  currentTime     4   31[COMRAM] unsigned long 
  2284 ;;  row             2   37[COMRAM] int 
  2285 ;;  col             2   35[COMRAM] int 
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      unsigned char 
  2288 ;; Registers used:
  2289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2295 ;;      Params:         0       0       0       0       0       0       0       0       0
  2296 ;;      Locals:        17       0       0       0       0       0       0       0       0
  2297 ;;      Temps:          6       0       0       0       0       0       0       0       0
  2298 ;;      Totals:        23       0       0       0       0       0       0       0       0
  2299 ;;Total ram usage:       23 bytes
  2300 ;; Hardware stack levels used: 1
  2301 ;; Hardware stack levels required when called: 3
  2302 ;; This function calls:
  2303 ;;		_millis
  2304 ;; This function is called by:
  2305 ;;		_main
  2306 ;;		_readTwoDigitValue
  2307 ;; This function uses a non-reentrant model
  2308 ;;
  2309                           
  2310                           	psect	text4
  2311  001E7E                     __ptext4:
  2312                           	callstack 0
  2313  001E7E                     _readKey:
  2314                           	callstack 26
  2315  001E7E                     
  2316                           ;main.c: 566:     const int InvCol[4] = {3, 2, 1, 0};
  2317  001E7E  0E09               	movlw	low readKey@F3616
  2318  001E80  6EF6               	movwf	tblptrl,c
  2319  001E82                     	if	1	;There is more than 1 active tblptr byte
  2320  001E82  0E7F               	movlw	high readKey@F3616
  2321  001E84  6EF7               	movwf	tblptrh,c
  2322  001E86                     	endif
  2323  001E86                     	if	0	;There are less than 3 active tblptr bytes
  2324  001E86                     	endif
  2325  001E86  EE20  F018         	lfsr	2,readKey@InvCol
  2326  001E8A  0E07               	movlw	7
  2327  001E8C                     u3200:
  2328  001E8C  0009               	tblrd		*+
  2329  001E8E  CFF5 FFDE          	movff	tablat,postinc2
  2330  001E92  06E8               	decf	wreg,f,c
  2331  001E94  E2FB               	bc	u3200
  2332  001E96                     
  2333                           ;main.c: 567:     static unsigned long lastDebounceTime = 0;;main.c: 568:     static uns
      +                          igned long lastKeyPressTime = 0;;main.c: 569:     static char lastStableKey = 0;;main.c:
      +                           570:     unsigned long currentTime = millis();
  2334  001E96  ECAE  F017         	call	_millis	;wreg free
  2335  001E9A  C00A  F020         	movff	?_millis,readKey@currentTime
  2336  001E9E  C00B  F021         	movff	?_millis+1,readKey@currentTime+1
  2337  001EA2  C00C  F022         	movff	?_millis+2,readKey@currentTime+2
  2338  001EA6  C00D  F023         	movff	?_millis+3,readKey@currentTime+3
  2339  001EAA                     
  2340                           ;main.c: 571:     int col, row;;main.c: 574:     for (col = 0; col < 4; col++) {
  2341  001EAA  0E00               	movlw	0
  2342  001EAC  6E25               	movwf	(readKey@col+1)^0,c
  2343  001EAE  0E00               	movlw	0
  2344  001EB0  6E24               	movwf	readKey@col^0,c
  2345  001EB2                     l3517:
  2346  001EB2  BE25               	btfsc	(readKey@col+1)^0,7,c
  2347  001EB4  EF65  F00F         	goto	u3211
  2348  001EB8  5025               	movf	(readKey@col+1)^0,w,c
  2349  001EBA  E109               	bnz	u3210
  2350  001EBC  0E04               	movlw	4
  2351  001EBE  5C24               	subwf	readKey@col^0,w,c
  2352  001EC0  A0D8               	btfss	status,0,c
  2353  001EC2  EF65  F00F         	goto	u3211
  2354  001EC6  EF67  F00F         	goto	u3210
  2355  001ECA                     u3211:
  2356  001ECA  EF69  F00F         	goto	l3521
  2357  001ECE                     u3210:
  2358  001ECE  EF33  F010         	goto	l3561
  2359  001ED2                     l3521:
  2360                           
  2361                           ;main.c: 575:         LATB = ~(1 << col);
  2362  001ED2  C024  F012         	movff	readKey@col,??_readKey
  2363  001ED6  0E01               	movlw	1
  2364  001ED8  6E13               	movwf	(??_readKey+1)^0,c
  2365  001EDA  2A12               	incf	??_readKey^0,f,c
  2366  001EDC  EF72  F00F         	goto	u3224
  2367  001EE0                     u3225:
  2368  001EE0  90D8               	bcf	status,0,c
  2369  001EE2  3613               	rlcf	(??_readKey+1)^0,f,c
  2370  001EE4                     u3224:
  2371  001EE4  2E12               	decfsz	??_readKey^0,f,c
  2372  001EE6  EF70  F00F         	goto	u3225
  2373  001EEA  5013               	movf	(??_readKey+1)^0,w,c
  2374  001EEC  0AFF               	xorlw	255
  2375  001EEE  6E8A               	movwf	138,c	;volatile
  2376  001EF0                     
  2377                           ;main.c: 576:         _delay((unsigned long)((5)*(20000000/4000.0)));
  2378  001EF0  0E21               	movlw	33
  2379  001EF2  6E12               	movwf	??_readKey^0,c
  2380  001EF4  0E76               	movlw	118
  2381  001EF6                     u5587:
  2382  001EF6  2EE8               	decfsz	wreg,f,c
  2383  001EF8  D7FE               	bra	u5587
  2384  001EFA  2E12               	decfsz	??_readKey^0,f,c
  2385  001EFC  D7FC               	bra	u5587
  2386  001EFE  D000               	nop2	
  2387  001F00                     
  2388                           ;main.c: 579:         for (row = 0; row < 4; row++) {
  2389  001F00  0E00               	movlw	0
  2390  001F02  6E27               	movwf	(readKey@row+1)^0,c
  2391  001F04  0E00               	movlw	0
  2392  001F06  6E26               	movwf	readKey@row^0,c
  2393  001F08                     l3531:
  2394                           
  2395                           ;main.c: 580:             if (!(PORTB & (1 << (row + 4)))) {
  2396  001F08  C026  F012         	movff	readKey@row,??_readKey
  2397  001F0C  0E04               	movlw	4
  2398  001F0E  2612               	addwf	??_readKey^0,f,c
  2399  001F10  0E01               	movlw	1
  2400  001F12  6E13               	movwf	(??_readKey+1)^0,c
  2401  001F14  2A12               	incf	??_readKey^0,f,c
  2402  001F16  EF8F  F00F         	goto	u3234
  2403  001F1A                     u3235:
  2404  001F1A  90D8               	bcf	status,0,c
  2405  001F1C  3613               	rlcf	(??_readKey+1)^0,f,c
  2406  001F1E                     u3234:
  2407  001F1E  2E12               	decfsz	??_readKey^0,f,c
  2408  001F20  EF8D  F00F         	goto	u3235
  2409  001F24  5013               	movf	(??_readKey+1)^0,w,c
  2410  001F26  1481               	andwf	129,w,c	;volatile
  2411  001F28  0900               	iorlw	0
  2412  001F2A  A4D8               	btfss	status,2,c
  2413  001F2C  EF9A  F00F         	goto	u3241
  2414  001F30  EF9C  F00F         	goto	u3240
  2415  001F34                     u3241:
  2416  001F34  EF1F  F010         	goto	l3553
  2417  001F38                     u3240:
  2418  001F38                     
  2419                           ;main.c: 582:                 char pressedKey = keymap[row][InvCol[col]];
  2420  001F38  90D8               	bcf	status,0,c
  2421  001F3A  3424               	rlcf	readKey@col^0,w,c
  2422  001F3C  6ED9               	movwf	fsr2l,c
  2423  001F3E  3425               	rlcf	(readKey@col+1)^0,w,c
  2424  001F40  6EDA               	movwf	fsr2h,c
  2425  001F42  0E18               	movlw	low readKey@InvCol
  2426  001F44  26D9               	addwf	fsr2l,f,c
  2427  001F46  0E00               	movlw	high readKey@InvCol
  2428  001F48  22DA               	addwfc	fsr2h,f,c
  2429  001F4A  CFDE F012          	movff	postinc2,??_readKey
  2430  001F4E  CFDD F013          	movff	postdec2,??_readKey+1
  2431  001F52  C026  F014         	movff	readKey@row,??_readKey+2
  2432  001F56  C027  F015         	movff	readKey@row+1,??_readKey+3
  2433  001F5A  90D8               	bcf	status,0,c
  2434  001F5C  3614               	rlcf	(??_readKey+2)^0,f,c
  2435  001F5E  3615               	rlcf	(??_readKey+3)^0,f,c
  2436  001F60  90D8               	bcf	status,0,c
  2437  001F62  3614               	rlcf	(??_readKey+2)^0,f,c
  2438  001F64  3615               	rlcf	(??_readKey+3)^0,f,c
  2439  001F66  0EF9               	movlw	low _keymap
  2440  001F68  6E16               	movwf	(??_readKey+4)^0,c
  2441  001F6A  0E7E               	movlw	high _keymap
  2442  001F6C  6E17               	movwf	(??_readKey+5)^0,c
  2443  001F6E  5014               	movf	(??_readKey+2)^0,w,c
  2444  001F70  2616               	addwf	(??_readKey+4)^0,f,c
  2445  001F72  5015               	movf	(??_readKey+3)^0,w,c
  2446  001F74  2217               	addwfc	(??_readKey+5)^0,f,c
  2447  001F76  5012               	movf	??_readKey^0,w,c
  2448  001F78  2616               	addwf	(??_readKey+4)^0,f,c
  2449  001F7A  5013               	movf	(??_readKey+1)^0,w,c
  2450  001F7C  2217               	addwfc	(??_readKey+5)^0,f,c
  2451  001F7E  C016  FFF6         	movff	??_readKey+4,tblptrl
  2452  001F82  C017  FFF7         	movff	??_readKey+5,tblptrh
  2453  001F86                     	if	0	;tblptru may be non-zero
  2454  001F86                     	endif
  2455  001F86                     	if	0	;tblptru may be non-zero
  2456  001F86                     	endif
  2457  001F86  0008               	tblrd		*
  2458  001F88  CFF5 F028          	movff	tablat,readKey@pressedKey
  2459  001F8C                     
  2460                           ;main.c: 585:                 if (pressedKey != lastStableKey) {
  2461  001F8C  5054               	movf	readKey@lastStableKey^0,w,c
  2462  001F8E  1828               	xorwf	readKey@pressedKey^0,w,c
  2463  001F90  B4D8               	btfsc	status,2,c
  2464  001F92  EFCD  F00F         	goto	u3251
  2465  001F96  EFCF  F00F         	goto	u3250
  2466  001F9A                     u3251:
  2467  001F9A  EFD9  F00F         	goto	l3539
  2468  001F9E                     u3250:
  2469  001F9E                     
  2470                           ;main.c: 586:                     lastDebounceTime = currentTime;
  2471  001F9E  C020  F0C7         	movff	readKey@currentTime,readKey@lastDebounceTime
  2472  001FA2  C021  F0C8         	movff	readKey@currentTime+1,readKey@lastDebounceTime+1
  2473  001FA6  C022  F0C9         	movff	readKey@currentTime+2,readKey@lastDebounceTime+2
  2474  001FAA  C023  F0CA         	movff	readKey@currentTime+3,readKey@lastDebounceTime+3
  2475                           
  2476                           ;main.c: 587:                     lastStableKey = pressedKey;
  2477  001FAE  C028  F054         	movff	readKey@pressedKey,readKey@lastStableKey
  2478  001FB2                     l3539:
  2479                           
  2480                           ;main.c: 591:                 if ((currentTime - lastDebounceTime) > 50) {
  2481  001FB2  0100               	movlb	0	; () banked
  2482  001FB4  51C7               	movf	readKey@lastDebounceTime& (0+255),w,b
  2483  001FB6  5C20               	subwf	readKey@currentTime^0,w,c
  2484  001FB8  6E12               	movwf	??_readKey^0,c
  2485  001FBA  51C8               	movf	(readKey@lastDebounceTime+1)& (0+255),w,b
  2486  001FBC  5821               	subwfb	(readKey@currentTime+1)^0,w,c
  2487  001FBE  6E13               	movwf	(??_readKey+1)^0,c
  2488  001FC0  51C9               	movf	(readKey@lastDebounceTime+2)& (0+255),w,b
  2489  001FC2  5822               	subwfb	(readKey@currentTime+2)^0,w,c
  2490  001FC4  6E14               	movwf	(??_readKey+2)^0,c
  2491  001FC6  51CA               	movf	(readKey@lastDebounceTime+3)& (0+255),w,b
  2492  001FC8  5823               	subwfb	(readKey@currentTime+3)^0,w,c
  2493  001FCA  6E15               	movwf	(??_readKey+3)^0,c
  2494  001FCC  5015               	movf	(??_readKey+3)^0,w,c
  2495  001FCE  1014               	iorwf	(??_readKey+2)^0,w,c
  2496  001FD0  1013               	iorwf	(??_readKey+1)^0,w,c
  2497  001FD2  E109               	bnz	u3260
  2498  001FD4  0E33               	movlw	51
  2499  001FD6  5C12               	subwf	??_readKey^0,w,c
  2500  001FD8  A0D8               	btfss	status,0,c
  2501  001FDA  EFF1  F00F         	goto	u3261
  2502  001FDE  EFF3  F00F         	goto	u3260
  2503  001FE2                     u3261:
  2504  001FE2  EF1C  F010         	goto	l3549
  2505  001FE6                     u3260:
  2506  001FE6                     
  2507                           ; BSR set to: 0
  2508                           ;main.c: 592:                     if ((currentTime - lastKeyPressTime) > 300) {
  2509  001FE6  51C3               	movf	readKey@lastKeyPressTime& (0+255),w,b
  2510  001FE8  5C20               	subwf	readKey@currentTime^0,w,c
  2511  001FEA  6E12               	movwf	??_readKey^0,c
  2512  001FEC  51C4               	movf	(readKey@lastKeyPressTime+1)& (0+255),w,b
  2513  001FEE  5821               	subwfb	(readKey@currentTime+1)^0,w,c
  2514  001FF0  6E13               	movwf	(??_readKey+1)^0,c
  2515  001FF2  51C5               	movf	(readKey@lastKeyPressTime+2)& (0+255),w,b
  2516  001FF4  5822               	subwfb	(readKey@currentTime+2)^0,w,c
  2517  001FF6  6E14               	movwf	(??_readKey+2)^0,c
  2518  001FF8  51C6               	movf	(readKey@lastKeyPressTime+3)& (0+255),w,b
  2519  001FFA  5823               	subwfb	(readKey@currentTime+3)^0,w,c
  2520  001FFC  6E15               	movwf	(??_readKey+3)^0,c
  2521  001FFE  5015               	movf	(??_readKey+3)^0,w,c
  2522  002000  1014               	iorwf	(??_readKey+2)^0,w,c
  2523  002002  E10B               	bnz	u3270
  2524  002004  0E2D               	movlw	45
  2525  002006  5C12               	subwf	??_readKey^0,w,c
  2526  002008  0E01               	movlw	1
  2527  00200A  5813               	subwfb	(??_readKey+1)^0,w,c
  2528  00200C  A0D8               	btfss	status,0,c
  2529  00200E  EF0B  F010         	goto	u3271
  2530  002012  EF0D  F010         	goto	u3270
  2531  002016                     u3271:
  2532  002016  EF1C  F010         	goto	l3549
  2533  00201A                     u3270:
  2534  00201A                     
  2535                           ; BSR set to: 0
  2536                           ;main.c: 593:                         lastKeyPressTime = currentTime;
  2537  00201A  C020  F0C3         	movff	readKey@currentTime,readKey@lastKeyPressTime
  2538  00201E  C021  F0C4         	movff	readKey@currentTime+1,readKey@lastKeyPressTime+1
  2539  002022  C022  F0C5         	movff	readKey@currentTime+2,readKey@lastKeyPressTime+2
  2540  002026  C023  F0C6         	movff	readKey@currentTime+3,readKey@lastKeyPressTime+3
  2541                           
  2542                           ;main.c: 594:                         keyState.currentKey = pressedKey;
  2543  00202A  C028  F0B9         	movff	readKey@pressedKey,_keyState+1
  2544                           
  2545                           ;main.c: 595:                         keyState.lastKey = pressedKey;
  2546  00202E  C028  F0B8         	movff	readKey@pressedKey,_keyState
  2547  002032                     
  2548                           ; BSR set to: 0
  2549                           ;main.c: 596:                         return pressedKey;
  2550  002032  5028               	movf	readKey@pressedKey^0,w,c
  2551  002034  EF3A  F010         	goto	l225
  2552  002038                     l3549:
  2553                           
  2554                           ; BSR set to: 0
  2555                           ;main.c: 599:                 return 0;
  2556  002038  0E00               	movlw	0
  2557  00203A  EF3A  F010         	goto	l225
  2558  00203E                     l3553:
  2559                           
  2560                           ;main.c: 601:         }
  2561  00203E  4A26               	infsnz	readKey@row^0,f,c
  2562  002040  2A27               	incf	(readKey@row+1)^0,f,c
  2563  002042  BE27               	btfsc	(readKey@row+1)^0,7,c
  2564  002044  EF2D  F010         	goto	u3281
  2565  002048  5027               	movf	(readKey@row+1)^0,w,c
  2566  00204A  E109               	bnz	u3280
  2567  00204C  0E04               	movlw	4
  2568  00204E  5C26               	subwf	readKey@row^0,w,c
  2569  002050  A0D8               	btfss	status,0,c
  2570  002052  EF2D  F010         	goto	u3281
  2571  002056  EF2F  F010         	goto	u3280
  2572  00205A                     u3281:
  2573  00205A  EF84  F00F         	goto	l3531
  2574  00205E                     u3280:
  2575  00205E                     
  2576                           ;main.c: 602:     }
  2577  00205E  4A24               	infsnz	readKey@col^0,f,c
  2578  002060  2A25               	incf	(readKey@col+1)^0,f,c
  2579  002062  EF59  F00F         	goto	l3517
  2580  002066                     l3561:
  2581                           
  2582                           ;main.c: 605:     keyState.lastKey = 0;
  2583  002066  0E00               	movlw	0
  2584  002068  0100               	movlb	0	; () banked
  2585  00206A  6FB8               	movwf	_keyState& (0+255),b
  2586                           
  2587                           ;main.c: 606:     lastStableKey = 0;
  2588  00206C  0E00               	movlw	0
  2589  00206E  6E54               	movwf	readKey@lastStableKey^0,c
  2590  002070  EF1C  F010         	goto	l3549
  2591  002074                     l225:
  2592                           
  2593                           ; BSR set to: 0
  2594  002074  0012               	return		;funcret
  2595  002076                     __end_of_readKey:
  2596                           	callstack 0
  2597                           
  2598 ;; *************** function _displayMenu *****************
  2599 ;; Defined at:
  2600 ;;		line 296 in file "main.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;  menuIndex       2   22[BANK0 ] int 
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;  valueStr       10   28[BANK0 ] unsigned char [10]
  2605 ;;  currentGas      4   50[BANK0 ] float 
  2606 ;;  currentHumid    4   46[BANK0 ] float 
  2607 ;;  currentTemp     4   42[BANK0 ] float 
  2608 ;;  currentTime     4   38[BANK0 ] unsigned long 
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  1    wreg      void 
  2611 ;; Registers used:
  2612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2618 ;;      Params:         0       2       0       0       0       0       0       0       0
  2619 ;;      Locals:         0      26       0       0       0       0       0       0       0
  2620 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2621 ;;      Totals:         0      32       0       0       0       0       0       0       0
  2622 ;;Total ram usage:       32 bytes
  2623 ;; Hardware stack levels used: 1
  2624 ;; Hardware stack levels required when called: 5
  2625 ;; This function calls:
  2626 ;;		_WriteCmdXLCD
  2627 ;;		___flge
  2628 ;;		___xxtofl
  2629 ;;		_displayStuff
  2630 ;;		_floatToString
  2631 ;;		_gasRead
  2632 ;;		_humidade
  2633 ;;		_itoa
  2634 ;;		_millis
  2635 ;;		_tempRead
  2636 ;; This function is called by:
  2637 ;;		_main
  2638 ;; This function uses a non-reentrant model
  2639 ;;
  2640                           
  2641                           	psect	text5
  2642  000012                     __ptext5:
  2643                           	callstack 0
  2644  000012                     _displayMenu:
  2645                           	callstack 25
  2646  000012                     
  2647                           ;main.c: 297:     char valueStr[10];;main.c: 298:     static unsigned long lastUpdateTim
      +                          e = 0;;main.c: 299:     unsigned long currentTime = millis();
  2648  000012  ECAE  F017         	call	_millis	;wreg free
  2649  000016  C00A  F086         	movff	?_millis,displayMenu@currentTime
  2650  00001A  C00B  F087         	movff	?_millis+1,displayMenu@currentTime+1
  2651  00001E  C00C  F088         	movff	?_millis+2,displayMenu@currentTime+2
  2652  000022  C00D  F089         	movff	?_millis+3,displayMenu@currentTime+3
  2653  000026                     
  2654                           ;main.c: 300:     float currentTemp, currentHumid, currentGas;;main.c: 304:     if (curr
      +                          entTime - lastUpdateTime < 500) {
  2655  000026  0100               	movlb	0	; () banked
  2656  000028  51CB               	movf	displayMenu@lastUpdateTime& (0+255),w,b
  2657  00002A  5D86               	subwf	displayMenu@currentTime& (0+255),w,b
  2658  00002C  6F78               	movwf	??_displayMenu& (0+255),b
  2659  00002E  51CC               	movf	(displayMenu@lastUpdateTime+1)& (0+255),w,b
  2660  000030  5987               	subwfb	(displayMenu@currentTime+1)& (0+255),w,b
  2661  000032  6F79               	movwf	(??_displayMenu+1)& (0+255),b
  2662  000034  51CD               	movf	(displayMenu@lastUpdateTime+2)& (0+255),w,b
  2663  000036  5988               	subwfb	(displayMenu@currentTime+2)& (0+255),w,b
  2664  000038  6F7A               	movwf	(??_displayMenu+2)& (0+255),b
  2665  00003A  51CE               	movf	(displayMenu@lastUpdateTime+3)& (0+255),w,b
  2666  00003C  5989               	subwfb	(displayMenu@currentTime+3)& (0+255),w,b
  2667  00003E  6F7B               	movwf	(??_displayMenu+3)& (0+255),b
  2668  000040  517B               	movf	(??_displayMenu+3)& (0+255),w,b
  2669  000042  117A               	iorwf	(??_displayMenu+2)& (0+255),w,b
  2670  000044  E109               	bnz	u5091
  2671  000046  0EF4               	movlw	244
  2672  000048  5D78               	subwf	??_displayMenu& (0+255),w,b
  2673  00004A  0E01               	movlw	1
  2674  00004C  5979               	subwfb	(??_displayMenu+1)& (0+255),w,b
  2675  00004E  B0D8               	btfsc	status,0,c
  2676  000050  EF2C  F000         	goto	u5091
  2677  000054  EF2E  F000         	goto	u5090
  2678  000058                     u5091:
  2679  000058  EF32  F000         	goto	l135
  2680  00005C                     u5090:
  2681  00005C  EF63  F004         	goto	l136
  2682  000060                     l5041:
  2683                           
  2684                           ;main.c: 305:         return;
  2685  000060  EF63  F004         	goto	l136
  2686  000064                     l135:
  2687                           
  2688                           ; BSR set to: 0
  2689                           ;main.c: 307:     lastUpdateTime = currentTime;
  2690  000064  C086  F0CB         	movff	displayMenu@currentTime,displayMenu@lastUpdateTime
  2691  000068  C087  F0CC         	movff	displayMenu@currentTime+1,displayMenu@lastUpdateTime+1
  2692  00006C  C088  F0CD         	movff	displayMenu@currentTime+2,displayMenu@lastUpdateTime+2
  2693  000070  C089  F0CE         	movff	displayMenu@currentTime+3,displayMenu@lastUpdateTime+3
  2694  000074                     
  2695                           ; BSR set to: 0
  2696                           ;main.c: 310:     WriteCmdXLCD(0x01);
  2697  000074  0E01               	movlw	1
  2698  000076  EC73  F017         	call	_WriteCmdXLCD
  2699  00007A                     
  2700                           ;main.c: 311:     _delay((unsigned long)((2)*(20000000/4000.0)));
  2701  00007A  0E0D               	movlw	13
  2702  00007C  0100               	movlb	0	; () banked
  2703  00007E  6F78               	movwf	??_displayMenu& (0+255),b
  2704  000080  0EFB               	movlw	251
  2705  000082                     u5597:
  2706  000082  2EE8               	decfsz	wreg,f,c
  2707  000084  D7FE               	bra	u5597
  2708  000086  2F78               	decfsz	??_displayMenu& (0+255),f,b
  2709  000088  D7FC               	bra	u5597
  2710  00008A  D000               	nop2	
  2711  00008C                     
  2712                           ;main.c: 315:     currentTemp = tempRead();
  2713  00008C  EC25  F014         	call	_tempRead	;wreg free
  2714  000090  C060  F08A         	movff	?_tempRead,displayMenu@currentTemp
  2715  000094  C061  F08B         	movff	?_tempRead+1,displayMenu@currentTemp+1
  2716  000098  C062  F08C         	movff	?_tempRead+2,displayMenu@currentTemp+2
  2717  00009C  C063  F08D         	movff	?_tempRead+3,displayMenu@currentTemp+3
  2718  0000A0                     
  2719                           ;main.c: 316:     currentHumid = humidade();
  2720  0000A0  EC84  F014         	call	_humidade	;wreg free
  2721  0000A4  C060  F08E         	movff	?_humidade,displayMenu@currentHumid
  2722  0000A8  C061  F08F         	movff	?_humidade+1,displayMenu@currentHumid+1
  2723  0000AC  C062  F090         	movff	?_humidade+2,displayMenu@currentHumid+2
  2724  0000B0  C063  F091         	movff	?_humidade+3,displayMenu@currentHumid+3
  2725  0000B4                     
  2726                           ;main.c: 317:     currentGas = gasRead();
  2727  0000B4  ECE3  F014         	call	_gasRead	;wreg free
  2728  0000B8  C060  F092         	movff	?_gasRead,displayMenu@currentGas
  2729  0000BC  C061  F093         	movff	?_gasRead+1,displayMenu@currentGas+1
  2730  0000C0  C062  F094         	movff	?_gasRead+2,displayMenu@currentGas+2
  2731  0000C4  C063  F095         	movff	?_gasRead+3,displayMenu@currentGas+3
  2732                           
  2733                           ;main.c: 321:     switch (menuIndex) {
  2734  0000C8  EF40  F004         	goto	l5163
  2735  0000CC                     l5053:
  2736                           
  2737                           ; BSR set to: 0
  2738                           ;main.c: 323:             displayStuff(0, 0, "Temp:");
  2739  0000CC  0E00               	movlw	0
  2740  0000CE  6E0C               	movwf	(displayStuff@row+1)^0,c
  2741  0000D0  0E00               	movlw	0
  2742  0000D2  6E0B               	movwf	displayStuff@row^0,c
  2743  0000D4  0E00               	movlw	0
  2744  0000D6  6E0E               	movwf	(displayStuff@column+1)^0,c
  2745  0000D8  0E00               	movlw	0
  2746  0000DA  6E0D               	movwf	displayStuff@column^0,c
  2747  0000DC  0E83               	movlw	low (STR_1+7)
  2748  0000DE  6E0F               	movwf	displayStuff@stuff^0,c
  2749  0000E0  0E7F               	movlw	high (STR_1+7)
  2750  0000E2  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2751  0000E4  EC9A  F015         	call	_displayStuff	;wreg free
  2752  0000E8                     
  2753                           ;main.c: 324:             floatToString(currentTemp, valueStr, 1);
  2754  0000E8  C08A  F031         	movff	displayMenu@currentTemp,floatToString@value
  2755  0000EC  C08B  F032         	movff	displayMenu@currentTemp+1,floatToString@value+1
  2756  0000F0  C08C  F033         	movff	displayMenu@currentTemp+2,floatToString@value+2
  2757  0000F4  C08D  F034         	movff	displayMenu@currentTemp+3,floatToString@value+3
  2758  0000F8  0E7C               	movlw	low displayMenu@valueStr
  2759  0000FA  6E35               	movwf	floatToString@buffer^0,c
  2760  0000FC  0E00               	movlw	high displayMenu@valueStr
  2761  0000FE  6E36               	movwf	(floatToString@buffer+1)^0,c
  2762  000100  0E00               	movlw	0
  2763  000102  6E38               	movwf	(floatToString@precision+1)^0,c
  2764  000104  0E01               	movlw	1
  2765  000106  6E37               	movwf	floatToString@precision^0,c
  2766  000108  ECE7  F00D         	call	_floatToString	;wreg free
  2767  00010C                     
  2768                           ;main.c: 325:             displayStuff(0, 6, valueStr);
  2769  00010C  0E00               	movlw	0
  2770  00010E  6E0C               	movwf	(displayStuff@row+1)^0,c
  2771  000110  0E00               	movlw	0
  2772  000112  6E0B               	movwf	displayStuff@row^0,c
  2773  000114  0E00               	movlw	0
  2774  000116  6E0E               	movwf	(displayStuff@column+1)^0,c
  2775  000118  0E06               	movlw	6
  2776  00011A  6E0D               	movwf	displayStuff@column^0,c
  2777  00011C  0E7C               	movlw	low displayMenu@valueStr
  2778  00011E  6E0F               	movwf	displayStuff@stuff^0,c
  2779  000120  0E00               	movlw	high displayMenu@valueStr
  2780  000122  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2781  000124  EC9A  F015         	call	_displayStuff	;wreg free
  2782  000128                     
  2783                           ;main.c: 326:             displayStuff(0, 11, "C");
  2784  000128  0E00               	movlw	0
  2785  00012A  6E0C               	movwf	(displayStuff@row+1)^0,c
  2786  00012C  0E00               	movlw	0
  2787  00012E  6E0B               	movwf	displayStuff@row^0,c
  2788  000130  0E00               	movlw	0
  2789  000132  6E0E               	movwf	(displayStuff@column+1)^0,c
  2790  000134  0E0B               	movlw	11
  2791  000136  6E0D               	movwf	displayStuff@column^0,c
  2792  000138  0EFD               	movlw	low STR_9
  2793  00013A  6E0F               	movwf	displayStuff@stuff^0,c
  2794  00013C  0E7F               	movlw	high STR_9
  2795  00013E  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2796  000140  EC9A  F015         	call	_displayStuff	;wreg free
  2797  000144                     
  2798                           ;main.c: 327:             displayStuff(1, 0, "Lim:");
  2799  000144  0E00               	movlw	0
  2800  000146  6E0C               	movwf	(displayStuff@row+1)^0,c
  2801  000148  0E01               	movlw	1
  2802  00014A  6E0B               	movwf	displayStuff@row^0,c
  2803  00014C  0E00               	movlw	0
  2804  00014E  6E0E               	movwf	(displayStuff@column+1)^0,c
  2805  000150  0E00               	movlw	0
  2806  000152  6E0D               	movwf	displayStuff@column^0,c
  2807  000154  0EEA               	movlw	low STR_10
  2808  000156  6E0F               	movwf	displayStuff@stuff^0,c
  2809  000158  0E7F               	movlw	high STR_10
  2810  00015A  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2811  00015C  EC9A  F015         	call	_displayStuff	;wreg free
  2812  000160                     
  2813                           ;main.c: 328:             itoa(Tlim, valueStr);
  2814  000160  C0D6  F012         	movff	_Tlim,itoa@value
  2815  000164  C0D7  F013         	movff	_Tlim+1,itoa@value+1
  2816  000168  0E7C               	movlw	low displayMenu@valueStr
  2817  00016A  6E14               	movwf	itoa@ptr^0,c
  2818  00016C  0E00               	movlw	high displayMenu@valueStr
  2819  00016E  6E15               	movwf	(itoa@ptr+1)^0,c
  2820  000170  EC15  F011         	call	_itoa	;wreg free
  2821  000174                     l5065:
  2822                           
  2823                           ;main.c: 329:             displayStuff(1, 4, valueStr);
  2824  000174  0E00               	movlw	0
  2825  000176  6E0C               	movwf	(displayStuff@row+1)^0,c
  2826  000178  0E01               	movlw	1
  2827  00017A  6E0B               	movwf	displayStuff@row^0,c
  2828  00017C  0E00               	movlw	0
  2829  00017E  6E0E               	movwf	(displayStuff@column+1)^0,c
  2830  000180  0E04               	movlw	4
  2831  000182  6E0D               	movwf	displayStuff@column^0,c
  2832  000184  0E7C               	movlw	low displayMenu@valueStr
  2833  000186  6E0F               	movwf	displayStuff@stuff^0,c
  2834  000188  0E00               	movlw	high displayMenu@valueStr
  2835  00018A  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2836  00018C  EC9A  F015         	call	_displayStuff	;wreg free
  2837                           
  2838                           ;main.c: 330:             break;
  2839  000190  EF63  F004         	goto	l136
  2840  000194                     l5067:
  2841                           
  2842                           ; BSR set to: 0
  2843                           ;main.c: 334:             displayStuff(0, 0, "Humid:");
  2844  000194  0E00               	movlw	0
  2845  000196  6E0C               	movwf	(displayStuff@row+1)^0,c
  2846  000198  0E00               	movlw	0
  2847  00019A  6E0B               	movwf	displayStuff@row^0,c
  2848  00019C  0E00               	movlw	0
  2849  00019E  6E0E               	movwf	(displayStuff@column+1)^0,c
  2850  0001A0  0E00               	movlw	0
  2851  0001A2  6E0D               	movwf	displayStuff@column^0,c
  2852  0001A4  0EE3               	movlw	low STR_11
  2853  0001A6  6E0F               	movwf	displayStuff@stuff^0,c
  2854  0001A8  0E7F               	movlw	high STR_11
  2855  0001AA  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2856  0001AC  EC9A  F015         	call	_displayStuff	;wreg free
  2857  0001B0                     
  2858                           ;main.c: 335:             floatToString(currentHumid, valueStr, 1);
  2859  0001B0  C08E  F031         	movff	displayMenu@currentHumid,floatToString@value
  2860  0001B4  C08F  F032         	movff	displayMenu@currentHumid+1,floatToString@value+1
  2861  0001B8  C090  F033         	movff	displayMenu@currentHumid+2,floatToString@value+2
  2862  0001BC  C091  F034         	movff	displayMenu@currentHumid+3,floatToString@value+3
  2863  0001C0  0E7C               	movlw	low displayMenu@valueStr
  2864  0001C2  6E35               	movwf	floatToString@buffer^0,c
  2865  0001C4  0E00               	movlw	high displayMenu@valueStr
  2866  0001C6  6E36               	movwf	(floatToString@buffer+1)^0,c
  2867  0001C8  0E00               	movlw	0
  2868  0001CA  6E38               	movwf	(floatToString@precision+1)^0,c
  2869  0001CC  0E01               	movlw	1
  2870  0001CE  6E37               	movwf	floatToString@precision^0,c
  2871  0001D0  ECE7  F00D         	call	_floatToString	;wreg free
  2872  0001D4                     
  2873                           ;main.c: 336:             displayStuff(0, 7, valueStr);
  2874  0001D4  0E00               	movlw	0
  2875  0001D6  6E0C               	movwf	(displayStuff@row+1)^0,c
  2876  0001D8  0E00               	movlw	0
  2877  0001DA  6E0B               	movwf	displayStuff@row^0,c
  2878  0001DC  0E00               	movlw	0
  2879  0001DE  6E0E               	movwf	(displayStuff@column+1)^0,c
  2880  0001E0  0E07               	movlw	7
  2881  0001E2  6E0D               	movwf	displayStuff@column^0,c
  2882  0001E4  0E7C               	movlw	low displayMenu@valueStr
  2883  0001E6  6E0F               	movwf	displayStuff@stuff^0,c
  2884  0001E8  0E00               	movlw	high displayMenu@valueStr
  2885  0001EA  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2886  0001EC  EC9A  F015         	call	_displayStuff	;wreg free
  2887  0001F0                     
  2888                           ;main.c: 337:             displayStuff(0, 12, "%");
  2889  0001F0  0E00               	movlw	0
  2890  0001F2  6E0C               	movwf	(displayStuff@row+1)^0,c
  2891  0001F4  0E00               	movlw	0
  2892  0001F6  6E0B               	movwf	displayStuff@row^0,c
  2893  0001F8  0E00               	movlw	0
  2894  0001FA  6E0E               	movwf	(displayStuff@column+1)^0,c
  2895  0001FC  0E0C               	movlw	12
  2896  0001FE  6E0D               	movwf	displayStuff@column^0,c
  2897  000200  0EFB               	movlw	low STR_12
  2898  000202  6E0F               	movwf	displayStuff@stuff^0,c
  2899  000204  0E7F               	movlw	high STR_12
  2900  000206  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2901  000208  EC9A  F015         	call	_displayStuff	;wreg free
  2902  00020C                     
  2903                           ;main.c: 338:             displayStuff(1, 0, "Lim:");
  2904  00020C  0E00               	movlw	0
  2905  00020E  6E0C               	movwf	(displayStuff@row+1)^0,c
  2906  000210  0E01               	movlw	1
  2907  000212  6E0B               	movwf	displayStuff@row^0,c
  2908  000214  0E00               	movlw	0
  2909  000216  6E0E               	movwf	(displayStuff@column+1)^0,c
  2910  000218  0E00               	movlw	0
  2911  00021A  6E0D               	movwf	displayStuff@column^0,c
  2912  00021C  0EEA               	movlw	low STR_10
  2913  00021E  6E0F               	movwf	displayStuff@stuff^0,c
  2914  000220  0E7F               	movlw	high STR_10
  2915  000222  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2916  000224  EC9A  F015         	call	_displayStuff	;wreg free
  2917  000228                     
  2918                           ;main.c: 339:             itoa(Hlim, valueStr);
  2919  000228  C0D4  F012         	movff	_Hlim,itoa@value
  2920  00022C  C0D5  F013         	movff	_Hlim+1,itoa@value+1
  2921  000230  0E7C               	movlw	low displayMenu@valueStr
  2922  000232  6E14               	movwf	itoa@ptr^0,c
  2923  000234  0E00               	movlw	high displayMenu@valueStr
  2924  000236  6E15               	movwf	(itoa@ptr+1)^0,c
  2925  000238  EC15  F011         	call	_itoa	;wreg free
  2926  00023C  EFBA  F000         	goto	l5065
  2927  000240                     l5081:
  2928                           
  2929                           ; BSR set to: 0
  2930                           ;main.c: 345:             displayStuff(0, 0, "Gas:");
  2931  000240  0E00               	movlw	0
  2932  000242  6E0C               	movwf	(displayStuff@row+1)^0,c
  2933  000244  0E00               	movlw	0
  2934  000246  6E0B               	movwf	displayStuff@row^0,c
  2935  000248  0E00               	movlw	0
  2936  00024A  6E0E               	movwf	(displayStuff@column+1)^0,c
  2937  00024C  0E00               	movlw	0
  2938  00024E  6E0D               	movwf	displayStuff@column^0,c
  2939  000250  0EEF               	movlw	low STR_14
  2940  000252  6E0F               	movwf	displayStuff@stuff^0,c
  2941  000254  0E7F               	movlw	high STR_14
  2942  000256  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2943  000258  EC9A  F015         	call	_displayStuff	;wreg free
  2944  00025C                     
  2945                           ;main.c: 346:             floatToString(currentGas, valueStr, 1);
  2946  00025C  C092  F031         	movff	displayMenu@currentGas,floatToString@value
  2947  000260  C093  F032         	movff	displayMenu@currentGas+1,floatToString@value+1
  2948  000264  C094  F033         	movff	displayMenu@currentGas+2,floatToString@value+2
  2949  000268  C095  F034         	movff	displayMenu@currentGas+3,floatToString@value+3
  2950  00026C  0E7C               	movlw	low displayMenu@valueStr
  2951  00026E  6E35               	movwf	floatToString@buffer^0,c
  2952  000270  0E00               	movlw	high displayMenu@valueStr
  2953  000272  6E36               	movwf	(floatToString@buffer+1)^0,c
  2954  000274  0E00               	movlw	0
  2955  000276  6E38               	movwf	(floatToString@precision+1)^0,c
  2956  000278  0E01               	movlw	1
  2957  00027A  6E37               	movwf	floatToString@precision^0,c
  2958  00027C  ECE7  F00D         	call	_floatToString	;wreg free
  2959  000280                     
  2960                           ;main.c: 347:             displayStuff(0, 5, valueStr);
  2961  000280  0E00               	movlw	0
  2962  000282  6E0C               	movwf	(displayStuff@row+1)^0,c
  2963  000284  0E00               	movlw	0
  2964  000286  6E0B               	movwf	displayStuff@row^0,c
  2965  000288  0E00               	movlw	0
  2966  00028A  6E0E               	movwf	(displayStuff@column+1)^0,c
  2967  00028C  0E05               	movlw	5
  2968  00028E  6E0D               	movwf	displayStuff@column^0,c
  2969  000290  0E7C               	movlw	low displayMenu@valueStr
  2970  000292  6E0F               	movwf	displayStuff@stuff^0,c
  2971  000294  0E00               	movlw	high displayMenu@valueStr
  2972  000296  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2973  000298  EC9A  F015         	call	_displayStuff	;wreg free
  2974  00029C                     
  2975                           ;main.c: 348:             displayStuff(0, 11, "ppm");
  2976  00029C  0E00               	movlw	0
  2977  00029E  6E0C               	movwf	(displayStuff@row+1)^0,c
  2978  0002A0  0E00               	movlw	0
  2979  0002A2  6E0B               	movwf	displayStuff@row^0,c
  2980  0002A4  0E00               	movlw	0
  2981  0002A6  6E0E               	movwf	(displayStuff@column+1)^0,c
  2982  0002A8  0E0B               	movlw	11
  2983  0002AA  6E0D               	movwf	displayStuff@column^0,c
  2984  0002AC  0EF4               	movlw	low STR_15
  2985  0002AE  6E0F               	movwf	displayStuff@stuff^0,c
  2986  0002B0  0E7F               	movlw	high STR_15
  2987  0002B2  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2988  0002B4  EC9A  F015         	call	_displayStuff	;wreg free
  2989  0002B8                     
  2990                           ;main.c: 349:             displayStuff(1, 0, "Lim:");
  2991  0002B8  0E00               	movlw	0
  2992  0002BA  6E0C               	movwf	(displayStuff@row+1)^0,c
  2993  0002BC  0E01               	movlw	1
  2994  0002BE  6E0B               	movwf	displayStuff@row^0,c
  2995  0002C0  0E00               	movlw	0
  2996  0002C2  6E0E               	movwf	(displayStuff@column+1)^0,c
  2997  0002C4  0E00               	movlw	0
  2998  0002C6  6E0D               	movwf	displayStuff@column^0,c
  2999  0002C8  0EEA               	movlw	low STR_10
  3000  0002CA  6E0F               	movwf	displayStuff@stuff^0,c
  3001  0002CC  0E7F               	movlw	high STR_10
  3002  0002CE  6E10               	movwf	(displayStuff@stuff+1)^0,c
  3003  0002D0  EC9A  F015         	call	_displayStuff	;wreg free
  3004  0002D4                     
  3005                           ;main.c: 350:             itoa(Glim, valueStr);
  3006  0002D4  C0D2  F012         	movff	_Glim,itoa@value
  3007  0002D8  C0D3  F013         	movff	_Glim+1,itoa@value+1
  3008  0002DC  0E7C               	movlw	low displayMenu@valueStr
  3009  0002DE  6E14               	movwf	itoa@ptr^0,c
  3010  0002E0  0E00               	movlw	high displayMenu@valueStr
  3011  0002E2  6E15               	movwf	(itoa@ptr+1)^0,c
  3012  0002E4  EC15  F011         	call	_itoa	;wreg free
  3013  0002E8  EFBA  F000         	goto	l5065
  3014  0002EC                     l5095:
  3015                           
  3016                           ; BSR set to: 0
  3017                           ;main.c: 356:             displayStuff(0, 0, "Leituras");
  3018  0002EC  0E00               	movlw	0
  3019  0002EE  6E0C               	movwf	(displayStuff@row+1)^0,c
  3020  0002F0  0E00               	movlw	0
  3021  0002F2  6E0B               	movwf	displayStuff@row^0,c
  3022  0002F4  0E00               	movlw	0
  3023  0002F6  6E0E               	movwf	(displayStuff@column+1)^0,c
  3024  0002F8  0E00               	movlw	0
  3025  0002FA  6E0D               	movwf	displayStuff@column^0,c
  3026  0002FC  0EDA               	movlw	low STR_17
  3027  0002FE  6E0F               	movwf	displayStuff@stuff^0,c
  3028  000300  0E7F               	movlw	high STR_17
  3029  000302  6E10               	movwf	(displayStuff@stuff+1)^0,c
  3030  000304  EC9A  F015         	call	_displayStuff	;wreg free
  3031  000308                     
  3032                           ;main.c: 357:             if (currentTemp <= Tlim && currentHumid <= Hlim && currentGas 
      +                          <= Glim) {
  3033  000308  C0D6  F00A         	movff	_Tlim,___xxtofl@val
  3034  00030C  C0D7  F00B         	movff	_Tlim+1,___xxtofl@val+1
  3035  000310  0E00               	movlw	0
  3036  000312  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3037  000314  0EFF               	movlw	-1
  3038  000316  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3039  000318  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3040  00031A  0E01               	movlw	1
  3041  00031C  EC3B  F010         	call	___xxtofl
  3042  000320  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3043  000324  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3044  000328  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3045  00032C  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3046  000330  C08A  F01C         	movff	displayMenu@currentTemp,___flge@ff2
  3047  000334  C08B  F01D         	movff	displayMenu@currentTemp+1,___flge@ff2+1
  3048  000338  C08C  F01E         	movff	displayMenu@currentTemp+2,___flge@ff2+2
  3049  00033C  C08D  F01F         	movff	displayMenu@currentTemp+3,___flge@ff2+3
  3050  000340  ECCA  F012         	call	___flge	;wreg free
  3051  000344  A0D8               	btfss	status,0,c
  3052  000346  EFA7  F001         	goto	u5101
  3053  00034A  EFA9  F001         	goto	u5100
  3054  00034E                     u5101:
  3055  00034E  EF03  F002         	goto	l5105
  3056  000352                     u5100:
  3057  000352  C0D4  F00A         	movff	_Hlim,___xxtofl@val
  3058  000356  C0D5  F00B         	movff	_Hlim+1,___xxtofl@val+1
  3059  00035A  0E00               	movlw	0
  3060  00035C  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3061  00035E  0EFF               	movlw	-1
  3062  000360  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3063  000362  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3064  000364  0E01               	movlw	1
  3065  000366  EC3B  F010         	call	___xxtofl
  3066  00036A  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3067  00036E  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3068  000372  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3069  000376  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3070  00037A  C08E  F01C         	movff	displayMenu@currentHumid,___flge@ff2
  3071  00037E  C08F  F01D         	movff	displayMenu@currentHumid+1,___flge@ff2+1
  3072  000382  C090  F01E         	movff	displayMenu@currentHumid+2,___flge@ff2+2
  3073  000386  C091  F01F         	movff	displayMenu@currentHumid+3,___flge@ff2+3
  3074  00038A  ECCA  F012         	call	___flge	;wreg free
  3075  00038E  A0D8               	btfss	status,0,c
  3076  000390  EFCC  F001         	goto	u5111
  3077  000394  EFCE  F001         	goto	u5110
  3078  000398                     u5111:
  3079  000398  EF03  F002         	goto	l5105
  3080  00039C                     u5110:
  3081  00039C  C0D2  F00A         	movff	_Glim,___xxtofl@val
  3082  0003A0  C0D3  F00B         	movff	_Glim+1,___xxtofl@val+1
  3083  0003A4  0E00               	movlw	0
  3084  0003A6  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3085  0003A8  0EFF               	movlw	-1
  3086  0003AA  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3087  0003AC  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3088  0003AE  0E01               	movlw	1
  3089  0003B0  EC3B  F010         	call	___xxtofl
  3090  0003B4  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3091  0003B8  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3092  0003BC  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3093  0003C0  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3094  0003C4  C092  F01C         	movff	displayMenu@currentGas,___flge@ff2
  3095  0003C8  C093  F01D         	movff	displayMenu@currentGas+1,___flge@ff2+1
  3096  0003CC  C094  F01E         	movff	displayMenu@currentGas+2,___flge@ff2+2
  3097  0003D0  C095  F01F         	movff	displayMenu@currentGas+3,___flge@ff2+3
  3098  0003D4  ECCA  F012         	call	___flge	;wreg free
  3099  0003D8  A0D8               	btfss	status,0,c
  3100  0003DA  EFF1  F001         	goto	u5121
  3101  0003DE  EFF3  F001         	goto	u5120
  3102  0003E2                     u5121:
  3103  0003E2  EF03  F002         	goto	l5105
  3104  0003E6                     u5120:
  3105  0003E6                     
  3106                           ;main.c: 358:                 displayStuff(1, 0, "OK");
  3107  0003E6  0E00               	movlw	0
  3108  0003E8  6E0C               	movwf	(displayStuff@row+1)^0,c
  3109  0003EA  0E01               	movlw	1
  3110  0003EC  6E0B               	movwf	displayStuff@row^0,c
  3111  0003EE  0E00               	movlw	0
  3112  0003F0  6E0E               	movwf	(displayStuff@column+1)^0,c
  3113  0003F2  0E00               	movlw	0
  3114  0003F4  6E0D               	movwf	displayStuff@column^0,c
  3115  0003F6  0EF8               	movlw	low STR_18
  3116  0003F8  6E0F               	movwf	displayStuff@stuff^0,c
  3117  0003FA  0E7F               	movlw	high STR_18
  3118  0003FC  6E10               	movwf	(displayStuff@stuff+1)^0,c
  3119  0003FE  EC9A  F015         	call	_displayStuff	;wreg free
  3120                           
  3121                           ;main.c: 359:             } else {
  3122  000402  EF63  F004         	goto	l136
  3123  000406                     l5105:
  3124                           
  3125                           ;main.c: 360:                 static int errorCycle = 0;;main.c: 361:                 er
      +                          rorCycle++;
  3126  000406  4A50               	infsnz	displayMenu@errorCycle^0,f,c
  3127  000408  2A51               	incf	(displayMenu@errorCycle+1)^0,f,c
  3128  00040A                     
  3129                           ;main.c: 363:                 if (errorCycle > 3) errorCycle = 0;
  3130  00040A  BE51               	btfsc	(displayMenu@errorCycle+1)^0,7,c
  3131  00040C  EF11  F002         	goto	u5131
  3132  000410  5051               	movf	(displayMenu@errorCycle+1)^0,w,c
  3133  000412  E109               	bnz	u5130
  3134  000414  0E04               	movlw	4
  3135  000416  5C50               	subwf	displayMenu@errorCycle^0,w,c
  3136  000418  A0D8               	btfss	status,0,c
  3137  00041A  EF11  F002         	goto	u5131
  3138  00041E  EF13  F002         	goto	u5130
  3139  000422                     u5131:
  3140  000422  EFB8  F002         	goto	l5125
  3141  000426                     u5130:
  3142  000426  0E00               	movlw	0
  3143  000428  6E51               	movwf	(displayMenu@errorCycle+1)^0,c
  3144  00042A  0E00               	movlw	0
  3145  00042C  6E50               	movwf	displayMenu@errorCycle^0,c
  3146  00042E  EFB8  F002         	goto	l5125
  3147  000432                     l5111:
  3148                           
  3149                           ; BSR set to: 0
  3150                           ;main.c: 367:                         if (currentTemp > Tlim) {
  3151  000432  C0D6  F00A         	movff	_Tlim,___xxtofl@val
  3152  000436  C0D7  F00B         	movff	_Tlim+1,___xxtofl@val+1
  3153  00043A  0E00               	movlw	0
  3154  00043C  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3155  00043E  0EFF               	movlw	-1
  3156  000440  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3157  000442  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3158  000444  0E01               	movlw	1
  3159  000446  EC3B  F010         	call	___xxtofl
  3160  00044A  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3161  00044E  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3162  000452  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3163  000456  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3164  00045A  C08A  F01C         	movff	displayMenu@currentTemp,___flge@ff2
  3165  00045E  C08B  F01D         	movff	displayMenu@currentTemp+1,___flge@ff2+1
  3166  000462  C08C  F01E         	movff	displayMenu@currentTemp+2,___flge@ff2+2
  3167  000466  C08D  F01F         	movff	displayMenu@currentTemp+3,___flge@ff2+3
  3168  00046A  ECCA  F012         	call	___flge	;wreg free
  3169  00046E  B0D8               	btfsc	status,0,c
  3170  000470  EF3C  F002         	goto	u5141
  3171  000474  EF3E  F002         	goto	u5140
  3172  000478                     u5141:
  3173  000478  EF30  F000         	goto	l5041
  3174  00047C                     u5140:
  3175  00047C                     
  3176                           ;main.c: 368:                             displayStuff(1, 0, "T_lim excedida!");
  3177  00047C  0E00               	movlw	0
  3178  00047E  6E0C               	movwf	(displayStuff@row+1)^0,c
  3179  000480  0E01               	movlw	1
  3180  000482  6E0B               	movwf	displayStuff@row^0,c
  3181  000484  0E00               	movlw	0
  3182  000486  6E0E               	movwf	(displayStuff@column+1)^0,c
  3183  000488  0E00               	movlw	0
  3184  00048A  6E0D               	movwf	displayStuff@column^0,c
  3185  00048C  0E32               	movlw	low STR_19
  3186  00048E  6E0F               	movwf	displayStuff@stuff^0,c
  3187  000490  0E7F               	movlw	high STR_19
  3188  000492  6E10               	movwf	(displayStuff@stuff+1)^0,c
  3189  000494  EC9A  F015         	call	_displayStuff	;wreg free
  3190  000498  EF63  F004         	goto	l136
  3191  00049C                     l5115:
  3192                           
  3193                           ; BSR set to: 0
  3194                           ;main.c: 372:                         if (currentHumid > Hlim) {
  3195  00049C  C0D4  F00A         	movff	_Hlim,___xxtofl@val
  3196  0004A0  C0D5  F00B         	movff	_Hlim+1,___xxtofl@val+1
  3197  0004A4  0E00               	movlw	0
  3198  0004A6  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3199  0004A8  0EFF               	movlw	-1
  3200  0004AA  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3201  0004AC  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3202  0004AE  0E01               	movlw	1
  3203  0004B0  EC3B  F010         	call	___xxtofl
  3204  0004B4  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3205  0004B8  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3206  0004BC  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3207  0004C0  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3208  0004C4  C08E  F01C         	movff	displayMenu@currentHumid,___flge@ff2
  3209  0004C8  C08F  F01D         	movff	displayMenu@currentHumid+1,___flge@ff2+1
  3210  0004CC  C090  F01E         	movff	displayMenu@currentHumid+2,___flge@ff2+2
  3211  0004D0  C091  F01F         	movff	displayMenu@currentHumid+3,___flge@ff2+3
  3212  0004D4  ECCA  F012         	call	___flge	;wreg free
  3213  0004D8  B0D8               	btfsc	status,0,c
  3214  0004DA  EF71  F002         	goto	u5151
  3215  0004DE  EF73  F002         	goto	u5150
  3216  0004E2                     u5151:
  3217  0004E2  EF30  F000         	goto	l5041
  3218  0004E6                     u5150:
  3219  0004E6                     
  3220                           ;main.c: 373:                             displayStuff(1, 0, "H_lim excedida!");
  3221  0004E6  0E00               	movlw	0
  3222  0004E8  6E0C               	movwf	(displayStuff@row+1)^0,c
  3223  0004EA  0E01               	movlw	1
  3224  0004EC  6E0B               	movwf	displayStuff@row^0,c
  3225  0004EE  0E00               	movlw	0
  3226  0004F0  6E0E               	movwf	(displayStuff@column+1)^0,c
  3227  0004F2  0E00               	movlw	0
  3228  0004F4  6E0D               	movwf	displayStuff@column^0,c
  3229  0004F6  0E22               	movlw	low STR_20
  3230  0004F8  6E0F               	movwf	displayStuff@stuff^0,c
  3231  0004FA  0E7F               	movlw	high STR_20
  3232  0004FC  6E10               	movwf	(displayStuff@stuff+1)^0,c
  3233  0004FE  EC9A  F015         	call	_displayStuff	;wreg free
  3234  000502  EF63  F004         	goto	l136
  3235  000506                     l5119:
  3236                           
  3237                           ; BSR set to: 0
  3238                           ;main.c: 377:                         if (currentGas > Glim) {
  3239  000506  C0D2  F00A         	movff	_Glim,___xxtofl@val
  3240  00050A  C0D3  F00B         	movff	_Glim+1,___xxtofl@val+1
  3241  00050E  0E00               	movlw	0
  3242  000510  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3243  000512  0EFF               	movlw	-1
  3244  000514  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3245  000516  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3246  000518  0E01               	movlw	1
  3247  00051A  EC3B  F010         	call	___xxtofl
  3248  00051E  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3249  000522  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3250  000526  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3251  00052A  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3252  00052E  C092  F01C         	movff	displayMenu@currentGas,___flge@ff2
  3253  000532  C093  F01D         	movff	displayMenu@currentGas+1,___flge@ff2+1
  3254  000536  C094  F01E         	movff	displayMenu@currentGas+2,___flge@ff2+2
  3255  00053A  C095  F01F         	movff	displayMenu@currentGas+3,___flge@ff2+3
  3256  00053E  ECCA  F012         	call	___flge	;wreg free
  3257  000542  B0D8               	btfsc	status,0,c
  3258  000544  EFA6  F002         	goto	u5161
  3259  000548  EFA8  F002         	goto	u5160
  3260  00054C                     u5161:
  3261  00054C  EF30  F000         	goto	l5041
  3262  000550                     u5160:
  3263  000550                     
  3264                           ;main.c: 378:                             displayStuff(1, 0, "G_lim excedido!");
  3265  000550  0E00               	movlw	0
  3266  000552  6E0C               	movwf	(displayStuff@row+1)^0,c
  3267  000554  0E01               	movlw	1
  3268  000556  6E0B               	movwf	displayStuff@row^0,c
  3269  000558  0E00               	movlw	0
  3270  00055A  6E0E               	movwf	(displayStuff@column+1)^0,c
  3271  00055C  0E00               	movlw	0
  3272  00055E  6E0D               	movwf	displayStuff@column^0,c
  3273  000560  0E42               	movlw	low STR_21
  3274  000562  6E0F               	movwf	displayStuff@stuff^0,c
  3275  000564  0E7F               	movlw	high STR_21
  3276  000566  6E10               	movwf	(displayStuff@stuff+1)^0,c
  3277  000568  EC9A  F015         	call	_displayStuff	;wreg free
  3278  00056C  EF63  F004         	goto	l136
  3279  000570                     l5125:
  3280  000570  C050  F078         	movff	displayMenu@errorCycle,??_displayMenu
  3281  000574  C051  F079         	movff	displayMenu@errorCycle+1,??_displayMenu+1
  3282                           
  3283                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3284                           ; Switch size 1, requested type "simple"
  3285                           ; Number of cases is 1, Range of values is 0 to 0
  3286                           ; switch strategies available:
  3287                           ; Name         Instructions Cycles
  3288                           ; simple_byte            4     3 (average)
  3289                           ;	Chosen strategy is simple_byte
  3290  000578  0100               	movlb	0	; () banked
  3291  00057A  5179               	movf	(??_displayMenu+1)& (0+255),w,b
  3292  00057C  0A00               	xorlw	0	; case 0
  3293  00057E  B4D8               	btfsc	status,2,c
  3294  000580  EFC4  F002         	goto	l5409
  3295  000584  EF63  F004         	goto	l136
  3296  000588                     l5409:
  3297                           
  3298                           ; BSR set to: 0
  3299                           ; Switch size 1, requested type "simple"
  3300                           ; Number of cases is 3, Range of values is 0 to 2
  3301                           ; switch strategies available:
  3302                           ; Name         Instructions Cycles
  3303                           ; simple_byte           10     6 (average)
  3304                           ;	Chosen strategy is simple_byte
  3305  000588  5178               	movf	??_displayMenu& (0+255),w,b
  3306  00058A  0A00               	xorlw	0	; case 0
  3307  00058C  B4D8               	btfsc	status,2,c
  3308  00058E  EF19  F002         	goto	l5111
  3309  000592  0A01               	xorlw	1	; case 1
  3310  000594  B4D8               	btfsc	status,2,c
  3311  000596  EF4E  F002         	goto	l5115
  3312  00059A  0A03               	xorlw	3	; case 2
  3313  00059C  B4D8               	btfsc	status,2,c
  3314  00059E  EF83  F002         	goto	l5119
  3315  0005A2  EF63  F004         	goto	l136
  3316  0005A6                     l5127:
  3317                           
  3318                           ; BSR set to: 0
  3319                           ;main.c: 387:             displayStuff(0, 0, "Sistemas:");
  3320  0005A6  0E00               	movlw	0
  3321  0005A8  6E0C               	movwf	(displayStuff@row+1)^0,c
  3322  0005AA  0E00               	movlw	0
  3323  0005AC  6E0B               	movwf	displayStuff@row^0,c
  3324  0005AE  0E00               	movlw	0
  3325  0005B0  6E0E               	movwf	(displayStuff@column+1)^0,c
  3326  0005B2  0E00               	movlw	0
  3327  0005B4  6E0D               	movwf	displayStuff@column^0,c
  3328  0005B6  0ED0               	movlw	low STR_22
  3329  0005B8  6E0F               	movwf	displayStuff@stuff^0,c
  3330  0005BA  0E7F               	movlw	high STR_22
  3331  0005BC  6E10               	movwf	(displayStuff@stuff+1)^0,c
  3332  0005BE  EC9A  F015         	call	_displayStuff	;wreg free
  3333  0005C2                     
  3334                           ;main.c: 388:             if (currentTemp <= Tlim && currentHumid <= Hlim && currentGas 
      +                          <= Glim) {
  3335  0005C2  C0D6  F00A         	movff	_Tlim,___xxtofl@val
  3336  0005C6  C0D7  F00B         	movff	_Tlim+1,___xxtofl@val+1
  3337  0005CA  0E00               	movlw	0
  3338  0005CC  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3339  0005CE  0EFF               	movlw	-1
  3340  0005D0  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3341  0005D2  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3342  0005D4  0E01               	movlw	1
  3343  0005D6  EC3B  F010         	call	___xxtofl
  3344  0005DA  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3345  0005DE  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3346  0005E2  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3347  0005E6  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3348  0005EA  C08A  F01C         	movff	displayMenu@currentTemp,___flge@ff2
  3349  0005EE  C08B  F01D         	movff	displayMenu@currentTemp+1,___flge@ff2+1
  3350  0005F2  C08C  F01E         	movff	displayMenu@currentTemp+2,___flge@ff2+2
  3351  0005F6  C08D  F01F         	movff	displayMenu@currentTemp+3,___flge@ff2+3
  3352  0005FA  ECCA  F012         	call	___flge	;wreg free
  3353  0005FE  A0D8               	btfss	status,0,c
  3354  000600  EF04  F003         	goto	u5171
  3355  000604  EF06  F003         	goto	u5170
  3356  000608                     u5171:
  3357  000608  EF60  F003         	goto	l5137
  3358  00060C                     u5170:
  3359  00060C  C0D4  F00A         	movff	_Hlim,___xxtofl@val
  3360  000610  C0D5  F00B         	movff	_Hlim+1,___xxtofl@val+1
  3361  000614  0E00               	movlw	0
  3362  000616  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3363  000618  0EFF               	movlw	-1
  3364  00061A  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3365  00061C  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3366  00061E  0E01               	movlw	1
  3367  000620  EC3B  F010         	call	___xxtofl
  3368  000624  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3369  000628  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3370  00062C  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3371  000630  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3372  000634  C08E  F01C         	movff	displayMenu@currentHumid,___flge@ff2
  3373  000638  C08F  F01D         	movff	displayMenu@currentHumid+1,___flge@ff2+1
  3374  00063C  C090  F01E         	movff	displayMenu@currentHumid+2,___flge@ff2+2
  3375  000640  C091  F01F         	movff	displayMenu@currentHumid+3,___flge@ff2+3
  3376  000644  ECCA  F012         	call	___flge	;wreg free
  3377  000648  A0D8               	btfss	status,0,c
  3378  00064A  EF29  F003         	goto	u5181
  3379  00064E  EF2B  F003         	goto	u5180
  3380  000652                     u5181:
  3381  000652  EF60  F003         	goto	l5137
  3382  000656                     u5180:
  3383  000656  C0D2  F00A         	movff	_Glim,___xxtofl@val
  3384  00065A  C0D3  F00B         	movff	_Glim+1,___xxtofl@val+1
  3385  00065E  0E00               	movlw	0
  3386  000660  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3387  000662  0EFF               	movlw	-1
  3388  000664  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3389  000666  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3390  000668  0E01               	movlw	1
  3391  00066A  EC3B  F010         	call	___xxtofl
  3392  00066E  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3393  000672  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3394  000676  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3395  00067A  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3396  00067E  C092  F01C         	movff	displayMenu@currentGas,___flge@ff2
  3397  000682  C093  F01D         	movff	displayMenu@currentGas+1,___flge@ff2+1
  3398  000686  C094  F01E         	movff	displayMenu@currentGas+2,___flge@ff2+2
  3399  00068A  C095  F01F         	movff	displayMenu@currentGas+3,___flge@ff2+3
  3400  00068E  ECCA  F012         	call	___flge	;wreg free
  3401  000692  A0D8               	btfss	status,0,c
  3402  000694  EF4E  F003         	goto	u5191
  3403  000698  EF50  F003         	goto	u5190
  3404  00069C                     u5191:
  3405  00069C  EF60  F003         	goto	l5137
  3406  0006A0                     u5190:
  3407  0006A0                     
  3408                           ;main.c: 389:                 displayStuff(1, 0, "OK");
  3409  0006A0  0E00               	movlw	0
  3410  0006A2  6E0C               	movwf	(displayStuff@row+1)^0,c
  3411  0006A4  0E01               	movlw	1
  3412  0006A6  6E0B               	movwf	displayStuff@row^0,c
  3413  0006A8  0E00               	movlw	0
  3414  0006AA  6E0E               	movwf	(displayStuff@column+1)^0,c
  3415  0006AC  0E00               	movlw	0
  3416  0006AE  6E0D               	movwf	displayStuff@column^0,c
  3417  0006B0  0EF8               	movlw	low STR_18
  3418  0006B2  6E0F               	movwf	displayStuff@stuff^0,c
  3419  0006B4  0E7F               	movlw	high STR_18
  3420  0006B6  6E10               	movwf	(displayStuff@stuff+1)^0,c
  3421  0006B8  EC9A  F015         	call	_displayStuff	;wreg free
  3422                           
  3423                           ;main.c: 390:             } else {
  3424  0006BC  EF63  F004         	goto	l136
  3425  0006C0                     l5137:
  3426                           
  3427                           ;main.c: 391:                 static int systemCycle = 0;;main.c: 392:                 s
      +                          ystemCycle++;
  3428  0006C0  4A4E               	infsnz	displayMenu@systemCycle^0,f,c
  3429  0006C2  2A4F               	incf	(displayMenu@systemCycle+1)^0,f,c
  3430  0006C4                     
  3431                           ;main.c: 394:                 if (systemCycle > 3) systemCycle = 0;
  3432  0006C4  BE4F               	btfsc	(displayMenu@systemCycle+1)^0,7,c
  3433  0006C6  EF6E  F003         	goto	u5201
  3434  0006CA  504F               	movf	(displayMenu@systemCycle+1)^0,w,c
  3435  0006CC  E109               	bnz	u5200
  3436  0006CE  0E04               	movlw	4
  3437  0006D0  5C4E               	subwf	displayMenu@systemCycle^0,w,c
  3438  0006D2  A0D8               	btfss	status,0,c
  3439  0006D4  EF6E  F003         	goto	u5201
  3440  0006D8  EF70  F003         	goto	u5200
  3441  0006DC                     u5201:
  3442  0006DC  EF15  F004         	goto	l5157
  3443  0006E0                     u5200:
  3444  0006E0  0E00               	movlw	0
  3445  0006E2  6E4F               	movwf	(displayMenu@systemCycle+1)^0,c
  3446  0006E4  0E00               	movlw	0
  3447  0006E6  6E4E               	movwf	displayMenu@systemCycle^0,c
  3448  0006E8  EF15  F004         	goto	l5157
  3449  0006EC                     l5143:
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;main.c: 398:                         if (currentTemp > Tlim) {
  3453  0006EC  C0D6  F00A         	movff	_Tlim,___xxtofl@val
  3454  0006F0  C0D7  F00B         	movff	_Tlim+1,___xxtofl@val+1
  3455  0006F4  0E00               	movlw	0
  3456  0006F6  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3457  0006F8  0EFF               	movlw	-1
  3458  0006FA  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3459  0006FC  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3460  0006FE  0E01               	movlw	1
  3461  000700  EC3B  F010         	call	___xxtofl
  3462  000704  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3463  000708  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3464  00070C  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3465  000710  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3466  000714  C08A  F01C         	movff	displayMenu@currentTemp,___flge@ff2
  3467  000718  C08B  F01D         	movff	displayMenu@currentTemp+1,___flge@ff2+1
  3468  00071C  C08C  F01E         	movff	displayMenu@currentTemp+2,___flge@ff2+2
  3469  000720  C08D  F01F         	movff	displayMenu@currentTemp+3,___flge@ff2+3
  3470  000724  ECCA  F012         	call	___flge	;wreg free
  3471  000728  B0D8               	btfsc	status,0,c
  3472  00072A  EF99  F003         	goto	u5211
  3473  00072E  EF9B  F003         	goto	u5210
  3474  000732                     u5211:
  3475  000732  EF63  F004         	goto	l136
  3476  000736                     u5210:
  3477  000736                     
  3478                           ;main.c: 399:                             displayStuff(1, 0, "Resfriador ON");
  3479  000736  0E00               	movlw	0
  3480  000738  6E0C               	movwf	(displayStuff@row+1)^0,c
  3481  00073A  0E01               	movlw	1
  3482  00073C  6E0B               	movwf	displayStuff@row^0,c
  3483  00073E  0E00               	movlw	0
  3484  000740  6E0E               	movwf	(displayStuff@column+1)^0,c
  3485  000742  0E00               	movlw	0
  3486  000744  6E0D               	movwf	displayStuff@column^0,c
  3487  000746  0E61               	movlw	low STR_24
  3488  000748  6E0F               	movwf	displayStuff@stuff^0,c
  3489  00074A  0E7F               	movlw	high STR_24
  3490  00074C  6E10               	movwf	(displayStuff@stuff+1)^0,c
  3491  00074E  EC9A  F015         	call	_displayStuff	;wreg free
  3492  000752  EF63  F004         	goto	l136
  3493  000756                     l5147:
  3494                           
  3495                           ; BSR set to: 0
  3496                           ;main.c: 403:                         if (currentHumid > Hlim) {
  3497  000756  C0D4  F00A         	movff	_Hlim,___xxtofl@val
  3498  00075A  C0D5  F00B         	movff	_Hlim+1,___xxtofl@val+1
  3499  00075E  0E00               	movlw	0
  3500  000760  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3501  000762  0EFF               	movlw	-1
  3502  000764  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3503  000766  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3504  000768  0E01               	movlw	1
  3505  00076A  EC3B  F010         	call	___xxtofl
  3506  00076E  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3507  000772  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3508  000776  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3509  00077A  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3510  00077E  C08E  F01C         	movff	displayMenu@currentHumid,___flge@ff2
  3511  000782  C08F  F01D         	movff	displayMenu@currentHumid+1,___flge@ff2+1
  3512  000786  C090  F01E         	movff	displayMenu@currentHumid+2,___flge@ff2+2
  3513  00078A  C091  F01F         	movff	displayMenu@currentHumid+3,___flge@ff2+3
  3514  00078E  ECCA  F012         	call	___flge	;wreg free
  3515  000792  B0D8               	btfsc	status,0,c
  3516  000794  EFCE  F003         	goto	u5221
  3517  000798  EFD0  F003         	goto	u5220
  3518  00079C                     u5221:
  3519  00079C  EF63  F004         	goto	l136
  3520  0007A0                     u5220:
  3521  0007A0                     
  3522                           ;main.c: 404:                             displayStuff(1, 0, "Humidificador ON");
  3523  0007A0  0E00               	movlw	0
  3524  0007A2  6E0C               	movwf	(displayStuff@row+1)^0,c
  3525  0007A4  0E01               	movlw	1
  3526  0007A6  6E0B               	movwf	displayStuff@row^0,c
  3527  0007A8  0E00               	movlw	0
  3528  0007AA  6E0E               	movwf	(displayStuff@column+1)^0,c
  3529  0007AC  0E00               	movlw	0
  3530  0007AE  6E0D               	movwf	displayStuff@column^0,c
  3531  0007B0  0E11               	movlw	low STR_25
  3532  0007B2  6E0F               	movwf	displayStuff@stuff^0,c
  3533  0007B4  0E7F               	movlw	high STR_25
  3534  0007B6  6E10               	movwf	(displayStuff@stuff+1)^0,c
  3535  0007B8  EC9A  F015         	call	_displayStuff	;wreg free
  3536  0007BC  EF63  F004         	goto	l136
  3537  0007C0                     l5151:
  3538                           
  3539                           ; BSR set to: 0
  3540                           ;main.c: 408:                         if (currentGas > Glim) {
  3541  0007C0  C0D2  F00A         	movff	_Glim,___xxtofl@val
  3542  0007C4  C0D3  F00B         	movff	_Glim+1,___xxtofl@val+1
  3543  0007C8  0E00               	movlw	0
  3544  0007CA  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3545  0007CC  0EFF               	movlw	-1
  3546  0007CE  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3547  0007D0  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3548  0007D2  0E01               	movlw	1
  3549  0007D4  EC3B  F010         	call	___xxtofl
  3550  0007D8  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3551  0007DC  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3552  0007E0  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3553  0007E4  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3554  0007E8  C092  F01C         	movff	displayMenu@currentGas,___flge@ff2
  3555  0007EC  C093  F01D         	movff	displayMenu@currentGas+1,___flge@ff2+1
  3556  0007F0  C094  F01E         	movff	displayMenu@currentGas+2,___flge@ff2+2
  3557  0007F4  C095  F01F         	movff	displayMenu@currentGas+3,___flge@ff2+3
  3558  0007F8  ECCA  F012         	call	___flge	;wreg free
  3559  0007FC  B0D8               	btfsc	status,0,c
  3560  0007FE  EF03  F004         	goto	u5231
  3561  000802  EF05  F004         	goto	u5230
  3562  000806                     u5231:
  3563  000806  EF63  F004         	goto	l136
  3564  00080A                     u5230:
  3565  00080A                     
  3566                           ;main.c: 409:                             displayStuff(1, 0, "Exaustor ON");
  3567  00080A  0E00               	movlw	0
  3568  00080C  6E0C               	movwf	(displayStuff@row+1)^0,c
  3569  00080E  0E01               	movlw	1
  3570  000810  6E0B               	movwf	displayStuff@row^0,c
  3571  000812  0E00               	movlw	0
  3572  000814  6E0E               	movwf	(displayStuff@column+1)^0,c
  3573  000816  0E00               	movlw	0
  3574  000818  6E0D               	movwf	displayStuff@column^0,c
  3575  00081A  0EAE               	movlw	low STR_26
  3576  00081C  6E0F               	movwf	displayStuff@stuff^0,c
  3577  00081E  0E7F               	movlw	high STR_26
  3578  000820  6E10               	movwf	(displayStuff@stuff+1)^0,c
  3579  000822  EC9A  F015         	call	_displayStuff	;wreg free
  3580  000826  EF63  F004         	goto	l136
  3581  00082A                     l5157:
  3582  00082A  C04E  F078         	movff	displayMenu@systemCycle,??_displayMenu
  3583  00082E  C04F  F079         	movff	displayMenu@systemCycle+1,??_displayMenu+1
  3584                           
  3585                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3586                           ; Switch size 1, requested type "simple"
  3587                           ; Number of cases is 1, Range of values is 0 to 0
  3588                           ; switch strategies available:
  3589                           ; Name         Instructions Cycles
  3590                           ; simple_byte            4     3 (average)
  3591                           ;	Chosen strategy is simple_byte
  3592  000832  0100               	movlb	0	; () banked
  3593  000834  5179               	movf	(??_displayMenu+1)& (0+255),w,b
  3594  000836  0A00               	xorlw	0	; case 0
  3595  000838  B4D8               	btfsc	status,2,c
  3596  00083A  EF21  F004         	goto	l5411
  3597  00083E  EF63  F004         	goto	l136
  3598  000842                     l5411:
  3599                           
  3600                           ; BSR set to: 0
  3601                           ; Switch size 1, requested type "simple"
  3602                           ; Number of cases is 3, Range of values is 0 to 2
  3603                           ; switch strategies available:
  3604                           ; Name         Instructions Cycles
  3605                           ; simple_byte           10     6 (average)
  3606                           ;	Chosen strategy is simple_byte
  3607  000842  5178               	movf	??_displayMenu& (0+255),w,b
  3608  000844  0A00               	xorlw	0	; case 0
  3609  000846  B4D8               	btfsc	status,2,c
  3610  000848  EF76  F003         	goto	l5143
  3611  00084C  0A01               	xorlw	1	; case 1
  3612  00084E  B4D8               	btfsc	status,2,c
  3613  000850  EFAB  F003         	goto	l5147
  3614  000854  0A03               	xorlw	3	; case 2
  3615  000856  B4D8               	btfsc	status,2,c
  3616  000858  EFE0  F003         	goto	l5151
  3617  00085C  EF63  F004         	goto	l136
  3618  000860                     l5159:
  3619                           
  3620                           ; BSR set to: 0
  3621                           ;main.c: 418:             displayStuff(0, 0, "Invalid Menu");
  3622  000860  0E00               	movlw	0
  3623  000862  6E0C               	movwf	(displayStuff@row+1)^0,c
  3624  000864  0E00               	movlw	0
  3625  000866  6E0B               	movwf	displayStuff@row^0,c
  3626  000868  0E00               	movlw	0
  3627  00086A  6E0E               	movwf	(displayStuff@column+1)^0,c
  3628  00086C  0E00               	movlw	0
  3629  00086E  6E0D               	movwf	displayStuff@column^0,c
  3630  000870  0E89               	movlw	low STR_27
  3631  000872  6E0F               	movwf	displayStuff@stuff^0,c
  3632  000874  0E7F               	movlw	high STR_27
  3633  000876  6E10               	movwf	(displayStuff@stuff+1)^0,c
  3634  000878  EC9A  F015         	call	_displayStuff	;wreg free
  3635                           
  3636                           ;main.c: 419:             break;
  3637  00087C  EF63  F004         	goto	l136
  3638  000880                     l5163:
  3639  000880  C076  F078         	movff	displayMenu@menuIndex,??_displayMenu
  3640  000884  C077  F079         	movff	displayMenu@menuIndex+1,??_displayMenu+1
  3641                           
  3642                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3643                           ; Switch size 1, requested type "simple"
  3644                           ; Number of cases is 1, Range of values is 0 to 0
  3645                           ; switch strategies available:
  3646                           ; Name         Instructions Cycles
  3647                           ; simple_byte            4     3 (average)
  3648                           ;	Chosen strategy is simple_byte
  3649  000888  0100               	movlb	0	; () banked
  3650  00088A  5179               	movf	(??_displayMenu+1)& (0+255),w,b
  3651  00088C  0A00               	xorlw	0	; case 0
  3652  00088E  B4D8               	btfsc	status,2,c
  3653  000890  EF4C  F004         	goto	l5413
  3654  000894  EF30  F004         	goto	l5159
  3655  000898                     l5413:
  3656                           
  3657                           ; BSR set to: 0
  3658                           ; Switch size 1, requested type "simple"
  3659                           ; Number of cases is 5, Range of values is 0 to 4
  3660                           ; switch strategies available:
  3661                           ; Name         Instructions Cycles
  3662                           ; simple_byte           16     9 (average)
  3663                           ;	Chosen strategy is simple_byte
  3664  000898  5178               	movf	??_displayMenu& (0+255),w,b
  3665  00089A  0A00               	xorlw	0	; case 0
  3666  00089C  B4D8               	btfsc	status,2,c
  3667  00089E  EF66  F000         	goto	l5053
  3668  0008A2  0A01               	xorlw	1	; case 1
  3669  0008A4  B4D8               	btfsc	status,2,c
  3670  0008A6  EFCA  F000         	goto	l5067
  3671  0008AA  0A03               	xorlw	3	; case 2
  3672  0008AC  B4D8               	btfsc	status,2,c
  3673  0008AE  EF20  F001         	goto	l5081
  3674  0008B2  0A01               	xorlw	1	; case 3
  3675  0008B4  B4D8               	btfsc	status,2,c
  3676  0008B6  EF76  F001         	goto	l5095
  3677  0008BA  0A07               	xorlw	7	; case 4
  3678  0008BC  B4D8               	btfsc	status,2,c
  3679  0008BE  EFD3  F002         	goto	l5127
  3680  0008C2  EF30  F004         	goto	l5159
  3681  0008C6                     l136:
  3682  0008C6  0012               	return		;funcret
  3683  0008C8                     __end_of_displayMenu:
  3684                           	callstack 0
  3685                           
  3686 ;; *************** function _tempRead *****************
  3687 ;; Defined at:
  3688 ;;		line 647 in file "main.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;		None
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;  TempC           4    4[BANK0 ] float 
  3693 ;;  rawAnalog       2   12[BANK0 ] unsigned int 
  3694 ;; Return value:  Size  Location     Type
  3695 ;;                  4    0[BANK0 ] float 
  3696 ;; Registers used:
  3697 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3698 ;; Tracked objects:
  3699 ;;		On entry : 0/0
  3700 ;;		On exit  : 0/0
  3701 ;;		Unchanged: 0/0
  3702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3703 ;;      Params:         0       4       0       0       0       0       0       0       0
  3704 ;;      Locals:         0      10       0       0       0       0       0       0       0
  3705 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3706 ;;      Totals:         0      14       0       0       0       0       0       0       0
  3707 ;;Total ram usage:       14 bytes
  3708 ;; Hardware stack levels used: 1
  3709 ;; Hardware stack levels required when called: 3
  3710 ;; This function calls:
  3711 ;;		___fldiv
  3712 ;;		___flmul
  3713 ;;		___xxtofl
  3714 ;;		_readAnalog
  3715 ;; This function is called by:
  3716 ;;		_main
  3717 ;;		_displayMenu
  3718 ;; This function uses a non-reentrant model
  3719 ;;
  3720                           
  3721                           	psect	text6
  3722  00284A                     __ptext6:
  3723                           	callstack 0
  3724  00284A                     _tempRead:
  3725                           	callstack 27
  3726  00284A                     
  3727                           ;main.c: 648:     unsigned int rawAnalog = readAnalog(0);
  3728  00284A  0E00               	movlw	0
  3729  00284C  EC71  F016         	call	_readAnalog
  3730  002850  C00A  F06C         	movff	?_readAnalog,tempRead@rawAnalog
  3731  002854  C00B  F06D         	movff	?_readAnalog+1,tempRead@rawAnalog+1
  3732  002858                     
  3733                           ;main.c: 649:     float TempC = ((rawAnalog * 5.0) / 1023.0) / 0.01;
  3734  002858  0E00               	movlw	0
  3735  00285A  6E35               	movwf	___fldiv@a^0,c
  3736  00285C  0EC0               	movlw	192
  3737  00285E  6E36               	movwf	(___fldiv@a+1)^0,c
  3738  002860  0E7F               	movlw	127
  3739  002862  6E37               	movwf	(___fldiv@a+2)^0,c
  3740  002864  0E44               	movlw	68
  3741  002866  6E38               	movwf	(___fldiv@a+3)^0,c
  3742  002868  0E00               	movlw	0
  3743  00286A  6E1C               	movwf	___flmul@a^0,c
  3744  00286C  0E00               	movlw	0
  3745  00286E  6E1D               	movwf	(___flmul@a+1)^0,c
  3746  002870  0EA0               	movlw	160
  3747  002872  6E1E               	movwf	(___flmul@a+2)^0,c
  3748  002874  0E40               	movlw	64
  3749  002876  6E1F               	movwf	(___flmul@a+3)^0,c
  3750  002878  C06C  F00A         	movff	tempRead@rawAnalog,___xxtofl@val
  3751  00287C  C06D  F00B         	movff	tempRead@rawAnalog+1,___xxtofl@val+1
  3752  002880  6A0C               	clrf	(___xxtofl@val+2)^0,c
  3753  002882  6A0D               	clrf	(___xxtofl@val+3)^0,c
  3754  002884  0E00               	movlw	0
  3755  002886  EC3B  F010         	call	___xxtofl
  3756  00288A  C00A  F018         	movff	?___xxtofl,___flmul@b
  3757  00288E  C00B  F019         	movff	?___xxtofl+1,___flmul@b+1
  3758  002892  C00C  F01A         	movff	?___xxtofl+2,___flmul@b+2
  3759  002896  C00D  F01B         	movff	?___xxtofl+3,___flmul@b+3
  3760  00289A  EC05  F00A         	call	___flmul	;wreg free
  3761  00289E  C018  F031         	movff	?___flmul,___fldiv@b
  3762  0028A2  C019  F032         	movff	?___flmul+1,___fldiv@b+1
  3763  0028A6  C01A  F033         	movff	?___flmul+2,___fldiv@b+2
  3764  0028AA  C01B  F034         	movff	?___flmul+3,___fldiv@b+3
  3765  0028AE  EC1A  F00C         	call	___fldiv	;wreg free
  3766  0028B2  C031  F068         	movff	?___fldiv,_tempRead$1533
  3767  0028B6  C032  F069         	movff	?___fldiv+1,_tempRead$1533+1
  3768  0028BA  C033  F06A         	movff	?___fldiv+2,_tempRead$1533+2
  3769  0028BE  C034  F06B         	movff	?___fldiv+3,_tempRead$1533+3
  3770  0028C2                     
  3771                           ;main.c: 649:     float TempC = ((rawAnalog * 5.0) / 1023.0) / 0.01;
  3772  0028C2  C068  F031         	movff	_tempRead$1533,___fldiv@b
  3773  0028C6  C069  F032         	movff	_tempRead$1533+1,___fldiv@b+1
  3774  0028CA  C06A  F033         	movff	_tempRead$1533+2,___fldiv@b+2
  3775  0028CE  C06B  F034         	movff	_tempRead$1533+3,___fldiv@b+3
  3776  0028D2  0E0A               	movlw	10
  3777  0028D4  6E35               	movwf	___fldiv@a^0,c
  3778  0028D6  0ED7               	movlw	215
  3779  0028D8  6E36               	movwf	(___fldiv@a+1)^0,c
  3780  0028DA  0E23               	movlw	35
  3781  0028DC  6E37               	movwf	(___fldiv@a+2)^0,c
  3782  0028DE  0E3C               	movlw	60
  3783  0028E0  6E38               	movwf	(___fldiv@a+3)^0,c
  3784  0028E2  EC1A  F00C         	call	___fldiv	;wreg free
  3785  0028E6  C031  F064         	movff	?___fldiv,tempRead@TempC
  3786  0028EA  C032  F065         	movff	?___fldiv+1,tempRead@TempC+1
  3787  0028EE  C033  F066         	movff	?___fldiv+2,tempRead@TempC+2
  3788  0028F2  C034  F067         	movff	?___fldiv+3,tempRead@TempC+3
  3789  0028F6                     
  3790                           ;main.c: 651:     return TempC;
  3791  0028F6  C064  F060         	movff	tempRead@TempC,?_tempRead
  3792  0028FA  C065  F061         	movff	tempRead@TempC+1,?_tempRead+1
  3793  0028FE  C066  F062         	movff	tempRead@TempC+2,?_tempRead+2
  3794  002902  C067  F063         	movff	tempRead@TempC+3,?_tempRead+3
  3795  002906  0012               	return		;funcret
  3796  002908                     __end_of_tempRead:
  3797                           	callstack 0
  3798                           
  3799 ;; *************** function _millis *****************
  3800 ;; Defined at:
  3801 ;;		line 478 in file "main.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;		None
  3804 ;; Auto vars:     Size  Location     Type
  3805 ;;  ms              4   13[COMRAM] unsigned long 
  3806 ;; Return value:  Size  Location     Type
  3807 ;;                  4    9[COMRAM] unsigned long 
  3808 ;; Registers used:
  3809 ;;		None
  3810 ;; Tracked objects:
  3811 ;;		On entry : 0/0
  3812 ;;		On exit  : 0/0
  3813 ;;		Unchanged: 0/0
  3814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3815 ;;      Params:         4       0       0       0       0       0       0       0       0
  3816 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3817 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3818 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3819 ;;Total ram usage:        8 bytes
  3820 ;; Hardware stack levels used: 1
  3821 ;; Hardware stack levels required when called: 2
  3822 ;; This function calls:
  3823 ;;		Nothing
  3824 ;; This function is called by:
  3825 ;;		_main
  3826 ;;		_displayMenu
  3827 ;;		_readKey
  3828 ;; This function uses a non-reentrant model
  3829 ;;
  3830                           
  3831                           	psect	text7
  3832  002F5C                     __ptext7:
  3833                           	callstack 0
  3834  002F5C                     _millis:
  3835                           	callstack 26
  3836  002F5C                     
  3837                           ;main.c: 479:     unsigned long ms;;main.c: 481:     INTCONbits.GIE = 0;
  3838  002F5C  9EF2               	bcf	242,7,c	;volatile
  3839                           
  3840                           ;main.c: 482:     ms = milliseconds;
  3841  002F5E  C04A  F00E         	movff	_milliseconds,millis@ms	;volatile
  3842  002F62  C04B  F00F         	movff	_milliseconds+1,millis@ms+1	;volatile
  3843  002F66  C04C  F010         	movff	_milliseconds+2,millis@ms+2	;volatile
  3844  002F6A  C04D  F011         	movff	_milliseconds+3,millis@ms+3	;volatile
  3845                           
  3846                           ;main.c: 483:     INTCONbits.GIE = 1;
  3847  002F6E  8EF2               	bsf	242,7,c	;volatile
  3848                           
  3849                           ;main.c: 485:     return ms;
  3850  002F70  C00E  F00A         	movff	millis@ms,?_millis
  3851  002F74  C00F  F00B         	movff	millis@ms+1,?_millis+1
  3852  002F78  C010  F00C         	movff	millis@ms+2,?_millis+2
  3853  002F7C  C011  F00D         	movff	millis@ms+3,?_millis+3
  3854  002F80  0012               	return		;funcret
  3855  002F82                     __end_of_millis:
  3856                           	callstack 0
  3857                           
  3858 ;; *************** function _itoa *****************
  3859 ;; Defined at:
  3860 ;;		line 722 in file "main.c"
  3861 ;; Parameters:    Size  Location     Type
  3862 ;;  value           2   17[COMRAM] int 
  3863 ;;  ptr             2   19[COMRAM] PTR unsigned char 
  3864 ;;		 -> displayMenu@valueStr(10), 
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;  temp            2   23[COMRAM] int 
  3867 ;;  count           2   21[COMRAM] int 
  3868 ;;  start           2    0        PTR unsigned char 
  3869 ;;		 -> displayMenu@valueStr(10), 
  3870 ;; Return value:  Size  Location     Type
  3871 ;;                  2   17[COMRAM] int 
  3872 ;; Registers used:
  3873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3874 ;; Tracked objects:
  3875 ;;		On entry : 0/0
  3876 ;;		On exit  : 0/0
  3877 ;;		Unchanged: 0/0
  3878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3879 ;;      Params:         4       0       0       0       0       0       0       0       0
  3880 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3881 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3882 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3883 ;;Total ram usage:        8 bytes
  3884 ;; Hardware stack levels used: 1
  3885 ;; Hardware stack levels required when called: 3
  3886 ;; This function calls:
  3887 ;;		___awdiv
  3888 ;;		___awmod
  3889 ;; This function is called by:
  3890 ;;		_displayMenu
  3891 ;; This function uses a non-reentrant model
  3892 ;;
  3893                           
  3894                           	psect	text8
  3895  00222A                     __ptext8:
  3896                           	callstack 0
  3897  00222A                     _itoa:
  3898                           	callstack 26
  3899  00222A                     
  3900                           ;main.c: 723:     int count = 0, temp;
  3901  00222A  0E00               	movlw	0
  3902  00222C  6E17               	movwf	(itoa@count+1)^0,c
  3903  00222E  0E00               	movlw	0
  3904  002230  6E16               	movwf	itoa@count^0,c
  3905  002232                     
  3906                           ;main.c: 726:     if (ptr == ((void*)0))
  3907  002232  5014               	movf	itoa@ptr^0,w,c
  3908  002234  1015               	iorwf	(itoa@ptr+1)^0,w,c
  3909  002236  A4D8               	btfss	status,2,c
  3910  002238  EF20  F011         	goto	u5041
  3911  00223C  EF22  F011         	goto	u5040
  3912  002240                     u5041:
  3913  002240  EF24  F011         	goto	l4999
  3914  002244                     u5040:
  3915  002244  EFB4  F011         	goto	l271
  3916  002248                     l4999:
  3917                           
  3918                           ;main.c: 729:     if (value == 0) {
  3919  002248  5012               	movf	itoa@value^0,w,c
  3920  00224A  1013               	iorwf	(itoa@value+1)^0,w,c
  3921  00224C  A4D8               	btfss	status,2,c
  3922  00224E  EF2B  F011         	goto	u5051
  3923  002252  EF2D  F011         	goto	u5050
  3924  002256                     u5051:
  3925  002256  EF3D  F011         	goto	l5007
  3926  00225A                     u5050:
  3927  00225A                     
  3928                           ;main.c: 730:         *ptr = '0';
  3929  00225A  C014  FFD9         	movff	itoa@ptr,fsr2l
  3930  00225E  C015  FFDA         	movff	itoa@ptr+1,fsr2h
  3931  002262  0E30               	movlw	48
  3932  002264  6EDF               	movwf	indf2,c
  3933  002266                     
  3934                           ;main.c: 731:         ptr[1] = '\0';
  3935  002266  EE20 F001          	lfsr	2,1
  3936  00226A  5014               	movf	itoa@ptr^0,w,c
  3937  00226C  26D9               	addwf	fsr2l,f,c
  3938  00226E  5015               	movf	(itoa@ptr+1)^0,w,c
  3939  002270  22DA               	addwfc	fsr2h,f,c
  3940  002272  0E00               	movlw	0
  3941  002274  6EDF               	movwf	indf2,c
  3942  002276  EFB4  F011         	goto	l271
  3943  00227A                     l5007:
  3944                           
  3945                           ;main.c: 735:     if (value < 0) {
  3946  00227A  BE13               	btfsc	(itoa@value+1)^0,7,c
  3947  00227C  EF44  F011         	goto	u5060
  3948  002280  EF42  F011         	goto	u5061
  3949  002284                     u5061:
  3950  002284  EF52  F011         	goto	l5019
  3951  002288                     u5060:
  3952  002288                     
  3953                           ;main.c: 736:         value = -value;
  3954  002288  6C12               	negf	itoa@value^0,c
  3955  00228A  1E13               	comf	(itoa@value+1)^0,f,c
  3956  00228C  B0D8               	btfsc	status,0,c
  3957  00228E  2A13               	incf	(itoa@value+1)^0,f,c
  3958  002290                     
  3959                           ;main.c: 737:         *ptr++ = '-';
  3960  002290  C014  FFD9         	movff	itoa@ptr,fsr2l
  3961  002294  C015  FFDA         	movff	itoa@ptr+1,fsr2h
  3962  002298  0E2D               	movlw	45
  3963  00229A  6EDF               	movwf	indf2,c
  3964  00229C  4A14               	infsnz	itoa@ptr^0,f,c
  3965  00229E  2A15               	incf	(itoa@ptr+1)^0,f,c
  3966  0022A0                     
  3967                           ;main.c: 738:         count++;
  3968  0022A0  4A16               	infsnz	itoa@count^0,f,c
  3969  0022A2  2A17               	incf	(itoa@count+1)^0,f,c
  3970  0022A4                     l5019:
  3971                           
  3972                           ;main.c: 742:     temp = value;
  3973  0022A4  C012  F018         	movff	itoa@value,itoa@temp
  3974  0022A8  C013  F019         	movff	itoa@value+1,itoa@temp+1
  3975                           
  3976                           ;main.c: 743:     while (temp > 0) {
  3977  0022AC  EF68  F011         	goto	l5025
  3978  0022B0                     l5021:
  3979                           
  3980                           ;main.c: 744:         temp /= 10;
  3981  0022B0  C018  F00A         	movff	itoa@temp,___awdiv@dividend
  3982  0022B4  C019  F00B         	movff	itoa@temp+1,___awdiv@dividend+1
  3983  0022B8  0E00               	movlw	0
  3984  0022BA  6E0D               	movwf	(___awdiv@divisor+1)^0,c
  3985  0022BC  0E0A               	movlw	10
  3986  0022BE  6E0C               	movwf	___awdiv@divisor^0,c
  3987  0022C0  ECC3  F013         	call	___awdiv	;wreg free
  3988  0022C4  C00A  F018         	movff	?___awdiv,itoa@temp
  3989  0022C8  C00B  F019         	movff	?___awdiv+1,itoa@temp+1
  3990  0022CC                     
  3991                           ;main.c: 745:         count++;
  3992  0022CC  4A16               	infsnz	itoa@count^0,f,c
  3993  0022CE  2A17               	incf	(itoa@count+1)^0,f,c
  3994  0022D0                     l5025:
  3995                           
  3996                           ;main.c: 743:     while (temp > 0) {
  3997  0022D0  BE19               	btfsc	(itoa@temp+1)^0,7,c
  3998  0022D2  EF75  F011         	goto	u5070
  3999  0022D6  5019               	movf	(itoa@temp+1)^0,w,c
  4000  0022D8  E106               	bnz	u5071
  4001  0022DA  0418               	decf	itoa@temp^0,w,c
  4002  0022DC  B0D8               	btfsc	status,0,c
  4003  0022DE  EF73  F011         	goto	u5071
  4004  0022E2  EF75  F011         	goto	u5070
  4005  0022E6                     u5071:
  4006  0022E6  EF58  F011         	goto	l5021
  4007  0022EA                     u5070:
  4008  0022EA                     
  4009                           ;main.c: 748:     ptr[count] = '\0';
  4010  0022EA  5016               	movf	itoa@count^0,w,c
  4011  0022EC  2414               	addwf	itoa@ptr^0,w,c
  4012  0022EE  6ED9               	movwf	fsr2l,c
  4013  0022F0  5017               	movf	(itoa@count+1)^0,w,c
  4014  0022F2  2015               	addwfc	(itoa@ptr+1)^0,w,c
  4015  0022F4  6EDA               	movwf	fsr2h,c
  4016  0022F6  0E00               	movlw	0
  4017  0022F8  6EDF               	movwf	indf2,c
  4018  0022FA                     
  4019                           ;main.c: 750:     temp = value;
  4020  0022FA  C012  F018         	movff	itoa@value,itoa@temp
  4021  0022FE  C013  F019         	movff	itoa@value+1,itoa@temp+1
  4022                           
  4023                           ;main.c: 751:     while (temp > 0) {
  4024  002302  EFA7  F011         	goto	l5035
  4025  002306                     l5031:
  4026                           
  4027                           ;main.c: 752:         ptr[--count] = temp % 10 + '0';
  4028  002306  0616               	decf	itoa@count^0,f,c
  4029  002308  A0D8               	btfss	status,0,c
  4030  00230A  0617               	decf	(itoa@count+1)^0,f,c
  4031  00230C  5016               	movf	itoa@count^0,w,c
  4032  00230E  2414               	addwf	itoa@ptr^0,w,c
  4033  002310  6ED9               	movwf	fsr2l,c
  4034  002312  5017               	movf	(itoa@count+1)^0,w,c
  4035  002314  2015               	addwfc	(itoa@ptr+1)^0,w,c
  4036  002316  6EDA               	movwf	fsr2h,c
  4037  002318  C018  F00A         	movff	itoa@temp,___awmod@dividend
  4038  00231C  C019  F00B         	movff	itoa@temp+1,___awmod@dividend+1
  4039  002320  0E00               	movlw	0
  4040  002322  6E0D               	movwf	(___awmod@divisor+1)^0,c
  4041  002324  0E0A               	movlw	10
  4042  002326  6E0C               	movwf	___awmod@divisor^0,c
  4043  002328  EC42  F015         	call	___awmod	;wreg free
  4044  00232C  500A               	movf	?___awmod^0,w,c
  4045  00232E  0F30               	addlw	48
  4046  002330  6EDF               	movwf	indf2,c
  4047  002332                     
  4048                           ;main.c: 753:         temp /= 10;
  4049  002332  C018  F00A         	movff	itoa@temp,___awdiv@dividend
  4050  002336  C019  F00B         	movff	itoa@temp+1,___awdiv@dividend+1
  4051  00233A  0E00               	movlw	0
  4052  00233C  6E0D               	movwf	(___awdiv@divisor+1)^0,c
  4053  00233E  0E0A               	movlw	10
  4054  002340  6E0C               	movwf	___awdiv@divisor^0,c
  4055  002342  ECC3  F013         	call	___awdiv	;wreg free
  4056  002346  C00A  F018         	movff	?___awdiv,itoa@temp
  4057  00234A  C00B  F019         	movff	?___awdiv+1,itoa@temp+1
  4058  00234E                     l5035:
  4059                           
  4060                           ;main.c: 751:     while (temp > 0) {
  4061  00234E  BE19               	btfsc	(itoa@temp+1)^0,7,c
  4062  002350  EFB4  F011         	goto	u5080
  4063  002354  5019               	movf	(itoa@temp+1)^0,w,c
  4064  002356  E106               	bnz	u5081
  4065  002358  0418               	decf	itoa@temp^0,w,c
  4066  00235A  B0D8               	btfsc	status,0,c
  4067  00235C  EFB2  F011         	goto	u5081
  4068  002360  EFB4  F011         	goto	u5080
  4069  002364                     u5081:
  4070  002364  EF83  F011         	goto	l5031
  4071  002368                     u5080:
  4072  002368                     l271:
  4073  002368  0012               	return		;funcret
  4074  00236A                     __end_of_itoa:
  4075                           	callstack 0
  4076                           
  4077 ;; *************** function _humidade *****************
  4078 ;; Defined at:
  4079 ;;		line 657 in file "main.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;		None
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;  Humid           4    4[BANK0 ] float 
  4084 ;;  rawAnalog       2   12[BANK0 ] unsigned int 
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  4    0[BANK0 ] float 
  4087 ;; Registers used:
  4088 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4094 ;;      Params:         0       4       0       0       0       0       0       0       0
  4095 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4096 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4097 ;;      Totals:         0      14       0       0       0       0       0       0       0
  4098 ;;Total ram usage:       14 bytes
  4099 ;; Hardware stack levels used: 1
  4100 ;; Hardware stack levels required when called: 3
  4101 ;; This function calls:
  4102 ;;		___fldiv
  4103 ;;		___flmul
  4104 ;;		___xxtofl
  4105 ;;		_readAnalog
  4106 ;; This function is called by:
  4107 ;;		_main
  4108 ;;		_displayMenu
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112                           	psect	text9
  4113  002908                     __ptext9:
  4114                           	callstack 0
  4115  002908                     _humidade:
  4116                           	callstack 27
  4117  002908                     
  4118                           ;main.c: 658:     unsigned int rawAnalog = readAnalog(3);
  4119  002908  0E03               	movlw	3
  4120  00290A  EC71  F016         	call	_readAnalog
  4121  00290E  C00A  F06C         	movff	?_readAnalog,humidade@rawAnalog
  4122  002912  C00B  F06D         	movff	?_readAnalog+1,humidade@rawAnalog+1
  4123  002916                     
  4124                           ;main.c: 659:     float Humid = ((rawAnalog * 5.0) / 1023.0) * 20;
  4125  002916  0E00               	movlw	0
  4126  002918  6E35               	movwf	___fldiv@a^0,c
  4127  00291A  0EC0               	movlw	192
  4128  00291C  6E36               	movwf	(___fldiv@a+1)^0,c
  4129  00291E  0E7F               	movlw	127
  4130  002920  6E37               	movwf	(___fldiv@a+2)^0,c
  4131  002922  0E44               	movlw	68
  4132  002924  6E38               	movwf	(___fldiv@a+3)^0,c
  4133  002926  0E00               	movlw	0
  4134  002928  6E1C               	movwf	___flmul@a^0,c
  4135  00292A  0E00               	movlw	0
  4136  00292C  6E1D               	movwf	(___flmul@a+1)^0,c
  4137  00292E  0EA0               	movlw	160
  4138  002930  6E1E               	movwf	(___flmul@a+2)^0,c
  4139  002932  0E40               	movlw	64
  4140  002934  6E1F               	movwf	(___flmul@a+3)^0,c
  4141  002936  C06C  F00A         	movff	humidade@rawAnalog,___xxtofl@val
  4142  00293A  C06D  F00B         	movff	humidade@rawAnalog+1,___xxtofl@val+1
  4143  00293E  6A0C               	clrf	(___xxtofl@val+2)^0,c
  4144  002940  6A0D               	clrf	(___xxtofl@val+3)^0,c
  4145  002942  0E00               	movlw	0
  4146  002944  EC3B  F010         	call	___xxtofl
  4147  002948  C00A  F018         	movff	?___xxtofl,___flmul@b
  4148  00294C  C00B  F019         	movff	?___xxtofl+1,___flmul@b+1
  4149  002950  C00C  F01A         	movff	?___xxtofl+2,___flmul@b+2
  4150  002954  C00D  F01B         	movff	?___xxtofl+3,___flmul@b+3
  4151  002958  EC05  F00A         	call	___flmul	;wreg free
  4152  00295C  C018  F031         	movff	?___flmul,___fldiv@b
  4153  002960  C019  F032         	movff	?___flmul+1,___fldiv@b+1
  4154  002964  C01A  F033         	movff	?___flmul+2,___fldiv@b+2
  4155  002968  C01B  F034         	movff	?___flmul+3,___fldiv@b+3
  4156  00296C  EC1A  F00C         	call	___fldiv	;wreg free
  4157  002970  C031  F068         	movff	?___fldiv,_humidade$1534
  4158  002974  C032  F069         	movff	?___fldiv+1,_humidade$1534+1
  4159  002978  C033  F06A         	movff	?___fldiv+2,_humidade$1534+2
  4160  00297C  C034  F06B         	movff	?___fldiv+3,_humidade$1534+3
  4161  002980                     
  4162                           ;main.c: 659:     float Humid = ((rawAnalog * 5.0) / 1023.0) * 20;
  4163  002980  C068  F018         	movff	_humidade$1534,___flmul@b
  4164  002984  C069  F019         	movff	_humidade$1534+1,___flmul@b+1
  4165  002988  C06A  F01A         	movff	_humidade$1534+2,___flmul@b+2
  4166  00298C  C06B  F01B         	movff	_humidade$1534+3,___flmul@b+3
  4167  002990  0E00               	movlw	0
  4168  002992  6E1C               	movwf	___flmul@a^0,c
  4169  002994  0E00               	movlw	0
  4170  002996  6E1D               	movwf	(___flmul@a+1)^0,c
  4171  002998  0EA0               	movlw	160
  4172  00299A  6E1E               	movwf	(___flmul@a+2)^0,c
  4173  00299C  0E41               	movlw	65
  4174  00299E  6E1F               	movwf	(___flmul@a+3)^0,c
  4175  0029A0  EC05  F00A         	call	___flmul	;wreg free
  4176  0029A4  C018  F064         	movff	?___flmul,humidade@Humid
  4177  0029A8  C019  F065         	movff	?___flmul+1,humidade@Humid+1
  4178  0029AC  C01A  F066         	movff	?___flmul+2,humidade@Humid+2
  4179  0029B0  C01B  F067         	movff	?___flmul+3,humidade@Humid+3
  4180  0029B4                     
  4181                           ;main.c: 662:     return Humid;
  4182  0029B4  C064  F060         	movff	humidade@Humid,?_humidade
  4183  0029B8  C065  F061         	movff	humidade@Humid+1,?_humidade+1
  4184  0029BC  C066  F062         	movff	humidade@Humid+2,?_humidade+2
  4185  0029C0  C067  F063         	movff	humidade@Humid+3,?_humidade+3
  4186  0029C4  0012               	return		;funcret
  4187  0029C6                     __end_of_humidade:
  4188                           	callstack 0
  4189                           
  4190 ;; *************** function _gasRead *****************
  4191 ;; Defined at:
  4192 ;;		line 668 in file "main.c"
  4193 ;; Parameters:    Size  Location     Type
  4194 ;;		None
  4195 ;; Auto vars:     Size  Location     Type
  4196 ;;  gas             4    4[BANK0 ] float 
  4197 ;;  rawAnalog       2   12[BANK0 ] unsigned int 
  4198 ;; Return value:  Size  Location     Type
  4199 ;;                  4    0[BANK0 ] float 
  4200 ;; Registers used:
  4201 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4202 ;; Tracked objects:
  4203 ;;		On entry : 0/0
  4204 ;;		On exit  : 0/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4207 ;;      Params:         0       4       0       0       0       0       0       0       0
  4208 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4209 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4210 ;;      Totals:         0      14       0       0       0       0       0       0       0
  4211 ;;Total ram usage:       14 bytes
  4212 ;; Hardware stack levels used: 1
  4213 ;; Hardware stack levels required when called: 3
  4214 ;; This function calls:
  4215 ;;		___fldiv
  4216 ;;		___flmul
  4217 ;;		___xxtofl
  4218 ;;		_readAnalog
  4219 ;; This function is called by:
  4220 ;;		_main
  4221 ;;		_displayMenu
  4222 ;; This function uses a non-reentrant model
  4223 ;;
  4224                           
  4225                           	psect	text10
  4226  0029C6                     __ptext10:
  4227                           	callstack 0
  4228  0029C6                     _gasRead:
  4229                           	callstack 27
  4230  0029C6                     
  4231                           ;main.c: 669:     unsigned int rawAnalog = readAnalog(2);
  4232  0029C6  0E02               	movlw	2
  4233  0029C8  EC71  F016         	call	_readAnalog
  4234  0029CC  C00A  F06C         	movff	?_readAnalog,gasRead@rawAnalog
  4235  0029D0  C00B  F06D         	movff	?_readAnalog+1,gasRead@rawAnalog+1
  4236  0029D4                     
  4237                           ;main.c: 670:     float gas = ((rawAnalog * 5.0) / 1023.0) * 20;
  4238  0029D4  0E00               	movlw	0
  4239  0029D6  6E35               	movwf	___fldiv@a^0,c
  4240  0029D8  0EC0               	movlw	192
  4241  0029DA  6E36               	movwf	(___fldiv@a+1)^0,c
  4242  0029DC  0E7F               	movlw	127
  4243  0029DE  6E37               	movwf	(___fldiv@a+2)^0,c
  4244  0029E0  0E44               	movlw	68
  4245  0029E2  6E38               	movwf	(___fldiv@a+3)^0,c
  4246  0029E4  0E00               	movlw	0
  4247  0029E6  6E1C               	movwf	___flmul@a^0,c
  4248  0029E8  0E00               	movlw	0
  4249  0029EA  6E1D               	movwf	(___flmul@a+1)^0,c
  4250  0029EC  0EA0               	movlw	160
  4251  0029EE  6E1E               	movwf	(___flmul@a+2)^0,c
  4252  0029F0  0E40               	movlw	64
  4253  0029F2  6E1F               	movwf	(___flmul@a+3)^0,c
  4254  0029F4  C06C  F00A         	movff	gasRead@rawAnalog,___xxtofl@val
  4255  0029F8  C06D  F00B         	movff	gasRead@rawAnalog+1,___xxtofl@val+1
  4256  0029FC  6A0C               	clrf	(___xxtofl@val+2)^0,c
  4257  0029FE  6A0D               	clrf	(___xxtofl@val+3)^0,c
  4258  002A00  0E00               	movlw	0
  4259  002A02  EC3B  F010         	call	___xxtofl
  4260  002A06  C00A  F018         	movff	?___xxtofl,___flmul@b
  4261  002A0A  C00B  F019         	movff	?___xxtofl+1,___flmul@b+1
  4262  002A0E  C00C  F01A         	movff	?___xxtofl+2,___flmul@b+2
  4263  002A12  C00D  F01B         	movff	?___xxtofl+3,___flmul@b+3
  4264  002A16  EC05  F00A         	call	___flmul	;wreg free
  4265  002A1A  C018  F031         	movff	?___flmul,___fldiv@b
  4266  002A1E  C019  F032         	movff	?___flmul+1,___fldiv@b+1
  4267  002A22  C01A  F033         	movff	?___flmul+2,___fldiv@b+2
  4268  002A26  C01B  F034         	movff	?___flmul+3,___fldiv@b+3
  4269  002A2A  EC1A  F00C         	call	___fldiv	;wreg free
  4270  002A2E  C031  F068         	movff	?___fldiv,_gasRead$1535
  4271  002A32  C032  F069         	movff	?___fldiv+1,_gasRead$1535+1
  4272  002A36  C033  F06A         	movff	?___fldiv+2,_gasRead$1535+2
  4273  002A3A  C034  F06B         	movff	?___fldiv+3,_gasRead$1535+3
  4274  002A3E                     
  4275                           ;main.c: 670:     float gas = ((rawAnalog * 5.0) / 1023.0) * 20;
  4276  002A3E  C068  F018         	movff	_gasRead$1535,___flmul@b
  4277  002A42  C069  F019         	movff	_gasRead$1535+1,___flmul@b+1
  4278  002A46  C06A  F01A         	movff	_gasRead$1535+2,___flmul@b+2
  4279  002A4A  C06B  F01B         	movff	_gasRead$1535+3,___flmul@b+3
  4280  002A4E  0E00               	movlw	0
  4281  002A50  6E1C               	movwf	___flmul@a^0,c
  4282  002A52  0E00               	movlw	0
  4283  002A54  6E1D               	movwf	(___flmul@a+1)^0,c
  4284  002A56  0EA0               	movlw	160
  4285  002A58  6E1E               	movwf	(___flmul@a+2)^0,c
  4286  002A5A  0E41               	movlw	65
  4287  002A5C  6E1F               	movwf	(___flmul@a+3)^0,c
  4288  002A5E  EC05  F00A         	call	___flmul	;wreg free
  4289  002A62  C018  F064         	movff	?___flmul,gasRead@gas
  4290  002A66  C019  F065         	movff	?___flmul+1,gasRead@gas+1
  4291  002A6A  C01A  F066         	movff	?___flmul+2,gasRead@gas+2
  4292  002A6E  C01B  F067         	movff	?___flmul+3,gasRead@gas+3
  4293  002A72                     
  4294                           ;main.c: 672:     return gas;
  4295  002A72  C064  F060         	movff	gasRead@gas,?_gasRead
  4296  002A76  C065  F061         	movff	gasRead@gas+1,?_gasRead+1
  4297  002A7A  C066  F062         	movff	gasRead@gas+2,?_gasRead+2
  4298  002A7E  C067  F063         	movff	gasRead@gas+3,?_gasRead+3
  4299  002A82  0012               	return		;funcret
  4300  002A84                     __end_of_gasRead:
  4301                           	callstack 0
  4302                           
  4303 ;; *************** function _readAnalog *****************
  4304 ;; Defined at:
  4305 ;;		line 628 in file "main.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;  pin             1    wreg     unsigned char 
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;  pin             1   15[COMRAM] unsigned char 
  4310 ;;  result          2   13[COMRAM] unsigned int 
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  2    9[COMRAM] unsigned int 
  4313 ;; Registers used:
  4314 ;;		wreg, status,2, status,0
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4320 ;;      Params:         2       0       0       0       0       0       0       0       0
  4321 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4322 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4323 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4324 ;;Total ram usage:        7 bytes
  4325 ;; Hardware stack levels used: 1
  4326 ;; Hardware stack levels required when called: 2
  4327 ;; This function calls:
  4328 ;;		Nothing
  4329 ;; This function is called by:
  4330 ;;		_tempRead
  4331 ;;		_humidade
  4332 ;;		_gasRead
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336                           	psect	text11
  4337  002CE2                     __ptext11:
  4338                           	callstack 0
  4339  002CE2                     _readAnalog:
  4340                           	callstack 27
  4341                           
  4342                           ;incstack = 0
  4343                           ;readAnalog@pin stored from wreg
  4344  002CE2  6E10               	movwf	readAnalog@pin^0,c
  4345  002CE4                     
  4346                           ;main.c: 630:     if (pin > 12) {
  4347  002CE4  0E0C               	movlw	12
  4348  002CE6  6410               	cpfsgt	readAnalog@pin^0,c
  4349  002CE8  EF78  F016         	goto	u2451
  4350  002CEC  EF7A  F016         	goto	u2450
  4351  002CF0                     u2451:
  4352  002CF0  EF80  F016         	goto	l2959
  4353  002CF4                     u2450:
  4354  002CF4                     
  4355                           ;main.c: 631:         return 0;
  4356  002CF4  0E00               	movlw	0
  4357  002CF6  6E0B               	movwf	(?_readAnalog+1)^0,c
  4358  002CF8  0E00               	movlw	0
  4359  002CFA  6E0A               	movwf	?_readAnalog^0,c
  4360  002CFC  EFA7  F016         	goto	l232
  4361  002D00                     l2959:
  4362                           
  4363                           ;main.c: 634:     ADCON0bits.CHS = pin;
  4364  002D00  C010  F00C         	movff	readAnalog@pin,??_readAnalog
  4365  002D04  460C               	rlncf	??_readAnalog^0,f,c
  4366  002D06  460C               	rlncf	??_readAnalog^0,f,c
  4367  002D08  50C2               	movf	194,w,c	;volatile
  4368  002D0A  180C               	xorwf	??_readAnalog^0,w,c
  4369  002D0C  0BC3               	andlw	-61
  4370  002D0E  180C               	xorwf	??_readAnalog^0,w,c
  4371  002D10  6EC2               	movwf	194,c	;volatile
  4372  002D12                     
  4373                           ;main.c: 635:     _delay((unsigned long)((2)*(20000000/4000.0)));
  4374  002D12  0E0D               	movlw	13
  4375  002D14  6E0C               	movwf	??_readAnalog^0,c
  4376  002D16  0EFC               	movlw	252
  4377  002D18                     u5607:
  4378  002D18  2EE8               	decfsz	wreg,f,c
  4379  002D1A  D7FE               	bra	u5607
  4380  002D1C  2E0C               	decfsz	??_readAnalog^0,f,c
  4381  002D1E  D7FC               	bra	u5607
  4382  002D20                     
  4383                           ;main.c: 636:     ADCON0bits.GO_DONE = 1;
  4384  002D20  82C2               	bsf	194,1,c	;volatile
  4385  002D22                     l233:
  4386  002D22  B2C2               	btfsc	194,1,c	;volatile
  4387  002D24  EF96  F016         	goto	u2461
  4388  002D28  EF98  F016         	goto	u2460
  4389  002D2C                     u2461:
  4390  002D2C  EF91  F016         	goto	l233
  4391  002D30                     u2460:
  4392  002D30                     
  4393                           ;main.c: 640:     result = (ADRESH << 8) | ADRESL;
  4394  002D30  50C3               	movf	195,w,c	;volatile
  4395  002D32  CFC4 F00C          	movff	4036,??_readAnalog	;volatile
  4396  002D36  6A0D               	clrf	(??_readAnalog+1)^0,c
  4397  002D38  C00C  F00D         	movff	??_readAnalog,??_readAnalog+1
  4398  002D3C  6A0C               	clrf	??_readAnalog^0,c
  4399  002D3E  100C               	iorwf	??_readAnalog^0,w,c
  4400  002D40  6E0E               	movwf	readAnalog@result^0,c
  4401  002D42  500D               	movf	(??_readAnalog+1)^0,w,c
  4402  002D44  6E0F               	movwf	(readAnalog@result+1)^0,c
  4403  002D46                     
  4404                           ;main.c: 641:     return result;
  4405  002D46  C00E  F00A         	movff	readAnalog@result,?_readAnalog
  4406  002D4A  C00F  F00B         	movff	readAnalog@result+1,?_readAnalog+1
  4407  002D4E                     l232:
  4408  002D4E  0012               	return		;funcret
  4409  002D50                     __end_of_readAnalog:
  4410                           	callstack 0
  4411                           
  4412 ;; *************** function ___fldiv *****************
  4413 ;; Defined at:
  4414 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;  b               4   48[COMRAM] unsigned int 
  4417 ;;  a               4   52[COMRAM] unsigned int 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;  grs             4   67[COMRAM] unsigned long 
  4420 ;;  rem             4   60[COMRAM] unsigned long 
  4421 ;;  new_exp         2   65[COMRAM] short 
  4422 ;;  aexp            1   72[COMRAM] unsigned char 
  4423 ;;  bexp            1   71[COMRAM] unsigned char 
  4424 ;;  sign            1   64[COMRAM] unsigned char 
  4425 ;; Return value:  Size  Location     Type
  4426 ;;                  4   48[COMRAM] unsigned char 
  4427 ;; Registers used:
  4428 ;;		wreg, status,2, status,0
  4429 ;; Tracked objects:
  4430 ;;		On entry : 0/0
  4431 ;;		On exit  : 0/0
  4432 ;;		Unchanged: 0/0
  4433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4434 ;;      Params:         8       0       0       0       0       0       0       0       0
  4435 ;;      Locals:        13       0       0       0       0       0       0       0       0
  4436 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4437 ;;      Totals:        25       0       0       0       0       0       0       0       0
  4438 ;;Total ram usage:       25 bytes
  4439 ;; Hardware stack levels used: 1
  4440 ;; Hardware stack levels required when called: 2
  4441 ;; This function calls:
  4442 ;;		Nothing
  4443 ;; This function is called by:
  4444 ;;		_tempRead
  4445 ;;		_humidade
  4446 ;;		_gasRead
  4447 ;; This function uses a non-reentrant model
  4448 ;;
  4449                           
  4450                           	psect	text12
  4451  001834                     __ptext12:
  4452                           	callstack 0
  4453  001834                     ___fldiv:
  4454                           	callstack 27
  4455  001834  5034               	movf	(___fldiv@b+3)^0,w,c
  4456  001836  0B80               	andlw	128
  4457  001838  6E41               	movwf	___fldiv@sign^0,c
  4458  00183A  5034               	movf	(___fldiv@b+3)^0,w,c
  4459  00183C  2434               	addwf	(___fldiv@b+3)^0,w,c
  4460  00183E  6E48               	movwf	___fldiv@bexp^0,c
  4461  001840  AE33               	btfss	(___fldiv@b+2)^0,7,c
  4462  001842  EF25  F00C         	goto	u2481
  4463  001846  EF27  F00C         	goto	u2480
  4464  00184A                     u2481:
  4465  00184A  EF28  F00C         	goto	l3065
  4466  00184E                     u2480:
  4467  00184E  8048               	bsf	___fldiv@bexp^0,0,c
  4468  001850                     l3065:
  4469  001850  5048               	movf	___fldiv@bexp^0,w,c
  4470  001852  B4D8               	btfsc	status,2,c
  4471  001854  EF2E  F00C         	goto	u2491
  4472  001858  EF30  F00C         	goto	u2490
  4473  00185C                     u2491:
  4474  00185C  EF45  F00C         	goto	l3075
  4475  001860                     u2490:
  4476  001860  2848               	incf	___fldiv@bexp^0,w,c
  4477  001862  A4D8               	btfss	status,2,c
  4478  001864  EF36  F00C         	goto	u2501
  4479  001868  EF38  F00C         	goto	u2500
  4480  00186C                     u2501:
  4481  00186C  EF40  F00C         	goto	l3071
  4482  001870                     u2500:
  4483  001870  0E00               	movlw	0
  4484  001872  6E31               	movwf	___fldiv@b^0,c
  4485  001874  0E00               	movlw	0
  4486  001876  6E32               	movwf	(___fldiv@b+1)^0,c
  4487  001878  0E00               	movlw	0
  4488  00187A  6E33               	movwf	(___fldiv@b+2)^0,c
  4489  00187C  0E00               	movlw	0
  4490  00187E  6E34               	movwf	(___fldiv@b+3)^0,c
  4491  001880                     l3071:
  4492  001880  8E33               	bsf	(___fldiv@b+2)^0,7,c
  4493  001882  0E00               	movlw	0
  4494  001884  6E34               	movwf	(___fldiv@b+3)^0,c
  4495  001886  EF4D  F00C         	goto	l3077
  4496  00188A                     l3075:
  4497  00188A  0E00               	movlw	0
  4498  00188C  6E31               	movwf	___fldiv@b^0,c
  4499  00188E  0E00               	movlw	0
  4500  001890  6E32               	movwf	(___fldiv@b+1)^0,c
  4501  001892  0E00               	movlw	0
  4502  001894  6E33               	movwf	(___fldiv@b+2)^0,c
  4503  001896  0E00               	movlw	0
  4504  001898  6E34               	movwf	(___fldiv@b+3)^0,c
  4505  00189A                     l3077:
  4506  00189A  5038               	movf	(___fldiv@a+3)^0,w,c
  4507  00189C  0B80               	andlw	128
  4508  00189E  1A41               	xorwf	___fldiv@sign^0,f,c
  4509  0018A0  5038               	movf	(___fldiv@a+3)^0,w,c
  4510  0018A2  2438               	addwf	(___fldiv@a+3)^0,w,c
  4511  0018A4  6E49               	movwf	___fldiv@aexp^0,c
  4512  0018A6  AE37               	btfss	(___fldiv@a+2)^0,7,c
  4513  0018A8  EF58  F00C         	goto	u2511
  4514  0018AC  EF5A  F00C         	goto	u2510
  4515  0018B0                     u2511:
  4516  0018B0  EF5B  F00C         	goto	l3085
  4517  0018B4                     u2510:
  4518  0018B4  8049               	bsf	___fldiv@aexp^0,0,c
  4519  0018B6                     l3085:
  4520  0018B6  5049               	movf	___fldiv@aexp^0,w,c
  4521  0018B8  B4D8               	btfsc	status,2,c
  4522  0018BA  EF61  F00C         	goto	u2521
  4523  0018BE  EF63  F00C         	goto	u2520
  4524  0018C2                     u2521:
  4525  0018C2  EF78  F00C         	goto	l3095
  4526  0018C6                     u2520:
  4527  0018C6  2849               	incf	___fldiv@aexp^0,w,c
  4528  0018C8  A4D8               	btfss	status,2,c
  4529  0018CA  EF69  F00C         	goto	u2531
  4530  0018CE  EF6B  F00C         	goto	u2530
  4531  0018D2                     u2531:
  4532  0018D2  EF73  F00C         	goto	l3091
  4533  0018D6                     u2530:
  4534  0018D6  0E00               	movlw	0
  4535  0018D8  6E35               	movwf	___fldiv@a^0,c
  4536  0018DA  0E00               	movlw	0
  4537  0018DC  6E36               	movwf	(___fldiv@a+1)^0,c
  4538  0018DE  0E00               	movlw	0
  4539  0018E0  6E37               	movwf	(___fldiv@a+2)^0,c
  4540  0018E2  0E00               	movlw	0
  4541  0018E4  6E38               	movwf	(___fldiv@a+3)^0,c
  4542  0018E6                     l3091:
  4543  0018E6  8E37               	bsf	(___fldiv@a+2)^0,7,c
  4544  0018E8  0E00               	movlw	0
  4545  0018EA  6E38               	movwf	(___fldiv@a+3)^0,c
  4546  0018EC  EF80  F00C         	goto	l3097
  4547  0018F0                     l3095:
  4548  0018F0  0E00               	movlw	0
  4549  0018F2  6E35               	movwf	___fldiv@a^0,c
  4550  0018F4  0E00               	movlw	0
  4551  0018F6  6E36               	movwf	(___fldiv@a+1)^0,c
  4552  0018F8  0E00               	movlw	0
  4553  0018FA  6E37               	movwf	(___fldiv@a+2)^0,c
  4554  0018FC  0E00               	movlw	0
  4555  0018FE  6E38               	movwf	(___fldiv@a+3)^0,c
  4556  001900                     l3097:
  4557  001900  5035               	movf	___fldiv@a^0,w,c
  4558  001902  1036               	iorwf	(___fldiv@a+1)^0,w,c
  4559  001904  1037               	iorwf	(___fldiv@a+2)^0,w,c
  4560  001906  1038               	iorwf	(___fldiv@a+3)^0,w,c
  4561  001908  A4D8               	btfss	status,2,c
  4562  00190A  EF89  F00C         	goto	u2541
  4563  00190E  EF8B  F00C         	goto	u2540
  4564  001912                     u2541:
  4565  001912  EFA3  F00C         	goto	l3109
  4566  001916                     u2540:
  4567  001916  0E00               	movlw	0
  4568  001918  6E31               	movwf	___fldiv@b^0,c
  4569  00191A  0E00               	movlw	0
  4570  00191C  6E32               	movwf	(___fldiv@b+1)^0,c
  4571  00191E  0E00               	movlw	0
  4572  001920  6E33               	movwf	(___fldiv@b+2)^0,c
  4573  001922  0E00               	movlw	0
  4574  001924  6E34               	movwf	(___fldiv@b+3)^0,c
  4575  001926  0E80               	movlw	128
  4576  001928  1233               	iorwf	(___fldiv@b+2)^0,f,c
  4577  00192A  0E7F               	movlw	127
  4578  00192C  1234               	iorwf	(___fldiv@b+3)^0,f,c
  4579  00192E                     l3103:
  4580  00192E  5041               	movf	___fldiv@sign^0,w,c
  4581  001930  1234               	iorwf	(___fldiv@b+3)^0,f,c
  4582  001932  C031  F031         	movff	___fldiv@b,?___fldiv
  4583  001936  C032  F032         	movff	___fldiv@b+1,?___fldiv+1
  4584  00193A  C033  F033         	movff	___fldiv@b+2,?___fldiv+2
  4585  00193E  C034  F034         	movff	___fldiv@b+3,?___fldiv+3
  4586  001942  EFE6  F00D         	goto	l968
  4587  001946                     l3109:
  4588  001946  5048               	movf	___fldiv@bexp^0,w,c
  4589  001948  A4D8               	btfss	status,2,c
  4590  00194A  EFA9  F00C         	goto	u2551
  4591  00194E  EFAB  F00C         	goto	u2550
  4592  001952                     u2551:
  4593  001952  EFB5  F00C         	goto	l3117
  4594  001956                     u2550:
  4595  001956  0E00               	movlw	0
  4596  001958  6E31               	movwf	?___fldiv^0,c
  4597  00195A  0E00               	movlw	0
  4598  00195C  6E32               	movwf	(?___fldiv+1)^0,c
  4599  00195E  0E00               	movlw	0
  4600  001960  6E33               	movwf	(?___fldiv+2)^0,c
  4601  001962  0E00               	movlw	0
  4602  001964  6E34               	movwf	(?___fldiv+3)^0,c
  4603  001966  EFE6  F00D         	goto	l968
  4604  00196A                     l3117:
  4605  00196A  5049               	movf	___fldiv@aexp^0,w,c
  4606  00196C  C048  F039         	movff	___fldiv@bexp,??___fldiv
  4607  001970  6A3A               	clrf	(??___fldiv+1)^0,c
  4608  001972  5E39               	subwf	??___fldiv^0,f,c
  4609  001974  0E00               	movlw	0
  4610  001976  5A3A               	subwfb	(??___fldiv+1)^0,f,c
  4611  001978  0E7F               	movlw	127
  4612  00197A  2439               	addwf	??___fldiv^0,w,c
  4613  00197C  6E42               	movwf	___fldiv@new_exp^0,c
  4614  00197E  0E00               	movlw	0
  4615  001980  203A               	addwfc	(??___fldiv+1)^0,w,c
  4616  001982  6E43               	movwf	(___fldiv@new_exp+1)^0,c
  4617  001984  C031  F03D         	movff	___fldiv@b,___fldiv@rem
  4618  001988  C032  F03E         	movff	___fldiv@b+1,___fldiv@rem+1
  4619  00198C  C033  F03F         	movff	___fldiv@b+2,___fldiv@rem+2
  4620  001990  C034  F040         	movff	___fldiv@b+3,___fldiv@rem+3
  4621  001994  0E00               	movlw	0
  4622  001996  6E31               	movwf	___fldiv@b^0,c
  4623  001998  0E00               	movlw	0
  4624  00199A  6E32               	movwf	(___fldiv@b+1)^0,c
  4625  00199C  0E00               	movlw	0
  4626  00199E  6E33               	movwf	(___fldiv@b+2)^0,c
  4627  0019A0  0E00               	movlw	0
  4628  0019A2  6E34               	movwf	(___fldiv@b+3)^0,c
  4629  0019A4  0E00               	movlw	0
  4630  0019A6  6E44               	movwf	___fldiv@grs^0,c
  4631  0019A8  0E00               	movlw	0
  4632  0019AA  6E45               	movwf	(___fldiv@grs+1)^0,c
  4633  0019AC  0E00               	movlw	0
  4634  0019AE  6E46               	movwf	(___fldiv@grs+2)^0,c
  4635  0019B0  0E00               	movlw	0
  4636  0019B2  6E47               	movwf	(___fldiv@grs+3)^0,c
  4637  0019B4  0E00               	movlw	0
  4638  0019B6  6E49               	movwf	___fldiv@aexp^0,c
  4639  0019B8  EF16  F00D         	goto	l970
  4640  0019BC                     l3127:
  4641  0019BC  5049               	movf	___fldiv@aexp^0,w,c
  4642  0019BE  B4D8               	btfsc	status,2,c
  4643  0019C0  EFE4  F00C         	goto	u2561
  4644  0019C4  EFE6  F00C         	goto	u2560
  4645  0019C8                     u2561:
  4646  0019C8  EFFD  F00C         	goto	l3135
  4647  0019CC                     u2560:
  4648  0019CC  90D8               	bcf	status,0,c
  4649  0019CE  363D               	rlcf	___fldiv@rem^0,f,c
  4650  0019D0  363E               	rlcf	(___fldiv@rem+1)^0,f,c
  4651  0019D2  363F               	rlcf	(___fldiv@rem+2)^0,f,c
  4652  0019D4  3640               	rlcf	(___fldiv@rem+3)^0,f,c
  4653  0019D6  90D8               	bcf	status,0,c
  4654  0019D8  3631               	rlcf	___fldiv@b^0,f,c
  4655  0019DA  3632               	rlcf	(___fldiv@b+1)^0,f,c
  4656  0019DC  3633               	rlcf	(___fldiv@b+2)^0,f,c
  4657  0019DE  3634               	rlcf	(___fldiv@b+3)^0,f,c
  4658  0019E0  AE47               	btfss	(___fldiv@grs+3)^0,7,c
  4659  0019E2  EFF5  F00C         	goto	u2571
  4660  0019E6  EFF7  F00C         	goto	u2570
  4661  0019EA                     u2571:
  4662  0019EA  EFF8  F00C         	goto	l973
  4663  0019EE                     u2570:
  4664  0019EE  8031               	bsf	___fldiv@b^0,0,c
  4665  0019F0                     l973:
  4666  0019F0  90D8               	bcf	status,0,c
  4667  0019F2  3644               	rlcf	___fldiv@grs^0,f,c
  4668  0019F4  3645               	rlcf	(___fldiv@grs+1)^0,f,c
  4669  0019F6  3646               	rlcf	(___fldiv@grs+2)^0,f,c
  4670  0019F8  3647               	rlcf	(___fldiv@grs+3)^0,f,c
  4671  0019FA                     l3135:
  4672  0019FA  5035               	movf	___fldiv@a^0,w,c
  4673  0019FC  5C3D               	subwf	___fldiv@rem^0,w,c
  4674  0019FE  5036               	movf	(___fldiv@a+1)^0,w,c
  4675  001A00  583E               	subwfb	(___fldiv@rem+1)^0,w,c
  4676  001A02  5037               	movf	(___fldiv@a+2)^0,w,c
  4677  001A04  583F               	subwfb	(___fldiv@rem+2)^0,w,c
  4678  001A06  5038               	movf	(___fldiv@a+3)^0,w,c
  4679  001A08  5840               	subwfb	(___fldiv@rem+3)^0,w,c
  4680  001A0A  A0D8               	btfss	status,0,c
  4681  001A0C  EF0A  F00D         	goto	u2581
  4682  001A10  EF0C  F00D         	goto	u2580
  4683  001A14                     u2581:
  4684  001A14  EF15  F00D         	goto	l3141
  4685  001A18                     u2580:
  4686  001A18  8C47               	bsf	(___fldiv@grs+3)^0,6,c
  4687  001A1A  5035               	movf	___fldiv@a^0,w,c
  4688  001A1C  5E3D               	subwf	___fldiv@rem^0,f,c
  4689  001A1E  5036               	movf	(___fldiv@a+1)^0,w,c
  4690  001A20  5A3E               	subwfb	(___fldiv@rem+1)^0,f,c
  4691  001A22  5037               	movf	(___fldiv@a+2)^0,w,c
  4692  001A24  5A3F               	subwfb	(___fldiv@rem+2)^0,f,c
  4693  001A26  5038               	movf	(___fldiv@a+3)^0,w,c
  4694  001A28  5A40               	subwfb	(___fldiv@rem+3)^0,f,c
  4695  001A2A                     l3141:
  4696  001A2A  2A49               	incf	___fldiv@aexp^0,f,c
  4697  001A2C                     l970:
  4698  001A2C  0E19               	movlw	25
  4699  001A2E  6449               	cpfsgt	___fldiv@aexp^0,c
  4700  001A30  EF1C  F00D         	goto	u2591
  4701  001A34  EF1E  F00D         	goto	u2590
  4702  001A38                     u2591:
  4703  001A38  EFDE  F00C         	goto	l3127
  4704  001A3C                     u2590:
  4705  001A3C  503D               	movf	___fldiv@rem^0,w,c
  4706  001A3E  103E               	iorwf	(___fldiv@rem+1)^0,w,c
  4707  001A40  103F               	iorwf	(___fldiv@rem+2)^0,w,c
  4708  001A42  1040               	iorwf	(___fldiv@rem+3)^0,w,c
  4709  001A44  B4D8               	btfsc	status,2,c
  4710  001A46  EF27  F00D         	goto	u2601
  4711  001A4A  EF29  F00D         	goto	u2600
  4712  001A4E                     u2601:
  4713  001A4E  EF41  F00D         	goto	l3153
  4714  001A52                     u2600:
  4715  001A52  8044               	bsf	___fldiv@grs^0,0,c
  4716  001A54  EF41  F00D         	goto	l3153
  4717  001A58                     l3147:
  4718  001A58  90D8               	bcf	status,0,c
  4719  001A5A  3631               	rlcf	___fldiv@b^0,f,c
  4720  001A5C  3632               	rlcf	(___fldiv@b+1)^0,f,c
  4721  001A5E  3633               	rlcf	(___fldiv@b+2)^0,f,c
  4722  001A60  3634               	rlcf	(___fldiv@b+3)^0,f,c
  4723  001A62  AE47               	btfss	(___fldiv@grs+3)^0,7,c
  4724  001A64  EF36  F00D         	goto	u2611
  4725  001A68  EF38  F00D         	goto	u2610
  4726  001A6C                     u2611:
  4727  001A6C  EF39  F00D         	goto	l979
  4728  001A70                     u2610:
  4729  001A70  8031               	bsf	___fldiv@b^0,0,c
  4730  001A72                     l979:
  4731  001A72  90D8               	bcf	status,0,c
  4732  001A74  3644               	rlcf	___fldiv@grs^0,f,c
  4733  001A76  3645               	rlcf	(___fldiv@grs+1)^0,f,c
  4734  001A78  3646               	rlcf	(___fldiv@grs+2)^0,f,c
  4735  001A7A  3647               	rlcf	(___fldiv@grs+3)^0,f,c
  4736  001A7C  0642               	decf	___fldiv@new_exp^0,f,c
  4737  001A7E  A0D8               	btfss	status,0,c
  4738  001A80  0643               	decf	(___fldiv@new_exp+1)^0,f,c
  4739  001A82                     l3153:
  4740  001A82  AE33               	btfss	(___fldiv@b+2)^0,7,c
  4741  001A84  EF46  F00D         	goto	u2621
  4742  001A88  EF48  F00D         	goto	u2620
  4743  001A8C                     u2621:
  4744  001A8C  EF2C  F00D         	goto	l3147
  4745  001A90                     u2620:
  4746  001A90  0E00               	movlw	0
  4747  001A92  6E49               	movwf	___fldiv@aexp^0,c
  4748  001A94  AE47               	btfss	(___fldiv@grs+3)^0,7,c
  4749  001A96  EF4F  F00D         	goto	u2631
  4750  001A9A  EF51  F00D         	goto	u2630
  4751  001A9E                     u2631:
  4752  001A9E  EF75  F00D         	goto	l981
  4753  001AA2                     u2630:
  4754  001AA2  0EFF               	movlw	255
  4755  001AA4  1444               	andwf	___fldiv@grs^0,w,c
  4756  001AA6  6E39               	movwf	??___fldiv^0,c
  4757  001AA8  0EFF               	movlw	255
  4758  001AAA  1445               	andwf	(___fldiv@grs+1)^0,w,c
  4759  001AAC  6E3A               	movwf	(??___fldiv+1)^0,c
  4760  001AAE  0EFF               	movlw	255
  4761  001AB0  1446               	andwf	(___fldiv@grs+2)^0,w,c
  4762  001AB2  6E3B               	movwf	(??___fldiv+2)^0,c
  4763  001AB4  0E7F               	movlw	127
  4764  001AB6  1447               	andwf	(___fldiv@grs+3)^0,w,c
  4765  001AB8  6E3C               	movwf	(??___fldiv+3)^0,c
  4766  001ABA  5039               	movf	??___fldiv^0,w,c
  4767  001ABC  103A               	iorwf	(??___fldiv+1)^0,w,c
  4768  001ABE  103B               	iorwf	(??___fldiv+2)^0,w,c
  4769  001AC0  103C               	iorwf	(??___fldiv+3)^0,w,c
  4770  001AC2  B4D8               	btfsc	status,2,c
  4771  001AC4  EF66  F00D         	goto	u2641
  4772  001AC8  EF68  F00D         	goto	u2640
  4773  001ACC                     u2641:
  4774  001ACC  EF6C  F00D         	goto	l982
  4775  001AD0                     u2640:
  4776  001AD0                     l3161:
  4777  001AD0  0E01               	movlw	1
  4778  001AD2  6E49               	movwf	___fldiv@aexp^0,c
  4779  001AD4  EF75  F00D         	goto	l981
  4780  001AD8                     l982:
  4781  001AD8  A031               	btfss	___fldiv@b^0,0,c
  4782  001ADA  EF71  F00D         	goto	u2651
  4783  001ADE  EF73  F00D         	goto	u2650
  4784  001AE2                     u2651:
  4785  001AE2  EF75  F00D         	goto	l981
  4786  001AE6                     u2650:
  4787  001AE6  EF68  F00D         	goto	l3161
  4788  001AEA                     l981:
  4789  001AEA  5049               	movf	___fldiv@aexp^0,w,c
  4790  001AEC  B4D8               	btfsc	status,2,c
  4791  001AEE  EF7B  F00D         	goto	u2661
  4792  001AF2  EF7D  F00D         	goto	u2660
  4793  001AF6                     u2661:
  4794  001AF6  EFA1  F00D         	goto	l3173
  4795  001AFA                     u2660:
  4796  001AFA  0E01               	movlw	1
  4797  001AFC  2631               	addwf	___fldiv@b^0,f,c
  4798  001AFE  0E00               	movlw	0
  4799  001B00  2232               	addwfc	(___fldiv@b+1)^0,f,c
  4800  001B02  2233               	addwfc	(___fldiv@b+2)^0,f,c
  4801  001B04  2234               	addwfc	(___fldiv@b+3)^0,f,c
  4802  001B06  A034               	btfss	(___fldiv@b+3)^0,0,c
  4803  001B08  EF88  F00D         	goto	u2671
  4804  001B0C  EF8A  F00D         	goto	u2670
  4805  001B10                     u2671:
  4806  001B10  EFA1  F00D         	goto	l3173
  4807  001B14                     u2670:
  4808  001B14  C031  F039         	movff	___fldiv@b,??___fldiv
  4809  001B18  C032  F03A         	movff	___fldiv@b+1,??___fldiv+1
  4810  001B1C  C033  F03B         	movff	___fldiv@b+2,??___fldiv+2
  4811  001B20  C034  F03C         	movff	___fldiv@b+3,??___fldiv+3
  4812  001B24  343C               	rlcf	(??___fldiv+3)^0,w,c
  4813  001B26  323C               	rrcf	(??___fldiv+3)^0,f,c
  4814  001B28  323B               	rrcf	(??___fldiv+2)^0,f,c
  4815  001B2A  323A               	rrcf	(??___fldiv+1)^0,f,c
  4816  001B2C  3239               	rrcf	??___fldiv^0,f,c
  4817  001B2E  C039  F031         	movff	??___fldiv,___fldiv@b
  4818  001B32  C03A  F032         	movff	??___fldiv+1,___fldiv@b+1
  4819  001B36  C03B  F033         	movff	??___fldiv+2,___fldiv@b+2
  4820  001B3A  C03C  F034         	movff	??___fldiv+3,___fldiv@b+3
  4821  001B3E  4A42               	infsnz	___fldiv@new_exp^0,f,c
  4822  001B40  2A43               	incf	(___fldiv@new_exp+1)^0,f,c
  4823  001B42                     l3173:
  4824  001B42  BE43               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4825  001B44  EFAC  F00D         	goto	u2681
  4826  001B48  5043               	movf	(___fldiv@new_exp+1)^0,w,c
  4827  001B4A  E108               	bnz	u2680
  4828  001B4C  2842               	incf	___fldiv@new_exp^0,w,c
  4829  001B4E  A0D8               	btfss	status,0,c
  4830  001B50  EFAC  F00D         	goto	u2681
  4831  001B54  EFAE  F00D         	goto	u2680
  4832  001B58                     u2681:
  4833  001B58  EFB9  F00D         	goto	l3177
  4834  001B5C                     u2680:
  4835  001B5C  0E00               	movlw	0
  4836  001B5E  6E43               	movwf	(___fldiv@new_exp+1)^0,c
  4837  001B60  6842               	setf	___fldiv@new_exp^0,c
  4838  001B62  0E00               	movlw	0
  4839  001B64  6E31               	movwf	___fldiv@b^0,c
  4840  001B66  0E00               	movlw	0
  4841  001B68  6E32               	movwf	(___fldiv@b+1)^0,c
  4842  001B6A  0E00               	movlw	0
  4843  001B6C  6E33               	movwf	(___fldiv@b+2)^0,c
  4844  001B6E  0E00               	movlw	0
  4845  001B70  6E34               	movwf	(___fldiv@b+3)^0,c
  4846  001B72                     l3177:
  4847  001B72  BE43               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4848  001B74  EFC6  F00D         	goto	u2690
  4849  001B78  5043               	movf	(___fldiv@new_exp+1)^0,w,c
  4850  001B7A  E106               	bnz	u2691
  4851  001B7C  0442               	decf	___fldiv@new_exp^0,w,c
  4852  001B7E  B0D8               	btfsc	status,0,c
  4853  001B80  EFC4  F00D         	goto	u2691
  4854  001B84  EFC6  F00D         	goto	u2690
  4855  001B88                     u2691:
  4856  001B88  EFD4  F00D         	goto	l3181
  4857  001B8C                     u2690:
  4858  001B8C  0E00               	movlw	0
  4859  001B8E  6E43               	movwf	(___fldiv@new_exp+1)^0,c
  4860  001B90  0E00               	movlw	0
  4861  001B92  6E42               	movwf	___fldiv@new_exp^0,c
  4862  001B94  0E00               	movlw	0
  4863  001B96  6E31               	movwf	___fldiv@b^0,c
  4864  001B98  0E00               	movlw	0
  4865  001B9A  6E32               	movwf	(___fldiv@b+1)^0,c
  4866  001B9C  0E00               	movlw	0
  4867  001B9E  6E33               	movwf	(___fldiv@b+2)^0,c
  4868  001BA0  0E00               	movlw	0
  4869  001BA2  6E34               	movwf	(___fldiv@b+3)^0,c
  4870  001BA4  0E00               	movlw	0
  4871  001BA6  6E41               	movwf	___fldiv@sign^0,c
  4872  001BA8                     l3181:
  4873  001BA8  C042  F048         	movff	___fldiv@new_exp,___fldiv@bexp
  4874  001BAC  A048               	btfss	___fldiv@bexp^0,0,c
  4875  001BAE  EFDB  F00D         	goto	u2701
  4876  001BB2  EFDD  F00D         	goto	u2700
  4877  001BB6                     u2701:
  4878  001BB6  EFE0  F00D         	goto	l3187
  4879  001BBA                     u2700:
  4880  001BBA  8E33               	bsf	(___fldiv@b+2)^0,7,c
  4881  001BBC  EFE1  F00D         	goto	l3189
  4882  001BC0                     l3187:
  4883  001BC0  9E33               	bcf	(___fldiv@b+2)^0,7,c
  4884  001BC2                     l3189:
  4885  001BC2  90D8               	bcf	status,0,c
  4886  001BC4  3048               	rrcf	___fldiv@bexp^0,w,c
  4887  001BC6  6E34               	movwf	(___fldiv@b+3)^0,c
  4888  001BC8  EF97  F00C         	goto	l3103
  4889  001BCC                     l968:
  4890  001BCC  0012               	return		;funcret
  4891  001BCE                     __end_of___fldiv:
  4892                           	callstack 0
  4893                           
  4894 ;; *************** function _floatToString *****************
  4895 ;; Defined at:
  4896 ;;		line 762 in file "main.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;  value           4   48[COMRAM] float 
  4899 ;;  buffer          2   52[COMRAM] PTR unsigned char 
  4900 ;;		 -> displayMenu@valueStr(10), 
  4901 ;;  precision       2   54[COMRAM] int 
  4902 ;; Auto vars:     Size  Location     Type
  4903 ;;  digit           2   12[BANK0 ] int 
  4904 ;;  temp            2   16[BANK0 ] int 
  4905 ;;  intStr         12    0[BANK0 ] unsigned char [12]
  4906 ;;  index           2   20[BANK0 ] int 
  4907 ;;  i               2   18[BANK0 ] int 
  4908 ;;  intPart         2   14[BANK0 ] int 
  4909 ;; Return value:  Size  Location     Type
  4910 ;;                  1    wreg      void 
  4911 ;; Registers used:
  4912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4913 ;; Tracked objects:
  4914 ;;		On entry : 0/0
  4915 ;;		On exit  : 0/0
  4916 ;;		Unchanged: 0/0
  4917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4918 ;;      Params:         8       0       0       0       0       0       0       0       0
  4919 ;;      Locals:         0      22       0       0       0       0       0       0       0
  4920 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4921 ;;      Totals:        10      22       0       0       0       0       0       0       0
  4922 ;;Total ram usage:       32 bytes
  4923 ;; Hardware stack levels used: 1
  4924 ;; Hardware stack levels required when called: 4
  4925 ;; This function calls:
  4926 ;;		___awdiv
  4927 ;;		___awmod
  4928 ;;		___flmul
  4929 ;;		___flneg
  4930 ;;		___flsub
  4931 ;;		___fltol
  4932 ;;		___xxtofl
  4933 ;; This function is called by:
  4934 ;;		_displayMenu
  4935 ;; This function uses a non-reentrant model
  4936 ;;
  4937                           
  4938                           	psect	text13
  4939  001BCE                     __ptext13:
  4940                           	callstack 0
  4941  001BCE                     _floatToString:
  4942                           	callstack 25
  4943  001BCE                     
  4944                           ;main.c: 763:     int intPart;;main.c: 764:     int i, index = 0;
  4945  001BCE  0E00               	movlw	0
  4946  001BD0  0100               	movlb	0	; () banked
  4947  001BD2  6F75               	movwf	(floatToString@index+1)& (0+255),b
  4948  001BD4  0E00               	movlw	0
  4949  001BD6  6F74               	movwf	floatToString@index& (0+255),b
  4950  001BD8                     
  4951                           ; BSR set to: 0
  4952                           ;main.c: 765:     char intStr[12];;main.c: 768:     if (value < 0) {
  4953  001BD8  BE34               	btfsc	(floatToString@value+3)^0,7,c
  4954  001BDA  EFF3  F00D         	goto	u4990
  4955  001BDE  EFF1  F00D         	goto	u4991
  4956  001BE2                     u4991:
  4957  001BE2  EF0D  F00E         	goto	l4939
  4958  001BE6                     u4990:
  4959  001BE6                     
  4960                           ; BSR set to: 0
  4961                           ;main.c: 769:         *buffer++ = '-';
  4962  001BE6  C035  FFD9         	movff	floatToString@buffer,fsr2l
  4963  001BEA  C036  FFDA         	movff	floatToString@buffer+1,fsr2h
  4964  001BEE  0E2D               	movlw	45
  4965  001BF0  6EDF               	movwf	indf2,c
  4966  001BF2                     
  4967                           ; BSR set to: 0
  4968  001BF2  4A35               	infsnz	floatToString@buffer^0,f,c
  4969  001BF4  2A36               	incf	(floatToString@buffer+1)^0,f,c
  4970  001BF6                     
  4971                           ; BSR set to: 0
  4972                           ;main.c: 770:         value = -value;
  4973  001BF6  C031  F00A         	movff	floatToString@value,___flneg@f1
  4974  001BFA  C032  F00B         	movff	floatToString@value+1,___flneg@f1+1
  4975  001BFE  C033  F00C         	movff	floatToString@value+2,___flneg@f1+2
  4976  001C02  C034  F00D         	movff	floatToString@value+3,___flneg@f1+3
  4977  001C06  EC92  F017         	call	___flneg	;wreg free
  4978  001C0A  C00A  F031         	movff	?___flneg,floatToString@value
  4979  001C0E  C00B  F032         	movff	?___flneg+1,floatToString@value+1
  4980  001C12  C00C  F033         	movff	?___flneg+2,floatToString@value+2
  4981  001C16  C00D  F034         	movff	?___flneg+3,floatToString@value+3
  4982  001C1A                     l4939:
  4983                           
  4984                           ;main.c: 773:     intPart = (int)value;
  4985  001C1A  C031  F00A         	movff	floatToString@value,___fltol@f1
  4986  001C1E  C032  F00B         	movff	floatToString@value+1,___fltol@f1+1
  4987  001C22  C033  F00C         	movff	floatToString@value+2,___fltol@f1+2
  4988  001C26  C034  F00D         	movff	floatToString@value+3,___fltol@f1+3
  4989  001C2A  EC47  F012         	call	___fltol	;wreg free
  4990  001C2E  C00A  F06E         	movff	?___fltol,floatToString@intPart
  4991  001C32  C00B  F06F         	movff	?___fltol+1,floatToString@intPart+1
  4992  001C36                     
  4993                           ;main.c: 774:     value -= intPart;
  4994  001C36  C031  F01A         	movff	floatToString@value,___flsub@b
  4995  001C3A  C032  F01B         	movff	floatToString@value+1,___flsub@b+1
  4996  001C3E  C033  F01C         	movff	floatToString@value+2,___flsub@b+2
  4997  001C42  C034  F01D         	movff	floatToString@value+3,___flsub@b+3
  4998  001C46  C06E  F00A         	movff	floatToString@intPart,___xxtofl@val
  4999  001C4A  C06F  F00B         	movff	floatToString@intPart+1,___xxtofl@val+1
  5000  001C4E  0E00               	movlw	0
  5001  001C50  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  5002  001C52  0EFF               	movlw	-1
  5003  001C54  6E0C               	movwf	(___xxtofl@val+2)^0,c
  5004  001C56  6E0D               	movwf	(___xxtofl@val+3)^0,c
  5005  001C58  0E01               	movlw	1
  5006  001C5A  EC3B  F010         	call	___xxtofl
  5007  001C5E  C00A  F01E         	movff	?___xxtofl,___flsub@a
  5008  001C62  C00B  F01F         	movff	?___xxtofl+1,___flsub@a+1
  5009  001C66  C00C  F020         	movff	?___xxtofl+2,___flsub@a+2
  5010  001C6A  C00D  F021         	movff	?___xxtofl+3,___flsub@a+3
  5011  001C6E  ECCB  F016         	call	___flsub	;wreg free
  5012  001C72  C01A  F031         	movff	?___flsub,floatToString@value
  5013  001C76  C01B  F032         	movff	?___flsub+1,floatToString@value+1
  5014  001C7A  C01C  F033         	movff	?___flsub+2,floatToString@value+2
  5015  001C7E  C01D  F034         	movff	?___flsub+3,floatToString@value+3
  5016  001C82                     
  5017                           ;main.c: 777:     if(intPart == 0) {
  5018  001C82  0100               	movlb	0	; () banked
  5019  001C84  516E               	movf	floatToString@intPart& (0+255),w,b
  5020  001C86  116F               	iorwf	(floatToString@intPart+1)& (0+255),w,b
  5021  001C88  A4D8               	btfss	status,2,c
  5022  001C8A  EF49  F00E         	goto	u5001
  5023  001C8E  EF4B  F00E         	goto	u5000
  5024  001C92                     u5001:
  5025  001C92  EF51  F00E         	goto	l283
  5026  001C96                     u5000:
  5027  001C96                     
  5028                           ; BSR set to: 0
  5029                           ;main.c: 778:         intStr[index++] = '0';
  5030  001C96  0E30               	movlw	48
  5031  001C98  6F60               	movwf	floatToString@intStr& (0+255),b
  5032  001C9A                     
  5033                           ; BSR set to: 0
  5034  001C9A  4B74               	infsnz	floatToString@index& (0+255),f,b
  5035  001C9C  2B75               	incf	(floatToString@index+1)& (0+255),f,b
  5036                           
  5037                           ;main.c: 779:     } else {
  5038  001C9E  EF8B  F00E         	goto	l4959
  5039  001CA2                     l283:
  5040                           
  5041                           ; BSR set to: 0
  5042                           ;main.c: 780:         int temp = intPart;
  5043  001CA2  C06E  F070         	movff	floatToString@intPart,floatToString@temp
  5044  001CA6  C06F  F071         	movff	floatToString@intPart+1,floatToString@temp+1
  5045  001CAA                     
  5046                           ; BSR set to: 0
  5047                           ;main.c: 781:         index = 0;
  5048  001CAA  0E00               	movlw	0
  5049  001CAC  6F75               	movwf	(floatToString@index+1)& (0+255),b
  5050  001CAE  0E00               	movlw	0
  5051  001CB0  6F74               	movwf	floatToString@index& (0+255),b
  5052  001CB2                     l4951:
  5053                           
  5054                           ; BSR set to: 0
  5055                           ;main.c: 783:             intStr[index++] = (temp % 10) + '0';
  5056  001CB2  0E60               	movlw	low floatToString@intStr
  5057  001CB4  2574               	addwf	floatToString@index& (0+255),w,b
  5058  001CB6  6ED9               	movwf	fsr2l,c
  5059  001CB8  0E00               	movlw	high floatToString@intStr
  5060  001CBA  2175               	addwfc	(floatToString@index+1)& (0+255),w,b
  5061  001CBC  6EDA               	movwf	fsr2h,c
  5062  001CBE  C070  F00A         	movff	floatToString@temp,___awmod@dividend
  5063  001CC2  C071  F00B         	movff	floatToString@temp+1,___awmod@dividend+1
  5064  001CC6  0E00               	movlw	0
  5065  001CC8  6E0D               	movwf	(___awmod@divisor+1)^0,c
  5066  001CCA  0E0A               	movlw	10
  5067  001CCC  6E0C               	movwf	___awmod@divisor^0,c
  5068  001CCE  EC42  F015         	call	___awmod	;wreg free
  5069  001CD2  500A               	movf	?___awmod^0,w,c
  5070  001CD4  0F30               	addlw	48
  5071  001CD6  6EDF               	movwf	indf2,c
  5072  001CD8  0100               	movlb	0	; () banked
  5073  001CDA  4B74               	infsnz	floatToString@index& (0+255),f,b
  5074  001CDC  2B75               	incf	(floatToString@index+1)& (0+255),f,b
  5075  001CDE                     
  5076                           ; BSR set to: 0
  5077                           ;main.c: 784:             temp /= 10;
  5078  001CDE  C070  F00A         	movff	floatToString@temp,___awdiv@dividend
  5079  001CE2  C071  F00B         	movff	floatToString@temp+1,___awdiv@dividend+1
  5080  001CE6  0E00               	movlw	0
  5081  001CE8  6E0D               	movwf	(___awdiv@divisor+1)^0,c
  5082  001CEA  0E0A               	movlw	10
  5083  001CEC  6E0C               	movwf	___awdiv@divisor^0,c
  5084  001CEE  ECC3  F013         	call	___awdiv	;wreg free
  5085  001CF2  C00A  F070         	movff	?___awdiv,floatToString@temp
  5086  001CF6  C00B  F071         	movff	?___awdiv+1,floatToString@temp+1
  5087  001CFA                     
  5088                           ;main.c: 785:         } while (temp > 0);
  5089  001CFA  0100               	movlb	0	; () banked
  5090  001CFC  BF71               	btfsc	(floatToString@temp+1)& (0+255),7,b
  5091  001CFE  EF8B  F00E         	goto	u5010
  5092  001D02  5171               	movf	(floatToString@temp+1)& (0+255),w,b
  5093  001D04  E106               	bnz	u5011
  5094  001D06  0570               	decf	floatToString@temp& (0+255),w,b
  5095  001D08  B0D8               	btfsc	status,0,c
  5096  001D0A  EF89  F00E         	goto	u5011
  5097  001D0E  EF8B  F00E         	goto	u5010
  5098  001D12                     u5011:
  5099  001D12  EF59  F00E         	goto	l4951
  5100  001D16                     u5010:
  5101  001D16                     l4959:
  5102                           
  5103                           ; BSR set to: 0
  5104                           ;main.c: 789:     for (i = 0; i < index; i++) {
  5105  001D16  0E00               	movlw	0
  5106  001D18  6F73               	movwf	(floatToString@i+1)& (0+255),b
  5107  001D1A  0E00               	movlw	0
  5108  001D1C  6F72               	movwf	floatToString@i& (0+255),b
  5109  001D1E  EFAD  F00E         	goto	l4965
  5110  001D22                     l4961:
  5111                           
  5112                           ; BSR set to: 0
  5113                           ;main.c: 790:         buffer[i] = intStr[index - i - 1];
  5114  001D22  0E60               	movlw	low floatToString@intStr
  5115  001D24  6E39               	movwf	??_floatToString^0,c
  5116  001D26  0E00               	movlw	high floatToString@intStr
  5117  001D28  6E3A               	movwf	(??_floatToString+1)^0,c
  5118  001D2A  5172               	movf	floatToString@i& (0+255),w,b
  5119  001D2C  5E39               	subwf	??_floatToString^0,f,c
  5120  001D2E  5173               	movf	(floatToString@i+1)& (0+255),w,b
  5121  001D30  5A3A               	subwfb	(??_floatToString+1)^0,f,c
  5122  001D32  5174               	movf	floatToString@index& (0+255),w,b
  5123  001D34  2639               	addwf	??_floatToString^0,f,c
  5124  001D36  5175               	movf	(floatToString@index+1)& (0+255),w,b
  5125  001D38  223A               	addwfc	(??_floatToString+1)^0,f,c
  5126  001D3A  0EFF               	movlw	255
  5127  001D3C  2439               	addwf	??_floatToString^0,w,c
  5128  001D3E  6ED9               	movwf	fsr2l,c
  5129  001D40  0EFF               	movlw	255
  5130  001D42  203A               	addwfc	(??_floatToString+1)^0,w,c
  5131  001D44  6EDA               	movwf	fsr2h,c
  5132  001D46  5172               	movf	floatToString@i& (0+255),w,b
  5133  001D48  2435               	addwf	floatToString@buffer^0,w,c
  5134  001D4A  6EE1               	movwf	fsr1l,c
  5135  001D4C  5173               	movf	(floatToString@i+1)& (0+255),w,b
  5136  001D4E  2036               	addwfc	(floatToString@buffer+1)^0,w,c
  5137  001D50  6EE2               	movwf	fsr1h,c
  5138  001D52  CFDF FFE7          	movff	indf2,indf1
  5139  001D56                     
  5140                           ; BSR set to: 0
  5141                           ;main.c: 791:     }
  5142  001D56  4B72               	infsnz	floatToString@i& (0+255),f,b
  5143  001D58  2B73               	incf	(floatToString@i+1)& (0+255),f,b
  5144  001D5A                     l4965:
  5145                           
  5146                           ; BSR set to: 0
  5147  001D5A  5174               	movf	floatToString@index& (0+255),w,b
  5148  001D5C  5D72               	subwf	floatToString@i& (0+255),w,b
  5149  001D5E  5173               	movf	(floatToString@i+1)& (0+255),w,b
  5150  001D60  0A80               	xorlw	128
  5151  001D62  6E39               	movwf	??_floatToString^0,c
  5152  001D64  5175               	movf	(floatToString@index+1)& (0+255),w,b
  5153  001D66  0A80               	xorlw	128
  5154  001D68  5839               	subwfb	??_floatToString^0,w,c
  5155  001D6A  A0D8               	btfss	status,0,c
  5156  001D6C  EFBA  F00E         	goto	u5021
  5157  001D70  EFBC  F00E         	goto	u5020
  5158  001D74                     u5021:
  5159  001D74  EF91  F00E         	goto	l4961
  5160  001D78                     u5020:
  5161  001D78                     
  5162                           ; BSR set to: 0
  5163                           ;main.c: 792:     buffer += index;
  5164  001D78  5174               	movf	floatToString@index& (0+255),w,b
  5165  001D7A  2635               	addwf	floatToString@buffer^0,f,c
  5166  001D7C  5175               	movf	(floatToString@index+1)& (0+255),w,b
  5167  001D7E  2236               	addwfc	(floatToString@buffer+1)^0,f,c
  5168  001D80                     
  5169                           ; BSR set to: 0
  5170                           ;main.c: 794:     *buffer++ = '.';
  5171  001D80  C035  FFD9         	movff	floatToString@buffer,fsr2l
  5172  001D84  C036  FFDA         	movff	floatToString@buffer+1,fsr2h
  5173  001D88  0E2E               	movlw	46
  5174  001D8A  6EDF               	movwf	indf2,c
  5175  001D8C                     
  5176                           ; BSR set to: 0
  5177  001D8C  4A35               	infsnz	floatToString@buffer^0,f,c
  5178  001D8E  2A36               	incf	(floatToString@buffer+1)^0,f,c
  5179  001D90                     
  5180                           ; BSR set to: 0
  5181                           ;main.c: 797:     for (i = 0; i < precision; i++) {
  5182  001D90  0E00               	movlw	0
  5183  001D92  6F73               	movwf	(floatToString@i+1)& (0+255),b
  5184  001D94  0E00               	movlw	0
  5185  001D96  6F72               	movwf	floatToString@i& (0+255),b
  5186  001D98  EF29  F00F         	goto	l4987
  5187  001D9C                     l4975:
  5188                           
  5189                           ; BSR set to: 0
  5190                           ;main.c: 798:         value *= 10;
  5191  001D9C  C031  F018         	movff	floatToString@value,___flmul@b
  5192  001DA0  C032  F019         	movff	floatToString@value+1,___flmul@b+1
  5193  001DA4  C033  F01A         	movff	floatToString@value+2,___flmul@b+2
  5194  001DA8  C034  F01B         	movff	floatToString@value+3,___flmul@b+3
  5195  001DAC  0E00               	movlw	0
  5196  001DAE  6E1C               	movwf	___flmul@a^0,c
  5197  001DB0  0E00               	movlw	0
  5198  001DB2  6E1D               	movwf	(___flmul@a+1)^0,c
  5199  001DB4  0E20               	movlw	32
  5200  001DB6  6E1E               	movwf	(___flmul@a+2)^0,c
  5201  001DB8  0E41               	movlw	65
  5202  001DBA  6E1F               	movwf	(___flmul@a+3)^0,c
  5203  001DBC  EC05  F00A         	call	___flmul	;wreg free
  5204  001DC0  C018  F031         	movff	?___flmul,floatToString@value
  5205  001DC4  C019  F032         	movff	?___flmul+1,floatToString@value+1
  5206  001DC8  C01A  F033         	movff	?___flmul+2,floatToString@value+2
  5207  001DCC  C01B  F034         	movff	?___flmul+3,floatToString@value+3
  5208  001DD0                     
  5209                           ;main.c: 799:         int digit = (int)value;
  5210  001DD0  C031  F00A         	movff	floatToString@value,___fltol@f1
  5211  001DD4  C032  F00B         	movff	floatToString@value+1,___fltol@f1+1
  5212  001DD8  C033  F00C         	movff	floatToString@value+2,___fltol@f1+2
  5213  001DDC  C034  F00D         	movff	floatToString@value+3,___fltol@f1+3
  5214  001DE0  EC47  F012         	call	___fltol	;wreg free
  5215  001DE4  C00A  F06C         	movff	?___fltol,floatToString@digit
  5216  001DE8  C00B  F06D         	movff	?___fltol+1,floatToString@digit+1
  5217  001DEC                     
  5218                           ;main.c: 800:         *buffer++ = digit + '0';
  5219  001DEC  0100               	movlb	0	; () banked
  5220  001DEE  516C               	movf	floatToString@digit& (0+255),w,b
  5221  001DF0  0F30               	addlw	48
  5222  001DF2  C035  FFD9         	movff	floatToString@buffer,fsr2l
  5223  001DF6  C036  FFDA         	movff	floatToString@buffer+1,fsr2h
  5224  001DFA  6EDF               	movwf	indf2,c
  5225  001DFC                     
  5226                           ; BSR set to: 0
  5227  001DFC  4A35               	infsnz	floatToString@buffer^0,f,c
  5228  001DFE  2A36               	incf	(floatToString@buffer+1)^0,f,c
  5229  001E00                     
  5230                           ; BSR set to: 0
  5231                           ;main.c: 801:         value -= digit;
  5232  001E00  C031  F01A         	movff	floatToString@value,___flsub@b
  5233  001E04  C032  F01B         	movff	floatToString@value+1,___flsub@b+1
  5234  001E08  C033  F01C         	movff	floatToString@value+2,___flsub@b+2
  5235  001E0C  C034  F01D         	movff	floatToString@value+3,___flsub@b+3
  5236  001E10  C06C  F00A         	movff	floatToString@digit,___xxtofl@val
  5237  001E14  C06D  F00B         	movff	floatToString@digit+1,___xxtofl@val+1
  5238  001E18  0E00               	movlw	0
  5239  001E1A  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  5240  001E1C  0EFF               	movlw	-1
  5241  001E1E  6E0C               	movwf	(___xxtofl@val+2)^0,c
  5242  001E20  6E0D               	movwf	(___xxtofl@val+3)^0,c
  5243  001E22  0E01               	movlw	1
  5244  001E24  EC3B  F010         	call	___xxtofl
  5245  001E28  C00A  F01E         	movff	?___xxtofl,___flsub@a
  5246  001E2C  C00B  F01F         	movff	?___xxtofl+1,___flsub@a+1
  5247  001E30  C00C  F020         	movff	?___xxtofl+2,___flsub@a+2
  5248  001E34  C00D  F021         	movff	?___xxtofl+3,___flsub@a+3
  5249  001E38  ECCB  F016         	call	___flsub	;wreg free
  5250  001E3C  C01A  F031         	movff	?___flsub,floatToString@value
  5251  001E40  C01B  F032         	movff	?___flsub+1,floatToString@value+1
  5252  001E44  C01C  F033         	movff	?___flsub+2,floatToString@value+2
  5253  001E48  C01D  F034         	movff	?___flsub+3,floatToString@value+3
  5254  001E4C                     
  5255                           ;main.c: 802:     }
  5256  001E4C  0100               	movlb	0	; () banked
  5257  001E4E  4B72               	infsnz	floatToString@i& (0+255),f,b
  5258  001E50  2B73               	incf	(floatToString@i+1)& (0+255),f,b
  5259  001E52                     l4987:
  5260                           
  5261                           ; BSR set to: 0
  5262  001E52  5037               	movf	floatToString@precision^0,w,c
  5263  001E54  5D72               	subwf	floatToString@i& (0+255),w,b
  5264  001E56  5173               	movf	(floatToString@i+1)& (0+255),w,b
  5265  001E58  0A80               	xorlw	128
  5266  001E5A  6E39               	movwf	??_floatToString^0,c
  5267  001E5C  5038               	movf	(floatToString@precision+1)^0,w,c
  5268  001E5E  0A80               	xorlw	128
  5269  001E60  5839               	subwfb	??_floatToString^0,w,c
  5270  001E62  A0D8               	btfss	status,0,c
  5271  001E64  EF36  F00F         	goto	u5031
  5272  001E68  EF38  F00F         	goto	u5030
  5273  001E6C                     u5031:
  5274  001E6C  EFCE  F00E         	goto	l4975
  5275  001E70                     u5030:
  5276  001E70                     
  5277                           ; BSR set to: 0
  5278                           ;main.c: 804:     *buffer = '\0';
  5279  001E70  C035  FFD9         	movff	floatToString@buffer,fsr2l
  5280  001E74  C036  FFDA         	movff	floatToString@buffer+1,fsr2h
  5281  001E78  0E00               	movlw	0
  5282  001E7A  6EDF               	movwf	indf2,c
  5283  001E7C                     
  5284                           ; BSR set to: 0
  5285  001E7C  0012               	return		;funcret
  5286  001E7E                     __end_of_floatToString:
  5287                           	callstack 0
  5288                           
  5289 ;; *************** function ___xxtofl *****************
  5290 ;; Defined at:
  5291 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;  sign            1    wreg     unsigned char 
  5294 ;;  val             4    9[COMRAM] long 
  5295 ;; Auto vars:     Size  Location     Type
  5296 ;;  sign            1   17[COMRAM] unsigned char 
  5297 ;;  arg             4   19[COMRAM] unsigned long 
  5298 ;;  exp             1   18[COMRAM] unsigned char 
  5299 ;; Return value:  Size  Location     Type
  5300 ;;                  4    9[COMRAM] unsigned char 
  5301 ;; Registers used:
  5302 ;;		wreg, status,2, status,0
  5303 ;; Tracked objects:
  5304 ;;		On entry : 0/0
  5305 ;;		On exit  : 0/0
  5306 ;;		Unchanged: 0/0
  5307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5308 ;;      Params:         4       0       0       0       0       0       0       0       0
  5309 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5310 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5311 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5312 ;;Total ram usage:       14 bytes
  5313 ;; Hardware stack levels used: 1
  5314 ;; Hardware stack levels required when called: 2
  5315 ;; This function calls:
  5316 ;;		Nothing
  5317 ;; This function is called by:
  5318 ;;		_main
  5319 ;;		_displayMenu
  5320 ;;		_tempRead
  5321 ;;		_humidade
  5322 ;;		_gasRead
  5323 ;;		_floatToString
  5324 ;; This function uses a non-reentrant model
  5325 ;;
  5326                           
  5327                           	psect	text14
  5328  002076                     __ptext14:
  5329                           	callstack 0
  5330  002076                     ___xxtofl:
  5331                           	callstack 27
  5332                           
  5333                           ; BSR set to: 0
  5334                           ;incstack = 0
  5335                           ;___xxtofl@sign stored from wreg
  5336  002076  6E12               	movwf	___xxtofl@sign^0,c
  5337  002078  5012               	movf	___xxtofl@sign^0,w,c
  5338  00207A  B4D8               	btfsc	status,2,c
  5339  00207C  EF42  F010         	goto	u4891
  5340  002080  EF44  F010         	goto	u4890
  5341  002084                     u4891:
  5342  002084  EF66  F010         	goto	l1041
  5343  002088                     u4890:
  5344  002088  BE0D               	btfsc	(___xxtofl@val+3)^0,7,c
  5345  00208A  EF4B  F010         	goto	u4900
  5346  00208E  EF49  F010         	goto	u4901
  5347  002092                     u4901:
  5348  002092  EF66  F010         	goto	l1041
  5349  002096                     u4900:
  5350  002096  C00A  F00E         	movff	___xxtofl@val,??___xxtofl
  5351  00209A  C00B  F00F         	movff	___xxtofl@val+1,??___xxtofl+1
  5352  00209E  C00C  F010         	movff	___xxtofl@val+2,??___xxtofl+2
  5353  0020A2  C00D  F011         	movff	___xxtofl@val+3,??___xxtofl+3
  5354  0020A6  1E0E               	comf	??___xxtofl^0,f,c
  5355  0020A8  1E0F               	comf	(??___xxtofl+1)^0,f,c
  5356  0020AA  1E10               	comf	(??___xxtofl+2)^0,f,c
  5357  0020AC  1E11               	comf	(??___xxtofl+3)^0,f,c
  5358  0020AE  2A0E               	incf	??___xxtofl^0,f,c
  5359  0020B0  0E00               	movlw	0
  5360  0020B2  220F               	addwfc	(??___xxtofl+1)^0,f,c
  5361  0020B4  2210               	addwfc	(??___xxtofl+2)^0,f,c
  5362  0020B6  2211               	addwfc	(??___xxtofl+3)^0,f,c
  5363  0020B8  C00E  F014         	movff	??___xxtofl,___xxtofl@arg
  5364  0020BC  C00F  F015         	movff	??___xxtofl+1,___xxtofl@arg+1
  5365  0020C0  C010  F016         	movff	??___xxtofl+2,___xxtofl@arg+2
  5366  0020C4  C011  F017         	movff	??___xxtofl+3,___xxtofl@arg+3
  5367  0020C8  EF6E  F010         	goto	l4859
  5368  0020CC                     l1041:
  5369  0020CC  C00A  F014         	movff	___xxtofl@val,___xxtofl@arg
  5370  0020D0  C00B  F015         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5371  0020D4  C00C  F016         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5372  0020D8  C00D  F017         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5373  0020DC                     l4859:
  5374  0020DC  500A               	movf	___xxtofl@val^0,w,c
  5375  0020DE  100B               	iorwf	(___xxtofl@val+1)^0,w,c
  5376  0020E0  100C               	iorwf	(___xxtofl@val+2)^0,w,c
  5377  0020E2  100D               	iorwf	(___xxtofl@val+3)^0,w,c
  5378  0020E4  A4D8               	btfss	status,2,c
  5379  0020E6  EF77  F010         	goto	u4911
  5380  0020EA  EF79  F010         	goto	u4910
  5381  0020EE                     u4911:
  5382  0020EE  EF83  F010         	goto	l4865
  5383  0020F2                     u4910:
  5384  0020F2  0E00               	movlw	0
  5385  0020F4  6E0A               	movwf	?___xxtofl^0,c
  5386  0020F6  0E00               	movlw	0
  5387  0020F8  6E0B               	movwf	(?___xxtofl+1)^0,c
  5388  0020FA  0E00               	movlw	0
  5389  0020FC  6E0C               	movwf	(?___xxtofl+2)^0,c
  5390  0020FE  0E00               	movlw	0
  5391  002100  6E0D               	movwf	(?___xxtofl+3)^0,c
  5392  002102  EF14  F011         	goto	l1044
  5393  002106                     l4865:
  5394  002106  0E96               	movlw	150
  5395  002108  6E13               	movwf	___xxtofl@exp^0,c
  5396  00210A  EF8D  F010         	goto	l4869
  5397  00210E                     l4867:
  5398  00210E  2A13               	incf	___xxtofl@exp^0,f,c
  5399  002110  90D8               	bcf	status,0,c
  5400  002112  3217               	rrcf	(___xxtofl@arg+3)^0,f,c
  5401  002114  3216               	rrcf	(___xxtofl@arg+2)^0,f,c
  5402  002116  3215               	rrcf	(___xxtofl@arg+1)^0,f,c
  5403  002118  3214               	rrcf	___xxtofl@arg^0,f,c
  5404  00211A                     l4869:
  5405  00211A  0E00               	movlw	0
  5406  00211C  1414               	andwf	___xxtofl@arg^0,w,c
  5407  00211E  6E0E               	movwf	??___xxtofl^0,c
  5408  002120  0E00               	movlw	0
  5409  002122  1415               	andwf	(___xxtofl@arg+1)^0,w,c
  5410  002124  6E0F               	movwf	(??___xxtofl+1)^0,c
  5411  002126  0E00               	movlw	0
  5412  002128  1416               	andwf	(___xxtofl@arg+2)^0,w,c
  5413  00212A  6E10               	movwf	(??___xxtofl+2)^0,c
  5414  00212C  0EFE               	movlw	254
  5415  00212E  1417               	andwf	(___xxtofl@arg+3)^0,w,c
  5416  002130  6E11               	movwf	(??___xxtofl+3)^0,c
  5417  002132  500E               	movf	??___xxtofl^0,w,c
  5418  002134  100F               	iorwf	(??___xxtofl+1)^0,w,c
  5419  002136  1010               	iorwf	(??___xxtofl+2)^0,w,c
  5420  002138  1011               	iorwf	(??___xxtofl+3)^0,w,c
  5421  00213A  A4D8               	btfss	status,2,c
  5422  00213C  EFA2  F010         	goto	u4921
  5423  002140  EFA4  F010         	goto	u4920
  5424  002144                     u4921:
  5425  002144  EF87  F010         	goto	l4867
  5426  002148                     u4920:
  5427  002148  EFB2  F010         	goto	l1048
  5428  00214C                     l4871:
  5429  00214C  2A13               	incf	___xxtofl@exp^0,f,c
  5430  00214E  0E01               	movlw	1
  5431  002150  2614               	addwf	___xxtofl@arg^0,f,c
  5432  002152  0E00               	movlw	0
  5433  002154  2215               	addwfc	(___xxtofl@arg+1)^0,f,c
  5434  002156  2216               	addwfc	(___xxtofl@arg+2)^0,f,c
  5435  002158  2217               	addwfc	(___xxtofl@arg+3)^0,f,c
  5436  00215A  90D8               	bcf	status,0,c
  5437  00215C  3217               	rrcf	(___xxtofl@arg+3)^0,f,c
  5438  00215E  3216               	rrcf	(___xxtofl@arg+2)^0,f,c
  5439  002160  3215               	rrcf	(___xxtofl@arg+1)^0,f,c
  5440  002162  3214               	rrcf	___xxtofl@arg^0,f,c
  5441  002164                     l1048:
  5442  002164  0E00               	movlw	0
  5443  002166  1414               	andwf	___xxtofl@arg^0,w,c
  5444  002168  6E0E               	movwf	??___xxtofl^0,c
  5445  00216A  0E00               	movlw	0
  5446  00216C  1415               	andwf	(___xxtofl@arg+1)^0,w,c
  5447  00216E  6E0F               	movwf	(??___xxtofl+1)^0,c
  5448  002170  0E00               	movlw	0
  5449  002172  1416               	andwf	(___xxtofl@arg+2)^0,w,c
  5450  002174  6E10               	movwf	(??___xxtofl+2)^0,c
  5451  002176  0EFF               	movlw	255
  5452  002178  1417               	andwf	(___xxtofl@arg+3)^0,w,c
  5453  00217A  6E11               	movwf	(??___xxtofl+3)^0,c
  5454  00217C  500E               	movf	??___xxtofl^0,w,c
  5455  00217E  100F               	iorwf	(??___xxtofl+1)^0,w,c
  5456  002180  1010               	iorwf	(??___xxtofl+2)^0,w,c
  5457  002182  1011               	iorwf	(??___xxtofl+3)^0,w,c
  5458  002184  A4D8               	btfss	status,2,c
  5459  002186  EFC7  F010         	goto	u4931
  5460  00218A  EFC9  F010         	goto	u4930
  5461  00218E                     u4931:
  5462  00218E  EFA6  F010         	goto	l4871
  5463  002192                     u4930:
  5464  002192  EFD1  F010         	goto	l4879
  5465  002196                     l4877:
  5466  002196  0613               	decf	___xxtofl@exp^0,f,c
  5467  002198  90D8               	bcf	status,0,c
  5468  00219A  3614               	rlcf	___xxtofl@arg^0,f,c
  5469  00219C  3615               	rlcf	(___xxtofl@arg+1)^0,f,c
  5470  00219E  3616               	rlcf	(___xxtofl@arg+2)^0,f,c
  5471  0021A0  3617               	rlcf	(___xxtofl@arg+3)^0,f,c
  5472  0021A2                     l4879:
  5473  0021A2  BE16               	btfsc	(___xxtofl@arg+2)^0,7,c
  5474  0021A4  EFD6  F010         	goto	u4941
  5475  0021A8  EFD8  F010         	goto	u4940
  5476  0021AC                     u4941:
  5477  0021AC  EFE0  F010         	goto	l1055
  5478  0021B0                     u4940:
  5479  0021B0  0E02               	movlw	2
  5480  0021B2  6013               	cpfslt	___xxtofl@exp^0,c
  5481  0021B4  EFDE  F010         	goto	u4951
  5482  0021B8  EFE0  F010         	goto	u4950
  5483  0021BC                     u4951:
  5484  0021BC  EFCB  F010         	goto	l4877
  5485  0021C0                     u4950:
  5486  0021C0                     l1055:
  5487  0021C0  B013               	btfsc	___xxtofl@exp^0,0,c
  5488  0021C2  EFE5  F010         	goto	u4961
  5489  0021C6  EFE7  F010         	goto	u4960
  5490  0021CA                     u4961:
  5491  0021CA  EFE8  F010         	goto	l4885
  5492  0021CE                     u4960:
  5493  0021CE  9E16               	bcf	(___xxtofl@arg+2)^0,7,c
  5494  0021D0                     l4885:
  5495  0021D0  90D8               	bcf	status,0,c
  5496  0021D2  3213               	rrcf	___xxtofl@exp^0,f,c
  5497  0021D4  C013  F00E         	movff	___xxtofl@exp,??___xxtofl
  5498  0021D8  6A0F               	clrf	(??___xxtofl+1)^0,c
  5499  0021DA  6A10               	clrf	(??___xxtofl+2)^0,c
  5500  0021DC  6A11               	clrf	(??___xxtofl+3)^0,c
  5501  0021DE  C00E  F011         	movff	??___xxtofl,??___xxtofl+3
  5502  0021E2  6A10               	clrf	(??___xxtofl+2)^0,c
  5503  0021E4  6A0F               	clrf	(??___xxtofl+1)^0,c
  5504  0021E6  6A0E               	clrf	??___xxtofl^0,c
  5505  0021E8  500E               	movf	??___xxtofl^0,w,c
  5506  0021EA  1214               	iorwf	___xxtofl@arg^0,f,c
  5507  0021EC  500F               	movf	(??___xxtofl+1)^0,w,c
  5508  0021EE  1215               	iorwf	(___xxtofl@arg+1)^0,f,c
  5509  0021F0  5010               	movf	(??___xxtofl+2)^0,w,c
  5510  0021F2  1216               	iorwf	(___xxtofl@arg+2)^0,f,c
  5511  0021F4  5011               	movf	(??___xxtofl+3)^0,w,c
  5512  0021F6  1217               	iorwf	(___xxtofl@arg+3)^0,f,c
  5513  0021F8  5012               	movf	___xxtofl@sign^0,w,c
  5514  0021FA  B4D8               	btfsc	status,2,c
  5515  0021FC  EF02  F011         	goto	u4971
  5516  002200  EF04  F011         	goto	u4970
  5517  002204                     u4971:
  5518  002204  EF0C  F011         	goto	l4895
  5519  002208                     u4970:
  5520  002208  BE0D               	btfsc	(___xxtofl@val+3)^0,7,c
  5521  00220A  EF0B  F011         	goto	u4980
  5522  00220E  EF09  F011         	goto	u4981
  5523  002212                     u4981:
  5524  002212  EF0C  F011         	goto	l4895
  5525  002216                     u4980:
  5526  002216  8E17               	bsf	(___xxtofl@arg+3)^0,7,c
  5527  002218                     l4895:
  5528  002218  C014  F00A         	movff	___xxtofl@arg,?___xxtofl
  5529  00221C  C015  F00B         	movff	___xxtofl@arg+1,?___xxtofl+1
  5530  002220  C016  F00C         	movff	___xxtofl@arg+2,?___xxtofl+2
  5531  002224  C017  F00D         	movff	___xxtofl@arg+3,?___xxtofl+3
  5532  002228                     l1044:
  5533  002228  0012               	return		;funcret
  5534  00222A                     __end_of___xxtofl:
  5535                           	callstack 0
  5536                           
  5537 ;; *************** function ___fltol *****************
  5538 ;; Defined at:
  5539 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5540 ;; Parameters:    Size  Location     Type
  5541 ;;  f1              4    9[COMRAM] unsigned char 
  5542 ;; Auto vars:     Size  Location     Type
  5543 ;;  exp1            1   18[COMRAM] unsigned char 
  5544 ;;  sign1           1   17[COMRAM] unsigned char 
  5545 ;; Return value:  Size  Location     Type
  5546 ;;                  4    9[COMRAM] long 
  5547 ;; Registers used:
  5548 ;;		wreg, status,2, status,0
  5549 ;; Tracked objects:
  5550 ;;		On entry : 0/0
  5551 ;;		On exit  : 0/0
  5552 ;;		Unchanged: 0/0
  5553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5554 ;;      Params:         4       0       0       0       0       0       0       0       0
  5555 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5556 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5557 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5558 ;;Total ram usage:       10 bytes
  5559 ;; Hardware stack levels used: 1
  5560 ;; Hardware stack levels required when called: 2
  5561 ;; This function calls:
  5562 ;;		Nothing
  5563 ;; This function is called by:
  5564 ;;		_floatToString
  5565 ;; This function uses a non-reentrant model
  5566 ;;
  5567                           
  5568                           	psect	text15
  5569  00248E                     __ptext15:
  5570                           	callstack 0
  5571  00248E                     ___fltol:
  5572                           	callstack 26
  5573  00248E  340C               	rlcf	(___fltol@f1+2)^0,w,c
  5574  002490  340D               	rlcf	(___fltol@f1+3)^0,w,c
  5575  002492  6E13               	movwf	___fltol@exp1^0,c
  5576  002494  5013               	movf	___fltol@exp1^0,w,c
  5577  002496  A4D8               	btfss	status,2,c
  5578  002498  EF50  F012         	goto	u4821
  5579  00249C  EF52  F012         	goto	u4820
  5580  0024A0                     u4821:
  5581  0024A0  EF5C  F012         	goto	l4815
  5582  0024A4                     u4820:
  5583  0024A4                     l4811:
  5584  0024A4  0E00               	movlw	0
  5585  0024A6  6E0A               	movwf	?___fltol^0,c
  5586  0024A8  0E00               	movlw	0
  5587  0024AA  6E0B               	movwf	(?___fltol+1)^0,c
  5588  0024AC  0E00               	movlw	0
  5589  0024AE  6E0C               	movwf	(?___fltol+2)^0,c
  5590  0024B0  0E00               	movlw	0
  5591  0024B2  6E0D               	movwf	(?___fltol+3)^0,c
  5592  0024B4  EFC9  F012         	goto	l683
  5593  0024B8                     l4815:
  5594  0024B8  C00A  F00E         	movff	___fltol@f1,??___fltol
  5595  0024BC  C00B  F00F         	movff	___fltol@f1+1,??___fltol+1
  5596  0024C0  C00C  F010         	movff	___fltol@f1+2,??___fltol+2
  5597  0024C4  C00D  F011         	movff	___fltol@f1+3,??___fltol+3
  5598  0024C8  0E20               	movlw	32
  5599  0024CA  EF6C  F012         	goto	u4830
  5600  0024CE                     u4835:
  5601  0024CE  90D8               	bcf	status,0,c
  5602  0024D0  3211               	rrcf	(??___fltol+3)^0,f,c
  5603  0024D2  3210               	rrcf	(??___fltol+2)^0,f,c
  5604  0024D4  320F               	rrcf	(??___fltol+1)^0,f,c
  5605  0024D6  320E               	rrcf	??___fltol^0,f,c
  5606  0024D8                     u4830:
  5607  0024D8  2EE8               	decfsz	wreg,f,c
  5608  0024DA  EF67  F012         	goto	u4835
  5609  0024DE  500E               	movf	??___fltol^0,w,c
  5610  0024E0  6E12               	movwf	___fltol@sign1^0,c
  5611  0024E2  8E0C               	bsf	(___fltol@f1+2)^0,7,c
  5612  0024E4  0EFF               	movlw	255
  5613  0024E6  160A               	andwf	___fltol@f1^0,f,c
  5614  0024E8  0EFF               	movlw	255
  5615  0024EA  160B               	andwf	(___fltol@f1+1)^0,f,c
  5616  0024EC  0EFF               	movlw	255
  5617  0024EE  160C               	andwf	(___fltol@f1+2)^0,f,c
  5618  0024F0  0E00               	movlw	0
  5619  0024F2  160D               	andwf	(___fltol@f1+3)^0,f,c
  5620  0024F4  0E96               	movlw	150
  5621  0024F6  5E13               	subwf	___fltol@exp1^0,f,c
  5622  0024F8  BE13               	btfsc	___fltol@exp1^0,7,c
  5623  0024FA  EF83  F012         	goto	u4840
  5624  0024FE  EF81  F012         	goto	u4841
  5625  002502                     u4841:
  5626  002502  EF99  F012         	goto	l4835
  5627  002506                     u4840:
  5628  002506  5013               	movf	___fltol@exp1^0,w,c
  5629  002508  0A80               	xorlw	128
  5630  00250A  0F97               	addlw	151
  5631  00250C  B0D8               	btfsc	status,0,c
  5632  00250E  EF8B  F012         	goto	u4851
  5633  002512  EF8D  F012         	goto	u4850
  5634  002516                     u4851:
  5635  002516  EF8F  F012         	goto	l4831
  5636  00251A                     u4850:
  5637  00251A  EF52  F012         	goto	l4811
  5638  00251E                     l4831:
  5639  00251E  90D8               	bcf	status,0,c
  5640  002520  320D               	rrcf	(___fltol@f1+3)^0,f,c
  5641  002522  320C               	rrcf	(___fltol@f1+2)^0,f,c
  5642  002524  320B               	rrcf	(___fltol@f1+1)^0,f,c
  5643  002526  320A               	rrcf	___fltol@f1^0,f,c
  5644  002528  3E13               	incfsz	___fltol@exp1^0,f,c
  5645  00252A  EF8F  F012         	goto	l4831
  5646  00252E  EFB1  F012         	goto	l4845
  5647  002532                     l4835:
  5648  002532  0E1F               	movlw	31
  5649  002534  6413               	cpfsgt	___fltol@exp1^0,c
  5650  002536  EF9F  F012         	goto	u4861
  5651  00253A  EFA1  F012         	goto	u4860
  5652  00253E                     u4861:
  5653  00253E  EFA9  F012         	goto	l4843
  5654  002542                     u4860:
  5655  002542  EF52  F012         	goto	l4811
  5656  002546                     l4841:
  5657  002546  90D8               	bcf	status,0,c
  5658  002548  360A               	rlcf	___fltol@f1^0,f,c
  5659  00254A  360B               	rlcf	(___fltol@f1+1)^0,f,c
  5660  00254C  360C               	rlcf	(___fltol@f1+2)^0,f,c
  5661  00254E  360D               	rlcf	(___fltol@f1+3)^0,f,c
  5662  002550  0613               	decf	___fltol@exp1^0,f,c
  5663  002552                     l4843:
  5664  002552  5013               	movf	___fltol@exp1^0,w,c
  5665  002554  A4D8               	btfss	status,2,c
  5666  002556  EFAF  F012         	goto	u4871
  5667  00255A  EFB1  F012         	goto	u4870
  5668  00255E                     u4871:
  5669  00255E  EFA3  F012         	goto	l4841
  5670  002562                     u4870:
  5671  002562                     l4845:
  5672  002562  5012               	movf	___fltol@sign1^0,w,c
  5673  002564  B4D8               	btfsc	status,2,c
  5674  002566  EFB7  F012         	goto	u4881
  5675  00256A  EFB9  F012         	goto	u4880
  5676  00256E                     u4881:
  5677  00256E  EFC1  F012         	goto	l4849
  5678  002572                     u4880:
  5679  002572  1E0D               	comf	(___fltol@f1+3)^0,f,c
  5680  002574  1E0C               	comf	(___fltol@f1+2)^0,f,c
  5681  002576  1E0B               	comf	(___fltol@f1+1)^0,f,c
  5682  002578  6C0A               	negf	___fltol@f1^0,c
  5683  00257A  0E00               	movlw	0
  5684  00257C  220B               	addwfc	(___fltol@f1+1)^0,f,c
  5685  00257E  220C               	addwfc	(___fltol@f1+2)^0,f,c
  5686  002580  220D               	addwfc	(___fltol@f1+3)^0,f,c
  5687  002582                     l4849:
  5688  002582  C00A  F00A         	movff	___fltol@f1,?___fltol
  5689  002586  C00B  F00B         	movff	___fltol@f1+1,?___fltol+1
  5690  00258A  C00C  F00C         	movff	___fltol@f1+2,?___fltol+2
  5691  00258E  C00D  F00D         	movff	___fltol@f1+3,?___fltol+3
  5692  002592                     l683:
  5693  002592  0012               	return		;funcret
  5694  002594                     __end_of___fltol:
  5695                           	callstack 0
  5696                           
  5697 ;; *************** function ___flsub *****************
  5698 ;; Defined at:
  5699 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5700 ;; Parameters:    Size  Location     Type
  5701 ;;  b               4   25[COMRAM] long 
  5702 ;;  a               4   29[COMRAM] long 
  5703 ;; Auto vars:     Size  Location     Type
  5704 ;;		None
  5705 ;; Return value:  Size  Location     Type
  5706 ;;                  4   25[COMRAM] long 
  5707 ;; Registers used:
  5708 ;;		wreg, status,2, status,0, cstack
  5709 ;; Tracked objects:
  5710 ;;		On entry : 0/0
  5711 ;;		On exit  : 0/0
  5712 ;;		Unchanged: 0/0
  5713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5714 ;;      Params:         8       0       0       0       0       0       0       0       0
  5715 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5716 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5717 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5718 ;;Total ram usage:        8 bytes
  5719 ;; Hardware stack levels used: 1
  5720 ;; Hardware stack levels required when called: 3
  5721 ;; This function calls:
  5722 ;;		___fladd
  5723 ;; This function is called by:
  5724 ;;		_floatToString
  5725 ;; This function uses a non-reentrant model
  5726 ;;
  5727                           
  5728                           	psect	text16
  5729  002D96                     __ptext16:
  5730                           	callstack 0
  5731  002D96                     ___flsub:
  5732                           	callstack 25
  5733  002D96  0E00               	movlw	0
  5734  002D98  1A1E               	xorwf	___flsub@a^0,f,c
  5735  002D9A  0E00               	movlw	0
  5736  002D9C  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  5737  002D9E  0E00               	movlw	0
  5738  002DA0  1A20               	xorwf	(___flsub@a+2)^0,f,c
  5739  002DA2  0E80               	movlw	128
  5740  002DA4  1A21               	xorwf	(___flsub@a+3)^0,f,c
  5741  002DA6  C01A  F00A         	movff	___flsub@b,___fladd@b
  5742  002DAA  C01B  F00B         	movff	___flsub@b+1,___fladd@b+1
  5743  002DAE  C01C  F00C         	movff	___flsub@b+2,___fladd@b+2
  5744  002DB2  C01D  F00D         	movff	___flsub@b+3,___fladd@b+3
  5745  002DB6  C01E  F00E         	movff	___flsub@a,___fladd@a
  5746  002DBA  C01F  F00F         	movff	___flsub@a+1,___fladd@a+1
  5747  002DBE  C020  F010         	movff	___flsub@a+2,___fladd@a+2
  5748  002DC2  C021  F011         	movff	___flsub@a+3,___fladd@a+3
  5749  002DC6  ECA5  F007         	call	___fladd	;wreg free
  5750  002DCA  C00A  F01A         	movff	?___fladd,?___flsub
  5751  002DCE  C00B  F01B         	movff	?___fladd+1,?___flsub+1
  5752  002DD2  C00C  F01C         	movff	?___fladd+2,?___flsub+2
  5753  002DD6  C00D  F01D         	movff	?___fladd+3,?___flsub+3
  5754  002DDA  0012               	return		;funcret
  5755  002DDC                     __end_of___flsub:
  5756                           	callstack 0
  5757                           
  5758 ;; *************** function ___fladd *****************
  5759 ;; Defined at:
  5760 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5761 ;; Parameters:    Size  Location     Type
  5762 ;;  b               4    9[COMRAM] long 
  5763 ;;  a               4   13[COMRAM] long 
  5764 ;; Auto vars:     Size  Location     Type
  5765 ;;  grs             1   24[COMRAM] unsigned char 
  5766 ;;  bexp            1   23[COMRAM] unsigned char 
  5767 ;;  aexp            1   22[COMRAM] unsigned char 
  5768 ;;  signs           1   21[COMRAM] unsigned char 
  5769 ;; Return value:  Size  Location     Type
  5770 ;;                  4    9[COMRAM] unsigned char 
  5771 ;; Registers used:
  5772 ;;		wreg, status,2, status,0
  5773 ;; Tracked objects:
  5774 ;;		On entry : 0/0
  5775 ;;		On exit  : 0/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5778 ;;      Params:         8       0       0       0       0       0       0       0       0
  5779 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5780 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5781 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5782 ;;Total ram usage:       16 bytes
  5783 ;; Hardware stack levels used: 1
  5784 ;; Hardware stack levels required when called: 2
  5785 ;; This function calls:
  5786 ;;		Nothing
  5787 ;; This function is called by:
  5788 ;;		___flsub
  5789 ;; This function uses a non-reentrant model
  5790 ;;
  5791                           
  5792                           	psect	text17
  5793  000F4A                     __ptext17:
  5794                           	callstack 0
  5795  000F4A                     ___fladd:
  5796                           	callstack 25
  5797  000F4A  500D               	movf	(___fladd@b+3)^0,w,c
  5798  000F4C  0B80               	andlw	128
  5799  000F4E  6E16               	movwf	___fladd@signs^0,c
  5800  000F50  500D               	movf	(___fladd@b+3)^0,w,c
  5801  000F52  240D               	addwf	(___fladd@b+3)^0,w,c
  5802  000F54  6E18               	movwf	___fladd@bexp^0,c
  5803  000F56  AE0C               	btfss	(___fladd@b+2)^0,7,c
  5804  000F58  EFB0  F007         	goto	u4111
  5805  000F5C  EFB2  F007         	goto	u4110
  5806  000F60                     u4111:
  5807  000F60  EFB3  F007         	goto	l4389
  5808  000F64                     u4110:
  5809  000F64  8018               	bsf	___fladd@bexp^0,0,c
  5810  000F66                     l4389:
  5811  000F66  5018               	movf	___fladd@bexp^0,w,c
  5812  000F68  B4D8               	btfsc	status,2,c
  5813  000F6A  EFB9  F007         	goto	u4121
  5814  000F6E  EFBB  F007         	goto	u4120
  5815  000F72                     u4121:
  5816  000F72  EFD0  F007         	goto	l4399
  5817  000F76                     u4120:
  5818  000F76  2818               	incf	___fladd@bexp^0,w,c
  5819  000F78  A4D8               	btfss	status,2,c
  5820  000F7A  EFC1  F007         	goto	u4131
  5821  000F7E  EFC3  F007         	goto	u4130
  5822  000F82                     u4131:
  5823  000F82  EFCB  F007         	goto	l4395
  5824  000F86                     u4130:
  5825  000F86  0E00               	movlw	0
  5826  000F88  6E0A               	movwf	___fladd@b^0,c
  5827  000F8A  0E00               	movlw	0
  5828  000F8C  6E0B               	movwf	(___fladd@b+1)^0,c
  5829  000F8E  0E00               	movlw	0
  5830  000F90  6E0C               	movwf	(___fladd@b+2)^0,c
  5831  000F92  0E00               	movlw	0
  5832  000F94  6E0D               	movwf	(___fladd@b+3)^0,c
  5833  000F96                     l4395:
  5834  000F96  8E0C               	bsf	(___fladd@b+2)^0,7,c
  5835  000F98  0E00               	movlw	0
  5836  000F9A  6E0D               	movwf	(___fladd@b+3)^0,c
  5837  000F9C  EFD8  F007         	goto	l4401
  5838  000FA0                     l4399:
  5839  000FA0  0E00               	movlw	0
  5840  000FA2  6E0A               	movwf	___fladd@b^0,c
  5841  000FA4  0E00               	movlw	0
  5842  000FA6  6E0B               	movwf	(___fladd@b+1)^0,c
  5843  000FA8  0E00               	movlw	0
  5844  000FAA  6E0C               	movwf	(___fladd@b+2)^0,c
  5845  000FAC  0E00               	movlw	0
  5846  000FAE  6E0D               	movwf	(___fladd@b+3)^0,c
  5847  000FB0                     l4401:
  5848  000FB0  5011               	movf	(___fladd@a+3)^0,w,c
  5849  000FB2  0B80               	andlw	128
  5850  000FB4  6E17               	movwf	___fladd@aexp^0,c
  5851  000FB6  5016               	movf	___fladd@signs^0,w,c
  5852  000FB8  1817               	xorwf	___fladd@aexp^0,w,c
  5853  000FBA  B4D8               	btfsc	status,2,c
  5854  000FBC  EFE2  F007         	goto	u4141
  5855  000FC0  EFE4  F007         	goto	u4140
  5856  000FC4                     u4141:
  5857  000FC4  EFE5  F007         	goto	l4407
  5858  000FC8                     u4140:
  5859  000FC8  8C16               	bsf	___fladd@signs^0,6,c
  5860  000FCA                     l4407:
  5861  000FCA  5011               	movf	(___fladd@a+3)^0,w,c
  5862  000FCC  2411               	addwf	(___fladd@a+3)^0,w,c
  5863  000FCE  6E17               	movwf	___fladd@aexp^0,c
  5864  000FD0  AE10               	btfss	(___fladd@a+2)^0,7,c
  5865  000FD2  EFED  F007         	goto	u4151
  5866  000FD6  EFEF  F007         	goto	u4150
  5867  000FDA                     u4151:
  5868  000FDA  EFF0  F007         	goto	l4413
  5869  000FDE                     u4150:
  5870  000FDE  8017               	bsf	___fladd@aexp^0,0,c
  5871  000FE0                     l4413:
  5872  000FE0  5017               	movf	___fladd@aexp^0,w,c
  5873  000FE2  B4D8               	btfsc	status,2,c
  5874  000FE4  EFF6  F007         	goto	u4161
  5875  000FE8  EFF8  F007         	goto	u4160
  5876  000FEC                     u4161:
  5877  000FEC  EF0D  F008         	goto	l4423
  5878  000FF0                     u4160:
  5879  000FF0  2817               	incf	___fladd@aexp^0,w,c
  5880  000FF2  A4D8               	btfss	status,2,c
  5881  000FF4  EFFE  F007         	goto	u4171
  5882  000FF8  EF00  F008         	goto	u4170
  5883  000FFC                     u4171:
  5884  000FFC  EF08  F008         	goto	l4419
  5885  001000                     u4170:
  5886  001000  0E00               	movlw	0
  5887  001002  6E0E               	movwf	___fladd@a^0,c
  5888  001004  0E00               	movlw	0
  5889  001006  6E0F               	movwf	(___fladd@a+1)^0,c
  5890  001008  0E00               	movlw	0
  5891  00100A  6E10               	movwf	(___fladd@a+2)^0,c
  5892  00100C  0E00               	movlw	0
  5893  00100E  6E11               	movwf	(___fladd@a+3)^0,c
  5894  001010                     l4419:
  5895  001010  8E10               	bsf	(___fladd@a+2)^0,7,c
  5896  001012  0E00               	movlw	0
  5897  001014  6E11               	movwf	(___fladd@a+3)^0,c
  5898  001016  EF15  F008         	goto	l4425
  5899  00101A                     l4423:
  5900  00101A  0E00               	movlw	0
  5901  00101C  6E0E               	movwf	___fladd@a^0,c
  5902  00101E  0E00               	movlw	0
  5903  001020  6E0F               	movwf	(___fladd@a+1)^0,c
  5904  001022  0E00               	movlw	0
  5905  001024  6E10               	movwf	(___fladd@a+2)^0,c
  5906  001026  0E00               	movlw	0
  5907  001028  6E11               	movwf	(___fladd@a+3)^0,c
  5908  00102A                     l4425:
  5909  00102A  5018               	movf	___fladd@bexp^0,w,c
  5910  00102C  5C17               	subwf	___fladd@aexp^0,w,c
  5911  00102E  B0D8               	btfsc	status,0,c
  5912  001030  EF1C  F008         	goto	u4181
  5913  001034  EF1E  F008         	goto	u4180
  5914  001038                     u4181:
  5915  001038  EF45  F008         	goto	l4461
  5916  00103C                     u4180:
  5917  00103C  AC16               	btfss	___fladd@signs^0,6,c
  5918  00103E  EF23  F008         	goto	u4191
  5919  001042  EF25  F008         	goto	u4190
  5920  001046                     u4191:
  5921  001046  EF27  F008         	goto	l4431
  5922  00104A                     u4190:
  5923  00104A  0E80               	movlw	128
  5924  00104C  1A16               	xorwf	___fladd@signs^0,f,c
  5925  00104E                     l4431:
  5926  00104E  C018  F019         	movff	___fladd@bexp,___fladd@grs
  5927  001052  C017  F018         	movff	___fladd@aexp,___fladd@bexp
  5928  001056  C019  F017         	movff	___fladd@grs,___fladd@aexp
  5929  00105A  C00A  F019         	movff	___fladd@b,___fladd@grs
  5930  00105E  C00E  F00A         	movff	___fladd@a,___fladd@b
  5931  001062  C019  F00E         	movff	___fladd@grs,___fladd@a
  5932  001066  C00B  F019         	movff	___fladd@b+1,___fladd@grs
  5933  00106A  C00F  F00B         	movff	___fladd@a+1,___fladd@b+1
  5934  00106E  C019  F00F         	movff	___fladd@grs,___fladd@a+1
  5935  001072  C00C  F019         	movff	___fladd@b+2,___fladd@grs
  5936  001076  C010  F00C         	movff	___fladd@a+2,___fladd@b+2
  5937  00107A  C019  F010         	movff	___fladd@grs,___fladd@a+2
  5938  00107E  C00D  F019         	movff	___fladd@b+3,___fladd@grs
  5939  001082  C011  F00D         	movff	___fladd@a+3,___fladd@b+3
  5940  001086  C019  F011         	movff	___fladd@grs,___fladd@a+3
  5941  00108A                     l4461:
  5942  00108A  0E00               	movlw	0
  5943  00108C  6E19               	movwf	___fladd@grs^0,c
  5944  00108E  5018               	movf	___fladd@bexp^0,w,c
  5945  001090  C017  F012         	movff	___fladd@aexp,??___fladd
  5946  001094  6A13               	clrf	(??___fladd+1)^0,c
  5947  001096  5E12               	subwf	??___fladd^0,f,c
  5948  001098  0E00               	movlw	0
  5949  00109A  5A13               	subwfb	(??___fladd+1)^0,f,c
  5950  00109C  BE13               	btfsc	(??___fladd+1)^0,7,c
  5951  00109E  EF5A  F008         	goto	u4201
  5952  0010A2  5013               	movf	(??___fladd+1)^0,w,c
  5953  0010A4  E109               	bnz	u4200
  5954  0010A6  0E1A               	movlw	26
  5955  0010A8  5C12               	subwf	??___fladd^0,w,c
  5956  0010AA  A0D8               	btfss	status,0,c
  5957  0010AC  EF5A  F008         	goto	u4201
  5958  0010B0  EF5C  F008         	goto	u4200
  5959  0010B4                     u4201:
  5960  0010B4  EF93  F008         	goto	l915
  5961  0010B8                     u4200:
  5962  0010B8  500A               	movf	___fladd@b^0,w,c
  5963  0010BA  100B               	iorwf	(___fladd@b+1)^0,w,c
  5964  0010BC  100C               	iorwf	(___fladd@b+2)^0,w,c
  5965  0010BE  100D               	iorwf	(___fladd@b+3)^0,w,c
  5966  0010C0  A4D8               	btfss	status,2,c
  5967  0010C2  EF65  F008         	goto	u4211
  5968  0010C6  EF68  F008         	goto	u4210
  5969  0010CA                     u4211:
  5970  0010CA  0E01               	movlw	1
  5971  0010CC  EF69  F008         	goto	u4220
  5972  0010D0                     u4210:
  5973  0010D0  0E00               	movlw	0
  5974  0010D2                     u4220:
  5975  0010D2  6E19               	movwf	___fladd@grs^0,c
  5976  0010D4  0E00               	movlw	0
  5977  0010D6  6E0A               	movwf	___fladd@b^0,c
  5978  0010D8  0E00               	movlw	0
  5979  0010DA  6E0B               	movwf	(___fladd@b+1)^0,c
  5980  0010DC  0E00               	movlw	0
  5981  0010DE  6E0C               	movwf	(___fladd@b+2)^0,c
  5982  0010E0  0E00               	movlw	0
  5983  0010E2  6E0D               	movwf	(___fladd@b+3)^0,c
  5984  0010E4  C017  F018         	movff	___fladd@aexp,___fladd@bexp
  5985  0010E8  EF9C  F008         	goto	l914
  5986  0010EC                     l916:
  5987  0010EC  A019               	btfss	___fladd@grs^0,0,c
  5988  0010EE  EF7B  F008         	goto	u4231
  5989  0010F2  EF7D  F008         	goto	u4230
  5990  0010F6                     u4231:
  5991  0010F6  EF83  F008         	goto	l4473
  5992  0010FA                     u4230:
  5993  0010FA  90D8               	bcf	status,0,c
  5994  0010FC  3019               	rrcf	___fladd@grs^0,w,c
  5995  0010FE  0901               	iorlw	1
  5996  001100  6E19               	movwf	___fladd@grs^0,c
  5997  001102  EF85  F008         	goto	l4475
  5998  001106                     l4473:
  5999  001106  90D8               	bcf	status,0,c
  6000  001108  3219               	rrcf	___fladd@grs^0,f,c
  6001  00110A                     l4475:
  6002  00110A  A00A               	btfss	___fladd@b^0,0,c
  6003  00110C  EF8A  F008         	goto	u4241
  6004  001110  EF8C  F008         	goto	u4240
  6005  001114                     u4241:
  6006  001114  EF8D  F008         	goto	l4479
  6007  001118                     u4240:
  6008  001118  8E19               	bsf	___fladd@grs^0,7,c
  6009  00111A                     l4479:
  6010  00111A  340D               	rlcf	(___fladd@b+3)^0,w,c
  6011  00111C  320D               	rrcf	(___fladd@b+3)^0,f,c
  6012  00111E  320C               	rrcf	(___fladd@b+2)^0,f,c
  6013  001120  320B               	rrcf	(___fladd@b+1)^0,f,c
  6014  001122  320A               	rrcf	___fladd@b^0,f,c
  6015  001124  2A18               	incf	___fladd@bexp^0,f,c
  6016  001126                     l915:
  6017  001126  5017               	movf	___fladd@aexp^0,w,c
  6018  001128  5C18               	subwf	___fladd@bexp^0,w,c
  6019  00112A  A0D8               	btfss	status,0,c
  6020  00112C  EF9A  F008         	goto	u4251
  6021  001130  EF9C  F008         	goto	u4250
  6022  001134                     u4251:
  6023  001134  EF76  F008         	goto	l916
  6024  001138                     u4250:
  6025  001138                     l914:
  6026  001138  BC16               	btfsc	___fladd@signs^0,6,c
  6027  00113A  EFA1  F008         	goto	u4261
  6028  00113E  EFA3  F008         	goto	u4260
  6029  001142                     u4261:
  6030  001142  EFE3  F008         	goto	l4507
  6031  001146                     u4260:
  6032  001146  5018               	movf	___fladd@bexp^0,w,c
  6033  001148  A4D8               	btfss	status,2,c
  6034  00114A  EFA9  F008         	goto	u4271
  6035  00114E  EFAB  F008         	goto	u4270
  6036  001152                     u4271:
  6037  001152  EFB5  F008         	goto	l4489
  6038  001156                     u4270:
  6039  001156  0E00               	movlw	0
  6040  001158  6E0A               	movwf	?___fladd^0,c
  6041  00115A  0E00               	movlw	0
  6042  00115C  6E0B               	movwf	(?___fladd+1)^0,c
  6043  00115E  0E00               	movlw	0
  6044  001160  6E0C               	movwf	(?___fladd+2)^0,c
  6045  001162  0E00               	movlw	0
  6046  001164  6E0D               	movwf	(?___fladd+3)^0,c
  6047  001166  EF04  F00A         	goto	l923
  6048  00116A                     l4489:
  6049  00116A  500E               	movf	___fladd@a^0,w,c
  6050  00116C  260A               	addwf	___fladd@b^0,f,c
  6051  00116E  500F               	movf	(___fladd@a+1)^0,w,c
  6052  001170  220B               	addwfc	(___fladd@b+1)^0,f,c
  6053  001172  5010               	movf	(___fladd@a+2)^0,w,c
  6054  001174  220C               	addwfc	(___fladd@b+2)^0,f,c
  6055  001176  5011               	movf	(___fladd@a+3)^0,w,c
  6056  001178  220D               	addwfc	(___fladd@b+3)^0,f,c
  6057  00117A  A00D               	btfss	(___fladd@b+3)^0,0,c
  6058  00117C  EFC2  F008         	goto	u4281
  6059  001180  EFC4  F008         	goto	u4280
  6060  001184                     u4281:
  6061  001184  EF70  F009         	goto	l4543
  6062  001188                     u4280:
  6063  001188  A019               	btfss	___fladd@grs^0,0,c
  6064  00118A  EFC9  F008         	goto	u4291
  6065  00118E  EFCB  F008         	goto	u4290
  6066  001192                     u4291:
  6067  001192  EFD1  F008         	goto	l4497
  6068  001196                     u4290:
  6069  001196  90D8               	bcf	status,0,c
  6070  001198  3019               	rrcf	___fladd@grs^0,w,c
  6071  00119A  0901               	iorlw	1
  6072  00119C  6E19               	movwf	___fladd@grs^0,c
  6073  00119E  EFD3  F008         	goto	l4499
  6074  0011A2                     l4497:
  6075  0011A2  90D8               	bcf	status,0,c
  6076  0011A4  3219               	rrcf	___fladd@grs^0,f,c
  6077  0011A6                     l4499:
  6078  0011A6  A00A               	btfss	___fladd@b^0,0,c
  6079  0011A8  EFD8  F008         	goto	u4301
  6080  0011AC  EFDA  F008         	goto	u4300
  6081  0011B0                     u4301:
  6082  0011B0  EFDB  F008         	goto	l4503
  6083  0011B4                     u4300:
  6084  0011B4  8E19               	bsf	___fladd@grs^0,7,c
  6085  0011B6                     l4503:
  6086  0011B6  340D               	rlcf	(___fladd@b+3)^0,w,c
  6087  0011B8  320D               	rrcf	(___fladd@b+3)^0,f,c
  6088  0011BA  320C               	rrcf	(___fladd@b+2)^0,f,c
  6089  0011BC  320B               	rrcf	(___fladd@b+1)^0,f,c
  6090  0011BE  320A               	rrcf	___fladd@b^0,f,c
  6091  0011C0  2A18               	incf	___fladd@bexp^0,f,c
  6092  0011C2  EF70  F009         	goto	l4543
  6093  0011C6                     l4507:
  6094  0011C6  500E               	movf	___fladd@a^0,w,c
  6095  0011C8  5C0A               	subwf	___fladd@b^0,w,c
  6096  0011CA  500F               	movf	(___fladd@a+1)^0,w,c
  6097  0011CC  580B               	subwfb	(___fladd@b+1)^0,w,c
  6098  0011CE  5010               	movf	(___fladd@a+2)^0,w,c
  6099  0011D0  580C               	subwfb	(___fladd@b+2)^0,w,c
  6100  0011D2  500D               	movf	(___fladd@b+3)^0,w,c
  6101  0011D4  0A80               	xorlw	128
  6102  0011D6  6E12               	movwf	??___fladd^0,c
  6103  0011D8  5011               	movf	(___fladd@a+3)^0,w,c
  6104  0011DA  0A80               	xorlw	128
  6105  0011DC  5812               	subwfb	??___fladd^0,w,c
  6106  0011DE  B0D8               	btfsc	status,0,c
  6107  0011E0  EFF4  F008         	goto	u4311
  6108  0011E4  EFF6  F008         	goto	u4310
  6109  0011E8                     u4311:
  6110  0011E8  EF21  F009         	goto	l4517
  6111  0011EC                     u4310:
  6112  0011EC  500A               	movf	___fladd@b^0,w,c
  6113  0011EE  5C0E               	subwf	___fladd@a^0,w,c
  6114  0011F0  6E12               	movwf	??___fladd^0,c
  6115  0011F2  500B               	movf	(___fladd@b+1)^0,w,c
  6116  0011F4  580F               	subwfb	(___fladd@a+1)^0,w,c
  6117  0011F6  6E13               	movwf	(??___fladd+1)^0,c
  6118  0011F8  500C               	movf	(___fladd@b+2)^0,w,c
  6119  0011FA  5810               	subwfb	(___fladd@a+2)^0,w,c
  6120  0011FC  6E14               	movwf	(??___fladd+2)^0,c
  6121  0011FE  500D               	movf	(___fladd@b+3)^0,w,c
  6122  001200  5811               	subwfb	(___fladd@a+3)^0,w,c
  6123  001202  6E15               	movwf	(??___fladd+3)^0,c
  6124  001204  0EFF               	movlw	255
  6125  001206  2412               	addwf	??___fladd^0,w,c
  6126  001208  6E0A               	movwf	___fladd@b^0,c
  6127  00120A  0EFF               	movlw	255
  6128  00120C  2013               	addwfc	(??___fladd+1)^0,w,c
  6129  00120E  6E0B               	movwf	(___fladd@b+1)^0,c
  6130  001210  0EFF               	movlw	255
  6131  001212  2014               	addwfc	(??___fladd+2)^0,w,c
  6132  001214  6E0C               	movwf	(___fladd@b+2)^0,c
  6133  001216  0EFF               	movlw	255
  6134  001218  2015               	addwfc	(??___fladd+3)^0,w,c
  6135  00121A  6E0D               	movwf	(___fladd@b+3)^0,c
  6136  00121C  0E80               	movlw	128
  6137  00121E  1A16               	xorwf	___fladd@signs^0,f,c
  6138  001220  6C19               	negf	___fladd@grs^0,c
  6139  001222  5019               	movf	___fladd@grs^0,w,c
  6140  001224  A4D8               	btfss	status,2,c
  6141  001226  EF17  F009         	goto	u4321
  6142  00122A  EF19  F009         	goto	u4320
  6143  00122E                     u4321:
  6144  00122E  EF29  F009         	goto	l931
  6145  001232                     u4320:
  6146  001232  0E01               	movlw	1
  6147  001234  260A               	addwf	___fladd@b^0,f,c
  6148  001236  0E00               	movlw	0
  6149  001238  220B               	addwfc	(___fladd@b+1)^0,f,c
  6150  00123A  220C               	addwfc	(___fladd@b+2)^0,f,c
  6151  00123C  220D               	addwfc	(___fladd@b+3)^0,f,c
  6152  00123E  EF29  F009         	goto	l931
  6153  001242                     l4517:
  6154  001242  500E               	movf	___fladd@a^0,w,c
  6155  001244  5E0A               	subwf	___fladd@b^0,f,c
  6156  001246  500F               	movf	(___fladd@a+1)^0,w,c
  6157  001248  5A0B               	subwfb	(___fladd@b+1)^0,f,c
  6158  00124A  5010               	movf	(___fladd@a+2)^0,w,c
  6159  00124C  5A0C               	subwfb	(___fladd@b+2)^0,f,c
  6160  00124E  5011               	movf	(___fladd@a+3)^0,w,c
  6161  001250  5A0D               	subwfb	(___fladd@b+3)^0,f,c
  6162  001252                     l931:
  6163  001252  500A               	movf	___fladd@b^0,w,c
  6164  001254  100B               	iorwf	(___fladd@b+1)^0,w,c
  6165  001256  100C               	iorwf	(___fladd@b+2)^0,w,c
  6166  001258  100D               	iorwf	(___fladd@b+3)^0,w,c
  6167  00125A  A4D8               	btfss	status,2,c
  6168  00125C  EF32  F009         	goto	u4331
  6169  001260  EF34  F009         	goto	u4330
  6170  001264                     u4331:
  6171  001264  EF69  F009         	goto	l4541
  6172  001268                     u4330:
  6173  001268  5019               	movf	___fladd@grs^0,w,c
  6174  00126A  A4D8               	btfss	status,2,c
  6175  00126C  EF3A  F009         	goto	u4341
  6176  001270  EF3C  F009         	goto	u4340
  6177  001274                     u4341:
  6178  001274  EF69  F009         	goto	l4541
  6179  001278                     u4340:
  6180  001278  0E00               	movlw	0
  6181  00127A  6E0A               	movwf	?___fladd^0,c
  6182  00127C  0E00               	movlw	0
  6183  00127E  6E0B               	movwf	(?___fladd+1)^0,c
  6184  001280  0E00               	movlw	0
  6185  001282  6E0C               	movwf	(?___fladd+2)^0,c
  6186  001284  0E00               	movlw	0
  6187  001286  6E0D               	movwf	(?___fladd+3)^0,c
  6188  001288  EF04  F00A         	goto	l923
  6189  00128C                     l4525:
  6190  00128C  90D8               	bcf	status,0,c
  6191  00128E  360A               	rlcf	___fladd@b^0,f,c
  6192  001290  360B               	rlcf	(___fladd@b+1)^0,f,c
  6193  001292  360C               	rlcf	(___fladd@b+2)^0,f,c
  6194  001294  360D               	rlcf	(___fladd@b+3)^0,f,c
  6195  001296  AE19               	btfss	___fladd@grs^0,7,c
  6196  001298  EF50  F009         	goto	u4351
  6197  00129C  EF52  F009         	goto	u4350
  6198  0012A0                     u4351:
  6199  0012A0  EF53  F009         	goto	l4531
  6200  0012A4                     u4350:
  6201  0012A4  800A               	bsf	___fladd@b^0,0,c
  6202  0012A6                     l4531:
  6203  0012A6  A019               	btfss	___fladd@grs^0,0,c
  6204  0012A8  EF58  F009         	goto	u4361
  6205  0012AC  EF5A  F009         	goto	u4360
  6206  0012B0                     u4361:
  6207  0012B0  EF5E  F009         	goto	l4535
  6208  0012B4                     u4360:
  6209  0012B4  80D8               	bsf	status,0,c
  6210  0012B6  3619               	rlcf	___fladd@grs^0,f,c
  6211  0012B8  EF60  F009         	goto	l4537
  6212  0012BC                     l4535:
  6213  0012BC  90D8               	bcf	status,0,c
  6214  0012BE  3619               	rlcf	___fladd@grs^0,f,c
  6215  0012C0                     l4537:
  6216  0012C0  5018               	movf	___fladd@bexp^0,w,c
  6217  0012C2  B4D8               	btfsc	status,2,c
  6218  0012C4  EF66  F009         	goto	u4371
  6219  0012C8  EF68  F009         	goto	u4370
  6220  0012CC                     u4371:
  6221  0012CC  EF69  F009         	goto	l4541
  6222  0012D0                     u4370:
  6223  0012D0  0618               	decf	___fladd@bexp^0,f,c
  6224  0012D2                     l4541:
  6225  0012D2  AE0C               	btfss	(___fladd@b+2)^0,7,c
  6226  0012D4  EF6E  F009         	goto	u4381
  6227  0012D8  EF70  F009         	goto	u4380
  6228  0012DC                     u4381:
  6229  0012DC  EF46  F009         	goto	l4525
  6230  0012E0                     u4380:
  6231  0012E0                     l4543:
  6232  0012E0  0E00               	movlw	0
  6233  0012E2  6E17               	movwf	___fladd@aexp^0,c
  6234  0012E4  AE19               	btfss	___fladd@grs^0,7,c
  6235  0012E6  EF77  F009         	goto	u4391
  6236  0012EA  EF79  F009         	goto	u4390
  6237  0012EE                     u4391:
  6238  0012EE  EF91  F009         	goto	l940
  6239  0012F2                     u4390:
  6240  0012F2  C019  F012         	movff	___fladd@grs,??___fladd
  6241  0012F6  0E7F               	movlw	127
  6242  0012F8  1612               	andwf	??___fladd^0,f,c
  6243  0012FA  B4D8               	btfsc	status,2,c
  6244  0012FC  EF82  F009         	goto	u4401
  6245  001300  EF84  F009         	goto	u4400
  6246  001304                     u4401:
  6247  001304  EF88  F009         	goto	l941
  6248  001308                     u4400:
  6249  001308                     l4549:
  6250  001308  0E01               	movlw	1
  6251  00130A  6E17               	movwf	___fladd@aexp^0,c
  6252  00130C  EF91  F009         	goto	l940
  6253  001310                     l941:
  6254  001310  A00A               	btfss	___fladd@b^0,0,c
  6255  001312  EF8D  F009         	goto	u4411
  6256  001316  EF8F  F009         	goto	u4410
  6257  00131A                     u4411:
  6258  00131A  EF91  F009         	goto	l940
  6259  00131E                     u4410:
  6260  00131E  EF84  F009         	goto	l4549
  6261  001322                     l940:
  6262  001322  5017               	movf	___fladd@aexp^0,w,c
  6263  001324  B4D8               	btfsc	status,2,c
  6264  001326  EF97  F009         	goto	u4421
  6265  00132A  EF99  F009         	goto	u4420
  6266  00132E                     u4421:
  6267  00132E  EFC4  F009         	goto	l4561
  6268  001332                     u4420:
  6269  001332  0E01               	movlw	1
  6270  001334  260A               	addwf	___fladd@b^0,f,c
  6271  001336  0E00               	movlw	0
  6272  001338  220B               	addwfc	(___fladd@b+1)^0,f,c
  6273  00133A  220C               	addwfc	(___fladd@b+2)^0,f,c
  6274  00133C  220D               	addwfc	(___fladd@b+3)^0,f,c
  6275  00133E  A00D               	btfss	(___fladd@b+3)^0,0,c
  6276  001340  EFA4  F009         	goto	u4431
  6277  001344  EFA6  F009         	goto	u4430
  6278  001348                     u4431:
  6279  001348  EFC4  F009         	goto	l4561
  6280  00134C                     u4430:
  6281  00134C  C00A  F012         	movff	___fladd@b,??___fladd
  6282  001350  C00B  F013         	movff	___fladd@b+1,??___fladd+1
  6283  001354  C00C  F014         	movff	___fladd@b+2,??___fladd+2
  6284  001358  C00D  F015         	movff	___fladd@b+3,??___fladd+3
  6285  00135C  3415               	rlcf	(??___fladd+3)^0,w,c
  6286  00135E  3215               	rrcf	(??___fladd+3)^0,f,c
  6287  001360  3214               	rrcf	(??___fladd+2)^0,f,c
  6288  001362  3213               	rrcf	(??___fladd+1)^0,f,c
  6289  001364  3212               	rrcf	??___fladd^0,f,c
  6290  001366  C012  F00A         	movff	??___fladd,___fladd@b
  6291  00136A  C013  F00B         	movff	??___fladd+1,___fladd@b+1
  6292  00136E  C014  F00C         	movff	??___fladd+2,___fladd@b+2
  6293  001372  C015  F00D         	movff	??___fladd+3,___fladd@b+3
  6294  001376  2818               	incf	___fladd@bexp^0,w,c
  6295  001378  B4D8               	btfsc	status,2,c
  6296  00137A  EFC1  F009         	goto	u4441
  6297  00137E  EFC3  F009         	goto	u4440
  6298  001382                     u4441:
  6299  001382  EFC4  F009         	goto	l4561
  6300  001386                     u4440:
  6301  001386  2A18               	incf	___fladd@bexp^0,f,c
  6302  001388                     l4561:
  6303  001388  2818               	incf	___fladd@bexp^0,w,c
  6304  00138A  B4D8               	btfsc	status,2,c
  6305  00138C  EFCA  F009         	goto	u4451
  6306  001390  EFCC  F009         	goto	u4450
  6307  001394                     u4451:
  6308  001394  EFD4  F009         	goto	l4565
  6309  001398                     u4450:
  6310  001398  5018               	movf	___fladd@bexp^0,w,c
  6311  00139A  A4D8               	btfss	status,2,c
  6312  00139C  EFD2  F009         	goto	u4461
  6313  0013A0  EFD4  F009         	goto	u4460
  6314  0013A4                     u4461:
  6315  0013A4  EFE6  F009         	goto	l4569
  6316  0013A8                     u4460:
  6317  0013A8                     l4565:
  6318  0013A8  0E00               	movlw	0
  6319  0013AA  6E0A               	movwf	___fladd@b^0,c
  6320  0013AC  0E00               	movlw	0
  6321  0013AE  6E0B               	movwf	(___fladd@b+1)^0,c
  6322  0013B0  0E00               	movlw	0
  6323  0013B2  6E0C               	movwf	(___fladd@b+2)^0,c
  6324  0013B4  0E00               	movlw	0
  6325  0013B6  6E0D               	movwf	(___fladd@b+3)^0,c
  6326  0013B8  5018               	movf	___fladd@bexp^0,w,c
  6327  0013BA  A4D8               	btfss	status,2,c
  6328  0013BC  EFE2  F009         	goto	u4471
  6329  0013C0  EFE4  F009         	goto	u4470
  6330  0013C4                     u4471:
  6331  0013C4  EFE6  F009         	goto	l4569
  6332  0013C8                     u4470:
  6333  0013C8  0E00               	movlw	0
  6334  0013CA  6E16               	movwf	___fladd@signs^0,c
  6335  0013CC                     l4569:
  6336  0013CC  A018               	btfss	___fladd@bexp^0,0,c
  6337  0013CE  EFEB  F009         	goto	u4481
  6338  0013D2  EFED  F009         	goto	u4480
  6339  0013D6                     u4481:
  6340  0013D6  EFF0  F009         	goto	l4573
  6341  0013DA                     u4480:
  6342  0013DA  8E0C               	bsf	(___fladd@b+2)^0,7,c
  6343  0013DC  EFF1  F009         	goto	l4575
  6344  0013E0                     l4573:
  6345  0013E0  9E0C               	bcf	(___fladd@b+2)^0,7,c
  6346  0013E2                     l4575:
  6347  0013E2  90D8               	bcf	status,0,c
  6348  0013E4  3018               	rrcf	___fladd@bexp^0,w,c
  6349  0013E6  6E0D               	movwf	(___fladd@b+3)^0,c
  6350  0013E8  AE16               	btfss	___fladd@signs^0,7,c
  6351  0013EA  EFF9  F009         	goto	u4491
  6352  0013EE  EFFB  F009         	goto	u4490
  6353  0013F2                     u4491:
  6354  0013F2  EFFC  F009         	goto	l4581
  6355  0013F6                     u4490:
  6356  0013F6  8E0D               	bsf	(___fladd@b+3)^0,7,c
  6357  0013F8                     l4581:
  6358  0013F8  C00A  F00A         	movff	___fladd@b,?___fladd
  6359  0013FC  C00B  F00B         	movff	___fladd@b+1,?___fladd+1
  6360  001400  C00C  F00C         	movff	___fladd@b+2,?___fladd+2
  6361  001404  C00D  F00D         	movff	___fladd@b+3,?___fladd+3
  6362  001408                     l923:
  6363  001408  0012               	return		;funcret
  6364  00140A                     __end_of___fladd:
  6365                           	callstack 0
  6366                           
  6367 ;; *************** function ___flneg *****************
  6368 ;; Defined at:
  6369 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  6370 ;; Parameters:    Size  Location     Type
  6371 ;;  f1              4    9[COMRAM] unsigned char 
  6372 ;; Auto vars:     Size  Location     Type
  6373 ;;		None
  6374 ;; Return value:  Size  Location     Type
  6375 ;;                  4    9[COMRAM] unsigned char 
  6376 ;; Registers used:
  6377 ;;		wreg, status,2, status,0
  6378 ;; Tracked objects:
  6379 ;;		On entry : 0/0
  6380 ;;		On exit  : 0/0
  6381 ;;		Unchanged: 0/0
  6382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6383 ;;      Params:         4       0       0       0       0       0       0       0       0
  6384 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6385 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6386 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6387 ;;Total ram usage:        4 bytes
  6388 ;; Hardware stack levels used: 1
  6389 ;; Hardware stack levels required when called: 2
  6390 ;; This function calls:
  6391 ;;		Nothing
  6392 ;; This function is called by:
  6393 ;;		_floatToString
  6394 ;; This function uses a non-reentrant model
  6395 ;;
  6396                           
  6397                           	psect	text18
  6398  002F24                     __ptext18:
  6399                           	callstack 0
  6400  002F24                     ___flneg:
  6401                           	callstack 26
  6402  002F24  500A               	movf	___flneg@f1^0,w,c
  6403  002F26  100B               	iorwf	(___flneg@f1+1)^0,w,c
  6404  002F28  100C               	iorwf	(___flneg@f1+2)^0,w,c
  6405  002F2A  100D               	iorwf	(___flneg@f1+3)^0,w,c
  6406  002F2C  B4D8               	btfsc	status,2,c
  6407  002F2E  EF9B  F017         	goto	u4811
  6408  002F32  EF9D  F017         	goto	u4810
  6409  002F36                     u4811:
  6410  002F36  EFA5  F017         	goto	l4805
  6411  002F3A                     u4810:
  6412  002F3A  0E00               	movlw	0
  6413  002F3C  1A0A               	xorwf	___flneg@f1^0,f,c
  6414  002F3E  0E00               	movlw	0
  6415  002F40  1A0B               	xorwf	(___flneg@f1+1)^0,f,c
  6416  002F42  0E00               	movlw	0
  6417  002F44  1A0C               	xorwf	(___flneg@f1+2)^0,f,c
  6418  002F46  0E80               	movlw	128
  6419  002F48  1A0D               	xorwf	(___flneg@f1+3)^0,f,c
  6420  002F4A                     l4805:
  6421  002F4A  C00A  F00A         	movff	___flneg@f1,?___flneg
  6422  002F4E  C00B  F00B         	movff	___flneg@f1+1,?___flneg+1
  6423  002F52  C00C  F00C         	movff	___flneg@f1+2,?___flneg+2
  6424  002F56  C00D  F00D         	movff	___flneg@f1+3,?___flneg+3
  6425  002F5A  0012               	return		;funcret
  6426  002F5C                     __end_of___flneg:
  6427                           	callstack 0
  6428                           
  6429 ;; *************** function ___flmul *****************
  6430 ;; Defined at:
  6431 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;  b               4   23[COMRAM] unsigned char 
  6434 ;;  a               4   27[COMRAM] unsigned char 
  6435 ;; Auto vars:     Size  Location     Type
  6436 ;;  prod            4   42[COMRAM] struct .
  6437 ;;  grs             4   37[COMRAM] unsigned long 
  6438 ;;  temp            2   46[COMRAM] struct .
  6439 ;;  bexp            1   41[COMRAM] unsigned char 
  6440 ;;  aexp            1   36[COMRAM] unsigned char 
  6441 ;;  sign            1   35[COMRAM] unsigned char 
  6442 ;; Return value:  Size  Location     Type
  6443 ;;                  4   23[COMRAM] unsigned char 
  6444 ;; Registers used:
  6445 ;;		wreg, status,2, status,0, prodl, prodh
  6446 ;; Tracked objects:
  6447 ;;		On entry : 0/0
  6448 ;;		On exit  : 0/0
  6449 ;;		Unchanged: 0/0
  6450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6451 ;;      Params:         8       0       0       0       0       0       0       0       0
  6452 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6453 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6454 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6455 ;;Total ram usage:       25 bytes
  6456 ;; Hardware stack levels used: 1
  6457 ;; Hardware stack levels required when called: 2
  6458 ;; This function calls:
  6459 ;;		Nothing
  6460 ;; This function is called by:
  6461 ;;		_tempRead
  6462 ;;		_humidade
  6463 ;;		_gasRead
  6464 ;;		_floatToString
  6465 ;; This function uses a non-reentrant model
  6466 ;;
  6467                           
  6468                           	psect	text19
  6469  00140A                     __ptext19:
  6470                           	callstack 0
  6471  00140A                     ___flmul:
  6472                           	callstack 27
  6473  00140A  501B               	movf	(___flmul@b+3)^0,w,c
  6474  00140C  0B80               	andlw	128
  6475  00140E  6E24               	movwf	___flmul@sign^0,c
  6476  001410  501B               	movf	(___flmul@b+3)^0,w,c
  6477  001412  241B               	addwf	(___flmul@b+3)^0,w,c
  6478  001414  6E2A               	movwf	___flmul@bexp^0,c
  6479  001416  AE1A               	btfss	(___flmul@b+2)^0,7,c
  6480  001418  EF10  F00A         	goto	u4501
  6481  00141C  EF12  F00A         	goto	u4500
  6482  001420                     u4501:
  6483  001420  EF13  F00A         	goto	l4591
  6484  001424                     u4500:
  6485  001424  802A               	bsf	___flmul@bexp^0,0,c
  6486  001426                     l4591:
  6487  001426  502A               	movf	___flmul@bexp^0,w,c
  6488  001428  B4D8               	btfsc	status,2,c
  6489  00142A  EF19  F00A         	goto	u4511
  6490  00142E  EF1B  F00A         	goto	u4510
  6491  001432                     u4511:
  6492  001432  EF2E  F00A         	goto	l4599
  6493  001436                     u4510:
  6494  001436  282A               	incf	___flmul@bexp^0,w,c
  6495  001438  A4D8               	btfss	status,2,c
  6496  00143A  EF21  F00A         	goto	u4521
  6497  00143E  EF23  F00A         	goto	u4520
  6498  001442                     u4521:
  6499  001442  EF2B  F00A         	goto	l4597
  6500  001446                     u4520:
  6501  001446  0E00               	movlw	0
  6502  001448  6E18               	movwf	___flmul@b^0,c
  6503  00144A  0E00               	movlw	0
  6504  00144C  6E19               	movwf	(___flmul@b+1)^0,c
  6505  00144E  0E00               	movlw	0
  6506  001450  6E1A               	movwf	(___flmul@b+2)^0,c
  6507  001452  0E00               	movlw	0
  6508  001454  6E1B               	movwf	(___flmul@b+3)^0,c
  6509  001456                     l4597:
  6510  001456  8E1A               	bsf	(___flmul@b+2)^0,7,c
  6511  001458  EF36  F00A         	goto	l4601
  6512  00145C                     l4599:
  6513  00145C  0E00               	movlw	0
  6514  00145E  6E18               	movwf	___flmul@b^0,c
  6515  001460  0E00               	movlw	0
  6516  001462  6E19               	movwf	(___flmul@b+1)^0,c
  6517  001464  0E00               	movlw	0
  6518  001466  6E1A               	movwf	(___flmul@b+2)^0,c
  6519  001468  0E00               	movlw	0
  6520  00146A  6E1B               	movwf	(___flmul@b+3)^0,c
  6521  00146C                     l4601:
  6522  00146C  501F               	movf	(___flmul@a+3)^0,w,c
  6523  00146E  0B80               	andlw	128
  6524  001470  1A24               	xorwf	___flmul@sign^0,f,c
  6525  001472  501F               	movf	(___flmul@a+3)^0,w,c
  6526  001474  241F               	addwf	(___flmul@a+3)^0,w,c
  6527  001476  6E25               	movwf	___flmul@aexp^0,c
  6528  001478  AE1E               	btfss	(___flmul@a+2)^0,7,c
  6529  00147A  EF41  F00A         	goto	u4531
  6530  00147E  EF43  F00A         	goto	u4530
  6531  001482                     u4531:
  6532  001482  EF44  F00A         	goto	l4609
  6533  001486                     u4530:
  6534  001486  8025               	bsf	___flmul@aexp^0,0,c
  6535  001488                     l4609:
  6536  001488  5025               	movf	___flmul@aexp^0,w,c
  6537  00148A  B4D8               	btfsc	status,2,c
  6538  00148C  EF4A  F00A         	goto	u4541
  6539  001490  EF4C  F00A         	goto	u4540
  6540  001494                     u4541:
  6541  001494  EF5F  F00A         	goto	l4617
  6542  001498                     u4540:
  6543  001498  2825               	incf	___flmul@aexp^0,w,c
  6544  00149A  A4D8               	btfss	status,2,c
  6545  00149C  EF52  F00A         	goto	u4551
  6546  0014A0  EF54  F00A         	goto	u4550
  6547  0014A4                     u4551:
  6548  0014A4  EF5C  F00A         	goto	l4615
  6549  0014A8                     u4550:
  6550  0014A8  0E00               	movlw	0
  6551  0014AA  6E1C               	movwf	___flmul@a^0,c
  6552  0014AC  0E00               	movlw	0
  6553  0014AE  6E1D               	movwf	(___flmul@a+1)^0,c
  6554  0014B0  0E00               	movlw	0
  6555  0014B2  6E1E               	movwf	(___flmul@a+2)^0,c
  6556  0014B4  0E00               	movlw	0
  6557  0014B6  6E1F               	movwf	(___flmul@a+3)^0,c
  6558  0014B8                     l4615:
  6559  0014B8  8E1E               	bsf	(___flmul@a+2)^0,7,c
  6560  0014BA  EF67  F00A         	goto	l1000
  6561  0014BE                     l4617:
  6562  0014BE  0E00               	movlw	0
  6563  0014C0  6E1C               	movwf	___flmul@a^0,c
  6564  0014C2  0E00               	movlw	0
  6565  0014C4  6E1D               	movwf	(___flmul@a+1)^0,c
  6566  0014C6  0E00               	movlw	0
  6567  0014C8  6E1E               	movwf	(___flmul@a+2)^0,c
  6568  0014CA  0E00               	movlw	0
  6569  0014CC  6E1F               	movwf	(___flmul@a+3)^0,c
  6570  0014CE                     l1000:
  6571  0014CE  5025               	movf	___flmul@aexp^0,w,c
  6572  0014D0  B4D8               	btfsc	status,2,c
  6573  0014D2  EF6D  F00A         	goto	u4561
  6574  0014D6  EF6F  F00A         	goto	u4560
  6575  0014DA                     u4561:
  6576  0014DA  EF77  F00A         	goto	l4621
  6577  0014DE                     u4560:
  6578  0014DE  502A               	movf	___flmul@bexp^0,w,c
  6579  0014E0  A4D8               	btfss	status,2,c
  6580  0014E2  EF75  F00A         	goto	u4571
  6581  0014E6  EF77  F00A         	goto	u4570
  6582  0014EA                     u4571:
  6583  0014EA  EF81  F00A         	goto	l4625
  6584  0014EE                     u4570:
  6585  0014EE                     l4621:
  6586  0014EE  0E00               	movlw	0
  6587  0014F0  6E18               	movwf	?___flmul^0,c
  6588  0014F2  0E00               	movlw	0
  6589  0014F4  6E19               	movwf	(?___flmul+1)^0,c
  6590  0014F6  0E00               	movlw	0
  6591  0014F8  6E1A               	movwf	(?___flmul+2)^0,c
  6592  0014FA  0E00               	movlw	0
  6593  0014FC  6E1B               	movwf	(?___flmul+3)^0,c
  6594  0014FE  EF19  F00C         	goto	l1004
  6595  001502                     l4625:
  6596  001502  501E               	movf	(___flmul@a+2)^0,w,c
  6597  001504  0218               	mulwf	___flmul@b^0,c
  6598  001506  CFF3 F02F          	movff	prodl,___flmul@temp
  6599  00150A  CFF4 F030          	movff	prodh,___flmul@temp+1
  6600  00150E  502F               	movf	___flmul@temp^0,w,c
  6601  001510  6E26               	movwf	___flmul@grs^0,c
  6602  001512  6A27               	clrf	(___flmul@grs+1)^0,c
  6603  001514  6A28               	clrf	(___flmul@grs+2)^0,c
  6604  001516  6A29               	clrf	(___flmul@grs+3)^0,c
  6605  001518  5030               	movf	(___flmul@temp+1)^0,w,c
  6606  00151A  6E2B               	movwf	___flmul@prod^0,c
  6607  00151C  6A2C               	clrf	(___flmul@prod+1)^0,c
  6608  00151E  6A2D               	clrf	(___flmul@prod+2)^0,c
  6609  001520  6A2E               	clrf	(___flmul@prod+3)^0,c
  6610  001522  501D               	movf	(___flmul@a+1)^0,w,c
  6611  001524  0219               	mulwf	(___flmul@b+1)^0,c
  6612  001526  CFF3 F02F          	movff	prodl,___flmul@temp
  6613  00152A  CFF4 F030          	movff	prodh,___flmul@temp+1
  6614  00152E  502F               	movf	___flmul@temp^0,w,c
  6615  001530  2626               	addwf	___flmul@grs^0,f,c
  6616  001532  0E00               	movlw	0
  6617  001534  2227               	addwfc	(___flmul@grs+1)^0,f,c
  6618  001536  2228               	addwfc	(___flmul@grs+2)^0,f,c
  6619  001538  2229               	addwfc	(___flmul@grs+3)^0,f,c
  6620  00153A  5030               	movf	(___flmul@temp+1)^0,w,c
  6621  00153C  262B               	addwf	___flmul@prod^0,f,c
  6622  00153E  0E00               	movlw	0
  6623  001540  222C               	addwfc	(___flmul@prod+1)^0,f,c
  6624  001542  222D               	addwfc	(___flmul@prod+2)^0,f,c
  6625  001544  222E               	addwfc	(___flmul@prod+3)^0,f,c
  6626  001546  501C               	movf	___flmul@a^0,w,c
  6627  001548  021A               	mulwf	(___flmul@b+2)^0,c
  6628  00154A  CFF3 F02F          	movff	prodl,___flmul@temp
  6629  00154E  CFF4 F030          	movff	prodh,___flmul@temp+1
  6630  001552  502F               	movf	___flmul@temp^0,w,c
  6631  001554  2626               	addwf	___flmul@grs^0,f,c
  6632  001556  0E00               	movlw	0
  6633  001558  2227               	addwfc	(___flmul@grs+1)^0,f,c
  6634  00155A  2228               	addwfc	(___flmul@grs+2)^0,f,c
  6635  00155C  2229               	addwfc	(___flmul@grs+3)^0,f,c
  6636  00155E  5030               	movf	(___flmul@temp+1)^0,w,c
  6637  001560  262B               	addwf	___flmul@prod^0,f,c
  6638  001562  0E00               	movlw	0
  6639  001564  222C               	addwfc	(___flmul@prod+1)^0,f,c
  6640  001566  222D               	addwfc	(___flmul@prod+2)^0,f,c
  6641  001568  222E               	addwfc	(___flmul@prod+3)^0,f,c
  6642  00156A  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  6643  00156E  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  6644  001572  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  6645  001576  6A26               	clrf	___flmul@grs^0,c
  6646  001578  501C               	movf	___flmul@a^0,w,c
  6647  00157A  0219               	mulwf	(___flmul@b+1)^0,c
  6648  00157C  CFF3 F02F          	movff	prodl,___flmul@temp
  6649  001580  CFF4 F030          	movff	prodh,___flmul@temp+1
  6650  001584  502F               	movf	___flmul@temp^0,w,c
  6651  001586  2626               	addwf	___flmul@grs^0,f,c
  6652  001588  5030               	movf	(___flmul@temp+1)^0,w,c
  6653  00158A  2227               	addwfc	(___flmul@grs+1)^0,f,c
  6654  00158C  0E00               	movlw	0
  6655  00158E  2228               	addwfc	(___flmul@grs+2)^0,f,c
  6656  001590  0E00               	movlw	0
  6657  001592  2229               	addwfc	(___flmul@grs+3)^0,f,c
  6658  001594  501D               	movf	(___flmul@a+1)^0,w,c
  6659  001596  0218               	mulwf	___flmul@b^0,c
  6660  001598  CFF3 F02F          	movff	prodl,___flmul@temp
  6661  00159C  CFF4 F030          	movff	prodh,___flmul@temp+1
  6662  0015A0  502F               	movf	___flmul@temp^0,w,c
  6663  0015A2  2626               	addwf	___flmul@grs^0,f,c
  6664  0015A4  5030               	movf	(___flmul@temp+1)^0,w,c
  6665  0015A6  2227               	addwfc	(___flmul@grs+1)^0,f,c
  6666  0015A8  0E00               	movlw	0
  6667  0015AA  2228               	addwfc	(___flmul@grs+2)^0,f,c
  6668  0015AC  0E00               	movlw	0
  6669  0015AE  2229               	addwfc	(___flmul@grs+3)^0,f,c
  6670  0015B0  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  6671  0015B4  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  6672  0015B8  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  6673  0015BC  6A26               	clrf	___flmul@grs^0,c
  6674  0015BE  501C               	movf	___flmul@a^0,w,c
  6675  0015C0  0218               	mulwf	___flmul@b^0,c
  6676  0015C2  CFF3 F02F          	movff	prodl,___flmul@temp
  6677  0015C6  CFF4 F030          	movff	prodh,___flmul@temp+1
  6678  0015CA  502F               	movf	___flmul@temp^0,w,c
  6679  0015CC  2626               	addwf	___flmul@grs^0,f,c
  6680  0015CE  5030               	movf	(___flmul@temp+1)^0,w,c
  6681  0015D0  2227               	addwfc	(___flmul@grs+1)^0,f,c
  6682  0015D2  0E00               	movlw	0
  6683  0015D4  2228               	addwfc	(___flmul@grs+2)^0,f,c
  6684  0015D6  0E00               	movlw	0
  6685  0015D8  2229               	addwfc	(___flmul@grs+3)^0,f,c
  6686  0015DA  501E               	movf	(___flmul@a+2)^0,w,c
  6687  0015DC  0219               	mulwf	(___flmul@b+1)^0,c
  6688  0015DE  CFF3 F02F          	movff	prodl,___flmul@temp
  6689  0015E2  CFF4 F030          	movff	prodh,___flmul@temp+1
  6690  0015E6  502F               	movf	___flmul@temp^0,w,c
  6691  0015E8  262B               	addwf	___flmul@prod^0,f,c
  6692  0015EA  5030               	movf	(___flmul@temp+1)^0,w,c
  6693  0015EC  222C               	addwfc	(___flmul@prod+1)^0,f,c
  6694  0015EE  0E00               	movlw	0
  6695  0015F0  222D               	addwfc	(___flmul@prod+2)^0,f,c
  6696  0015F2  0E00               	movlw	0
  6697  0015F4  222E               	addwfc	(___flmul@prod+3)^0,f,c
  6698  0015F6  501D               	movf	(___flmul@a+1)^0,w,c
  6699  0015F8  021A               	mulwf	(___flmul@b+2)^0,c
  6700  0015FA  CFF3 F02F          	movff	prodl,___flmul@temp
  6701  0015FE  CFF4 F030          	movff	prodh,___flmul@temp+1
  6702  001602  502F               	movf	___flmul@temp^0,w,c
  6703  001604  262B               	addwf	___flmul@prod^0,f,c
  6704  001606  5030               	movf	(___flmul@temp+1)^0,w,c
  6705  001608  222C               	addwfc	(___flmul@prod+1)^0,f,c
  6706  00160A  0E00               	movlw	0
  6707  00160C  222D               	addwfc	(___flmul@prod+2)^0,f,c
  6708  00160E  0E00               	movlw	0
  6709  001610  222E               	addwfc	(___flmul@prod+3)^0,f,c
  6710  001612  501E               	movf	(___flmul@a+2)^0,w,c
  6711  001614  021A               	mulwf	(___flmul@b+2)^0,c
  6712  001616  CFF3 F02F          	movff	prodl,___flmul@temp
  6713  00161A  CFF4 F030          	movff	prodh,___flmul@temp+1
  6714  00161E  502F               	movf	___flmul@temp^0,w,c
  6715  001620  6E20               	movwf	??___flmul^0,c
  6716  001622  5030               	movf	(___flmul@temp+1)^0,w,c
  6717  001624  6E21               	movwf	(??___flmul+1)^0,c
  6718  001626  6A22               	clrf	(??___flmul+2)^0,c
  6719  001628  6A23               	clrf	(??___flmul+3)^0,c
  6720  00162A  C022  F023         	movff	??___flmul+2,??___flmul+3
  6721  00162E  C021  F022         	movff	??___flmul+1,??___flmul+2
  6722  001632  C020  F021         	movff	??___flmul,??___flmul+1
  6723  001636  6A20               	clrf	??___flmul^0,c
  6724  001638  5020               	movf	??___flmul^0,w,c
  6725  00163A  262B               	addwf	___flmul@prod^0,f,c
  6726  00163C  5021               	movf	(??___flmul+1)^0,w,c
  6727  00163E  222C               	addwfc	(___flmul@prod+1)^0,f,c
  6728  001640  5022               	movf	(??___flmul+2)^0,w,c
  6729  001642  222D               	addwfc	(___flmul@prod+2)^0,f,c
  6730  001644  5023               	movf	(??___flmul+3)^0,w,c
  6731  001646  222E               	addwfc	(___flmul@prod+3)^0,f,c
  6732  001648  C026  F020         	movff	___flmul@grs,??___flmul
  6733  00164C  C027  F021         	movff	___flmul@grs+1,??___flmul+1
  6734  001650  C028  F022         	movff	___flmul@grs+2,??___flmul+2
  6735  001654  C029  F023         	movff	___flmul@grs+3,??___flmul+3
  6736  001658  0E19               	movlw	25
  6737  00165A  EF34  F00B         	goto	u4580
  6738  00165E                     u4585:
  6739  00165E  90D8               	bcf	status,0,c
  6740  001660  3223               	rrcf	(??___flmul+3)^0,f,c
  6741  001662  3222               	rrcf	(??___flmul+2)^0,f,c
  6742  001664  3221               	rrcf	(??___flmul+1)^0,f,c
  6743  001666  3220               	rrcf	??___flmul^0,f,c
  6744  001668                     u4580:
  6745  001668  2EE8               	decfsz	wreg,f,c
  6746  00166A  EF2F  F00B         	goto	u4585
  6747  00166E  5020               	movf	??___flmul^0,w,c
  6748  001670  262B               	addwf	___flmul@prod^0,f,c
  6749  001672  5021               	movf	(??___flmul+1)^0,w,c
  6750  001674  222C               	addwfc	(___flmul@prod+1)^0,f,c
  6751  001676  5022               	movf	(??___flmul+2)^0,w,c
  6752  001678  222D               	addwfc	(___flmul@prod+2)^0,f,c
  6753  00167A  5023               	movf	(??___flmul+3)^0,w,c
  6754  00167C  222E               	addwfc	(___flmul@prod+3)^0,f,c
  6755  00167E  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  6756  001682  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  6757  001686  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  6758  00168A  6A26               	clrf	___flmul@grs^0,c
  6759  00168C  5025               	movf	___flmul@aexp^0,w,c
  6760  00168E  C02A  F020         	movff	___flmul@bexp,??___flmul
  6761  001692  6A21               	clrf	(??___flmul+1)^0,c
  6762  001694  2620               	addwf	??___flmul^0,f,c
  6763  001696  0E00               	movlw	0
  6764  001698  2221               	addwfc	(??___flmul+1)^0,f,c
  6765  00169A  0E82               	movlw	130
  6766  00169C  2420               	addwf	??___flmul^0,w,c
  6767  00169E  6E2F               	movwf	___flmul@temp^0,c
  6768  0016A0  0EFF               	movlw	255
  6769  0016A2  2021               	addwfc	(??___flmul+1)^0,w,c
  6770  0016A4  6E30               	movwf	(___flmul@temp+1)^0,c
  6771  0016A6  EF6A  F00B         	goto	l4673
  6772  0016AA                     l4667:
  6773  0016AA  90D8               	bcf	status,0,c
  6774  0016AC  362B               	rlcf	___flmul@prod^0,f,c
  6775  0016AE  362C               	rlcf	(___flmul@prod+1)^0,f,c
  6776  0016B0  362D               	rlcf	(___flmul@prod+2)^0,f,c
  6777  0016B2  362E               	rlcf	(___flmul@prod+3)^0,f,c
  6778  0016B4  AE29               	btfss	(___flmul@grs+3)^0,7,c
  6779  0016B6  EF5F  F00B         	goto	u4591
  6780  0016BA  EF61  F00B         	goto	u4590
  6781  0016BE                     u4591:
  6782  0016BE  EF62  F00B         	goto	l1007
  6783  0016C2                     u4590:
  6784  0016C2  802B               	bsf	___flmul@prod^0,0,c
  6785  0016C4                     l1007:
  6786  0016C4  90D8               	bcf	status,0,c
  6787  0016C6  3626               	rlcf	___flmul@grs^0,f,c
  6788  0016C8  3627               	rlcf	(___flmul@grs+1)^0,f,c
  6789  0016CA  3628               	rlcf	(___flmul@grs+2)^0,f,c
  6790  0016CC  3629               	rlcf	(___flmul@grs+3)^0,f,c
  6791  0016CE  062F               	decf	___flmul@temp^0,f,c
  6792  0016D0  A0D8               	btfss	status,0,c
  6793  0016D2  0630               	decf	(___flmul@temp+1)^0,f,c
  6794  0016D4                     l4673:
  6795  0016D4  AE2D               	btfss	(___flmul@prod+2)^0,7,c
  6796  0016D6  EF6F  F00B         	goto	u4601
  6797  0016DA  EF71  F00B         	goto	u4600
  6798  0016DE                     u4601:
  6799  0016DE  EF55  F00B         	goto	l4667
  6800  0016E2                     u4600:
  6801  0016E2  0E00               	movlw	0
  6802  0016E4  6E25               	movwf	___flmul@aexp^0,c
  6803  0016E6  AE29               	btfss	(___flmul@grs+3)^0,7,c
  6804  0016E8  EF78  F00B         	goto	u4611
  6805  0016EC  EF7A  F00B         	goto	u4610
  6806  0016F0                     u4611:
  6807  0016F0  EF9E  F00B         	goto	l1009
  6808  0016F4                     u4610:
  6809  0016F4  0EFF               	movlw	255
  6810  0016F6  1426               	andwf	___flmul@grs^0,w,c
  6811  0016F8  6E20               	movwf	??___flmul^0,c
  6812  0016FA  0EFF               	movlw	255
  6813  0016FC  1427               	andwf	(___flmul@grs+1)^0,w,c
  6814  0016FE  6E21               	movwf	(??___flmul+1)^0,c
  6815  001700  0EFF               	movlw	255
  6816  001702  1428               	andwf	(___flmul@grs+2)^0,w,c
  6817  001704  6E22               	movwf	(??___flmul+2)^0,c
  6818  001706  0E7F               	movlw	127
  6819  001708  1429               	andwf	(___flmul@grs+3)^0,w,c
  6820  00170A  6E23               	movwf	(??___flmul+3)^0,c
  6821  00170C  5020               	movf	??___flmul^0,w,c
  6822  00170E  1021               	iorwf	(??___flmul+1)^0,w,c
  6823  001710  1022               	iorwf	(??___flmul+2)^0,w,c
  6824  001712  1023               	iorwf	(??___flmul+3)^0,w,c
  6825  001714  B4D8               	btfsc	status,2,c
  6826  001716  EF8F  F00B         	goto	u4621
  6827  00171A  EF91  F00B         	goto	u4620
  6828  00171E                     u4621:
  6829  00171E  EF95  F00B         	goto	l1010
  6830  001722                     u4620:
  6831  001722                     l4681:
  6832  001722  0E01               	movlw	1
  6833  001724  6E25               	movwf	___flmul@aexp^0,c
  6834  001726  EF9E  F00B         	goto	l1009
  6835  00172A                     l1010:
  6836  00172A  A02B               	btfss	___flmul@prod^0,0,c
  6837  00172C  EF9A  F00B         	goto	u4631
  6838  001730  EF9C  F00B         	goto	u4630
  6839  001734                     u4631:
  6840  001734  EF9E  F00B         	goto	l1009
  6841  001738                     u4630:
  6842  001738  EF91  F00B         	goto	l4681
  6843  00173C                     l1009:
  6844  00173C  5025               	movf	___flmul@aexp^0,w,c
  6845  00173E  B4D8               	btfsc	status,2,c
  6846  001740  EFA4  F00B         	goto	u4641
  6847  001744  EFA6  F00B         	goto	u4640
  6848  001748                     u4641:
  6849  001748  EFCA  F00B         	goto	l4693
  6850  00174C                     u4640:
  6851  00174C  0E01               	movlw	1
  6852  00174E  262B               	addwf	___flmul@prod^0,f,c
  6853  001750  0E00               	movlw	0
  6854  001752  222C               	addwfc	(___flmul@prod+1)^0,f,c
  6855  001754  222D               	addwfc	(___flmul@prod+2)^0,f,c
  6856  001756  222E               	addwfc	(___flmul@prod+3)^0,f,c
  6857  001758  A02E               	btfss	(___flmul@prod+3)^0,0,c
  6858  00175A  EFB1  F00B         	goto	u4651
  6859  00175E  EFB3  F00B         	goto	u4650
  6860  001762                     u4651:
  6861  001762  EFCA  F00B         	goto	l4693
  6862  001766                     u4650:
  6863  001766  C02B  F020         	movff	___flmul@prod,??___flmul
  6864  00176A  C02C  F021         	movff	___flmul@prod+1,??___flmul+1
  6865  00176E  C02D  F022         	movff	___flmul@prod+2,??___flmul+2
  6866  001772  C02E  F023         	movff	___flmul@prod+3,??___flmul+3
  6867  001776  3423               	rlcf	(??___flmul+3)^0,w,c
  6868  001778  3223               	rrcf	(??___flmul+3)^0,f,c
  6869  00177A  3222               	rrcf	(??___flmul+2)^0,f,c
  6870  00177C  3221               	rrcf	(??___flmul+1)^0,f,c
  6871  00177E  3220               	rrcf	??___flmul^0,f,c
  6872  001780  C020  F02B         	movff	??___flmul,___flmul@prod
  6873  001784  C021  F02C         	movff	??___flmul+1,___flmul@prod+1
  6874  001788  C022  F02D         	movff	??___flmul+2,___flmul@prod+2
  6875  00178C  C023  F02E         	movff	??___flmul+3,___flmul@prod+3
  6876  001790  4A2F               	infsnz	___flmul@temp^0,f,c
  6877  001792  2A30               	incf	(___flmul@temp+1)^0,f,c
  6878  001794                     l4693:
  6879  001794  BE30               	btfsc	(___flmul@temp+1)^0,7,c
  6880  001796  EFD5  F00B         	goto	u4661
  6881  00179A  5030               	movf	(___flmul@temp+1)^0,w,c
  6882  00179C  E108               	bnz	u4660
  6883  00179E  282F               	incf	___flmul@temp^0,w,c
  6884  0017A0  A0D8               	btfss	status,0,c
  6885  0017A2  EFD5  F00B         	goto	u4661
  6886  0017A6  EFD7  F00B         	goto	u4660
  6887  0017AA                     u4661:
  6888  0017AA  EFE1  F00B         	goto	l4697
  6889  0017AE                     u4660:
  6890  0017AE  0E00               	movlw	0
  6891  0017B0  6E2B               	movwf	___flmul@prod^0,c
  6892  0017B2  0E00               	movlw	0
  6893  0017B4  6E2C               	movwf	(___flmul@prod+1)^0,c
  6894  0017B6  0E80               	movlw	128
  6895  0017B8  6E2D               	movwf	(___flmul@prod+2)^0,c
  6896  0017BA  0E7F               	movlw	127
  6897  0017BC  6E2E               	movwf	(___flmul@prod+3)^0,c
  6898  0017BE  EF0F  F00C         	goto	l4709
  6899  0017C2                     l4697:
  6900  0017C2  BE30               	btfsc	(___flmul@temp+1)^0,7,c
  6901  0017C4  EFEE  F00B         	goto	u4670
  6902  0017C8  5030               	movf	(___flmul@temp+1)^0,w,c
  6903  0017CA  E106               	bnz	u4671
  6904  0017CC  042F               	decf	___flmul@temp^0,w,c
  6905  0017CE  B0D8               	btfsc	status,0,c
  6906  0017D0  EFEC  F00B         	goto	u4671
  6907  0017D4  EFEE  F00B         	goto	u4670
  6908  0017D8                     u4671:
  6909  0017D8  EFFA  F00B         	goto	l1017
  6910  0017DC                     u4670:
  6911  0017DC  0E00               	movlw	0
  6912  0017DE  6E2B               	movwf	___flmul@prod^0,c
  6913  0017E0  0E00               	movlw	0
  6914  0017E2  6E2C               	movwf	(___flmul@prod+1)^0,c
  6915  0017E4  0E00               	movlw	0
  6916  0017E6  6E2D               	movwf	(___flmul@prod+2)^0,c
  6917  0017E8  0E00               	movlw	0
  6918  0017EA  6E2E               	movwf	(___flmul@prod+3)^0,c
  6919  0017EC  0E00               	movlw	0
  6920  0017EE  6E24               	movwf	___flmul@sign^0,c
  6921  0017F0  EF0F  F00C         	goto	l4709
  6922  0017F4                     l1017:
  6923  0017F4  C02F  F02A         	movff	___flmul@temp,___flmul@bexp
  6924  0017F8  0EFF               	movlw	255
  6925  0017FA  162B               	andwf	___flmul@prod^0,f,c
  6926  0017FC  0EFF               	movlw	255
  6927  0017FE  162C               	andwf	(___flmul@prod+1)^0,f,c
  6928  001800  0E7F               	movlw	127
  6929  001802  162D               	andwf	(___flmul@prod+2)^0,f,c
  6930  001804  0E00               	movlw	0
  6931  001806  162E               	andwf	(___flmul@prod+3)^0,f,c
  6932  001808  A02A               	btfss	___flmul@bexp^0,0,c
  6933  00180A  EF09  F00C         	goto	u4681
  6934  00180E  EF0B  F00C         	goto	u4680
  6935  001812                     u4681:
  6936  001812  EF0C  F00C         	goto	l4707
  6937  001816                     u4680:
  6938  001816  8E2D               	bsf	(___flmul@prod+2)^0,7,c
  6939  001818                     l4707:
  6940  001818  90D8               	bcf	status,0,c
  6941  00181A  302A               	rrcf	___flmul@bexp^0,w,c
  6942  00181C  6E2E               	movwf	(___flmul@prod+3)^0,c
  6943  00181E                     l4709:
  6944  00181E  5024               	movf	___flmul@sign^0,w,c
  6945  001820  122E               	iorwf	(___flmul@prod+3)^0,f,c
  6946  001822  C02B  F018         	movff	___flmul@prod,?___flmul
  6947  001826  C02C  F019         	movff	___flmul@prod+1,?___flmul+1
  6948  00182A  C02D  F01A         	movff	___flmul@prod+2,?___flmul+2
  6949  00182E  C02E  F01B         	movff	___flmul@prod+3,?___flmul+3
  6950  001832                     l1004:
  6951  001832  0012               	return		;funcret
  6952  001834                     __end_of___flmul:
  6953                           	callstack 0
  6954                           
  6955 ;; *************** function ___awmod *****************
  6956 ;; Defined at:
  6957 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  6958 ;; Parameters:    Size  Location     Type
  6959 ;;  dividend        2    9[COMRAM] int 
  6960 ;;  divisor         2   11[COMRAM] int 
  6961 ;; Auto vars:     Size  Location     Type
  6962 ;;  sign            1   14[COMRAM] unsigned char 
  6963 ;;  counter         1   13[COMRAM] unsigned char 
  6964 ;; Return value:  Size  Location     Type
  6965 ;;                  2    9[COMRAM] int 
  6966 ;; Registers used:
  6967 ;;		wreg, status,2, status,0
  6968 ;; Tracked objects:
  6969 ;;		On entry : 0/0
  6970 ;;		On exit  : 0/0
  6971 ;;		Unchanged: 0/0
  6972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6973 ;;      Params:         4       0       0       0       0       0       0       0       0
  6974 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6975 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6976 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6977 ;;Total ram usage:        6 bytes
  6978 ;; Hardware stack levels used: 1
  6979 ;; Hardware stack levels required when called: 2
  6980 ;; This function calls:
  6981 ;;		Nothing
  6982 ;; This function is called by:
  6983 ;;		_itoa
  6984 ;;		_floatToString
  6985 ;; This function uses a non-reentrant model
  6986 ;;
  6987                           
  6988                           	psect	text20
  6989  002A84                     __ptext20:
  6990                           	callstack 0
  6991  002A84                     ___awmod:
  6992                           	callstack 26
  6993  002A84  0E00               	movlw	0
  6994  002A86  6E0F               	movwf	___awmod@sign^0,c
  6995  002A88  BE0B               	btfsc	(___awmod@dividend+1)^0,7,c
  6996  002A8A  EF4B  F015         	goto	u4750
  6997  002A8E  EF49  F015         	goto	u4751
  6998  002A92                     u4751:
  6999  002A92  EF51  F015         	goto	l4773
  7000  002A96                     u4750:
  7001  002A96  6C0A               	negf	___awmod@dividend^0,c
  7002  002A98  1E0B               	comf	(___awmod@dividend+1)^0,f,c
  7003  002A9A  B0D8               	btfsc	status,0,c
  7004  002A9C  2A0B               	incf	(___awmod@dividend+1)^0,f,c
  7005  002A9E  0E01               	movlw	1
  7006  002AA0  6E0F               	movwf	___awmod@sign^0,c
  7007  002AA2                     l4773:
  7008  002AA2  BE0D               	btfsc	(___awmod@divisor+1)^0,7,c
  7009  002AA4  EF58  F015         	goto	u4760
  7010  002AA8  EF56  F015         	goto	u4761
  7011  002AAC                     u4761:
  7012  002AAC  EF5C  F015         	goto	l4777
  7013  002AB0                     u4760:
  7014  002AB0  6C0C               	negf	___awmod@divisor^0,c
  7015  002AB2  1E0D               	comf	(___awmod@divisor+1)^0,f,c
  7016  002AB4  B0D8               	btfsc	status,0,c
  7017  002AB6  2A0D               	incf	(___awmod@divisor+1)^0,f,c
  7018  002AB8                     l4777:
  7019  002AB8  500C               	movf	___awmod@divisor^0,w,c
  7020  002ABA  100D               	iorwf	(___awmod@divisor+1)^0,w,c
  7021  002ABC  B4D8               	btfsc	status,2,c
  7022  002ABE  EF63  F015         	goto	u4771
  7023  002AC2  EF65  F015         	goto	u4770
  7024  002AC6                     u4771:
  7025  002AC6  EF89  F015         	goto	l4793
  7026  002ACA                     u4770:
  7027  002ACA  0E01               	movlw	1
  7028  002ACC  6E0E               	movwf	___awmod@counter^0,c
  7029  002ACE  EF6D  F015         	goto	l4783
  7030  002AD2                     l4781:
  7031  002AD2  90D8               	bcf	status,0,c
  7032  002AD4  360C               	rlcf	___awmod@divisor^0,f,c
  7033  002AD6  360D               	rlcf	(___awmod@divisor+1)^0,f,c
  7034  002AD8  2A0E               	incf	___awmod@counter^0,f,c
  7035  002ADA                     l4783:
  7036  002ADA  AE0D               	btfss	(___awmod@divisor+1)^0,7,c
  7037  002ADC  EF72  F015         	goto	u4781
  7038  002AE0  EF74  F015         	goto	u4780
  7039  002AE4                     u4781:
  7040  002AE4  EF69  F015         	goto	l4781
  7041  002AE8                     u4780:
  7042  002AE8                     l4785:
  7043  002AE8  500C               	movf	___awmod@divisor^0,w,c
  7044  002AEA  5C0A               	subwf	___awmod@dividend^0,w,c
  7045  002AEC  500D               	movf	(___awmod@divisor+1)^0,w,c
  7046  002AEE  580B               	subwfb	(___awmod@dividend+1)^0,w,c
  7047  002AF0  A0D8               	btfss	status,0,c
  7048  002AF2  EF7D  F015         	goto	u4791
  7049  002AF6  EF7F  F015         	goto	u4790
  7050  002AFA                     u4791:
  7051  002AFA  EF83  F015         	goto	l4789
  7052  002AFE                     u4790:
  7053  002AFE  500C               	movf	___awmod@divisor^0,w,c
  7054  002B00  5E0A               	subwf	___awmod@dividend^0,f,c
  7055  002B02  500D               	movf	(___awmod@divisor+1)^0,w,c
  7056  002B04  5A0B               	subwfb	(___awmod@dividend+1)^0,f,c
  7057  002B06                     l4789:
  7058  002B06  90D8               	bcf	status,0,c
  7059  002B08  320D               	rrcf	(___awmod@divisor+1)^0,f,c
  7060  002B0A  320C               	rrcf	___awmod@divisor^0,f,c
  7061  002B0C  2E0E               	decfsz	___awmod@counter^0,f,c
  7062  002B0E  EF74  F015         	goto	l4785
  7063  002B12                     l4793:
  7064  002B12  500F               	movf	___awmod@sign^0,w,c
  7065  002B14  B4D8               	btfsc	status,2,c
  7066  002B16  EF8F  F015         	goto	u4801
  7067  002B1A  EF91  F015         	goto	u4800
  7068  002B1E                     u4801:
  7069  002B1E  EF95  F015         	goto	l4797
  7070  002B22                     u4800:
  7071  002B22  6C0A               	negf	___awmod@dividend^0,c
  7072  002B24  1E0B               	comf	(___awmod@dividend+1)^0,f,c
  7073  002B26  B0D8               	btfsc	status,0,c
  7074  002B28  2A0B               	incf	(___awmod@dividend+1)^0,f,c
  7075  002B2A                     l4797:
  7076  002B2A  C00A  F00A         	movff	___awmod@dividend,?___awmod
  7077  002B2E  C00B  F00B         	movff	___awmod@dividend+1,?___awmod+1
  7078  002B32  0012               	return		;funcret
  7079  002B34                     __end_of___awmod:
  7080                           	callstack 0
  7081                           
  7082 ;; *************** function ___awdiv *****************
  7083 ;; Defined at:
  7084 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  7085 ;; Parameters:    Size  Location     Type
  7086 ;;  dividend        2    9[COMRAM] int 
  7087 ;;  divisor         2   11[COMRAM] int 
  7088 ;; Auto vars:     Size  Location     Type
  7089 ;;  quotient        2   15[COMRAM] int 
  7090 ;;  sign            1   14[COMRAM] unsigned char 
  7091 ;;  counter         1   13[COMRAM] unsigned char 
  7092 ;; Return value:  Size  Location     Type
  7093 ;;                  2    9[COMRAM] int 
  7094 ;; Registers used:
  7095 ;;		wreg, status,2, status,0
  7096 ;; Tracked objects:
  7097 ;;		On entry : 0/0
  7098 ;;		On exit  : 0/0
  7099 ;;		Unchanged: 0/0
  7100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7101 ;;      Params:         4       0       0       0       0       0       0       0       0
  7102 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7103 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7104 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7105 ;;Total ram usage:        8 bytes
  7106 ;; Hardware stack levels used: 1
  7107 ;; Hardware stack levels required when called: 2
  7108 ;; This function calls:
  7109 ;;		Nothing
  7110 ;; This function is called by:
  7111 ;;		_itoa
  7112 ;;		_floatToString
  7113 ;; This function uses a non-reentrant model
  7114 ;;
  7115                           
  7116                           	psect	text21
  7117  002786                     __ptext21:
  7118                           	callstack 0
  7119  002786                     ___awdiv:
  7120                           	callstack 26
  7121  002786  0E00               	movlw	0
  7122  002788  6E0F               	movwf	___awdiv@sign^0,c
  7123  00278A  BE0D               	btfsc	(___awdiv@divisor+1)^0,7,c
  7124  00278C  EFCC  F013         	goto	u4690
  7125  002790  EFCA  F013         	goto	u4691
  7126  002794                     u4691:
  7127  002794  EFD2  F013         	goto	l4729
  7128  002798                     u4690:
  7129  002798  6C0C               	negf	___awdiv@divisor^0,c
  7130  00279A  1E0D               	comf	(___awdiv@divisor+1)^0,f,c
  7131  00279C  B0D8               	btfsc	status,0,c
  7132  00279E  2A0D               	incf	(___awdiv@divisor+1)^0,f,c
  7133  0027A0  0E01               	movlw	1
  7134  0027A2  6E0F               	movwf	___awdiv@sign^0,c
  7135  0027A4                     l4729:
  7136  0027A4  BE0B               	btfsc	(___awdiv@dividend+1)^0,7,c
  7137  0027A6  EFD9  F013         	goto	u4700
  7138  0027AA  EFD7  F013         	goto	u4701
  7139  0027AE                     u4701:
  7140  0027AE  EFDF  F013         	goto	l4735
  7141  0027B2                     u4700:
  7142  0027B2  6C0A               	negf	___awdiv@dividend^0,c
  7143  0027B4  1E0B               	comf	(___awdiv@dividend+1)^0,f,c
  7144  0027B6  B0D8               	btfsc	status,0,c
  7145  0027B8  2A0B               	incf	(___awdiv@dividend+1)^0,f,c
  7146  0027BA  0E01               	movlw	1
  7147  0027BC  1A0F               	xorwf	___awdiv@sign^0,f,c
  7148  0027BE                     l4735:
  7149  0027BE  0E00               	movlw	0
  7150  0027C0  6E11               	movwf	(___awdiv@quotient+1)^0,c
  7151  0027C2  0E00               	movlw	0
  7152  0027C4  6E10               	movwf	___awdiv@quotient^0,c
  7153  0027C6  500C               	movf	___awdiv@divisor^0,w,c
  7154  0027C8  100D               	iorwf	(___awdiv@divisor+1)^0,w,c
  7155  0027CA  B4D8               	btfsc	status,2,c
  7156  0027CC  EFEA  F013         	goto	u4711
  7157  0027D0  EFEC  F013         	goto	u4710
  7158  0027D4                     u4711:
  7159  0027D4  EF14  F014         	goto	l4757
  7160  0027D8                     u4710:
  7161  0027D8  0E01               	movlw	1
  7162  0027DA  6E0E               	movwf	___awdiv@counter^0,c
  7163  0027DC  EFF4  F013         	goto	l4743
  7164  0027E0                     l4741:
  7165  0027E0  90D8               	bcf	status,0,c
  7166  0027E2  360C               	rlcf	___awdiv@divisor^0,f,c
  7167  0027E4  360D               	rlcf	(___awdiv@divisor+1)^0,f,c
  7168  0027E6  2A0E               	incf	___awdiv@counter^0,f,c
  7169  0027E8                     l4743:
  7170  0027E8  AE0D               	btfss	(___awdiv@divisor+1)^0,7,c
  7171  0027EA  EFF9  F013         	goto	u4721
  7172  0027EE  EFFB  F013         	goto	u4720
  7173  0027F2                     u4721:
  7174  0027F2  EFF0  F013         	goto	l4741
  7175  0027F6                     u4720:
  7176  0027F6                     l4745:
  7177  0027F6  90D8               	bcf	status,0,c
  7178  0027F8  3610               	rlcf	___awdiv@quotient^0,f,c
  7179  0027FA  3611               	rlcf	(___awdiv@quotient+1)^0,f,c
  7180  0027FC  500C               	movf	___awdiv@divisor^0,w,c
  7181  0027FE  5C0A               	subwf	___awdiv@dividend^0,w,c
  7182  002800  500D               	movf	(___awdiv@divisor+1)^0,w,c
  7183  002802  580B               	subwfb	(___awdiv@dividend+1)^0,w,c
  7184  002804  A0D8               	btfss	status,0,c
  7185  002806  EF07  F014         	goto	u4731
  7186  00280A  EF09  F014         	goto	u4730
  7187  00280E                     u4731:
  7188  00280E  EF0E  F014         	goto	l4753
  7189  002812                     u4730:
  7190  002812  500C               	movf	___awdiv@divisor^0,w,c
  7191  002814  5E0A               	subwf	___awdiv@dividend^0,f,c
  7192  002816  500D               	movf	(___awdiv@divisor+1)^0,w,c
  7193  002818  5A0B               	subwfb	(___awdiv@dividend+1)^0,f,c
  7194  00281A  8010               	bsf	___awdiv@quotient^0,0,c
  7195  00281C                     l4753:
  7196  00281C  90D8               	bcf	status,0,c
  7197  00281E  320D               	rrcf	(___awdiv@divisor+1)^0,f,c
  7198  002820  320C               	rrcf	___awdiv@divisor^0,f,c
  7199  002822  2E0E               	decfsz	___awdiv@counter^0,f,c
  7200  002824  EFFB  F013         	goto	l4745
  7201  002828                     l4757:
  7202  002828  500F               	movf	___awdiv@sign^0,w,c
  7203  00282A  B4D8               	btfsc	status,2,c
  7204  00282C  EF1A  F014         	goto	u4741
  7205  002830  EF1C  F014         	goto	u4740
  7206  002834                     u4741:
  7207  002834  EF20  F014         	goto	l4761
  7208  002838                     u4740:
  7209  002838  6C10               	negf	___awdiv@quotient^0,c
  7210  00283A  1E11               	comf	(___awdiv@quotient+1)^0,f,c
  7211  00283C  B0D8               	btfsc	status,0,c
  7212  00283E  2A11               	incf	(___awdiv@quotient+1)^0,f,c
  7213  002840                     l4761:
  7214  002840  C010  F00A         	movff	___awdiv@quotient,?___awdiv
  7215  002844  C011  F00B         	movff	___awdiv@quotient+1,?___awdiv+1
  7216  002848  0012               	return		;funcret
  7217  00284A                     __end_of___awdiv:
  7218                           	callstack 0
  7219                           
  7220 ;; *************** function _displayStuff *****************
  7221 ;; Defined at:
  7222 ;;		line 678 in file "main.c"
  7223 ;; Parameters:    Size  Location     Type
  7224 ;;  row             2   10[COMRAM] int 
  7225 ;;  column          2   12[COMRAM] int 
  7226 ;;  stuff           2   14[COMRAM] PTR unsigned char 
  7227 ;;		 -> readTwoDigitValue@input(3), STR_27(13), STR_26(12), STR_25(17), 
  7228 ;;		 -> STR_24(14), STR_23(3), STR_22(10), STR_21(16), 
  7229 ;;		 -> STR_20(16), STR_19(16), STR_18(3), STR_17(9), 
  7230 ;;		 -> STR_16(5), STR_15(4), STR_14(5), STR_13(5), 
  7231 ;;		 -> STR_12(2), STR_11(7), STR_10(5), STR_9(2), 
  7232 ;;		 -> displayMenu@valueStr(10), STR_8(6), STR_7(15), STR_6(11), 
  7233 ;;		 -> STR_5(11), STR_4(13), STR_3(12), STR_2(12), 
  7234 ;;		 -> STR_1(13), 
  7235 ;; Auto vars:     Size  Location     Type
  7236 ;;  LCDWritePosi    2   16[COMRAM] int 
  7237 ;; Return value:  Size  Location     Type
  7238 ;;                  1    wreg      void 
  7239 ;; Registers used:
  7240 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7241 ;; Tracked objects:
  7242 ;;		On entry : 0/0
  7243 ;;		On exit  : 0/0
  7244 ;;		Unchanged: 0/0
  7245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7246 ;;      Params:         6       0       0       0       0       0       0       0       0
  7247 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7248 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7249 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7250 ;;Total ram usage:       10 bytes
  7251 ;; Hardware stack levels used: 1
  7252 ;; Hardware stack levels required when called: 4
  7253 ;; This function calls:
  7254 ;;		_WriteCmdXLCD
  7255 ;;		_WriteDataXLCD
  7256 ;; This function is called by:
  7257 ;;		_main
  7258 ;;		_displayMenu
  7259 ;;		_readTwoDigitValue
  7260 ;; This function uses a non-reentrant model
  7261 ;;
  7262                           
  7263                           	psect	text22
  7264  002B34                     __ptext22:
  7265                           	callstack 0
  7266  002B34                     _displayStuff:
  7267                           	callstack 25
  7268  002B34                     
  7269                           ;main.c: 679:     int LCDWritePosition = (row == 0 ? 0x80 : 0xC0) + column;
  7270  002B34  500B               	movf	displayStuff@row^0,w,c
  7271  002B36  100C               	iorwf	(displayStuff@row+1)^0,w,c
  7272  002B38  B4D8               	btfsc	status,2,c
  7273  002B3A  EFA1  F015         	goto	u3291
  7274  002B3E  EFA3  F015         	goto	u3290
  7275  002B42                     u3291:
  7276  002B42  EFA9  F015         	goto	l3571
  7277  002B46                     u3290:
  7278  002B46  0E00               	movlw	0
  7279  002B48  6E14               	movwf	(_displayStuff$792+1)^0,c
  7280  002B4A  0EC0               	movlw	192
  7281  002B4C  6E13               	movwf	_displayStuff$792^0,c
  7282  002B4E  EFAD  F015         	goto	l3573
  7283  002B52                     l3571:
  7284  002B52  0E00               	movlw	0
  7285  002B54  6E14               	movwf	(_displayStuff$792+1)^0,c
  7286  002B56  0E80               	movlw	128
  7287  002B58  6E13               	movwf	_displayStuff$792^0,c
  7288  002B5A                     l3573:
  7289  002B5A  500D               	movf	displayStuff@column^0,w,c
  7290  002B5C  2413               	addwf	_displayStuff$792^0,w,c
  7291  002B5E  6E11               	movwf	displayStuff@LCDWritePosition^0,c
  7292  002B60  500E               	movf	(displayStuff@column+1)^0,w,c
  7293  002B62  2014               	addwfc	(_displayStuff$792+1)^0,w,c
  7294  002B64  6E12               	movwf	(displayStuff@LCDWritePosition+1)^0,c
  7295  002B66                     
  7296                           ;main.c: 682:     WriteCmdXLCD(LCDWritePosition);
  7297  002B66  5011               	movf	displayStuff@LCDWritePosition^0,w,c
  7298  002B68  EC73  F017         	call	_WriteCmdXLCD
  7299                           
  7300                           ;main.c: 683:     while (*stuff) {
  7301  002B6C  EFCC  F015         	goto	l3581
  7302  002B70                     l3577:
  7303                           
  7304                           ;main.c: 684:         WriteDataXLCD(*stuff);
  7305  002B70  C00F  FFF6         	movff	displayStuff@stuff,tblptrl
  7306  002B74  C010  FFF7         	movff	displayStuff@stuff+1,tblptrh
  7307  002B78  6AF8               	clrf	tblptru,c
  7308  002B7A  0E07               	movlw	(high __ramtop+-1)
  7309  002B7C  64F7               	cpfsgt	tblptrh,c
  7310  002B7E  D003               	bra	u3307
  7311  002B80  0008               	tblrd		*
  7312  002B82  50F5               	movf	tablat,w,c
  7313  002B84  D005               	bra	u3300
  7314  002B86                     u3307:
  7315  002B86  CFF6 FFE1          	movff	tblptrl,fsr1l
  7316  002B8A  CFF7 FFE2          	movff	tblptrh,fsr1h
  7317  002B8E  50E7               	movf	indf1,w,c
  7318  002B90                     u3300:
  7319  002B90  EC54  F017         	call	_WriteDataXLCD
  7320  002B94                     
  7321                           ;main.c: 685:         stuff++;
  7322  002B94  4A0F               	infsnz	displayStuff@stuff^0,f,c
  7323  002B96  2A10               	incf	(displayStuff@stuff+1)^0,f,c
  7324  002B98                     l3581:
  7325                           
  7326                           ;main.c: 683:     while (*stuff) {
  7327  002B98  C00F  FFF6         	movff	displayStuff@stuff,tblptrl
  7328  002B9C  C010  FFF7         	movff	displayStuff@stuff+1,tblptrh
  7329  002BA0  6AF8               	clrf	tblptru,c
  7330  002BA2  0E07               	movlw	(high __ramtop+-1)
  7331  002BA4  64F7               	cpfsgt	tblptrh,c
  7332  002BA6  D003               	bra	u3317
  7333  002BA8  0008               	tblrd		*
  7334  002BAA  50F5               	movf	tablat,w,c
  7335  002BAC  D005               	bra	u3310
  7336  002BAE                     u3317:
  7337  002BAE  CFF6 FFE1          	movff	tblptrl,fsr1l
  7338  002BB2  CFF7 FFE2          	movff	tblptrh,fsr1h
  7339  002BB6  50E7               	movf	indf1,w,c
  7340  002BB8                     u3310:
  7341  002BB8  0900               	iorlw	0
  7342  002BBA  A4D8               	btfss	status,2,c
  7343  002BBC  EFE2  F015         	goto	u3321
  7344  002BC0  EFE4  F015         	goto	u3320
  7345  002BC4                     u3321:
  7346  002BC4  EFB8  F015         	goto	l3577
  7347  002BC8                     u3320:
  7348  002BC8  0012               	return		;funcret
  7349  002BCA                     __end_of_displayStuff:
  7350                           	callstack 0
  7351                           
  7352 ;; *************** function _WriteDataXLCD *****************
  7353 ;; Defined at:
  7354 ;;		line 449 in file "nxlcd.c"
  7355 ;; Parameters:    Size  Location     Type
  7356 ;;  data            1    wreg     unsigned char 
  7357 ;; Auto vars:     Size  Location     Type
  7358 ;;  data            1    9[COMRAM] unsigned char 
  7359 ;; Return value:  Size  Location     Type
  7360 ;;                  1    wreg      void 
  7361 ;; Registers used:
  7362 ;;		wreg, status,2, status,0, cstack
  7363 ;; Tracked objects:
  7364 ;;		On entry : 0/0
  7365 ;;		On exit  : 0/0
  7366 ;;		Unchanged: 0/0
  7367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7368 ;;      Params:         0       0       0       0       0       0       0       0       0
  7369 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7370 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7371 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7372 ;;Total ram usage:        1 bytes
  7373 ;; Hardware stack levels used: 1
  7374 ;; Hardware stack levels required when called: 3
  7375 ;; This function calls:
  7376 ;;		_DelayFor18TCY
  7377 ;; This function is called by:
  7378 ;;		_displayStuff
  7379 ;;		_putsXLCD
  7380 ;;		_putrsXLCD
  7381 ;; This function uses a non-reentrant model
  7382 ;;
  7383                           
  7384                           	psect	text23
  7385  002EA8                     __ptext23:
  7386                           	callstack 0
  7387  002EA8                     _WriteDataXLCD:
  7388                           	callstack 25
  7389                           
  7390                           ;incstack = 0
  7391                           ;WriteDataXLCD@data stored from wreg
  7392  002EA8  6E0A               	movwf	WriteDataXLCD@data^0,c
  7393  002EAA                     
  7394                           ;nxlcd.c: 449: void WriteDataXLCD(char data);nxlcd.c: 450: {;nxlcd.c: 464:         TRISD
      +                           &= 0x0f;
  7395  002EAA  0E0F               	movlw	15
  7396  002EAC  1695               	andwf	149,f,c	;volatile
  7397                           
  7398                           ;nxlcd.c: 465:         PORTD &= 0x0f;
  7399  002EAE  0E0F               	movlw	15
  7400  002EB0  1683               	andwf	131,f,c	;volatile
  7401                           
  7402                           ;nxlcd.c: 466:         PORTD |= data&0xf0;
  7403  002EB2  500A               	movf	WriteDataXLCD@data^0,w,c
  7404  002EB4  0BF0               	andlw	240
  7405  002EB6  1283               	iorwf	131,f,c	;volatile
  7406  002EB8                     
  7407                           ;nxlcd.c: 472:         LATEbits.LATE0 = 1;
  7408  002EB8  808D               	bsf	141,0,c	;volatile
  7409  002EBA                     
  7410                           ;nxlcd.c: 473:         LATEbits.LATE2 = 0;
  7411  002EBA  948D               	bcf	141,2,c	;volatile
  7412  002EBC                     
  7413                           ;nxlcd.c: 474:         DelayFor18TCY();
  7414  002EBC  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  7415  002EC0                     
  7416                           ;nxlcd.c: 475:         LATEbits.LATE1 = 1;
  7417  002EC0  828D               	bsf	141,1,c	;volatile
  7418  002EC2                     
  7419                           ;nxlcd.c: 476:         DelayFor18TCY();
  7420  002EC2  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  7421  002EC6                     
  7422                           ;nxlcd.c: 477:         LATEbits.LATE1 = 0;
  7423  002EC6  928D               	bcf	141,1,c	;volatile
  7424                           
  7425                           ;nxlcd.c: 479:         PORTD &= 0x0f;
  7426  002EC8  0E0F               	movlw	15
  7427  002ECA  1683               	andwf	131,f,c	;volatile
  7428                           
  7429                           ;nxlcd.c: 480:         PORTD |= ((data<<4)&0xf0);
  7430  002ECC  380A               	swapf	WriteDataXLCD@data^0,w,c
  7431  002ECE  0BF0               	andlw	240
  7432  002ED0  0BF0               	andlw	240
  7433  002ED2  1283               	iorwf	131,f,c	;volatile
  7434  002ED4                     
  7435                           ;nxlcd.c: 485:         DelayFor18TCY();
  7436  002ED4  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  7437  002ED8                     
  7438                           ;nxlcd.c: 486:         LATEbits.LATE1 = 1;
  7439  002ED8  828D               	bsf	141,1,c	;volatile
  7440  002EDA                     
  7441                           ;nxlcd.c: 487:         DelayFor18TCY();
  7442  002EDA  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  7443  002EDE                     
  7444                           ;nxlcd.c: 488:         LATEbits.LATE1 = 0;
  7445  002EDE  928D               	bcf	141,1,c	;volatile
  7446                           
  7447                           ;nxlcd.c: 490:         TRISD |= 0xf0;
  7448  002EE0  0EF0               	movlw	240
  7449  002EE2  1295               	iorwf	149,f,c	;volatile
  7450  002EE4  0012               	return		;funcret
  7451  002EE6                     __end_of_WriteDataXLCD:
  7452                           	callstack 0
  7453                           
  7454 ;; *************** function ___flge *****************
  7455 ;; Defined at:
  7456 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  7457 ;; Parameters:    Size  Location     Type
  7458 ;;  ff1             4   23[COMRAM] void 
  7459 ;;  ff2             4   27[COMRAM] void 
  7460 ;; Auto vars:     Size  Location     Type
  7461 ;;		None
  7462 ;; Return value:  Size  Location     Type
  7463 ;;		None               void
  7464 ;; Registers used:
  7465 ;;		wreg, status,2, status,0
  7466 ;; Tracked objects:
  7467 ;;		On entry : 0/0
  7468 ;;		On exit  : 0/0
  7469 ;;		Unchanged: 0/0
  7470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7471 ;;      Params:         8       0       0       0       0       0       0       0       0
  7472 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7473 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7474 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7475 ;;Total ram usage:       12 bytes
  7476 ;; Hardware stack levels used: 1
  7477 ;; Hardware stack levels required when called: 2
  7478 ;; This function calls:
  7479 ;;		Nothing
  7480 ;; This function is called by:
  7481 ;;		_main
  7482 ;;		_displayMenu
  7483 ;; This function uses a non-reentrant model
  7484 ;;
  7485                           
  7486                           	psect	text24
  7487  002594                     __ptext24:
  7488                           	callstack 0
  7489  002594                     ___flge:
  7490                           	callstack 27
  7491  002594  0E00               	movlw	0
  7492  002596  1418               	andwf	___flge@ff1^0,w,c
  7493  002598  6E20               	movwf	??___flge^0,c
  7494  00259A  0E00               	movlw	0
  7495  00259C  1419               	andwf	(___flge@ff1+1)^0,w,c
  7496  00259E  6E21               	movwf	(??___flge+1)^0,c
  7497  0025A0  0E80               	movlw	128
  7498  0025A2  141A               	andwf	(___flge@ff1+2)^0,w,c
  7499  0025A4  6E22               	movwf	(??___flge+2)^0,c
  7500  0025A6  0E7F               	movlw	127
  7501  0025A8  141B               	andwf	(___flge@ff1+3)^0,w,c
  7502  0025AA  6E23               	movwf	(??___flge+3)^0,c
  7503  0025AC  5020               	movf	??___flge^0,w,c
  7504  0025AE  1021               	iorwf	(??___flge+1)^0,w,c
  7505  0025B0  1022               	iorwf	(??___flge+2)^0,w,c
  7506  0025B2  1023               	iorwf	(??___flge+3)^0,w,c
  7507  0025B4  A4D8               	btfss	status,2,c
  7508  0025B6  EFDF  F012         	goto	u3501
  7509  0025BA  EFE1  F012         	goto	u3500
  7510  0025BE                     u3501:
  7511  0025BE  EFE9  F012         	goto	l3783
  7512  0025C2                     u3500:
  7513  0025C2  0E00               	movlw	0
  7514  0025C4  6E18               	movwf	___flge@ff1^0,c
  7515  0025C6  0E00               	movlw	0
  7516  0025C8  6E19               	movwf	(___flge@ff1+1)^0,c
  7517  0025CA  0E00               	movlw	0
  7518  0025CC  6E1A               	movwf	(___flge@ff1+2)^0,c
  7519  0025CE  0E00               	movlw	0
  7520  0025D0  6E1B               	movwf	(___flge@ff1+3)^0,c
  7521  0025D2                     l3783:
  7522  0025D2  0E00               	movlw	0
  7523  0025D4  141C               	andwf	___flge@ff2^0,w,c
  7524  0025D6  6E20               	movwf	??___flge^0,c
  7525  0025D8  0E00               	movlw	0
  7526  0025DA  141D               	andwf	(___flge@ff2+1)^0,w,c
  7527  0025DC  6E21               	movwf	(??___flge+1)^0,c
  7528  0025DE  0E80               	movlw	128
  7529  0025E0  141E               	andwf	(___flge@ff2+2)^0,w,c
  7530  0025E2  6E22               	movwf	(??___flge+2)^0,c
  7531  0025E4  0E7F               	movlw	127
  7532  0025E6  141F               	andwf	(___flge@ff2+3)^0,w,c
  7533  0025E8  6E23               	movwf	(??___flge+3)^0,c
  7534  0025EA  5020               	movf	??___flge^0,w,c
  7535  0025EC  1021               	iorwf	(??___flge+1)^0,w,c
  7536  0025EE  1022               	iorwf	(??___flge+2)^0,w,c
  7537  0025F0  1023               	iorwf	(??___flge+3)^0,w,c
  7538  0025F2  A4D8               	btfss	status,2,c
  7539  0025F4  EFFE  F012         	goto	u3511
  7540  0025F8  EF00  F013         	goto	u3510
  7541  0025FC                     u3511:
  7542  0025FC  EF08  F013         	goto	l3787
  7543  002600                     u3510:
  7544  002600  0E00               	movlw	0
  7545  002602  6E1C               	movwf	___flge@ff2^0,c
  7546  002604  0E00               	movlw	0
  7547  002606  6E1D               	movwf	(___flge@ff2+1)^0,c
  7548  002608  0E00               	movlw	0
  7549  00260A  6E1E               	movwf	(___flge@ff2+2)^0,c
  7550  00260C  0E00               	movlw	0
  7551  00260E  6E1F               	movwf	(___flge@ff2+3)^0,c
  7552  002610                     l3787:
  7553  002610  AE1B               	btfss	(___flge@ff1+3)^0,7,c
  7554  002612  EF0D  F013         	goto	u3521
  7555  002616  EF0F  F013         	goto	u3520
  7556  00261A                     u3521:
  7557  00261A  EF18  F013         	goto	l3791
  7558  00261E                     u3520:
  7559  00261E  6C18               	negf	___flge@ff1^0,c
  7560  002620  1E19               	comf	(___flge@ff1+1)^0,f,c
  7561  002622  B0D8               	btfsc	status,0,c
  7562  002624  2A19               	incf	(___flge@ff1+1)^0,f,c
  7563  002626  1E1A               	comf	(___flge@ff1+2)^0,f,c
  7564  002628  B0D8               	btfsc	status,0,c
  7565  00262A  2A1A               	incf	(___flge@ff1+2)^0,f,c
  7566  00262C  0E80               	movlw	128
  7567  00262E  561B               	subfwb	(___flge@ff1+3)^0,f,c
  7568  002630                     l3791:
  7569  002630  AE1F               	btfss	(___flge@ff2+3)^0,7,c
  7570  002632  EF1D  F013         	goto	u3531
  7571  002636  EF1F  F013         	goto	u3530
  7572  00263A                     u3531:
  7573  00263A  EF28  F013         	goto	l651
  7574  00263E                     u3530:
  7575  00263E  6C1C               	negf	___flge@ff2^0,c
  7576  002640  1E1D               	comf	(___flge@ff2+1)^0,f,c
  7577  002642  B0D8               	btfsc	status,0,c
  7578  002644  2A1D               	incf	(___flge@ff2+1)^0,f,c
  7579  002646  1E1E               	comf	(___flge@ff2+2)^0,f,c
  7580  002648  B0D8               	btfsc	status,0,c
  7581  00264A  2A1E               	incf	(___flge@ff2+2)^0,f,c
  7582  00264C  0E80               	movlw	128
  7583  00264E  561F               	subfwb	(___flge@ff2+3)^0,f,c
  7584  002650                     l651:
  7585  002650  0E00               	movlw	0
  7586  002652  1A18               	xorwf	___flge@ff1^0,f,c
  7587  002654  0E00               	movlw	0
  7588  002656  1A19               	xorwf	(___flge@ff1+1)^0,f,c
  7589  002658  0E00               	movlw	0
  7590  00265A  1A1A               	xorwf	(___flge@ff1+2)^0,f,c
  7591  00265C  0E80               	movlw	128
  7592  00265E  1A1B               	xorwf	(___flge@ff1+3)^0,f,c
  7593  002660  0E00               	movlw	0
  7594  002662  1A1C               	xorwf	___flge@ff2^0,f,c
  7595  002664  0E00               	movlw	0
  7596  002666  1A1D               	xorwf	(___flge@ff2+1)^0,f,c
  7597  002668  0E00               	movlw	0
  7598  00266A  1A1E               	xorwf	(___flge@ff2+2)^0,f,c
  7599  00266C  0E80               	movlw	128
  7600  00266E  1A1F               	xorwf	(___flge@ff2+3)^0,f,c
  7601  002670  501C               	movf	___flge@ff2^0,w,c
  7602  002672  5C18               	subwf	___flge@ff1^0,w,c
  7603  002674  501D               	movf	(___flge@ff2+1)^0,w,c
  7604  002676  5819               	subwfb	(___flge@ff1+1)^0,w,c
  7605  002678  501E               	movf	(___flge@ff2+2)^0,w,c
  7606  00267A  581A               	subwfb	(___flge@ff1+2)^0,w,c
  7607  00267C  501F               	movf	(___flge@ff2+3)^0,w,c
  7608  00267E  581B               	subwfb	(___flge@ff1+3)^0,w,c
  7609  002680  B0D8               	btfsc	status,0,c
  7610  002682  EF45  F013         	goto	u3541
  7611  002686  EF47  F013         	goto	u3540
  7612  00268A                     u3541:
  7613  00268A  EF4A  F013         	goto	l3797
  7614  00268E                     u3540:
  7615  00268E  90D8               	bcf	status,0,c
  7616  002690  EF4B  F013         	goto	l656
  7617  002694                     l3797:
  7618  002694  80D8               	bsf	status,0,c
  7619  002696                     l656:
  7620  002696  0012               	return		;funcret
  7621  002698                     __end_of___flge:
  7622                           	callstack 0
  7623                           
  7624 ;; *************** function _configureTimer *****************
  7625 ;; Defined at:
  7626 ;;		line 539 in file "main.c"
  7627 ;; Parameters:    Size  Location     Type
  7628 ;;		None
  7629 ;; Auto vars:     Size  Location     Type
  7630 ;;		None
  7631 ;; Return value:  Size  Location     Type
  7632 ;;                  1    wreg      void 
  7633 ;; Registers used:
  7634 ;;		wreg, status,2
  7635 ;; Tracked objects:
  7636 ;;		On entry : 0/0
  7637 ;;		On exit  : 0/0
  7638 ;;		Unchanged: 0/0
  7639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7640 ;;      Params:         0       0       0       0       0       0       0       0       0
  7641 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7642 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7643 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7644 ;;Total ram usage:        0 bytes
  7645 ;; Hardware stack levels used: 1
  7646 ;; Hardware stack levels required when called: 2
  7647 ;; This function calls:
  7648 ;;		Nothing
  7649 ;; This function is called by:
  7650 ;;		_main
  7651 ;; This function uses a non-reentrant model
  7652 ;;
  7653                           
  7654                           	psect	text25
  7655  002FD0                     __ptext25:
  7656                           	callstack 0
  7657  002FD0                     _configureTimer:
  7658                           	callstack 28
  7659  002FD0                     
  7660                           ;main.c: 540:     T0CON = 0b11000100;
  7661  002FD0  0EC4               	movlw	196
  7662  002FD2  6ED5               	movwf	213,c	;volatile
  7663                           
  7664                           ;main.c: 544:     TMR0L = 100;
  7665  002FD4  0E64               	movlw	100
  7666  002FD6  6ED6               	movwf	214,c	;volatile
  7667  002FD8                     
  7668                           ;main.c: 545:     INTCONbits.TMR0IF = 0;
  7669  002FD8  94F2               	bcf	242,2,c	;volatile
  7670  002FDA  0012               	return		;funcret
  7671  002FDC                     __end_of_configureTimer:
  7672                           	callstack 0
  7673                           
  7674 ;; *************** function _configureLCD *****************
  7675 ;; Defined at:
  7676 ;;		line 507 in file "main.c"
  7677 ;; Parameters:    Size  Location     Type
  7678 ;;		None
  7679 ;; Auto vars:     Size  Location     Type
  7680 ;;		None
  7681 ;; Return value:  Size  Location     Type
  7682 ;;                  1    wreg      void 
  7683 ;; Registers used:
  7684 ;;		wreg, status,2, status,0, cstack
  7685 ;; Tracked objects:
  7686 ;;		On entry : 0/0
  7687 ;;		On exit  : 0/0
  7688 ;;		Unchanged: 0/0
  7689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7690 ;;      Params:         0       0       0       0       0       0       0       0       0
  7691 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7692 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7693 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7694 ;;Total ram usage:        1 bytes
  7695 ;; Hardware stack levels used: 1
  7696 ;; Hardware stack levels required when called: 5
  7697 ;; This function calls:
  7698 ;;		_OpenXLCD
  7699 ;;		_WriteCmdXLCD
  7700 ;; This function is called by:
  7701 ;;		_main
  7702 ;; This function uses a non-reentrant model
  7703 ;;
  7704                           
  7705                           	psect	text26
  7706  002DDC                     __ptext26:
  7707                           	callstack 0
  7708  002DDC                     _configureLCD:
  7709                           	callstack 25
  7710  002DDC                     
  7711                           ;main.c: 508:     OpenXLCD(0b00101100 & 0b00111000);
  7712  002DDC  0E28               	movlw	40
  7713  002DDE  EC4C  F013         	call	_OpenXLCD
  7714                           
  7715                           ;main.c: 509:     WriteCmdXLCD(0x01);
  7716  002DE2  0E01               	movlw	1
  7717  002DE4  EC73  F017         	call	_WriteCmdXLCD
  7718  002DE8                     
  7719                           ;main.c: 510:     _delay((unsigned long)((10)*(20000000/4000.0)));
  7720  002DE8  0E41               	movlw	65
  7721  002DEA  6E0C               	movwf	??_configureLCD^0,c
  7722  002DEC  0EEE               	movlw	238
  7723  002DEE                     u5617:
  7724  002DEE  2EE8               	decfsz	wreg,f,c
  7725  002DF0  D7FE               	bra	u5617
  7726  002DF2  2E0C               	decfsz	??_configureLCD^0,f,c
  7727  002DF4  D7FC               	bra	u5617
  7728  002DF6  D000               	nop2	
  7729  002DF8                     
  7730                           ;main.c: 511:     WriteCmdXLCD(0x02);
  7731  002DF8  0E02               	movlw	2
  7732  002DFA  EC73  F017         	call	_WriteCmdXLCD
  7733                           
  7734                           ;main.c: 512:     _delay((unsigned long)((2)*(20000000/4000.0)));
  7735  002DFE  0E0D               	movlw	13
  7736  002E00  6E0C               	movwf	??_configureLCD^0,c
  7737  002E02  0EFC               	movlw	252
  7738  002E04                     u5627:
  7739  002E04  2EE8               	decfsz	wreg,f,c
  7740  002E06  D7FE               	bra	u5627
  7741  002E08  2E0C               	decfsz	??_configureLCD^0,f,c
  7742  002E0A  D7FC               	bra	u5627
  7743  002E0C                     
  7744                           ;main.c: 513:     WriteCmdXLCD(0x0C);
  7745  002E0C  0E0C               	movlw	12
  7746  002E0E  EC73  F017         	call	_WriteCmdXLCD
  7747  002E12                     
  7748                           ;main.c: 514:     _delay((unsigned long)((2)*(20000000/4000.0)));
  7749  002E12  0E0D               	movlw	13
  7750  002E14  6E0C               	movwf	??_configureLCD^0,c
  7751  002E16  0EFC               	movlw	252
  7752  002E18                     u5637:
  7753  002E18  2EE8               	decfsz	wreg,f,c
  7754  002E1A  D7FE               	bra	u5637
  7755  002E1C  2E0C               	decfsz	??_configureLCD^0,f,c
  7756  002E1E  D7FC               	bra	u5637
  7757  002E20  0012               	return		;funcret
  7758  002E22                     __end_of_configureLCD:
  7759                           	callstack 0
  7760                           
  7761 ;; *************** function _OpenXLCD *****************
  7762 ;; Defined at:
  7763 ;;		line 41 in file "nxlcd.c"
  7764 ;; Parameters:    Size  Location     Type
  7765 ;;  lcdtype         1    wreg     unsigned char 
  7766 ;; Auto vars:     Size  Location     Type
  7767 ;;  lcdtype         1   10[COMRAM] unsigned char 
  7768 ;; Return value:  Size  Location     Type
  7769 ;;                  1    wreg      void 
  7770 ;; Registers used:
  7771 ;;		wreg, status,2, status,0, cstack
  7772 ;; Tracked objects:
  7773 ;;		On entry : 0/0
  7774 ;;		On exit  : 0/0
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7777 ;;      Params:         0       0       0       0       0       0       0       0       0
  7778 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7779 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7780 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7781 ;;Total ram usage:        1 bytes
  7782 ;; Hardware stack levels used: 1
  7783 ;; Hardware stack levels required when called: 4
  7784 ;; This function calls:
  7785 ;;		_BusyXLCD
  7786 ;;		_DelayPORXLCD
  7787 ;;		_DelayXLCD
  7788 ;;		_SetDDRamAddr
  7789 ;;		_WriteCmdXLCD
  7790 ;; This function is called by:
  7791 ;;		_configureLCD
  7792 ;; This function uses a non-reentrant model
  7793 ;;
  7794                           
  7795                           	psect	text27
  7796  002698                     __ptext27:
  7797                           	callstack 0
  7798  002698                     _OpenXLCD:
  7799                           	callstack 25
  7800                           
  7801                           ;incstack = 0
  7802                           ;OpenXLCD@lcdtype stored from wreg
  7803  002698  6E0B               	movwf	OpenXLCD@lcdtype^0,c
  7804  00269A                     
  7805                           ;nxlcd.c: 41: void OpenXLCD(unsigned char lcdtype);nxlcd.c: 42: {;nxlcd.c: 50:         P
      +                          ORTD &= 0x0f;
  7806  00269A  0E0F               	movlw	15
  7807  00269C  1683               	andwf	131,f,c	;volatile
  7808                           
  7809                           ;nxlcd.c: 51:         TRISD &= 0x0F;
  7810  00269E  0E0F               	movlw	15
  7811  0026A0  1695               	andwf	149,f,c	;volatile
  7812  0026A2                     
  7813                           ;nxlcd.c: 57:         TRISEbits.TRISE2 = 0;
  7814  0026A2  9496               	bcf	150,2,c	;volatile
  7815  0026A4                     
  7816                           ;nxlcd.c: 58:         TRISEbits.TRISE0 = 0;
  7817  0026A4  9096               	bcf	150,0,c	;volatile
  7818  0026A6                     
  7819                           ;nxlcd.c: 59:         TRISEbits.TRISE1 = 0;
  7820  0026A6  9296               	bcf	150,1,c	;volatile
  7821  0026A8                     
  7822                           ;nxlcd.c: 60:         LATEbits.LATE2 = 0;
  7823  0026A8  948D               	bcf	141,2,c	;volatile
  7824  0026AA                     
  7825                           ;nxlcd.c: 61:         LATEbits.LATE0 = 0;
  7826  0026AA  908D               	bcf	141,0,c	;volatile
  7827  0026AC                     
  7828                           ;nxlcd.c: 62:         LATEbits.LATE1 = 0;
  7829  0026AC  928D               	bcf	141,1,c	;volatile
  7830  0026AE                     
  7831                           ;nxlcd.c: 65:         DelayPORXLCD();
  7832  0026AE  ECE0  F017         	call	_DelayPORXLCD	;wreg free
  7833  0026B2                     
  7834                           ;nxlcd.c: 67:    WriteCmdXLCD(0x30);
  7835  0026B2  0E30               	movlw	48
  7836  0026B4  EC73  F017         	call	_WriteCmdXLCD
  7837  0026B8                     
  7838                           ;nxlcd.c: 68:    DelayXLCD();
  7839  0026B8  ECD7  F017         	call	_DelayXLCD	;wreg free
  7840  0026BC                     
  7841                           ;nxlcd.c: 69:    DelayXLCD();
  7842  0026BC  ECD7  F017         	call	_DelayXLCD	;wreg free
  7843  0026C0                     
  7844                           ;nxlcd.c: 70:    WriteCmdXLCD(0x30);
  7845  0026C0  0E30               	movlw	48
  7846  0026C2  EC73  F017         	call	_WriteCmdXLCD
  7847  0026C6                     
  7848                           ;nxlcd.c: 71:    DelayXLCD();
  7849  0026C6  ECD7  F017         	call	_DelayXLCD	;wreg free
  7850  0026CA                     
  7851                           ;nxlcd.c: 72:    DelayXLCD();
  7852  0026CA  ECD7  F017         	call	_DelayXLCD	;wreg free
  7853  0026CE                     
  7854                           ;nxlcd.c: 73:    WriteCmdXLCD(0x32);
  7855  0026CE  0E32               	movlw	50
  7856  0026D0  EC73  F017         	call	_WriteCmdXLCD
  7857  0026D4                     l3751:
  7858  0026D4  EC11  F017         	call	_BusyXLCD	;wreg free
  7859  0026D8  0900               	iorlw	0
  7860  0026DA  A4D8               	btfss	status,2,c
  7861  0026DC  EF72  F013         	goto	u3431
  7862  0026E0  EF74  F013         	goto	u3430
  7863  0026E4                     u3431:
  7864  0026E4  EF6A  F013         	goto	l3751
  7865  0026E8                     u3430:
  7866  0026E8                     l3753:
  7867  0026E8  EC11  F017         	call	_BusyXLCD	;wreg free
  7868  0026EC  0900               	iorlw	0
  7869  0026EE  A4D8               	btfss	status,2,c
  7870  0026F0  EF7C  F013         	goto	u3441
  7871  0026F4  EF7E  F013         	goto	u3440
  7872  0026F8                     u3441:
  7873  0026F8  EF74  F013         	goto	l3753
  7874  0026FC                     u3440:
  7875  0026FC                     
  7876                           ;nxlcd.c: 80:         WriteCmdXLCD(lcdtype);
  7877  0026FC  500B               	movf	OpenXLCD@lcdtype^0,w,c
  7878  0026FE  EC73  F017         	call	_WriteCmdXLCD
  7879  002702                     l3757:
  7880  002702  EC11  F017         	call	_BusyXLCD	;wreg free
  7881  002706  0900               	iorlw	0
  7882  002708  A4D8               	btfss	status,2,c
  7883  00270A  EF89  F013         	goto	u3451
  7884  00270E  EF8B  F013         	goto	u3450
  7885  002712                     u3451:
  7886  002712  EF81  F013         	goto	l3757
  7887  002716                     u3450:
  7888  002716                     
  7889                           ;nxlcd.c: 84:         WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  7890  002716  0E08               	movlw	8
  7891  002718  EC73  F017         	call	_WriteCmdXLCD
  7892  00271C                     l3761:
  7893  00271C  EC11  F017         	call	_BusyXLCD	;wreg free
  7894  002720  0900               	iorlw	0
  7895  002722  A4D8               	btfss	status,2,c
  7896  002724  EF96  F013         	goto	u3461
  7897  002728  EF98  F013         	goto	u3460
  7898  00272C                     u3461:
  7899  00272C  EF8E  F013         	goto	l3761
  7900  002730                     u3460:
  7901  002730                     
  7902                           ;nxlcd.c: 86:         WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  7903  002730  0E0F               	movlw	15
  7904  002732  EC73  F017         	call	_WriteCmdXLCD
  7905  002736                     l3765:
  7906  002736  EC11  F017         	call	_BusyXLCD	;wreg free
  7907  00273A  0900               	iorlw	0
  7908  00273C  A4D8               	btfss	status,2,c
  7909  00273E  EFA3  F013         	goto	u3471
  7910  002742  EFA5  F013         	goto	u3470
  7911  002746                     u3471:
  7912  002746  EF9B  F013         	goto	l3765
  7913  00274A                     u3470:
  7914  00274A                     
  7915                           ;nxlcd.c: 90:         WriteCmdXLCD(0x01);
  7916  00274A  0E01               	movlw	1
  7917  00274C  EC73  F017         	call	_WriteCmdXLCD
  7918  002750                     l3769:
  7919  002750  EC11  F017         	call	_BusyXLCD	;wreg free
  7920  002754  0900               	iorlw	0
  7921  002756  A4D8               	btfss	status,2,c
  7922  002758  EFB0  F013         	goto	u3481
  7923  00275C  EFB2  F013         	goto	u3480
  7924  002760                     u3481:
  7925  002760  EFA8  F013         	goto	l3769
  7926  002764                     u3480:
  7927  002764                     
  7928                           ;nxlcd.c: 94:         WriteCmdXLCD(0b00000100);
  7929  002764  0E04               	movlw	4
  7930  002766  EC73  F017         	call	_WriteCmdXLCD
  7931  00276A                     l3773:
  7932  00276A  EC11  F017         	call	_BusyXLCD	;wreg free
  7933  00276E  0900               	iorlw	0
  7934  002770  A4D8               	btfss	status,2,c
  7935  002772  EFBD  F013         	goto	u3491
  7936  002776  EFBF  F013         	goto	u3490
  7937  00277A                     u3491:
  7938  00277A  EFB5  F013         	goto	l3773
  7939  00277E                     u3490:
  7940  00277E                     
  7941                           ;nxlcd.c: 98:         SetDDRamAddr(0x80);
  7942  00277E  0E80               	movlw	128
  7943  002780  EC34  F017         	call	_SetDDRamAddr
  7944  002784  0012               	return		;funcret
  7945  002786                     __end_of_OpenXLCD:
  7946                           	callstack 0
  7947                           
  7948 ;; *************** function _WriteCmdXLCD *****************
  7949 ;; Defined at:
  7950 ;;		line 388 in file "nxlcd.c"
  7951 ;; Parameters:    Size  Location     Type
  7952 ;;  cmd             1    wreg     unsigned char 
  7953 ;; Auto vars:     Size  Location     Type
  7954 ;;  cmd             1    9[COMRAM] unsigned char 
  7955 ;; Return value:  Size  Location     Type
  7956 ;;                  1    wreg      void 
  7957 ;; Registers used:
  7958 ;;		wreg, status,2, status,0, cstack
  7959 ;; Tracked objects:
  7960 ;;		On entry : 0/0
  7961 ;;		On exit  : 0/0
  7962 ;;		Unchanged: 0/0
  7963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7964 ;;      Params:         0       0       0       0       0       0       0       0       0
  7965 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7966 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7967 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7968 ;;Total ram usage:        1 bytes
  7969 ;; Hardware stack levels used: 1
  7970 ;; Hardware stack levels required when called: 3
  7971 ;; This function calls:
  7972 ;;		_DelayFor18TCY
  7973 ;; This function is called by:
  7974 ;;		_displayMenu
  7975 ;;		_readTwoDigitValue
  7976 ;;		_configureLCD
  7977 ;;		_displayStuff
  7978 ;;		_OpenXLCD
  7979 ;; This function uses a non-reentrant model
  7980 ;;
  7981                           
  7982                           	psect	text28
  7983  002EE6                     __ptext28:
  7984                           	callstack 0
  7985  002EE6                     _WriteCmdXLCD:
  7986                           	callstack 25
  7987                           
  7988                           ;incstack = 0
  7989                           ;WriteCmdXLCD@cmd stored from wreg
  7990  002EE6  6E0A               	movwf	WriteCmdXLCD@cmd^0,c
  7991  002EE8                     
  7992                           ;nxlcd.c: 388: void WriteCmdXLCD(unsigned char cmd);nxlcd.c: 389: {;nxlcd.c: 403:       
      +                            TRISD &= 0x0f;
  7993  002EE8  0E0F               	movlw	15
  7994  002EEA  1695               	andwf	149,f,c	;volatile
  7995                           
  7996                           ;nxlcd.c: 404:         PORTD &= 0x0f;
  7997  002EEC  0E0F               	movlw	15
  7998  002EEE  1683               	andwf	131,f,c	;volatile
  7999                           
  8000                           ;nxlcd.c: 405:         PORTD |= cmd&0xf0;
  8001  002EF0  500A               	movf	WriteCmdXLCD@cmd^0,w,c
  8002  002EF2  0BF0               	andlw	240
  8003  002EF4  1283               	iorwf	131,f,c	;volatile
  8004  002EF6                     
  8005                           ;nxlcd.c: 411:         LATEbits.LATE2 = 0;
  8006  002EF6  948D               	bcf	141,2,c	;volatile
  8007  002EF8                     
  8008                           ;nxlcd.c: 412:         LATEbits.LATE0 = 0;
  8009  002EF8  908D               	bcf	141,0,c	;volatile
  8010  002EFA                     
  8011                           ;nxlcd.c: 413:         DelayFor18TCY();
  8012  002EFA  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  8013  002EFE                     
  8014                           ;nxlcd.c: 414:         LATEbits.LATE1 = 1;
  8015  002EFE  828D               	bsf	141,1,c	;volatile
  8016  002F00                     
  8017                           ;nxlcd.c: 415:         DelayFor18TCY();
  8018  002F00  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  8019  002F04                     
  8020                           ;nxlcd.c: 416:         LATEbits.LATE1 = 0;
  8021  002F04  928D               	bcf	141,1,c	;volatile
  8022                           
  8023                           ;nxlcd.c: 418:         PORTD &= 0x0f;
  8024  002F06  0E0F               	movlw	15
  8025  002F08  1683               	andwf	131,f,c	;volatile
  8026                           
  8027                           ;nxlcd.c: 419:         PORTD |= (cmd<<4)&0xf0;
  8028  002F0A  380A               	swapf	WriteCmdXLCD@cmd^0,w,c
  8029  002F0C  0BF0               	andlw	240
  8030  002F0E  0BF0               	andlw	240
  8031  002F10  1283               	iorwf	131,f,c	;volatile
  8032  002F12                     
  8033                           ;nxlcd.c: 424:         DelayFor18TCY();
  8034  002F12  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  8035  002F16                     
  8036                           ;nxlcd.c: 425:         LATEbits.LATE1 = 1;
  8037  002F16  828D               	bsf	141,1,c	;volatile
  8038  002F18                     
  8039                           ;nxlcd.c: 426:         DelayFor18TCY();
  8040  002F18  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  8041  002F1C                     
  8042                           ;nxlcd.c: 427:         LATEbits.LATE1 = 0;
  8043  002F1C  928D               	bcf	141,1,c	;volatile
  8044                           
  8045                           ;nxlcd.c: 429:         TRISD |= 0xf0;
  8046  002F1E  0EF0               	movlw	240
  8047  002F20  1295               	iorwf	149,f,c	;volatile
  8048  002F22  0012               	return		;funcret
  8049  002F24                     __end_of_WriteCmdXLCD:
  8050                           	callstack 0
  8051                           
  8052 ;; *************** function _SetDDRamAddr *****************
  8053 ;; Defined at:
  8054 ;;		line 171 in file "nxlcd.c"
  8055 ;; Parameters:    Size  Location     Type
  8056 ;;  DDaddr          1    wreg     unsigned char 
  8057 ;; Auto vars:     Size  Location     Type
  8058 ;;  DDaddr          1    9[COMRAM] unsigned char 
  8059 ;; Return value:  Size  Location     Type
  8060 ;;                  1    wreg      void 
  8061 ;; Registers used:
  8062 ;;		wreg, status,2, status,0, cstack
  8063 ;; Tracked objects:
  8064 ;;		On entry : 0/0
  8065 ;;		On exit  : 0/0
  8066 ;;		Unchanged: 0/0
  8067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8068 ;;      Params:         0       0       0       0       0       0       0       0       0
  8069 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8070 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8071 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8072 ;;Total ram usage:        1 bytes
  8073 ;; Hardware stack levels used: 1
  8074 ;; Hardware stack levels required when called: 3
  8075 ;; This function calls:
  8076 ;;		_DelayFor18TCY
  8077 ;; This function is called by:
  8078 ;;		_OpenXLCD
  8079 ;; This function uses a non-reentrant model
  8080 ;;
  8081                           
  8082                           	psect	text29
  8083  002E68                     __ptext29:
  8084                           	callstack 0
  8085  002E68                     _SetDDRamAddr:
  8086                           	callstack 25
  8087                           
  8088                           ;incstack = 0
  8089                           ;SetDDRamAddr@DDaddr stored from wreg
  8090  002E68  6E0A               	movwf	SetDDRamAddr@DDaddr^0,c
  8091  002E6A                     
  8092                           ;nxlcd.c: 171: void SetDDRamAddr(unsigned char DDaddr);nxlcd.c: 172: {;nxlcd.c: 186:    
      +                               TRISD &= 0x0f;
  8093  002E6A  0E0F               	movlw	15
  8094  002E6C  1695               	andwf	149,f,c	;volatile
  8095                           
  8096                           ;nxlcd.c: 187:         PORTD &= 0x0f;
  8097  002E6E  0E0F               	movlw	15
  8098  002E70  1683               	andwf	131,f,c	;volatile
  8099                           
  8100                           ;nxlcd.c: 188:         PORTD |= ((DDaddr | 0b10000000) & 0xf0);
  8101  002E72  500A               	movf	SetDDRamAddr@DDaddr^0,w,c
  8102  002E74  0980               	iorlw	128
  8103  002E76  0BF0               	andlw	240
  8104  002E78  1283               	iorwf	131,f,c	;volatile
  8105  002E7A                     
  8106                           ;nxlcd.c: 194:         LATEbits.LATE2 = 0;
  8107  002E7A  948D               	bcf	141,2,c	;volatile
  8108  002E7C                     
  8109                           ;nxlcd.c: 195:         LATEbits.LATE0 = 0;
  8110  002E7C  908D               	bcf	141,0,c	;volatile
  8111  002E7E                     
  8112                           ;nxlcd.c: 196:         DelayFor18TCY();
  8113  002E7E  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  8114  002E82                     
  8115                           ;nxlcd.c: 197:         LATEbits.LATE1 = 1;
  8116  002E82  828D               	bsf	141,1,c	;volatile
  8117  002E84                     
  8118                           ;nxlcd.c: 198:         DelayFor18TCY();
  8119  002E84  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  8120  002E88                     
  8121                           ;nxlcd.c: 199:         LATEbits.LATE1 = 0;
  8122  002E88  928D               	bcf	141,1,c	;volatile
  8123                           
  8124                           ;nxlcd.c: 201:         PORTD &= 0x0f;
  8125  002E8A  0E0F               	movlw	15
  8126  002E8C  1683               	andwf	131,f,c	;volatile
  8127                           
  8128                           ;nxlcd.c: 202:         PORTD |= ((DDaddr<<4)&0xf0);
  8129  002E8E  380A               	swapf	SetDDRamAddr@DDaddr^0,w,c
  8130  002E90  0BF0               	andlw	240
  8131  002E92  0BF0               	andlw	240
  8132  002E94  1283               	iorwf	131,f,c	;volatile
  8133  002E96                     
  8134                           ;nxlcd.c: 207:         DelayFor18TCY();
  8135  002E96  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  8136  002E9A                     
  8137                           ;nxlcd.c: 208:         LATEbits.LATE1 = 1;
  8138  002E9A  828D               	bsf	141,1,c	;volatile
  8139  002E9C                     
  8140                           ;nxlcd.c: 209:         DelayFor18TCY();
  8141  002E9C  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  8142  002EA0                     
  8143                           ;nxlcd.c: 210:         LATEbits.LATE1 = 0;
  8144  002EA0  928D               	bcf	141,1,c	;volatile
  8145                           
  8146                           ;nxlcd.c: 212:         TRISD |= 0xf0;
  8147  002EA2  0EF0               	movlw	240
  8148  002EA4  1295               	iorwf	149,f,c	;volatile
  8149  002EA6  0012               	return		;funcret
  8150  002EA8                     __end_of_SetDDRamAddr:
  8151                           	callstack 0
  8152                           
  8153 ;; *************** function _DelayXLCD *****************
  8154 ;; Defined at:
  8155 ;;		line 22 in file "nxlcd.c"
  8156 ;; Parameters:    Size  Location     Type
  8157 ;;		None
  8158 ;; Auto vars:     Size  Location     Type
  8159 ;;		None
  8160 ;; Return value:  Size  Location     Type
  8161 ;;                  1    wreg      void 
  8162 ;; Registers used:
  8163 ;;		wreg
  8164 ;; Tracked objects:
  8165 ;;		On entry : 0/0
  8166 ;;		On exit  : 0/0
  8167 ;;		Unchanged: 0/0
  8168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8169 ;;      Params:         0       0       0       0       0       0       0       0       0
  8170 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8171 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8172 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8173 ;;Total ram usage:        1 bytes
  8174 ;; Hardware stack levels used: 1
  8175 ;; Hardware stack levels required when called: 2
  8176 ;; This function calls:
  8177 ;;		Nothing
  8178 ;; This function is called by:
  8179 ;;		_OpenXLCD
  8180 ;; This function uses a non-reentrant model
  8181 ;;
  8182                           
  8183                           	psect	text30
  8184  002FAE                     __ptext30:
  8185                           	callstack 0
  8186  002FAE                     _DelayXLCD:
  8187                           	callstack 26
  8188  002FAE                     
  8189                           ;nxlcd.c: 24:     _delay((unsigned long)((5)*(20000000/4000.0)));
  8190  002FAE  0E21               	movlw	33
  8191  002FB0  6E0A               	movwf	??_DelayXLCD^0,c
  8192  002FB2  0E76               	movlw	118
  8193  002FB4                     u5647:
  8194  002FB4  2EE8               	decfsz	wreg,f,c
  8195  002FB6  D7FE               	bra	u5647
  8196  002FB8  2E0A               	decfsz	??_DelayXLCD^0,f,c
  8197  002FBA  D7FC               	bra	u5647
  8198  002FBC  D000               	nop2	
  8199  002FBE  0012               	return		;funcret
  8200  002FC0                     __end_of_DelayXLCD:
  8201                           	callstack 0
  8202                           
  8203 ;; *************** function _DelayPORXLCD *****************
  8204 ;; Defined at:
  8205 ;;		line 17 in file "nxlcd.c"
  8206 ;; Parameters:    Size  Location     Type
  8207 ;;		None
  8208 ;; Auto vars:     Size  Location     Type
  8209 ;;		None
  8210 ;; Return value:  Size  Location     Type
  8211 ;;                  1    wreg      void 
  8212 ;; Registers used:
  8213 ;;		wreg
  8214 ;; Tracked objects:
  8215 ;;		On entry : 0/0
  8216 ;;		On exit  : 0/0
  8217 ;;		Unchanged: 0/0
  8218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8219 ;;      Params:         0       0       0       0       0       0       0       0       0
  8220 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8221 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8222 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8223 ;;Total ram usage:        1 bytes
  8224 ;; Hardware stack levels used: 1
  8225 ;; Hardware stack levels required when called: 2
  8226 ;; This function calls:
  8227 ;;		Nothing
  8228 ;; This function is called by:
  8229 ;;		_OpenXLCD
  8230 ;; This function uses a non-reentrant model
  8231 ;;
  8232                           
  8233                           	psect	text31
  8234  002FC0                     __ptext31:
  8235                           	callstack 0
  8236  002FC0                     _DelayPORXLCD:
  8237                           	callstack 26
  8238  002FC0                     
  8239                           ;nxlcd.c: 19:     _delay((unsigned long)((15)*(20000000/4000.0)));
  8240  002FC0  0E62               	movlw	98
  8241  002FC2  6E0A               	movwf	??_DelayPORXLCD^0,c
  8242  002FC4  0E66               	movlw	102
  8243  002FC6                     u5657:
  8244  002FC6  2EE8               	decfsz	wreg,f,c
  8245  002FC8  D7FE               	bra	u5657
  8246  002FCA  2E0A               	decfsz	??_DelayPORXLCD^0,f,c
  8247  002FCC  D7FC               	bra	u5657
  8248  002FCE  0012               	return		;funcret
  8249  002FD0                     __end_of_DelayPORXLCD:
  8250                           	callstack 0
  8251                           
  8252 ;; *************** function _BusyXLCD *****************
  8253 ;; Defined at:
  8254 ;;		line 227 in file "nxlcd.c"
  8255 ;; Parameters:    Size  Location     Type
  8256 ;;		None
  8257 ;; Auto vars:     Size  Location     Type
  8258 ;;		None
  8259 ;; Return value:  Size  Location     Type
  8260 ;;                  1    wreg      unsigned char 
  8261 ;; Registers used:
  8262 ;;		wreg, cstack
  8263 ;; Tracked objects:
  8264 ;;		On entry : 0/0
  8265 ;;		On exit  : 0/0
  8266 ;;		Unchanged: 0/0
  8267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8268 ;;      Params:         0       0       0       0       0       0       0       0       0
  8269 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8270 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8271 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8272 ;;Total ram usage:        0 bytes
  8273 ;; Hardware stack levels used: 1
  8274 ;; Hardware stack levels required when called: 3
  8275 ;; This function calls:
  8276 ;;		_DelayFor18TCY
  8277 ;; This function is called by:
  8278 ;;		_OpenXLCD
  8279 ;;		_putsXLCD
  8280 ;;		_putrsXLCD
  8281 ;; This function uses a non-reentrant model
  8282 ;;
  8283                           
  8284                           	psect	text32
  8285  002E22                     __ptext32:
  8286                           	callstack 0
  8287  002E22                     _BusyXLCD:
  8288                           	callstack 25
  8289  002E22                     
  8290                           ;nxlcd.c: 229:         LATEbits.LATE2 = 1;
  8291  002E22  848D               	bsf	141,2,c	;volatile
  8292                           
  8293                           ;nxlcd.c: 230:         LATEbits.LATE0 = 0;
  8294  002E24  908D               	bcf	141,0,c	;volatile
  8295  002E26                     
  8296                           ;nxlcd.c: 231:         DelayFor18TCY();
  8297  002E26  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  8298  002E2A                     
  8299                           ;nxlcd.c: 232:         LATEbits.LATE1 = 1;
  8300  002E2A  828D               	bsf	141,1,c	;volatile
  8301                           
  8302                           ;nxlcd.c: 233:         DelayFor18TCY();
  8303  002E2C  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  8304  002E30                     
  8305                           ;nxlcd.c: 249:         if(PORTD&0x80)
  8306  002E30  AE83               	btfss	131,7,c	;volatile
  8307  002E32  EF1D  F017         	goto	u2471
  8308  002E36  EF1F  F017         	goto	u2470
  8309  002E3A                     u2471:
  8310  002E3A  EF2A  F017         	goto	l351
  8311  002E3E                     u2470:
  8312  002E3E                     
  8313                           ;nxlcd.c: 253:         {;nxlcd.c: 254:                 LATEbits.LATE1 = 0;
  8314  002E3E  928D               	bcf	141,1,c	;volatile
  8315  002E40                     
  8316                           ;nxlcd.c: 255:                 DelayFor18TCY();
  8317  002E40  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  8318  002E44                     
  8319                           ;nxlcd.c: 256:                 LATEbits.LATE1 = 1;
  8320  002E44  828D               	bsf	141,1,c	;volatile
  8321                           
  8322                           ;nxlcd.c: 257:                 DelayFor18TCY();
  8323  002E46  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  8324  002E4A                     
  8325                           ;nxlcd.c: 258:                 LATEbits.LATE1 = 0;
  8326  002E4A  928D               	bcf	141,1,c	;volatile
  8327  002E4C                     
  8328                           ;nxlcd.c: 259:                 LATEbits.LATE2 = 0;
  8329  002E4C  948D               	bcf	141,2,c	;volatile
  8330  002E4E                     
  8331                           ;nxlcd.c: 260:                 return 1;
  8332  002E4E  0E01               	movlw	1
  8333  002E50  EF33  F017         	goto	l352
  8334  002E54                     l351:
  8335                           
  8336                           ;nxlcd.c: 263:         {;nxlcd.c: 264:                 LATEbits.LATE1 = 0;
  8337  002E54  928D               	bcf	141,1,c	;volatile
  8338  002E56                     
  8339                           ;nxlcd.c: 265:                 DelayFor18TCY();
  8340  002E56  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  8341  002E5A                     
  8342                           ;nxlcd.c: 266:                 LATEbits.LATE1 = 1;
  8343  002E5A  828D               	bsf	141,1,c	;volatile
  8344                           
  8345                           ;nxlcd.c: 267:                 DelayFor18TCY();
  8346  002E5C  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  8347  002E60                     
  8348                           ;nxlcd.c: 268:                 LATEbits.LATE1 = 0;
  8349  002E60  928D               	bcf	141,1,c	;volatile
  8350  002E62                     
  8351                           ;nxlcd.c: 269:                 LATEbits.LATE2 = 0;
  8352  002E62  948D               	bcf	141,2,c	;volatile
  8353  002E64                     
  8354                           ;nxlcd.c: 270:                 return 0;
  8355  002E64  0E00               	movlw	0
  8356  002E66                     l352:
  8357  002E66  0012               	return		;funcret
  8358  002E68                     __end_of_BusyXLCD:
  8359                           	callstack 0
  8360                           
  8361 ;; *************** function _DelayFor18TCY *****************
  8362 ;; Defined at:
  8363 ;;		line 12 in file "nxlcd.c"
  8364 ;; Parameters:    Size  Location     Type
  8365 ;;		None
  8366 ;; Auto vars:     Size  Location     Type
  8367 ;;		None
  8368 ;; Return value:  Size  Location     Type
  8369 ;;                  1    wreg      void 
  8370 ;; Registers used:
  8371 ;;		wreg
  8372 ;; Tracked objects:
  8373 ;;		On entry : 0/0
  8374 ;;		On exit  : 0/0
  8375 ;;		Unchanged: 0/0
  8376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8377 ;;      Params:         0       0       0       0       0       0       0       0       0
  8378 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8379 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8380 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8381 ;;Total ram usage:        0 bytes
  8382 ;; Hardware stack levels used: 1
  8383 ;; Hardware stack levels required when called: 2
  8384 ;; This function calls:
  8385 ;;		Nothing
  8386 ;; This function is called by:
  8387 ;;		_SetDDRamAddr
  8388 ;;		_BusyXLCD
  8389 ;;		_WriteCmdXLCD
  8390 ;;		_WriteDataXLCD
  8391 ;;		_SetCGRamAddr
  8392 ;;		_ReadAddrXLCD
  8393 ;;		_ReadDataXLCD
  8394 ;; This function uses a non-reentrant model
  8395 ;;
  8396                           
  8397                           	psect	text33
  8398  002FE8                     __ptext33:
  8399                           	callstack 0
  8400  002FE8                     _DelayFor18TCY:
  8401                           	callstack 25
  8402  002FE8                     
  8403                           ;nxlcd.c: 14:     _delay((unsigned long)((20)*(20000000/4000000.0)));
  8404  002FE8  0E21               	movlw	33
  8405  002FEA                     u5667:
  8406  002FEA  2EE8               	decfsz	wreg,f,c
  8407  002FEC  D7FE               	bra	u5667
  8408  002FEE  F000               	nop	
  8409  002FF0  0012               	return		;funcret
  8410  002FF2                     __end_of_DelayFor18TCY:
  8411                           	callstack 0
  8412                           
  8413 ;; *************** function _configureInterrupt *****************
  8414 ;; Defined at:
  8415 ;;		line 520 in file "main.c"
  8416 ;; Parameters:    Size  Location     Type
  8417 ;;		None
  8418 ;; Auto vars:     Size  Location     Type
  8419 ;;		None
  8420 ;; Return value:  Size  Location     Type
  8421 ;;                  1    wreg      void 
  8422 ;; Registers used:
  8423 ;;		None
  8424 ;; Tracked objects:
  8425 ;;		On entry : 0/0
  8426 ;;		On exit  : 0/0
  8427 ;;		Unchanged: 0/0
  8428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8429 ;;      Params:         0       0       0       0       0       0       0       0       0
  8430 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8431 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8432 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8433 ;;Total ram usage:        0 bytes
  8434 ;; Hardware stack levels used: 1
  8435 ;; Hardware stack levels required when called: 2
  8436 ;; This function calls:
  8437 ;;		Nothing
  8438 ;; This function is called by:
  8439 ;;		_main
  8440 ;; This function uses a non-reentrant model
  8441 ;;
  8442                           
  8443                           	psect	text34
  8444  002F9A                     __ptext34:
  8445                           	callstack 0
  8446  002F9A                     _configureInterrupt:
  8447                           	callstack 28
  8448  002F9A                     
  8449                           ;main.c: 521:     RCONbits.IPEN = 1;
  8450  002F9A  8ED0               	bsf	208,7,c	;volatile
  8451                           
  8452                           ;main.c: 522:     INTCONbits.GIE = 1;
  8453  002F9C  8EF2               	bsf	242,7,c	;volatile
  8454                           
  8455                           ;main.c: 523:     INTCONbits.PEIE = 1;
  8456  002F9E  8CF2               	bsf	242,6,c	;volatile
  8457                           
  8458                           ;main.c: 526:     INTCON2bits.TMR0IP = 1;
  8459  002FA0  84F1               	bsf	241,2,c	;volatile
  8460                           
  8461                           ;main.c: 527:     INTCONbits.TMR0IE = 1;
  8462  002FA2  8AF2               	bsf	242,5,c	;volatile
  8463                           
  8464                           ;main.c: 528:     INTCONbits.TMR0IF = 0;
  8465  002FA4  94F2               	bcf	242,2,c	;volatile
  8466                           
  8467                           ;main.c: 531:     INTCON2bits.RBIP = 0;
  8468  002FA6  90F1               	bcf	241,0,c	;volatile
  8469                           
  8470                           ;main.c: 532:     INTCONbits.RBIE = 0;
  8471  002FA8  96F2               	bcf	242,3,c	;volatile
  8472                           
  8473                           ;main.c: 533:     INTCONbits.RBIF = 0;
  8474  002FAA  90F2               	bcf	242,0,c	;volatile
  8475  002FAC  0012               	return		;funcret
  8476  002FAE                     __end_of_configureInterrupt:
  8477                           	callstack 0
  8478                           
  8479 ;; *************** function _configureIO *****************
  8480 ;; Defined at:
  8481 ;;		line 491 in file "main.c"
  8482 ;; Parameters:    Size  Location     Type
  8483 ;;		None
  8484 ;; Auto vars:     Size  Location     Type
  8485 ;;		None
  8486 ;; Return value:  Size  Location     Type
  8487 ;;                  1    wreg      void 
  8488 ;; Registers used:
  8489 ;;		wreg, status,2
  8490 ;; Tracked objects:
  8491 ;;		On entry : 0/0
  8492 ;;		On exit  : 0/0
  8493 ;;		Unchanged: 0/0
  8494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8495 ;;      Params:         0       0       0       0       0       0       0       0       0
  8496 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8497 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8498 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8499 ;;Total ram usage:        0 bytes
  8500 ;; Hardware stack levels used: 1
  8501 ;; Hardware stack levels required when called: 2
  8502 ;; This function calls:
  8503 ;;		Nothing
  8504 ;; This function is called by:
  8505 ;;		_main
  8506 ;; This function uses a non-reentrant model
  8507 ;;
  8508                           
  8509                           	psect	text35
  8510  002F82                     __ptext35:
  8511                           	callstack 0
  8512  002F82                     _configureIO:
  8513                           	callstack 28
  8514  002F82                     
  8515                           ;main.c: 492:     TRISB = 0xF0;
  8516  002F82  0EF0               	movlw	240
  8517  002F84  6E93               	movwf	147,c	;volatile
  8518  002F86                     
  8519                           ;main.c: 493:     TRISAbits.RA3 = 1;
  8520  002F86  8692               	bsf	146,3,c	;volatile
  8521  002F88                     
  8522                           ;main.c: 494:     TRISAbits.RA0 = 1;
  8523  002F88  8092               	bsf	146,0,c	;volatile
  8524  002F8A                     
  8525                           ;main.c: 495:     TRISAbits.RA2 = 1;
  8526  002F8A  8492               	bsf	146,2,c	;volatile
  8527  002F8C                     
  8528                           ;main.c: 496:     TRISDbits.TRISD0 = 0;
  8529  002F8C  9095               	bcf	149,0,c	;volatile
  8530  002F8E                     
  8531                           ;main.c: 497:     TRISDbits.TRISD1 = 0;
  8532  002F8E  9295               	bcf	149,1,c	;volatile
  8533  002F90                     
  8534                           ;main.c: 498:     TRISCbits.TRISC2 = 0;
  8535  002F90  9494               	bcf	148,2,c	;volatile
  8536  002F92                     
  8537                           ;main.c: 499:     PORTDbits.RD0 = 0;
  8538  002F92  9083               	bcf	131,0,c	;volatile
  8539  002F94                     
  8540                           ;main.c: 500:     PORTDbits.RD1 = 0;
  8541  002F94  9283               	bcf	131,1,c	;volatile
  8542  002F96                     
  8543                           ;main.c: 501:     PORTCbits.RC2 = 0;
  8544  002F96  9482               	bcf	130,2,c	;volatile
  8545  002F98  0012               	return		;funcret
  8546  002F9A                     __end_of_configureIO:
  8547                           	callstack 0
  8548                           
  8549 ;; *************** function _configureADC *****************
  8550 ;; Defined at:
  8551 ;;		line 613 in file "main.c"
  8552 ;; Parameters:    Size  Location     Type
  8553 ;;		None
  8554 ;; Auto vars:     Size  Location     Type
  8555 ;;		None
  8556 ;; Return value:  Size  Location     Type
  8557 ;;                  1    wreg      void 
  8558 ;; Registers used:
  8559 ;;		wreg, status,2
  8560 ;; Tracked objects:
  8561 ;;		On entry : 0/0
  8562 ;;		On exit  : 0/0
  8563 ;;		Unchanged: 0/0
  8564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8565 ;;      Params:         0       0       0       0       0       0       0       0       0
  8566 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8567 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8568 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8569 ;;Total ram usage:        0 bytes
  8570 ;; Hardware stack levels used: 1
  8571 ;; Hardware stack levels required when called: 2
  8572 ;; This function calls:
  8573 ;;		Nothing
  8574 ;; This function is called by:
  8575 ;;		_main
  8576 ;; This function uses a non-reentrant model
  8577 ;;
  8578                           
  8579                           	psect	text36
  8580  002FDC                     __ptext36:
  8581                           	callstack 0
  8582  002FDC                     _configureADC:
  8583                           	callstack 28
  8584  002FDC                     
  8585                           ;main.c: 614:     ADCON1 = 0b00001011;
  8586  002FDC  0E0B               	movlw	11
  8587  002FDE  6EC1               	movwf	193,c	;volatile
  8588                           
  8589                           ;main.c: 617:     ADCON2 = 0b10010101;
  8590  002FE0  0E95               	movlw	149
  8591  002FE2  6EC0               	movwf	192,c	;volatile
  8592  002FE4                     
  8593                           ;main.c: 622:     ADCON0bits.ADON = 1;
  8594  002FE4  80C2               	bsf	194,0,c	;volatile
  8595  002FE6  0012               	return		;funcret
  8596  002FE8                     __end_of_configureADC:
  8597                           	callstack 0
  8598                           
  8599 ;; *************** function _buzzer *****************
  8600 ;; Defined at:
  8601 ;;		line 711 in file "main.c"
  8602 ;; Parameters:    Size  Location     Type
  8603 ;;  buzzerStatus    2    9[COMRAM] int 
  8604 ;; Auto vars:     Size  Location     Type
  8605 ;;		None
  8606 ;; Return value:  Size  Location     Type
  8607 ;;                  1    wreg      void 
  8608 ;; Registers used:
  8609 ;;		wreg, status,2, status,0
  8610 ;; Tracked objects:
  8611 ;;		On entry : 0/0
  8612 ;;		On exit  : 0/0
  8613 ;;		Unchanged: 0/0
  8614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8615 ;;      Params:         2       0       0       0       0       0       0       0       0
  8616 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8617 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8618 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8619 ;;Total ram usage:        2 bytes
  8620 ;; Hardware stack levels used: 1
  8621 ;; Hardware stack levels required when called: 2
  8622 ;; This function calls:
  8623 ;;		Nothing
  8624 ;; This function is called by:
  8625 ;;		_main
  8626 ;; This function uses a non-reentrant model
  8627 ;;
  8628                           
  8629                           	psect	text37
  8630  002FFC                     __ptext37:
  8631                           	callstack 0
  8632  002FFC                     _buzzer:
  8633                           	callstack 28
  8634  002FFC  0012               	return		;funcret
  8635  002FFE                     __end_of_buzzer:
  8636                           	callstack 0
  8637                           
  8638 ;; *************** function _ISR *****************
  8639 ;; Defined at:
  8640 ;;		line 460 in file "main.c"
  8641 ;; Parameters:    Size  Location     Type
  8642 ;;		None
  8643 ;; Auto vars:     Size  Location     Type
  8644 ;;		None
  8645 ;; Return value:  Size  Location     Type
  8646 ;;                  1    wreg      void 
  8647 ;; Registers used:
  8648 ;;		wreg, status,2, status,0, cstack
  8649 ;; Tracked objects:
  8650 ;;		On entry : 0/0
  8651 ;;		On exit  : 0/0
  8652 ;;		Unchanged: 0/0
  8653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8654 ;;      Params:         0       0       0       0       0       0       0       0       0
  8655 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8656 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8657 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8658 ;;Total ram usage:        0 bytes
  8659 ;; Hardware stack levels used: 1
  8660 ;; Hardware stack levels required when called: 1
  8661 ;; This function calls:
  8662 ;;		___llmod
  8663 ;; This function is called by:
  8664 ;;		Interrupt level 2
  8665 ;; This function uses a non-reentrant model
  8666 ;;
  8667                           
  8668                           	psect	intcode
  8669  000008                     __pintcode:
  8670                           	callstack 0
  8671  000008                     _ISR:
  8672                           	callstack 25
  8673                           
  8674                           ;incstack = 0
  8675  000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8676  00000A  EDE5  F015         	call	int_func,f	;refresh shadow registers
  8677                           
  8678                           	psect	intcode_body
  8679  002BCA                     __pintcode_body:
  8680                           	callstack 25
  8681  002BCA                     int_func:
  8682                           	callstack 25
  8683  002BCA  0006               	pop		; remove dummy address from shadow register refresh
  8684  002BCC                     
  8685                           ;main.c: 461:     if (INTCONbits.TMR0IF) {
  8686  002BCC  A4F2               	btfss	242,2,c	;volatile
  8687  002BCE  EFEB  F015         	goto	i2u404_41
  8688  002BD2  EFED  F015         	goto	i2u404_40
  8689  002BD6                     i2u404_41:
  8690  002BD6  EF2B  F016         	goto	i2l189
  8691  002BDA                     i2u404_40:
  8692  002BDA                     
  8693                           ;main.c: 462:         TMR0L = 100;
  8694  002BDA  0E64               	movlw	100
  8695  002BDC  6ED6               	movwf	214,c	;volatile
  8696  002BDE                     
  8697                           ;main.c: 463:         milliseconds++;
  8698  002BDE  0E01               	movlw	1
  8699  002BE0  264A               	addwf	_milliseconds^0,f,c	;volatile
  8700  002BE2  0E00               	movlw	0
  8701  002BE4  224B               	addwfc	(_milliseconds+1)^0,f,c	;volatile
  8702  002BE6  224C               	addwfc	(_milliseconds+2)^0,f,c	;volatile
  8703  002BE8  224D               	addwfc	(_milliseconds+3)^0,f,c	;volatile
  8704  002BEA                     
  8705                           ;main.c: 464:         if (milliseconds % 1000 == 0) {
  8706  002BEA  C04A  F001         	movff	_milliseconds,___llmod@dividend	;volatile
  8707  002BEE  C04B  F002         	movff	_milliseconds+1,___llmod@dividend+1	;volatile
  8708  002BF2  C04C  F003         	movff	_milliseconds+2,___llmod@dividend+2	;volatile
  8709  002BF6  C04D  F004         	movff	_milliseconds+3,___llmod@dividend+3	;volatile
  8710  002BFA  0EE8               	movlw	232
  8711  002BFC  6E05               	movwf	___llmod@divisor^0,c
  8712  002BFE  0E03               	movlw	3
  8713  002C00  6E06               	movwf	(___llmod@divisor+1)^0,c
  8714  002C02  0E00               	movlw	0
  8715  002C04  6E07               	movwf	(___llmod@divisor+2)^0,c
  8716  002C06  0E00               	movlw	0
  8717  002C08  6E08               	movwf	(___llmod@divisor+3)^0,c
  8718  002C0A  EC2D  F016         	call	___llmod	;wreg free
  8719  002C0E  5001               	movf	?___llmod^0,w,c
  8720  002C10  1002               	iorwf	(?___llmod+1)^0,w,c
  8721  002C12  1003               	iorwf	(?___llmod+2)^0,w,c
  8722  002C14  1004               	iorwf	(?___llmod+3)^0,w,c
  8723  002C16  A4D8               	btfss	status,2,c
  8724  002C18  EF10  F016         	goto	i2u405_41
  8725  002C1C  EF12  F016         	goto	i2u405_40
  8726  002C20                     i2u405_41:
  8727  002C20  EF2A  F016         	goto	i2l4227
  8728  002C24                     i2u405_40:
  8729  002C24                     
  8730                           ;main.c: 465:             if (tak > 1) {
  8731  002C24  BE53               	btfsc	(_tak+1)^0,7,c	;volatile
  8732  002C26  EF1E  F016         	goto	i2u406_41
  8733  002C2A  5053               	movf	(_tak+1)^0,w,c	;volatile
  8734  002C2C  E109               	bnz	i2u406_40
  8735  002C2E  0E02               	movlw	2
  8736  002C30  5C52               	subwf	_tak^0,w,c	;volatile
  8737  002C32  A0D8               	btfss	status,0,c
  8738  002C34  EF1E  F016         	goto	i2u406_41
  8739  002C38  EF20  F016         	goto	i2u406_40
  8740  002C3C                     i2u406_41:
  8741  002C3C  EF26  F016         	goto	i2l4225
  8742  002C40                     i2u406_40:
  8743  002C40                     
  8744                           ;main.c: 466:                 tak = 0;
  8745  002C40  0E00               	movlw	0
  8746  002C42  6E53               	movwf	(_tak+1)^0,c	;volatile
  8747  002C44  0E00               	movlw	0
  8748  002C46  6E52               	movwf	_tak^0,c	;volatile
  8749                           
  8750                           ;main.c: 467:             } else {
  8751  002C48  EF2A  F016         	goto	i2l4227
  8752  002C4C                     i2l4225:
  8753                           
  8754                           ;main.c: 468:                 tak = 1;
  8755  002C4C  0E00               	movlw	0
  8756  002C4E  6E53               	movwf	(_tak+1)^0,c	;volatile
  8757  002C50  0E01               	movlw	1
  8758  002C52  6E52               	movwf	_tak^0,c	;volatile
  8759  002C54                     i2l4227:
  8760                           
  8761                           ;main.c: 471:         INTCONbits.TMR0IF = 0;
  8762  002C54  94F2               	bcf	242,2,c	;volatile
  8763  002C56                     i2l189:
  8764  002C56  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8765  002C58  0011               	retfie		f
  8766  002C5A                     __end_of_ISR:
  8767                           	callstack 0
  8768                           
  8769 ;; *************** function ___llmod *****************
  8770 ;; Defined at:
  8771 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\llmod.c"
  8772 ;; Parameters:    Size  Location     Type
  8773 ;;  dividend        4    0[COMRAM] unsigned long 
  8774 ;;  divisor         4    4[COMRAM] unsigned long 
  8775 ;; Auto vars:     Size  Location     Type
  8776 ;;  counter         1    8[COMRAM] unsigned char 
  8777 ;; Return value:  Size  Location     Type
  8778 ;;                  4    0[COMRAM] unsigned long 
  8779 ;; Registers used:
  8780 ;;		wreg, status,2, status,0
  8781 ;; Tracked objects:
  8782 ;;		On entry : 0/0
  8783 ;;		On exit  : 0/0
  8784 ;;		Unchanged: 0/0
  8785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8786 ;;      Params:         8       0       0       0       0       0       0       0       0
  8787 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8788 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8789 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8790 ;;Total ram usage:        9 bytes
  8791 ;; Hardware stack levels used: 1
  8792 ;; This function calls:
  8793 ;;		Nothing
  8794 ;; This function is called by:
  8795 ;;		_ISR
  8796 ;; This function uses a non-reentrant model
  8797 ;;
  8798                           
  8799                           	psect	text39
  8800  002C5A                     __ptext39:
  8801                           	callstack 0
  8802  002C5A                     ___llmod:
  8803                           	callstack 25
  8804  002C5A  5005               	movf	___llmod@divisor^0,w,c
  8805  002C5C  1006               	iorwf	(___llmod@divisor+1)^0,w,c
  8806  002C5E  1007               	iorwf	(___llmod@divisor+2)^0,w,c
  8807  002C60  1008               	iorwf	(___llmod@divisor+3)^0,w,c
  8808  002C62  B4D8               	btfsc	status,2,c
  8809  002C64  EF36  F016         	goto	i2u374_41
  8810  002C68  EF38  F016         	goto	i2u374_40
  8811  002C6C                     i2u374_41:
  8812  002C6C  EF68  F016         	goto	i2l806
  8813  002C70                     i2u374_40:
  8814  002C70  0E01               	movlw	1
  8815  002C72  6E09               	movwf	___llmod@counter^0,c
  8816  002C74  EF42  F016         	goto	i2l4031
  8817  002C78                     i2l4029:
  8818  002C78  90D8               	bcf	status,0,c
  8819  002C7A  3605               	rlcf	___llmod@divisor^0,f,c
  8820  002C7C  3606               	rlcf	(___llmod@divisor+1)^0,f,c
  8821  002C7E  3607               	rlcf	(___llmod@divisor+2)^0,f,c
  8822  002C80  3608               	rlcf	(___llmod@divisor+3)^0,f,c
  8823  002C82  2A09               	incf	___llmod@counter^0,f,c
  8824  002C84                     i2l4031:
  8825  002C84  AE08               	btfss	(___llmod@divisor+3)^0,7,c
  8826  002C86  EF47  F016         	goto	i2u375_41
  8827  002C8A  EF49  F016         	goto	i2u375_40
  8828  002C8E                     i2u375_41:
  8829  002C8E  EF3C  F016         	goto	i2l4029
  8830  002C92                     i2u375_40:
  8831  002C92                     i2l4033:
  8832  002C92  5005               	movf	___llmod@divisor^0,w,c
  8833  002C94  5C01               	subwf	___llmod@dividend^0,w,c
  8834  002C96  5006               	movf	(___llmod@divisor+1)^0,w,c
  8835  002C98  5802               	subwfb	(___llmod@dividend+1)^0,w,c
  8836  002C9A  5007               	movf	(___llmod@divisor+2)^0,w,c
  8837  002C9C  5803               	subwfb	(___llmod@dividend+2)^0,w,c
  8838  002C9E  5008               	movf	(___llmod@divisor+3)^0,w,c
  8839  002CA0  5804               	subwfb	(___llmod@dividend+3)^0,w,c
  8840  002CA2  A0D8               	btfss	status,0,c
  8841  002CA4  EF56  F016         	goto	i2u376_41
  8842  002CA8  EF58  F016         	goto	i2u376_40
  8843  002CAC                     i2u376_41:
  8844  002CAC  EF60  F016         	goto	i2l4037
  8845  002CB0                     i2u376_40:
  8846  002CB0  5005               	movf	___llmod@divisor^0,w,c
  8847  002CB2  5E01               	subwf	___llmod@dividend^0,f,c
  8848  002CB4  5006               	movf	(___llmod@divisor+1)^0,w,c
  8849  002CB6  5A02               	subwfb	(___llmod@dividend+1)^0,f,c
  8850  002CB8  5007               	movf	(___llmod@divisor+2)^0,w,c
  8851  002CBA  5A03               	subwfb	(___llmod@dividend+2)^0,f,c
  8852  002CBC  5008               	movf	(___llmod@divisor+3)^0,w,c
  8853  002CBE  5A04               	subwfb	(___llmod@dividend+3)^0,f,c
  8854  002CC0                     i2l4037:
  8855  002CC0  90D8               	bcf	status,0,c
  8856  002CC2  3208               	rrcf	(___llmod@divisor+3)^0,f,c
  8857  002CC4  3207               	rrcf	(___llmod@divisor+2)^0,f,c
  8858  002CC6  3206               	rrcf	(___llmod@divisor+1)^0,f,c
  8859  002CC8  3205               	rrcf	___llmod@divisor^0,f,c
  8860  002CCA  2E09               	decfsz	___llmod@counter^0,f,c
  8861  002CCC  EF49  F016         	goto	i2l4033
  8862  002CD0                     i2l806:
  8863  002CD0  C001  F001         	movff	___llmod@dividend,?___llmod
  8864  002CD4  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  8865  002CD8  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  8866  002CDC  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  8867  002CE0  0012               	return		;funcret
  8868  002CE2                     __end_of___llmod:
  8869                           	callstack 0
  8870                           
  8871                           	psect	rparam
  8872  0000                     
  8873                           	psect	temp
  8874  000056                     btemp:
  8875                           	callstack 0
  8876  000056                     	ds	1
  8877  0000                     int$flags	set	btemp
  8878  0000                     wtemp8	set	btemp+1
  8879  0000                     ttemp5	set	btemp+1
  8880  0000                     ttemp6	set	btemp+4
  8881  0000                     ttemp7	set	btemp+8
  8882                           
  8883                           	psect	idloc
  8884                           
  8885                           ;Config register IDLOC0 @ 0x200000
  8886                           ;	unspecified, using default values
  8887  200000                     	org	2097152
  8888  200000  FF                 	db	255
  8889                           
  8890                           ;Config register IDLOC1 @ 0x200001
  8891                           ;	unspecified, using default values
  8892  200001                     	org	2097153
  8893  200001  FF                 	db	255
  8894                           
  8895                           ;Config register IDLOC2 @ 0x200002
  8896                           ;	unspecified, using default values
  8897  200002                     	org	2097154
  8898  200002  FF                 	db	255
  8899                           
  8900                           ;Config register IDLOC3 @ 0x200003
  8901                           ;	unspecified, using default values
  8902  200003                     	org	2097155
  8903  200003  FF                 	db	255
  8904                           
  8905                           ;Config register IDLOC4 @ 0x200004
  8906                           ;	unspecified, using default values
  8907  200004                     	org	2097156
  8908  200004  FF                 	db	255
  8909                           
  8910                           ;Config register IDLOC5 @ 0x200005
  8911                           ;	unspecified, using default values
  8912  200005                     	org	2097157
  8913  200005  FF                 	db	255
  8914                           
  8915                           ;Config register IDLOC6 @ 0x200006
  8916                           ;	unspecified, using default values
  8917  200006                     	org	2097158
  8918  200006  FF                 	db	255
  8919                           
  8920                           ;Config register IDLOC7 @ 0x200007
  8921                           ;	unspecified, using default values
  8922  200007                     	org	2097159
  8923  200007  FF                 	db	255
  8924                           
  8925                           	psect	config
  8926                           
  8927                           ;Config register CONFIG1L @ 0x300000
  8928                           ;	PLL Prescaler Selection bits
  8929                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  8930                           ;	System Clock Postscaler Selection bits
  8931                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  8932                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8933                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  8934  300000                     	org	3145728
  8935  300000  00                 	db	0
  8936                           
  8937                           ;Config register CONFIG1H @ 0x300001
  8938                           ;	Oscillator Selection bits
  8939                           ;	FOSC = HS, HS oscillator (HS)
  8940                           ;	Fail-Safe Clock Monitor Enable bit
  8941                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8942                           ;	Internal/External Oscillator Switchover bit
  8943                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8944  300001                     	org	3145729
  8945  300001  0C                 	db	12
  8946                           
  8947                           ;Config register CONFIG2L @ 0x300002
  8948                           ;	Power-up Timer Enable bit
  8949                           ;	PWRT = OFF, PWRT disabled
  8950                           ;	Brown-out Reset Enable bits
  8951                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  8952                           ;	Brown-out Reset Voltage bits
  8953                           ;	BORV = 3, Minimum setting 2.05V
  8954                           ;	USB Voltage Regulator Enable bit
  8955                           ;	VREGEN = OFF, USB voltage regulator disabled
  8956  300002                     	org	3145730
  8957  300002  19                 	db	25
  8958                           
  8959                           ;Config register CONFIG2H @ 0x300003
  8960                           ;	Watchdog Timer Enable bit
  8961                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8962                           ;	Watchdog Timer Postscale Select bits
  8963                           ;	WDTPS = 32768, 1:32768
  8964  300003                     	org	3145731
  8965  300003  1E                 	db	30
  8966                           
  8967                           ; Padding undefined space
  8968  300004                     	org	3145732
  8969  300004  FF                 	db	255
  8970                           
  8971                           ;Config register CONFIG3H @ 0x300005
  8972                           ;	CCP2 MUX bit
  8973                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
  8974                           ;	PORTB A/D Enable bit
  8975                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8976                           ;	Low-Power Timer 1 Oscillator Enable bit
  8977                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8978                           ;	MCLR Pin Enable bit
  8979                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8980  300005                     	org	3145733
  8981  300005  80                 	db	128
  8982                           
  8983                           ;Config register CONFIG4L @ 0x300006
  8984                           ;	Stack Full/Underflow Reset Enable bit
  8985                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  8986                           ;	Single-Supply ICSP Enable bit
  8987                           ;	LVP = OFF, Single-Supply ICSP disabled
  8988                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8989                           ;	ICPRT = OFF, ICPORT disabled
  8990                           ;	Extended Instruction Set Enable bit
  8991                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8992                           ;	Background Debugger Enable bit
  8993                           ;	DEBUG = 0x1, unprogrammed default
  8994  300006                     	org	3145734
  8995  300006  80                 	db	128
  8996                           
  8997                           ; Padding undefined space
  8998  300007                     	org	3145735
  8999  300007  FF                 	db	255
  9000                           
  9001                           ;Config register CONFIG5L @ 0x300008
  9002                           ;	Code Protection bit
  9003                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  9004                           ;	Code Protection bit
  9005                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  9006                           ;	Code Protection bit
  9007                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  9008                           ;	Code Protection bit
  9009                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  9010  300008                     	org	3145736
  9011  300008  0F                 	db	15
  9012                           
  9013                           ;Config register CONFIG5H @ 0x300009
  9014                           ;	Boot Block Code Protection bit
  9015                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  9016                           ;	Data EEPROM Code Protection bit
  9017                           ;	CPD = OFF, Data EEPROM is not code-protected
  9018  300009                     	org	3145737
  9019  300009  C0                 	db	192
  9020                           
  9021                           ;Config register CONFIG6L @ 0x30000A
  9022                           ;	Write Protection bit
  9023                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  9024                           ;	Write Protection bit
  9025                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  9026                           ;	Write Protection bit
  9027                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  9028                           ;	Write Protection bit
  9029                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  9030  30000A                     	org	3145738
  9031  30000A  0F                 	db	15
  9032                           
  9033                           ;Config register CONFIG6H @ 0x30000B
  9034                           ;	Configuration Register Write Protection bit
  9035                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  9036                           ;	Boot Block Write Protection bit
  9037                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  9038                           ;	Data EEPROM Write Protection bit
  9039                           ;	WRTD = OFF, Data EEPROM is not write-protected
  9040  30000B                     	org	3145739
  9041  30000B  E0                 	db	224
  9042                           
  9043                           ;Config register CONFIG7L @ 0x30000C
  9044                           ;	Table Read Protection bit
  9045                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9046                           ;	Table Read Protection bit
  9047                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9048                           ;	Table Read Protection bit
  9049                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9050                           ;	Table Read Protection bit
  9051                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9052  30000C                     	org	3145740
  9053  30000C  0F                 	db	15
  9054                           
  9055                           ;Config register CONFIG7H @ 0x30000D
  9056                           ;	Boot Block Table Read Protection bit
  9057                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  9058  30000D                     	org	3145741
  9059  30000D  40                 	db	64
  9060                           tosu	equ	0xFFF
  9061                           tosh	equ	0xFFE
  9062                           tosl	equ	0xFFD
  9063                           stkptr	equ	0xFFC
  9064                           pclatu	equ	0xFFB
  9065                           pclath	equ	0xFFA
  9066                           pcl	equ	0xFF9
  9067                           tblptru	equ	0xFF8
  9068                           tblptrh	equ	0xFF7
  9069                           tblptrl	equ	0xFF6
  9070                           tablat	equ	0xFF5
  9071                           prodh	equ	0xFF4
  9072                           prodl	equ	0xFF3
  9073                           indf0	equ	0xFEF
  9074                           postinc0	equ	0xFEE
  9075                           postdec0	equ	0xFED
  9076                           preinc0	equ	0xFEC
  9077                           plusw0	equ	0xFEB
  9078                           fsr0h	equ	0xFEA
  9079                           fsr0l	equ	0xFE9
  9080                           wreg	equ	0xFE8
  9081                           indf1	equ	0xFE7
  9082                           postinc1	equ	0xFE6
  9083                           postdec1	equ	0xFE5
  9084                           preinc1	equ	0xFE4
  9085                           plusw1	equ	0xFE3
  9086                           fsr1h	equ	0xFE2
  9087                           fsr1l	equ	0xFE1
  9088                           bsr	equ	0xFE0
  9089                           indf2	equ	0xFDF
  9090                           postinc2	equ	0xFDE
  9091                           postdec2	equ	0xFDD
  9092                           preinc2	equ	0xFDC
  9093                           plusw2	equ	0xFDB
  9094                           fsr2h	equ	0xFDA
  9095                           fsr2l	equ	0xFD9
  9096                           status	equ	0xFD8

Data Sizes:
    Strings     238
    Constant    24
    Data        6
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     73      85
    BANK0           160     88     120
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    floatToString@buffer	PTR unsigned char  size(2) Largest target is 10
		 -> displayMenu@valueStr(BANK0[10]), 

    itoa@ptr	PTR unsigned char  size(2) Largest target is 10
		 -> displayMenu@valueStr(BANK0[10]), 

    itoa@start	PTR unsigned char  size(2) Largest target is 10
		 -> displayMenu@valueStr(BANK0[10]), 

    displayStuff@stuff	PTR unsigned char  size(2) Largest target is 17
		 -> readTwoDigitValue@input(COMRAM[3]), STR_27(CODE[13]), STR_26(CODE[12]), STR_25(CODE[17]), 
		 -> STR_24(CODE[14]), STR_23(CODE[3]), STR_22(CODE[10]), STR_21(CODE[16]), 
		 -> STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[3]), STR_17(CODE[9]), 
		 -> STR_16(CODE[5]), STR_15(CODE[4]), STR_14(CODE[5]), STR_13(CODE[5]), 
		 -> STR_12(CODE[2]), STR_11(CODE[7]), STR_10(CODE[5]), STR_9(CODE[2]), 
		 -> displayMenu@valueStr(BANK0[10]), STR_8(CODE[6]), STR_7(CODE[15]), STR_6(CODE[11]), 
		 -> STR_5(CODE[11]), STR_4(CODE[13]), STR_3(CODE[12]), STR_2(CODE[12]), 
		 -> STR_1(CODE[13]), 

    readTwoDigitValue@prompt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[11]), STR_3(CODE[12]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _readTwoDigitValue->_readKey
    _readKey->_millis
    _tempRead->___fldiv
    _itoa->___awdiv
    _humidade->___fldiv
    _gasRead->___fldiv
    ___fldiv->___flmul
    _floatToString->___flmul
    ___flsub->___fladd
    ___flmul->___xxtofl
    _displayStuff->_WriteCmdXLCD
    _displayStuff->_WriteDataXLCD
    ___flge->___xxtofl
    _configureLCD->_OpenXLCD
    _OpenXLCD->_DelayPORXLCD
    _OpenXLCD->_DelayXLCD
    _OpenXLCD->_SetDDRamAddr
    _OpenXLCD->_WriteCmdXLCD

Critical Paths under _ISR in COMRAM

    _ISR->___llmod

Critical Paths under _main in BANK0

    _main->_displayMenu
    _displayMenu->_floatToString

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                34    34      0  104006
                                             54 BANK0     34    34      0
                             ___flge
                           ___xxtofl
                             _buzzer
                       _configureADC
                        _configureIO
                 _configureInterrupt
                       _configureLCD
                     _configureTimer
                        _displayMenu
                       _displayStuff
                            _gasRead
                           _humidade
                             _millis
                            _readKey
                  _readTwoDigitValue
                     _setCoolerSpeed
                           _setMoist
                           _tempRead
 ---------------------------------------------------------------------------------
 (1) _setMoist                                             2     0      2     174
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _setCoolerSpeed                                       2     0      2     152
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _readTwoDigitValue                                   10     8      2    8514
                                             40 COMRAM    10     8      2
                       _WriteCmdXLCD
                       _displayStuff
                            _readKey
 ---------------------------------------------------------------------------------
 (2) _readKey                                             23    23      0     427
                                             17 COMRAM    23    23      0
                             _millis
 ---------------------------------------------------------------------------------
 (1) _displayMenu                                         32    30      2   56047
                                             22 BANK0     32    30      2
                       _WriteCmdXLCD
                             ___flge
                           ___xxtofl
                       _displayStuff
                      _floatToString
                            _gasRead
                           _humidade
                               _itoa
                             _millis
                           _tempRead
 ---------------------------------------------------------------------------------
 (1) _tempRead                                            14    10      4    7984
                                              0 BANK0     14    10      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
                         _readAnalog
 ---------------------------------------------------------------------------------
 (3) _millis                                               8     4      4      23
                                              9 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _itoa                                                10     6      4    2992
                                             17 COMRAM     8     4      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _humidade                                            14    10      4    7984
                                              0 BANK0     14    10      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
                         _readAnalog
 ---------------------------------------------------------------------------------
 (1) _gasRead                                             14    10      4    7984
                                              0 BANK0     14    10      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
                         _readAnalog
 ---------------------------------------------------------------------------------
 (2) _readAnalog                                           7     5      2      68
                                              9 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1855
                                             48 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _floatToString                                       32    24      8   14144
                                             48 COMRAM    10     2      8
                                              0 BANK0     22    22      0
                            ___awdiv
                            ___awmod
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    2546
                                              9 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     517
                                              9 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3827
                                             25 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    3262
                                              9 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     155
                                              9 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    3413
                                             23 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     793
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     985
                                              9 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _displayStuff                                        10     4      6    7520
                                             10 COMRAM    10     4      6
                       _WriteCmdXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (3) _WriteDataXLCD                                        1     1      0      44
                                              9 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    2918
                                             23 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _configureTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureLCD                                         1     1      0     154
                                             11 COMRAM     1     1      0
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0     110
                                             10 COMRAM     1     1      0
                           _BusyXLCD
                       _DelayPORXLCD
                          _DelayXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (3) _WriteCmdXLCD                                         1     1      0      44
                                              9 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         1     1      0      44
                                              9 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayXLCD                                            1     1      0       0
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         1     1      0       0
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (4) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureInterrupt                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureIO                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureADC                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buzzer                                               2     0      2     174
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  0     0      0     311
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     311
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flge
     ___xxtofl (ARG)
   ___xxtofl
   _buzzer
   _configureADC
   _configureIO
   _configureInterrupt
   _configureLCD
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
       _DelayPORXLCD
       _DelayXLCD
       _SetDDRamAddr
         _DelayFor18TCY
       _WriteCmdXLCD
         _DelayFor18TCY
     _WriteCmdXLCD
   _configureTimer
   _displayMenu
     _WriteCmdXLCD
     ___flge
     ___xxtofl
     _displayStuff
       _WriteCmdXLCD
       _WriteDataXLCD
         _DelayFor18TCY
     _floatToString
       ___awdiv
       ___awmod
       ___flmul
         ___xxtofl (ARG)
       ___flneg
       ___flsub
         ___fladd
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
     _gasRead
       ___fldiv
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___flmul
       ___xxtofl
       _readAnalog
     _humidade
       ___fldiv
       ___flmul
       ___xxtofl
       _readAnalog
     _itoa
       ___awdiv
       ___awmod
     _millis
     _tempRead
       ___fldiv
       ___flmul
       ___xxtofl
       _readAnalog
   _displayStuff
   _gasRead
   _humidade
   _millis
   _readKey
     _millis
   _readTwoDigitValue
     _WriteCmdXLCD
     _displayStuff
     _readKey
   _setCoolerSpeed
   _setMoist
   _tempRead

 _ISR (ROOT)
   ___llmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     58      78       5       75.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     49      55       1       90.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CD      20        0.0%
DATA                 0      0      CD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Feb 06 17:56:44 2025

                ?_configureIO 0001                 ?_configureADC 0001                 ?_configureLCD 0001  
                ___fldiv@aexp 0049                  ___fldiv@bexp 0048                  ___fldiv@sign 0041  
                ?_displayMenu 0076                  ___awdiv@sign 000F                 _floatToString 1BCE  
               ?_displayStuff 000B                           l201 2FAC                           l121 0E16  
                         l122 0E68                           l204 2FDA                           l124 0EC8  
                         l125 0ED6                           l126 0F30                           l135 0064  
                         l312 2FF0                           l232 2D4E                           l136 08C6  
                         l233 2D22                           l241 29C4                           l225 2074  
                         l315 2FCE                           l228 2FE6                           l244 2A82  
                         l318 2FBE                           l342 2784                           l254 2BC8  
                         l238 2906                           l262 2FF8                           l351 2E54  
                         l271 2368                           l352 2E66                           l192 2F80  
                         l257 2FFA                           l362 2F22                           l267 2FFC  
                         l195 2F98                           l283 1CA2                           l179 248C  
                         l348 2EA6                           l365 2EE4                           l293 1E7C  
                         l198 2E20                           l630 2B32                           l617 2848  
                         l651 2650                           l660 2F5A                           l656 2696  
                         l914 1138                           l931 1252                           l923 1408  
                         l915 1126                           l683 2592                           l940 1322  
                         l916 10EC                           l941 1310                           l970 1A2C  
                         l956 2DDA                           l981 1AEA                           l973 19F0  
                         l982 1AD8                           l968 1BCC                           l979 1A72  
                         _ISR 0008               ?_configureTimer 0001                           _tak 0052  
       __size_of_WriteCmdXLCD 003E                  ___awmod@sign 000F                           wreg 000FE8  
                ___flmul@aexp 0025                  ___flmul@bexp 002A                  ___flmul@sign 0024  
                ___flmul@temp 002F                  ___flmul@prod 002B                          ?_ISR 0001  
                ___fltol@exp1 0013                          l1000 14CE                          l1010 172A  
                        l1004 1832                          l1007 16C4                          l1017 17F4  
                        l1009 173C                          l1041 20CC                          l1044 2228  
                        l1055 21C0                          l1048 2164                          l3001 2E26  
                        l3011 2E44                          l3003 2E2A                          l3013 2E4A  
                        l3005 2E30                          l3101 1926                          l3031 2E64  
                        l3023 2E56                          l3015 2E4C                          l3007 2E3E  
                        l3111 1956                          l3103 192E                          l3025 2E5A  
                        l3017 2E4E                          l3009 2E40                          l3041 2E7E  
                        l3121 1994                          l3113 1956                          l3105 1932  
                        l4001 23FC                          l3027 2E60                          l3051 2E9A  
                        l3043 2E82                          l3035 2E6A                          l3131 19E0  
                        l3123 19A4                          l4003 241C                          l4011 2450  
                        l3029 2E62                          l3053 2E9C                          l3045 2E84  
                        l3037 2E7A                          l3141 1A2A                          l3133 19EE  
                        l3125 19B4                          l3117 196A                          l3109 1946  
                        l3061 1840                          l4013 246C                          l4005 2420  
                        l4021 2FF8                          l3055 2EA0                          l3047 2E88  
                        l3039 2E7C                          l3151 1A70                          l3143 1A3C  
                        l3135 19FA                          l3127 19BC                          l3119 1984  
                        l3071 1880                          l3063 184E                          l4007 2436  
                        l4017 2FFC                          l3049 2E96                          l3161 1AD0  
                        l3145 1A52                          l3153 1A82                          l3137 1A18  
                        l3129 19CC                          l3081 18A6                          l3073 1882  
                        l3065 1850                          l5001 225A                          l4009 2448  
                        l3171 1B3E                          l3155 1A90                          l3147 1A58  
                        l3139 1A1A                          l3091 18E6                          l3083 18B4  
                        l3067 1860                          l3075 188A                          l3059 1834  
                        l5011 2290                          l5003 2266                          l3181 1BA8  
                        l3165 1AFA                          l3173 1B42                          l3157 1A94  
                        l3149 1A62                          l3093 18E8                          l3085 18B6  
                        l3077 189A                          l3069 1870                          l5021 22B0  
                        l5013 229C                          l5101 039C                          l3183 1BAC  
                        l3175 1B5C                          l3167 1B06                          l3159 1AA2  
                        l3087 18C6                          l3095 18F0                          l3079 18A0  
                        l5031 2306                          l5023 22CC                          l5015 22A0  
                        l5007 227A                          l5111 0432                          l5103 03E6  
                        l3511 1E7E                          l2721 2FE8                          l4401 0FB0  
                        l3185 1BBA                          l3177 1B72                          l3169 1B14  
                        l3097 1900                          l3089 18D6                          l5033 2332  
                        l5025 22D0                          l5017 22A4                          l5009 2288  
                        l5121 0550                          l5113 047C                          l5105 0406  
                        l5041 0060                          l3521 1ED2                          l3513 1E96  
                        l5201 0952                          l4411 0FDE                          l4403 0FB6  
                        l3187 1BC0                          l3179 1B8C                          l3099 1916  
                        l5035 234E                          l5027 22EA                          l5019 22A4  
                        l5131 060C                          l5115 049C                          l5107 040A  
                        l5051 00B4                          l5043 0074                          l3531 1F08  
                        l3523 1EF0                          l3515 1EAA                          l5211 0998  
                        l5203 095E                          l4501 11B4                          l4421 1012  
                        l4413 0FE0                          l4405 0FC8                          l3189 1BC2  
                        l5029 22FA                          l5141 06E0                          l5133 0656  
                        l5117 04E6                          l5109 0426                          l5125 0570  
                        l5061 0144                          l5053 00CC                          l5045 007A  
                        l5037 0012                          l3541 1FE6                          l3533 1F38  
                        l3525 1F00                          l3517 1EB2                          l5301 0C56  
                        l5221 09EE                          l5213 09B4                          l5205 096E  
                        l4511 1220                          l4503 11B6                          l4431 104E  
                        l4415 0FF0                          l4423 101A                          l4407 0FCA  
                        l5151 07C0                          l5143 06EC                          l5135 06A0  
                        l5127 05A6                          l5119 0506                          l5071 01D4  
                        l5063 0160                          l5055 00E8                          l5047 008C  
                        l5039 0026                          l3543 201A                          l3535 1F8C  
                        l5311 0CCA                          l5303 0C6A                          l5231 0A2A  
                        l5223 09F4                          l5215 09BC                          l5207 0982  
                        l3801 2F82                          l3721 269A                          l4601 146C  
                        l4521 1278                          l4513 1222                          l4505 11C0  
                        l4441 1062                          l4433 1052                          l4425 102A  
                        l4417 1000                          l4409 0FD0                          l5153 080A  
                        l5145 0736                          l5137 06C0                          l5129 05C2  
                        l5081 0240                          l5073 01F0                          l5065 0174  
                        l5057 010C                          l5049 00A0                          l3545 2032  
                        l3537 1F9E                          l3553 203E                          l3561 2066  
                        l5321 0D1C                          l5313 0CD4                          l5305 0C7C  
                        l5241 0A8A                          l5233 0A3C                          l5225 0A02  
                        l5209 0994                          l5217 09C8                          l3811 2F8E  
                        l3803 2F86                          l2931 2EF8                          l3731 26AA  
                        l3723 26A2                          l3571 2B52                          l4611 1498  
                        l4603 1472                          l4531 12A6                          l4515 1232  
                        l4507 11C6                          l4451 1076                          l4443 1066  
                        l4435 1056                          l4427 103C                          l4419 1010  
                        l5411 0842                          l5147 0756                          l5139 06C4  
                        l5091 02D4                          l5083 025C                          l5075 020C  
                        l5067 0194                          l5059 0128                          l5163 0880  
                        l3555 2042                          l3539 1FB2                          l5331 0E60  
                        l5323 0D66                          l5307 0C94                          l5315 0CE0  
                        l5243 0AA4                          l5235 0A50                          l5227 0A0A  
                        l5219 09DC                          l3821 2FDC                          l3813 2F90  
                        l3805 2F88                          l2941 2F12                          l2933 2EFA  
                        l3741 26BC                          l3733 26AC                          l3725 26A4  
                        l3581 2B98                          l3573 2B5A                          l4701 17F8  
                        l4621 14EE                          l4613 14A8                          l4605 1478  
                        l4533 12B4                          l4525 128C                          l4541 12D2  
                        l4509 11EC                          l4517 1242                          l4453 107A  
                        l4445 106A                          l4437 105A                          l4429 104A  
                        l4461 108A                          l2925 2F5C                          l5413 0898  
                        l5149 07A0                          l5157 082A                          l5085 0280  
                        l5077 0228                          l5069 01B0                          l3557 205E  
                        l3549 2038                          l5341 0F20                          l5333 0E6C  
                        l5325 0DB0                          l5317 0CF4                          l5309 0CB0  
                        l5261 0B26                          l5245 0AAE                          l5237 0A66  
                        l5253 0AD6                          l5229 0A16                          l5181 08EA  
                        l3823 2FE4                          l3815 2F92                          l3807 2F8A  
                        l2943 2F16                          l2935 2EFE                          l2927 2EE8  
                        l3751 26D4                          l3743 26C0                          l3735 26AE  
                        l3727 26A6                          l3831 2E0C                          l3575 2B66  
                        l3567 2B34                          l4711 1822                          l4703 1808  
                        l4631 152E                          l4615 14B8                          l4607 1486  
                        l4535 12BC                          l4527 1296                          l4519 1268  
                        l4543 12E0                          l4471 10FA                          l4463 108E  
                        l4455 107E                          l4447 106E                          l4439 105E  
                        l4391 0F76                          l4383 0F4A                          l2951 2CE4  
                        l5159 0860                          l5095 02EC                          l5087 029C  
                        l5343 0F22                          l5335 0EB6                          l5327 0DFA  
                        l5319 0D08                          l5263 0B2E                          l5271 0B7E  
                        l5255 0AEA                          l5239 0A6E                          l5247 0ABE  
                        l5191 08FC                          l5183 08EE                          l3817 2F94  
                        l3809 2F8C                          l2945 2F18                          l2937 2F00  
                        l2929 2EF6                          l3761 271C                          l3753 26E8  
                        l3745 26C6                          l3737 26B2                          l3729 26A8  
                        l3833 2E12                          l3825 2DDC                          l3577 2B70  
                        l3569 2B46                          l4721 2786                          l4705 1816  
                        l4641 1578                          l4633 153A                          l4625 1502  
                        l4617 14BE                          l4609 1488                          l4801 2F24  
                        l4553 1332                          l4561 1388                          l4545 12E4  
                        l4537 12C0                          l4529 12A4                          l4481 1124  
                        l4473 1106                          l4465 10B8                          l4457 1082  
                        l4449 1072                          l4393 0F86                          l4385 0F56  
                        l2961 2D12                          l2953 2CE4                          l5409 0588  
                        l5097 0308                          l5089 02B8                          l5345 0F32  
                        l5337 0EB8                          l5329 0E0A                          l5281 0BBC  
                        l5265 0B4A                          l5257 0AFC                          l5193 08FE  
                        l5185 08F2                          l5177 08C8                          l3819 2F96  
                        l2947 2F1C                          l2939 2F04                          l3771 2764  
                        l3763 2730                          l3755 26FC                          l3747 26CA  
                        l3739 26B8                          l3827 2DE8                          l3835 2FD0  
                        l2971 2EAA                          l3579 2B94                          l4731 27B2  
                        l4723 278A                          l4707 1818                          l4651 15CA  
                        l4643 1584                          l4635 1552                          l4627 150E  
                        l4619 14DE                          l4803 2F3A                          l4571 13DA  
                        l4563 1398                          l4555 133E                          l4547 12F2  
                        l4539 12D0                          l4491 117A                          l4483 1146  
                        l4475 110A                          l4467 10D4                          l4459 1086  
                        l4395 0F96                          l4387 0F64                          l4715 2D96  
                        l4811 24A4                          l2963 2D20                          l2955 2CF4  
                        l5099 0352                          l5347 0F3E                          l5339 0ECA  
                        l5291 0C24                          l5283 0BD0                          l5267 0B64  
                        l5259 0B10                          l5195 0900                          l5187 08F6  
                        l5179 08E6                          l3773 276A                          l3765 2736  
                        l3757 2702                          l3749 26CE                          l3829 2DF8  
                        l3837 2FD8                          l3781 25C2                          l2981 2EC2  
                        l2973 2EB8                          l4741 27E0                          l4733 27BA  
                        l4725 2798                          l4709 181E                          l4661 1648  
                        l4653 15DA                          l4645 1594                          l4637 155E  
                        l4629 1518                          l4805 2F4A                          l4581 13F8  
                        l4573 13E0                          l4565 13A8                          l4557 134C  
                        l4549 1308                          l4493 1188                          l4485 1156  
                        l4477 1118                          l4469 10E4                          l4397 0F98  
                        l4389 0F66                          l4717 2DA6                          l4821 24F4  
                        l2965 2D30                          l4901 2858                          l5293 0C2E  
                        l5285 0BE6                          l5269 0B6E                          l5277 0B96  
                        l5197 0908                          l5189 08FA                          l3839 2F9A  
                        l3775 277E                          l3767 274A                          l3759 2716  
                        l3791 2630                          l3783 25D2                          l2991 2EDE  
                        l2983 2EC6                          l2975 2EBA                          l4751 281A  
                        l4743 27E8                          l4735 27BE                          l4727 27A0  
                        l4671 16C2                          l4663 167E                          l4655 15F6  
                        l4647 15A0                          l4639 156A                          l4591 1426  
                        l4575 13E2                          l4567 13C8                          l4559 1386  
                        l4495 1196                          l4479 111A                          l4399 0FA0  
                        l4831 251E                          l4823 24F8                          l4815 24B8  
                        l2967 2D46                          l2959 2D00                          l4911 2916  
                        l4903 28C2                          l5287 0BEE                          l5295 0C3E  
                        l5279 0BAA                          l5199 091C                          l3769 2750  
                        l3793 263E                          l3785 2600                          l2985 2ED4  
                        l2977 2EBC                          l4761 2840                          l4753 281C  
                        l4745 27F6                          l4737 27C6                          l4729 27A4  
                        l4681 1722                          l4673 16D4                          l4665 168C  
                        l4657 1602                          l4649 15B0                          l4593 1436  
                        l4585 140A                          l4577 13E8                          l4569 13CC  
                        l4497 11A2                          l4489 116A                          l4841 2546  
                        l4833 2528                          l4825 2506                          l4817 24E2  
                        l4809 248E                          l4921 29D4                          l4913 2980  
                        l4905 28F6                          l5289 0C0A                          l2995 2FC0  
                        l3795 268E                          l3787 2610                          l3779 2594  
                        l2987 2ED8                          l2979 2EC0                          l4755 2822  
                        l4747 27FC                          l4739 27D8                          l4771 2A9E  
                        l4691 1790                          l4675 16E2                          l4667 16AA  
                        l4659 161E                          l4595 1446                          l4587 1416  
                        l4579 13F6                          l4499 11A6                          l4843 2552  
                        l4835 2532                          l4819 24E4                          l4931 1BD8  
                        l4923 2A3E                          l4915 29B4                          l2997 2FAE  
                        l3797 2694                          l3789 261E                          l2989 2EDA  
                        l4749 2812                          l4757 2828                          l4781 2AD2  
                        l4773 2AA2                          l4765 2A84                          l4685 174C  
                        l4693 1794                          l4677 16E6                          l4669 16B4  
                        l4597 1456                          l4589 1424                          l4845 2562  
                        l4861 20F2                          l4853 2078                          l4941 1C36  
                        l4933 1BE6                          l4925 2A72                          l4909 2908  
                        l3981 236A                          l2999 2E22                          l4759 2838  
                        l4791 2B0C                          l4783 2ADA                          l4775 2AB0  
                        l4767 2A88                          l4695 17AE                          l4687 1758  
                        l4679 16F4                          l4599 145C                          l4847 2572  
                        l4871 214C                          l4855 2088                          l4951 1CB2  
                        l4943 1C82                          l4935 1BF2                          l4919 29C6  
                        l3991 23A6                          l3983 237E                          l4785 2AE8  
                        l4793 2B12                          l4777 2AB8                          l4769 2A96  
                        l4697 17C2                          l4689 1766                          l4849 2582  
                        l4881 21B0                          l4873 214E                          l4865 2106  
                        l4857 2096                          l4961 1D22                          l4953 1CD8  
                        l4945 1C96                          l4937 1BF6                          l4929 1BCE  
                        l3993 23C6                          l3985 2384                          l4795 2B22  
                        l4787 2AFE                          l4779 2ACA                          l4699 17DC  
                        l4891 2208                          l4883 21CE                          l4875 215A  
                        l4867 210E                          l4859 20DC                          l4971 1D8C  
                        l4963 1D56                          l4955 1CDE                          l4947 1C9A  
                        l4939 1C1A                          l3995 23CC                          l3987 2392  
                        l4797 2B2A                          l4789 2B06                          l4893 2216  
                        l4885 21D0                          l4877 2196                          l4869 211A  
                        l4981 1DFC                          l4973 1D90                          l4965 1D5A  
                        l4957 1CFA                          l4949 1CAA                          l3997 23DC  
                        l3989 2398                          l4895 2218                          l4887 21D4  
                        l4879 21A2                          l4983 1E00                          l4975 1D9C  
                        l4967 1D78                          l4959 1D16                          l4991 222A  
                        l3999 23EC                          l4889 21F8                          l4985 1E4C  
                        l4977 1DD0                          l4969 1D80                          l4993 2232  
                        l4979 1DEC                          l4987 1E52                          l4995 2232  
                        l4899 284A                          l4989 1E70                          l4999 2248  
                        STR_1 7F7C                          STR_2 7F96                          STR_3 7FA2  
                        STR_4 7F6F                          STR_5 7FC5                          STR_6 7FBA  
                        STR_7 7F52                          STR_8 7F83                          STR_9 7FFD  
                        _LATB 000F8A                          u3200 1E8C                          u3210 1ECE  
                        u3211 1ECA                          u3300 2B90                          u2500 1870  
                 main@lastKey 00B4                          u2501 186C                          u3310 2BB8  
                        u4110 0F64                          u2510 18B4                          u4111 0F60  
                        u2511 18B0                          u3320 2BC8                          u4200 10B8  
                        u4120 0F76                          u5000 1C96                          u2600 1A52  
                        u2520 18C6                          u3240 1F38                          u3224 1EE4  
                        u3321 2BC4                          u4201 10B4                          u4121 0F72  
                        u5001 1C92                          u2601 1A4E                          u2521 18C2  
                        u3241 1F34                          u3225 1EE0                          u4210 10D0  
                        u4130 0F86                          u5010 1D16                          u2610 1A70  
                        u2530 18D6                          u2450 2CF4                          u3250 1F9E  
                        u3234 1F1E                          u3307 2B86                          u4211 10CA  
                        u4131 0F82                          u5011 1D12                          u2611 1A6C  
                        u2531 18D2                          u2451 2CF0                          u3251 1F9A  
                        u3235 1F1A                          u3500 25C2                          u4300 11B4  
                        u4220 10D2                          u4140 0FC8                          u5020 1D78  
                        u2700 1BBA                          u2620 1A90                          u2540 1916  
                        u2460 2D30                          u5100 0352                          u3260 1FE6  
                        u3501 25BE                          u3317 2BAE                          u4301 11B0  
                        u4141 0FC4                          u5021 1D74                          u2701 1BB6  
                        u2621 1A8C                          u2541 1912                          u2461 2D2C  
                        u5101 034E                          u3261 1FE2                          u2470 2E3E  
                        u3430 26E8                          u3510 2600                          u4310 11EC  
                        u4230 10FA                          u4150 0FDE                          u5030 1E70  
                        u2630 1AA2                          u2550 1956                          u5110 039C  
                        u3270 201A                          u2471 2E3A                          u3431 26E4  
                        u3511 25FC                          u4311 11E8                          u4231 10F6  
                        u4151 0FDA                          u5031 1E6C                          u2631 1A9E  
                        u2551 1952                          u5111 0398                          u3271 2016  
                        u3440 26FC                          u3520 261E                          u4400 1308  
                        u4320 1232                          u4240 1118                          u4160 0FF0  
                        u2640 1AD0                          u2560 19CC                          u2480 184E  
                        u5040 2244                          u5200 06E0                          u5120 03E6  
                        u3280 205E                          u3441 26F8                          u3521 261A  
                        u4401 1304                          u4321 122E                          u4241 1114  
                        u4161 0FEC                          u2641 1ACC                          u2561 19C8  
                        u2481 184A                          u5041 2240                          u5201 06DC  
                        u5121 03E2                          u3281 205A                          u3450 2716  
                        u3530 263E                          u3290 2B46                          u4410 131E  
                        u4330 1268                          u4250 1138                          u4170 1000  
                        u2650 1AE6                          u2570 19EE                          u2490 1860  
                        u5050 225A                          u5210 0736                          u5130 0426  
                        u3451 2712                          u3531 263A                          u3291 2B42  
                        u4411 131A                          u4331 1264                          u4251 1134  
                        u4171 0FFC                          u2651 1AE2                          u2571 19EA  
                        u2491 185C                          u5051 2256                          u5211 0732  
                        u5131 0422                          u3460 2730                          u3540 268E  
                        u4500 1424                          u4420 1332                          u4340 1278  
                        u4260 1146                          u4180 103C                          u2660 1AFA  
                        u2580 1A18                          u5060 2288                          u5220 07A0  
                        u5140 047C                          u3700 23DC                          u5300 0A02  
                        u3461 272C                          u3541 268A                          u4501 1420  
                        u4421 132E                          u4341 1274                          u4261 1142  
                        u4181 1038                          u2661 1AF6                          u2581 1A14  
                        u5061 2284                          u5221 079C                          u5141 0478  
                        u3701 23D8                          u5301 09FE                          u3470 274A  
                        u4510 1436                          u4430 134C                          u4350 12A4  
                        u4270 1156                          u4190 104A                          u2670 1B14  
                        u2590 1A3C                          u5070 22EA                          u5230 080A  
                        u5150 04E6                          u3710 23EC                          u5310 0A2A  
                        u3471 2746                          u4511 1432                          u4431 1348  
                        u4351 12A0                          u4271 1152                          u4191 1046  
                        u2671 1B10                          u2591 1A38                          u5071 22E6  
                        u5231 0806                          u5151 04E2                          u3711 23E8  
                        u5311 0A26                          u3480 2764                          u4600 16E2  
                        u4520 1446                          u4440 1386                          u4360 12B4  
                        u4280 1188                          u2680 1B5C                          u5080 2368  
                        u5160 0550                          u3720 2448                          u5400 0BBC  
                        u5320 0A3C                          u5240 0952                          u3481 2760  
                        u4601 16DE                          u4521 1442                          u4441 1382  
                        u4361 12B0                          u4281 1184                          u2681 1B58  
                        u5081 2364                          u5161 054C                          u3721 2444  
                        u5401 0BB8                          u5321 0A38                          u5241 094E  
                        u3490 277E                          u4610 16F4                          u4530 1486  
                        u4450 1398                          u4370 12D0                          u4290 1196  
                        u2690 1B8C                          u5170 060C                          u5090 005C  
                        u3730 246C                          u5410 0BE6                          u5330 0A66  
                        u5250 0982                          u3491 277A                          u4611 16F0  
                        u4531 1482                          u4451 1394                          u4371 12CC  
                        u4291 1192                          u2691 1B88                          u5171 0608  
                        u5091 0058                          u3731 2468                          u5411 0BE2  
                        u5331 0A62                          u5251 097E                          u4700 27B2  
                        u4620 1722                          u4540 1498                          u4460 13A8  
                        u4380 12E0                          u5180 0656                          u5500 0F20  
                        u5420 0C52                          u5340 0AD2                          u5260 0994  
                        u4701 27AE                          u4621 171E                          u4541 1494  
                        u4461 13A4                          u4381 12DC                          u5181 0652  
                        u5501 0F1C                          u5421 0C4E                          u5341 0ACE  
                        u5261 0990                          u4710 27D8                          u4630 1738  
                        u4550 14A8                          u4470 13C8                          u4390 12F2  
                        u5190 06A0                          u5430 0C6A                          u5350 0AEA  
                        u5270 09B4                          u4711 27D4                          u4631 1734  
                        u4551 14A4                          u4471 13C4                          u4391 12EE  
                        u5191 069C                          u5431 0C66                          u5351 0AE6  
                        u5271 09B0                          u4720 27F6                          u4800 2B22  
                        u4640 174C                          u4560 14DE                          u4480 13DA  
                        u5440 0C7C                          u5360 0AFC                          u5280 09DC  
                        u4721 27F2                          u4801 2B1E                          u4641 1748  
                        u4561 14DA                          u4481 13D6                          u5441 0C78  
                        u5361 0AF8                          u5281 09D8                          u4730 2812  
                        u4650 1766                          u4570 14EE                          u4810 2F3A  
                        u4490 13F6                          u5450 0D66                          u5370 0B26  
                        u5290 09EE                          u4731 280E                          u4651 1762  
                        u4571 14EA                          u4811 2F36                          u4491 13F2  
                        u5451 0D62                          u5371 0B22                          u5291 09EA  
                        u4740 2838                          u4660 17AE                          u4580 1668  
                        u4820 24A4                          u4900 2096                          u5460 0DB0  
                        u5380 0B92                          u4741 2834                          u4661 17AA  
                        u4821 24A0                          u4901 2092                          u5461 0DAC  
                        u5381 0B8E                          u5517 0A96                          u4750 2A96  
                        u4670 17DC                          u4590 16C2                          u4830 24D8  
                        u4910 20F2                          u5470 0DFA                          u5390 0BAA  
                        u4751 2A92                          u4671 17D8                          u4591 16BE  
                        u4911 20EE                          u5607 2D18                          u5471 0DF6  
                        u5391 0BA6                          u5527 0B56                          u4760 2AB0  
                        u4680 1816                          u4840 2506                          u4920 2148  
                        u5480 0E60                          u5617 2DEE                          u4761 2AAC  
                        u4681 1812                          u4585 165E                          u4841 2502  
                        u4921 2144                          u5481 0E5C                          u5537 0C16  
                        u4690 2798                          u4770 2ACA                          u4850 251A  
                        u4930 2192                          u5490 0EB6                          u5627 2E04  
                        u4691 2794                          u4771 2AC6                          u4851 2516  
                        u4835 24CE                          u4931 218E                          u5491 0EB2  
                        u5547 0CBC                          u4780 2AE8                          u4860 2542  
                        u4940 21B0                          u5637 2E18                          u4781 2AE4  
                        u4861 253E                          u4941 21AC                          u5557 238A  
                        u4790 2AFE                          u4870 2562                          u4950 21C0  
                        u5647 2FB4                          u4791 2AFA                          u4871 255E  
                        u4951 21BC                          u5567 239E                          u4880 2572  
                        u4960 21CE                          u5657 2FC6                          u4881 256E  
                        u4961 21CA                          u5577 242A                          u4970 2208  
                        u4890 2088                          u5667 2FEA                          u4971 2204  
                        u4891 2084                          u5587 1EF6                          u4980 2216  
                        u4981 2212                          u5597 0082                          u4990 1BE6  
                        u4991 1BE2                          _Glim 00D2                          _Hlim 00D4  
                        _Tlim 00D6                          _main 08C8                          _itoa 222A  
                        fsr1h 000FE2                          fsr2h 000FDA                          indf1 000FE7  
                        indf2 000FDF                          fsr1l 000FE1                          fsr2l 000FD9  
                        btemp 0056        __size_of_WriteDataXLCD 003E                _setCoolerSpeed 2FFA  
                        prodh 000FF4                          prodl 000FF3                          start 000E  
             ___fldiv@new_exp 0042                ??_configureADC 000A                ??_configureLCD 000C  
                ___param_bank 000000            readKey@currentTime 0020                         ??_ISR 000A  
                main@gasLimit 00B2    __end_of_configureInterrupt 2FAE                  _WriteCmdXLCD 2EE6  
              ?_floatToString 0031                ??_displayStuff 0011                 ___fltol@sign1 0012  
               ?_SetDDRamAddr 0001               __end_of___fladd 140A                         ?_main 0001  
             __end_of___fldiv 1BCE                         ?_itoa 0012               __end_of___awdiv 284A  
             __end_of___flneg 2F5C                         STR_10 7FEA                         STR_11 7FE3  
                       STR_12 7FFB                         STR_20 7F22                         STR_13 7FEA  
                       STR_21 7F42                         STR_14 7FEF                         STR_22 7FD0  
                       STR_23 7FF8                         STR_15 7FF4                         STR_16 7FEA  
                       STR_24 7F61                         STR_17 7FDA                         STR_25 7F11  
                       STR_18 7FF8                         STR_26 7FAE                         STR_27 7F89  
                       STR_19 7F32               __end_of___awmod 2B34               __end_of___flmul 1834  
             __end_of___flsub 2DDC               __end_of___fltol 2594                         _T0CON 000FD5  
             ___awdiv@divisor 000C               __end_of___llmod 2CE2                         i2l189 2C56  
                       i2l813 2CE0                         i2l806 2CD0               ___awdiv@counter 000E  
                       _TMR0L 000FD6                         _PORTB 000F81                         _PORTD 000F83  
                main@humLimit 00B0                         _TRISB 000F93                         _TRISD 000F95  
             __end_of_gasRead 2A84               __end_of_readKey 2076             readKey@pressedKey 0028  
  __size_of_readTwoDigitValue 0124                         tablat 000FF5        __end_of_setCoolerSpeed 2FFC  
        __end_ofreadKey@F3616 7F11                         ttemp5 0057                         ttemp6 005A  
                       ttemp7 005E                         status 000FD8                         wtemp8 0057  
               humidade@Humid 0064               __initialization 2D50                  __end_of_main 0F4A  
                __end_of_itoa 236A              __end_of_BusyXLCD 2E68            __size_of_DelayXLCD 0012  
       __size_of_DelayPORXLCD 0010                ??_SetDDRamAddr 000A              __end_of_OpenXLCD 2786  
                      ??_main 0096                        ??_itoa 0016                 __activetblptr 000002  
               _WriteDataXLCD 2EA8          displayMenu@menuIndex 0076          readKey@lastStableKey 0054  
                      _ADCON1 000FC1                        _ADCON2 000FC0              ___llmod@dividend 0001  
                      _ADRESH 000FC4                        _ADRESL 000FC3              ___awdiv@dividend 000A  
                      i2l4031 2C84                        i2l4033 2C92                        i2l4025 2C5A  
                      i2l4035 2CB0                        i2l4027 2C70                        i2l4037 2CC0  
                      i2l4029 2C78                        i2l4221 2C24                        i2l4213 2BCC  
                      i2l4039 2CCA                        i2l4223 2C40                        i2l4215 2BDA  
                      i2l4225 2C4C                        i2l4217 2BDE                        i2l4227 2C54  
                      i2l4219 2BEA               ?_setCoolerSpeed 000A                 main@menuIndex 00B6  
            __end_of___xxtofl 222A                  _DelayPORXLCD 2FC0                        ___flge 2594  
                   ??___fladd 0012               ??_floatToString 0039                     ??___fldiv 0039  
                   ??___awdiv 000E                     ??___flneg 000E                     ??___awmod 000E  
                   ??___flmul 0020                     ??___flsub 0022                     ??___fltol 000E  
                   ??___llmod 0009          __size_of_configureIO 0018                        _keymap 7EF9  
                      _buzzer 2FFC                        _millis 2F5C                        clear_0 2D76  
                      clear_1 2D82                 main@tempLimit 00AE              ___awdiv@quotient 0010  
                   ??_gasRead 004A               ___awmod@divisor 000C                        isa$std 000001  
            __end_of_humidade 29C6               ___awmod@counter 000E          __size_of_displayMenu 08B6  
              ?_WriteDataXLCD 0001              __end_of_setMoist 2FFA                     ??_readKey 0012  
            __end_of_tempRead 2908             humidade@rawAnalog 006C                  __mediumconst 7EF8  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
        __end_of_configureADC 2FE8          __end_of_configureLCD 2E22             __end_of_DelayXLCD 2FC0  
                  ___flge@ff1 0018                    ___flge@ff2 001C                  ___xxtofl@arg 0014  
                ___xxtofl@exp 0013                  ___xxtofl@val 000A                    __accesstop 0060  
     __end_of__initialization 2D88  displayStuff@LCDWritePosition 0011                    ___flneg@f1 000A  
        __end_of_displayStuff 2BCA                 ___rparam_used 000001                    ___fltol@f1 000A  
      readTwoDigitValue@F3596 00CF                __pcstackCOMRAM 0001                  __pidataBANK0 2FF2  
                _gasRead$1535 0068              ??_configureTimer 000A            displayStuff@column 000D  
      readTwoDigitValue@input 002D        __size_of_DelayFor18TCY 000A                    __pbssBANK0 00B8  
                   ?_BusyXLCD 0001               WriteCmdXLCD@cmd 000A          __end_of_SetDDRamAddr 2EA8  
        readTwoDigitValue@key 0032       displayMenu@currentHumid 008E                     ?_OpenXLCD 0001  
       displayMenu@errorCycle 0050         displayMenu@currentGas 0092                       ?___flge 0018  
           WriteDataXLCD@data 000A               ??_WriteDataXLCD 000A                       ?_buzzer 000A  
                     ?_millis 000A                  readKey@F3616 7F09                     ?___xxtofl 000A  
          _configureInterrupt 2F9A                main@currentGas 00AA                    ??_BusyXLCD 000A  
         ?_configureInterrupt 0001                     ?_humidade 0060                    ??_OpenXLCD 000B  
                   ?_setMoist 000A                       __Hparam 0000                    _keyPressed 0055  
                     __Lparam 0000                     ?_tempRead 0060                    _readAnalog 2CE2  
             __size_of___flge 0104                       ___fladd 0F4A                       ___fldiv 1834  
                     ___awdiv 2786                 _DelayFor18TCY 2FE8                       ___flneg 2F24  
                     ___awmod 2A84                       ___flmul 140A                       ___flsub 2D96  
                     ___fltol 248E                       ___llmod 2C5A                 _humidade$1534 0068  
        ??_configureInterrupt 000A                       __pcinit 2D50                       _gasRead 29C6  
             __size_of_buzzer 0002               __size_of_millis 0026                       __ramtop 0800  
                     __ptext0 08C8                       __ptext1 2FF8                       __ptext2 2FFA  
                     __ptext3 236A                       __ptext4 1E7E                       __ptext5 0012  
                     __ptext6 284A                       __ptext7 2F5C                       __ptext8 222A  
                     __ptext9 2908         __size_of_configureADC 000C         __size_of_configureLCD 0046  
                __size_of_ISR 2C52                       _readKey 1E7E                    ??___xxtofl 000E  
            ___awmod@dividend 000A                    gasRead@gas 0064              ??_setCoolerSpeed 000C  
       __size_of_displayStuff 0096                __pintcode_body 2BCA          end_of_initialization 2D88  
                     itoa@ptr 0014                 __Lmediumconst 7EF8                       int_func 2BCA  
                  ??_humidade 004A                    ??_setMoist 000C                    ??_tempRead 004A  
              ?_DelayFor18TCY 0001                       postdec1 000FE5                       postdec2 000FDD  
                _configureADC 2FDC                  _configureLCD 2DDC                       postinc0 000FEE  
                     postinc2 000FDE           floatToString@buffer 0035           floatToString@intStr 0060  
                   _PORTCbits 000F82                     _PORTDbits 000F83                  _displayStuff 2B34  
                 ___fladd@grs 0019                 ___xxtofl@sign 0012                     _TRISAbits 000F92  
                   _TRISCbits 000F94                     _TRISDbits 000F95                     _TRISEbits 000F96  
                 ___fldiv@grs 0044             tempRead@rawAnalog 006C                   ___fldiv@rem 003D  
       __size_of_SetDDRamAddr 0040   readTwoDigitValue@digitCount 0030                   ___flmul@grs 0026  
            main@currentHumid 00A6                     _DelayXLCD 2FAE                 ??_configureIO 000A  
                 ?_readAnalog 000A                 ??_displayMenu 0078                __end_of___flge 2698  
       __end_of_floatToString 1E7E                __end_of_keymap 7F09                __end_of_buzzer 2FFE  
              __end_of_millis 2F82                  _SetDDRamAddr 2E68            SetDDRamAddr@DDaddr 000A  
         start_initialization 2D50                   __end_of_ISR 2C5A       readTwoDigitValue@prompt 0029  
            readAnalog@result 000E               ___llmod@divisor 0005             __size_of_BusyXLCD 0046  
             ___llmod@counter 0009                    ?_DelayXLCD 0001                    readKey@col 0024  
                  readKey@row 0026               ??_DelayFor18TCY 000A           displayMenu@valueStr 007C  
           __size_of_OpenXLCD 00EE                      ??___flge 0020                floatToString@i 0072  
               ?_WriteCmdXLCD 0001                   __pdataBANK0 00D2                      ??_buzzer 000C  
                    ??_millis 000E           __end_of_configureIO 2F9A                     ___fladd@a 000E  
                   ___fladd@b 000A           __end_of_displayMenu 08C8                     ___fldiv@a 0035  
                   ___fldiv@b 0031                     ___flmul@a 001C                     ___flmul@b 0018  
                 __pbssCOMRAM 004A                     ___flsub@a 001E                     ___flsub@b 001A  
               __pcstackBANK0 0060             __size_of___xxtofl 01B4           __size_of_readAnalog 006E  
            gasRead@rawAnalog 006C             displayStuff@stuff 000F                 tempRead@TempC 0064  
      displayMenu@currentTemp 008A        displayMenu@currentTime 0086             __size_of_humidade 00BE  
                   __pintcode 0008       readKey@lastDebounceTime 00C7                 __pmediumconst 7EF8  
               _tempRead$1533 0068                ??_WriteCmdXLCD 000A             __size_of_setMoist 0002  
                    ?___fladd 000A                      ?___fldiv 0031                      ?___awdiv 000A  
                    ?___flneg 000A                      ?___awmod 000A                      ?___flmul 0018  
                    ?___flsub 001A                      ?___fltol 000A             __size_of_tempRead 00BE  
                    ?___llmod 0001     displayMenu@lastUpdateTime 00CB                      ?_gasRead 0060  
       __end_of_WriteDataXLCD 2EE6                      ?_readKey 0001                 readAnalog@pin 0010  
     __size_of_configureTimer 000C                      _LATEbits 000F8D                  _milliseconds 004A  
                 ??_DelayXLCD 000A                 ?_DelayPORXLCD 0001                      i2u404_40 2BDA  
                    i2u404_41 2BD6                      i2u405_40 2C24                      i2u405_41 2C20  
                    i2u406_40 2C40                      i2u406_41 2C3C               OpenXLCD@lcdtype 000B  
                    i2u374_40 2C70                      i2u374_41 2C6C                      i2u375_40 2C92  
                    i2u375_41 2C8E                      i2u376_40 2CB0                      i2u376_41 2CAC  
               readKey@InvCol 0018                      _RCONbits 000FD0                   _configureIO 2F82  
          floatToString@digit 006C            floatToString@index 0074            floatToString@value 0031  
                 _displayMenu 0012   __size_of_configureInterrupt 0014                    _ADCON0bits 000FC2  
             main@currentTemp 00A2               main@currentTime 009E                   _INTCON2bits 000FF1  
                   copy_data0 2D64                      _BusyXLCD 2E22                ??_DelayPORXLCD 000A  
                    _OpenXLCD 2698                      __Hrparam 0000                      __Lrparam 0000  
                ??_readAnalog 000C                     itoa@count 0016                     itoa@value 0012  
            __size_of___fladd 04C0              __size_of___fldiv 039A              __size_of___awdiv 00C4  
            __size_of___flneg 0038              __size_of___awmod 00B0              __size_of___flmul 042A  
            __size_of___flsub 0046              __size_of___fltol 0106              __size_of___llmod 0088  
            _displayStuff$792 0013              __size_of_gasRead 00BE                      ___xxtofl 2076  
            __size_of_readKey 01F8                      __ptext10 29C6                      __ptext11 2CE2  
                    __ptext20 2A84                      __ptext12 1834                      __ptext21 2786  
                    __ptext13 1BCE                      __ptext30 2FAE                      __ptext22 2B34  
                    __ptext14 2076                      __ptext31 2FC0                      __ptext23 2EA8  
                    __ptext15 248E                      __ptext32 2E22                      __ptext24 2594  
                    __ptext16 2D96                      __ptext33 2FE8                      __ptext25 2FD0  
                    __ptext17 0F4A                      __ptext34 2F9A                      __ptext26 2DDC  
                    __ptext18 2F24                      __ptext35 2F82                      __ptext27 2698  
                    __ptext19 140A                      __ptext36 2FDC                      __ptext28 2EE6  
                    __ptext37 2FFC                      __ptext29 2E68                      __ptext39 2C5A  
        __end_of_WriteCmdXLCD 2F24            __end_of_readAnalog 2D50                      _keyState 00B8  
          buzzer@buzzerStatus 000A                 __size_of_main 0682                 __size_of_itoa 0140  
                    _humidade 2908       __size_of_setCoolerSpeed 0002                      _setMoist 2FF8  
                    _tempRead 284A        floatToString@precision 0037                      isa$xinst 000000  
           floatToString@temp 0070                      int$flags 0056              setMoist@moistSet 000A  
       main@lastDisplayUpdate 009A                    _INTCONbits 000FF2                _configureTimer 2FD0  
                    itoa@temp 0018               main@pressed_key 00B5                      millis@ms 000E  
             displayStuff@row 000B                      intlevel2 0000        __size_of_floatToString 02B0  
           _readTwoDigitValue 236A            ?_readTwoDigitValue 0029         __end_of_DelayFor18TCY 2FF2  
         ??_readTwoDigitValue 002B        __end_of_configureTimer 2FDC          floatToString@intPart 006E  
        __end_of_DelayPORXLCD 2FD0        displayMenu@systemCycle 004E       readKey@lastKeyPressTime 00C3  
               ___fladd@signs 0016     __end_of_readTwoDigitValue 248E                  ___fladd@aexp 0017  
                ___fladd@bexp 0018          setCoolerSpeed@PWMset 000A  
