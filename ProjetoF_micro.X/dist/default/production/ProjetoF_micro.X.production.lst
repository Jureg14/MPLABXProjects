

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Feb 06 17:59:19 2025

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59  0000                     
    60                           ; Version 2.32
    61                           ; Generated 02/02/2021 GMT
    62                           ; 
    63                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F4550 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     
    96                           	psect	idataBANK0
    97  002FF2                     __pidataBANK0:
    98                           	callstack 0
    99                           
   100                           ;initializer for _Glim
   101  002FF2  0014               	dw	20
   102                           
   103                           ;initializer for _Hlim
   104  002FF4  0032               	dw	50
   105                           
   106                           ;initializer for _Tlim
   107  002FF6  001E               	dw	30
   108                           
   109                           	psect	mediumconst
   110  007EF6                     __pmediumconst:
   111                           	callstack 0
   112  007EF6  00                 	db	0
   113  007EF7                     _keymap:
   114                           	callstack 0
   115  007EF7  31                 	db	49
   116  007EF8  32                 	db	50
   117  007EF9  33                 	db	51
   118  007EFA  41                 	db	65
   119  007EFB  34                 	db	52
   120  007EFC  35                 	db	53
   121  007EFD  36                 	db	54
   122  007EFE  42                 	db	66
   123  007EFF  37                 	db	55
   124  007F00  38                 	db	56
   125  007F01  39                 	db	57
   126  007F02  43                 	db	67
   127  007F03  46                 	db	70
   128  007F04  30                 	db	48
   129  007F05  45                 	db	69
   130  007F06  44                 	db	68
   131  007F07                     __end_of_keymap:
   132                           	callstack 0
   133  007F07                     readKey@F3616:
   134                           	callstack 0
   135  007F07  0003               	dw	3
   136  007F09  0002               	dw	2
   137  007F0B  0001               	dw	1
   138  007F0D  0000               	dw	0
   139  007F0F                     __end_ofreadKey@F3616:
   140                           	callstack 0
   141  0000                     _LATEbits	set	3981
   142  0000                     _TRISEbits	set	3990
   143  0000                     _TRISD	set	3989
   144  0000                     _PORTD	set	3971
   145  0000                     _ADRESL	set	4035
   146  0000                     _ADRESH	set	4036
   147  0000                     _ADCON0bits	set	4034
   148  0000                     _ADCON2	set	4032
   149  0000                     _ADCON1	set	4033
   150  0000                     _PORTB	set	3969
   151  0000                     _LATB	set	3978
   152  0000                     _T0CON	set	4053
   153  0000                     _INTCON2bits	set	4081
   154  0000                     _RCONbits	set	4048
   155  0000                     _TRISCbits	set	3988
   156  0000                     _TRISAbits	set	3986
   157  0000                     _TRISB	set	3987
   158  0000                     _TMR0L	set	4054
   159  0000                     _INTCONbits	set	4082
   160  0000                     _PORTCbits	set	3970
   161  0000                     _PORTDbits	set	3971
   162  0000                     _TRISDbits	set	3989
   163  007F0F                     STR_25:
   164  007F0F  48                 	db	72	;'H'
   165  007F10  75                 	db	117	;'u'
   166  007F11  6D                 	db	109	;'m'
   167  007F12  69                 	db	105	;'i'
   168  007F13  64                 	db	100	;'d'
   169  007F14  69                 	db	105	;'i'
   170  007F15  66                 	db	102	;'f'
   171  007F16  69                 	db	105	;'i'
   172  007F17  63                 	db	99	;'c'
   173  007F18  61                 	db	97	;'a'
   174  007F19  64                 	db	100	;'d'
   175  007F1A  6F                 	db	111	;'o'
   176  007F1B  72                 	db	114	;'r'
   177  007F1C  20                 	db	32
   178  007F1D  4F                 	db	79	;'O'
   179  007F1E  4E                 	db	78	;'N'
   180  007F1F  00                 	db	0
   181  007F20                     STR_20:
   182  007F20  48                 	db	72	;'H'
   183  007F21  5F                 	db	95	;'_'
   184  007F22  6C                 	db	108	;'l'
   185  007F23  69                 	db	105	;'i'
   186  007F24  6D                 	db	109	;'m'
   187  007F25  20                 	db	32
   188  007F26  65                 	db	101	;'e'
   189  007F27  78                 	db	120	;'x'
   190  007F28  63                 	db	99	;'c'
   191  007F29  65                 	db	101	;'e'
   192  007F2A  64                 	db	100	;'d'
   193  007F2B  69                 	db	105	;'i'
   194  007F2C  64                 	db	100	;'d'
   195  007F2D  61                 	db	97	;'a'
   196  007F2E  21                 	db	33
   197  007F2F  00                 	db	0
   198  007F30                     STR_19:
   199  007F30  54                 	db	84	;'T'
   200  007F31  5F                 	db	95	;'_'
   201  007F32  6C                 	db	108	;'l'
   202  007F33  69                 	db	105	;'i'
   203  007F34  6D                 	db	109	;'m'
   204  007F35  20                 	db	32
   205  007F36  65                 	db	101	;'e'
   206  007F37  78                 	db	120	;'x'
   207  007F38  63                 	db	99	;'c'
   208  007F39  65                 	db	101	;'e'
   209  007F3A  64                 	db	100	;'d'
   210  007F3B  69                 	db	105	;'i'
   211  007F3C  64                 	db	100	;'d'
   212  007F3D  61                 	db	97	;'a'
   213  007F3E  21                 	db	33
   214  007F3F  00                 	db	0
   215  007F40                     STR_21:
   216  007F40  47                 	db	71	;'G'
   217  007F41  5F                 	db	95	;'_'
   218  007F42  6C                 	db	108	;'l'
   219  007F43  69                 	db	105	;'i'
   220  007F44  6D                 	db	109	;'m'
   221  007F45  20                 	db	32
   222  007F46  65                 	db	101	;'e'
   223  007F47  78                 	db	120	;'x'
   224  007F48  63                 	db	99	;'c'
   225  007F49  65                 	db	101	;'e'
   226  007F4A  64                 	db	100	;'d'
   227  007F4B  69                 	db	105	;'i'
   228  007F4C  64                 	db	100	;'d'
   229  007F4D  6F                 	db	111	;'o'
   230  007F4E  21                 	db	33
   231  007F4F  00                 	db	0
   232  007F50                     STR_7:
   233  007F50  4C                 	db	76	;'L'
   234  007F51  69                 	db	105	;'i'
   235  007F52  6D                 	db	109	;'m'
   236  007F53  20                 	db	32
   237  007F54  72                 	db	114	;'r'
   238  007F55  65                 	db	101	;'e'
   239  007F56  73                 	db	115	;'s'
   240  007F57  65                 	db	101	;'e'
   241  007F58  74                 	db	116	;'t'
   242  007F59  61                 	db	97	;'a'
   243  007F5A  64                 	db	100	;'d'
   244  007F5B  6F                 	db	111	;'o'
   245  007F5C  73                 	db	115	;'s'
   246  007F5D  21                 	db	33
   247  007F5E  00                 	db	0
   248  007F5F                     STR_24:
   249  007F5F  52                 	db	82	;'R'
   250  007F60  65                 	db	101	;'e'
   251  007F61  73                 	db	115	;'s'
   252  007F62  66                 	db	102	;'f'
   253  007F63  72                 	db	114	;'r'
   254  007F64  69                 	db	105	;'i'
   255  007F65  61                 	db	97	;'a'
   256  007F66  64                 	db	100	;'d'
   257  007F67  6F                 	db	111	;'o'
   258  007F68  72                 	db	114	;'r'
   259  007F69  20                 	db	32
   260  007F6A  4F                 	db	79	;'O'
   261  007F6B  4E                 	db	78	;'N'
   262  007F6C  00                 	db	0
   263  007F6D                     STR_27:
   264  007F6D  4D                 	db	77	;'M'
   265  007F6E  65                 	db	101	;'e'
   266  007F6F  6E                 	db	110	;'n'
   267  007F70  75                 	db	117	;'u'
   268  007F71  20                 	db	32
   269  007F72  49                 	db	73	;'I'
   270  007F73  6E                 	db	110	;'n'
   271  007F74  76                 	db	118	;'v'
   272  007F75  E1                 	db	-31
   273  007F76  6C                 	db	108	;'l'
   274  007F77  69                 	db	105	;'i'
   275  007F78  64                 	db	100	;'d'
   276  007F79  6F                 	db	111	;'o'
   277  007F7A  00                 	db	0
   278  007F7B                     STR_4:
   279  007F7B  48                 	db	72	;'H'
   280  007F7C  75                 	db	117	;'u'
   281  007F7D  6D                 	db	109	;'m'
   282  007F7E  69                 	db	105	;'i'
   283  007F7F  64                 	db	100	;'d'
   284  007F80  20                 	db	32
   285  007F81  53                 	db	83	;'S'
   286  007F82  61                 	db	97	;'a'
   287  007F83  6C                 	db	108	;'l'
   288  007F84  76                 	db	118	;'v'
   289  007F85  6F                 	db	111	;'o'
   290  007F86  21                 	db	33
   291  007F87  00                 	db	0
   292  007F88                     STR_1:
   293  007F88  4C                 	db	76	;'L'
   294  007F89  69                 	db	105	;'i'
   295  007F8A  6D                 	db	109	;'m'
   296  007F8B  69                 	db	105	;'i'
   297  007F8C  74                 	db	116	;'t'
   298  007F8D  65                 	db	101	;'e'
   299  007F8E  20                 	db	32
   300  007F8F  54                 	db	84	;'T'
   301  007F90  65                 	db	101	;'e'
   302  007F91  6D                 	db	109	;'m'
   303  007F92  70                 	db	112	;'p'
   304  007F93  3A                 	db	58	;':'
   305  007F94  00                 	db	0
   306  007F95                     STR_2:
   307  007F95  54                 	db	84	;'T'
   308  007F96  65                 	db	101	;'e'
   309  007F97  6D                 	db	109	;'m'
   310  007F98  70                 	db	112	;'p'
   311  007F99  20                 	db	32
   312  007F9A  53                 	db	83	;'S'
   313  007F9B  61                 	db	97	;'a'
   314  007F9C  6C                 	db	108	;'l'
   315  007F9D  76                 	db	118	;'v'
   316  007F9E  61                 	db	97	;'a'
   317  007F9F  21                 	db	33
   318  007FA0  00                 	db	0
   319  007FA1                     STR_3:
   320  007FA1  4C                 	db	76	;'L'
   321  007FA2  69                 	db	105	;'i'
   322  007FA3  6D                 	db	109	;'m'
   323  007FA4  69                 	db	105	;'i'
   324  007FA5  74                 	db	116	;'t'
   325  007FA6  65                 	db	101	;'e'
   326  007FA7  20                 	db	32
   327  007FA8  48                 	db	72	;'H'
   328  007FA9  75                 	db	117	;'u'
   329  007FAA  6D                 	db	109	;'m'
   330  007FAB  3A                 	db	58	;':'
   331  007FAC  00                 	db	0
   332  007FAD                     STR_26:
   333  007FAD  45                 	db	69	;'E'
   334  007FAE  78                 	db	120	;'x'
   335  007FAF  61                 	db	97	;'a'
   336  007FB0  75                 	db	117	;'u'
   337  007FB1  73                 	db	115	;'s'
   338  007FB2  74                 	db	116	;'t'
   339  007FB3  6F                 	db	111	;'o'
   340  007FB4  72                 	db	114	;'r'
   341  007FB5  20                 	db	32
   342  007FB6  4F                 	db	79	;'O'
   343  007FB7  4E                 	db	78	;'N'
   344  007FB8  00                 	db	0
   345  007FB9                     STR_6:
   346  007FB9  47                 	db	71	;'G'
   347  007FBA  61                 	db	97	;'a'
   348  007FBB  73                 	db	115	;'s'
   349  007FBC  20                 	db	32
   350  007FBD  53                 	db	83	;'S'
   351  007FBE  61                 	db	97	;'a'
   352  007FBF  6C                 	db	108	;'l'
   353  007FC0  76                 	db	118	;'v'
   354  007FC1  6F                 	db	111	;'o'
   355  007FC2  21                 	db	33
   356  007FC3  00                 	db	0
   357  007FC4                     STR_5:
   358  007FC4  4C                 	db	76	;'L'
   359  007FC5  69                 	db	105	;'i'
   360  007FC6  6D                 	db	109	;'m'
   361  007FC7  69                 	db	105	;'i'
   362  007FC8  74                 	db	116	;'t'
   363  007FC9  65                 	db	101	;'e'
   364  007FCA  20                 	db	32
   365  007FCB  47                 	db	71	;'G'
   366  007FCC  61                 	db	97	;'a'
   367  007FCD  73                 	db	115	;'s'
   368  007FCE  00                 	db	0
   369  007FCF                     STR_22:
   370  007FCF  53                 	db	83	;'S'
   371  007FD0  69                 	db	105	;'i'
   372  007FD1  73                 	db	115	;'s'
   373  007FD2  74                 	db	116	;'t'
   374  007FD3  65                 	db	101	;'e'
   375  007FD4  6D                 	db	109	;'m'
   376  007FD5  61                 	db	97	;'a'
   377  007FD6  73                 	db	115	;'s'
   378  007FD7  3A                 	db	58	;':'
   379  007FD8  00                 	db	0
   380  007FD9                     STR_17:
   381  007FD9  4C                 	db	76	;'L'
   382  007FDA  65                 	db	101	;'e'
   383  007FDB  69                 	db	105	;'i'
   384  007FDC  74                 	db	116	;'t'
   385  007FDD  75                 	db	117	;'u'
   386  007FDE  72                 	db	114	;'r'
   387  007FDF  61                 	db	97	;'a'
   388  007FE0  73                 	db	115	;'s'
   389  007FE1  00                 	db	0
   390  007FE2                     STR_11:
   391  007FE2  48                 	db	72	;'H'
   392  007FE3  75                 	db	117	;'u'
   393  007FE4  6D                 	db	109	;'m'
   394  007FE5  69                 	db	105	;'i'
   395  007FE6  64                 	db	100	;'d'
   396  007FE7  3A                 	db	58	;':'
   397  007FE8  00                 	db	0
   398  007FE9                     STR_10:
   399  007FE9  4C                 	db	76	;'L'
   400  007FEA  69                 	db	105	;'i'
   401  007FEB  6D                 	db	109	;'m'
   402  007FEC  3A                 	db	58	;':'
   403  007FED  00                 	db	0
   404  007FEE                     STR_14:
   405  007FEE  47                 	db	71	;'G'
   406  007FEF  61                 	db	97	;'a'
   407  007FF0  73                 	db	115	;'s'
   408  007FF1  3A                 	db	58	;':'
   409  007FF2  00                 	db	0
   410  007FF3                     STR_15:
   411  007FF3  70                 	db	112	;'p'
   412  007FF4  70                 	db	112	;'p'
   413  007FF5  6D                 	db	109	;'m'
   414  007FF6  00                 	db	0
   415  007FF7                     STR_18:
   416  007FF7  4F                 	db	79	;'O'
   417  007FF8  4B                 	db	75	;'K'
   418  007FF9  00                 	db	0
   419  007FFA                     STR_12:
   420  007FFA  25                 	db	37
   421  007FFB  00                 	db	0
   422  007FFC                     STR_9:
   423  007FFC  43                 	db	67	;'C'
   424  007FFD  00                 	db	0
   425  007FFE  00                 	db	0	; dummy byte at the end
   426  0000                     
   427                           ; #config settings
   428                           
   429                           	psect	cinit
   430  002D50                     __pcinit:
   431                           	callstack 0
   432  002D50                     start_initialization:
   433                           	callstack 0
   434  002D50                     __initialization:
   435                           	callstack 0
   436                           
   437                           ; Initialize objects allocated to BANK0 (6 bytes)
   438                           ; load TBLPTR registers with __pidataBANK0
   439  002D50  0EF2               	movlw	low __pidataBANK0
   440  002D52  6EF6               	movwf	tblptrl,c
   441  002D54  0E2F               	movlw	high __pidataBANK0
   442  002D56  6EF7               	movwf	tblptrh,c
   443  002D58  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   444  002D5A  6EF8               	movwf	tblptru,c
   445  002D5C  EE00  F0D2         	lfsr	0,__pdataBANK0
   446  002D60  EE10 F006          	lfsr	1,6
   447  002D64                     copy_data0:
   448  002D64  0009               	tblrd		*+
   449  002D66  CFF5 FFEE          	movff	tablat,postinc0
   450  002D6A  50E5               	movf	postdec1,w,c
   451  002D6C  50E1               	movf	fsr1l,w,c
   452  002D6E  E1FA               	bnz	copy_data0
   453                           
   454                           ; Clear objects allocated to BANK0 (26 bytes)
   455  002D70  EE00  F0B8         	lfsr	0,__pbssBANK0
   456  002D74  0E1A               	movlw	26
   457  002D76                     clear_0:
   458  002D76  6AEE               	clrf	postinc0,c
   459  002D78  06E8               	decf	wreg,f,c
   460  002D7A  E1FD               	bnz	clear_0
   461                           
   462                           ; Clear objects allocated to COMRAM (12 bytes)
   463  002D7C  EE00  F04A         	lfsr	0,__pbssCOMRAM
   464  002D80  0E0C               	movlw	12
   465  002D82                     clear_1:
   466  002D82  6AEE               	clrf	postinc0,c
   467  002D84  06E8               	decf	wreg,f,c
   468  002D86  E1FD               	bnz	clear_1
   469  002D88                     end_of_initialization:
   470                           	callstack 0
   471  002D88                     __end_of__initialization:
   472                           	callstack 0
   473  002D88  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   474  002D8A  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   475  002D8C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   476  002D8E  6EF8               	movwf	tblptru,c
   477  002D90  0100               	movlb	0
   478  002D92  EF64  F004         	goto	_main	;jump to C main() function
   479                           
   480                           	psect	bssCOMRAM
   481  00004A                     __pbssCOMRAM:
   482                           	callstack 0
   483  00004A                     _milliseconds:
   484                           	callstack 0
   485  00004A                     	ds	4
   486  00004E                     displayMenu@systemCycle:
   487                           	callstack 0
   488  00004E                     	ds	2
   489  000050                     displayMenu@errorCycle:
   490                           	callstack 0
   491  000050                     	ds	2
   492  000052                     _tak:
   493                           	callstack 0
   494  000052                     	ds	2
   495  000054                     readKey@lastStableKey:
   496                           	callstack 0
   497  000054                     	ds	1
   498  000055                     _keyPressed:
   499                           	callstack 0
   500  000055                     	ds	1
   501                           
   502                           	psect	bssBANK0
   503  0000B8                     __pbssBANK0:
   504                           	callstack 0
   505  0000B8                     _keyState:
   506                           	callstack 0
   507  0000B8                     	ds	11
   508  0000C3                     readKey@lastKeyPressTime:
   509                           	callstack 0
   510  0000C3                     	ds	4
   511  0000C7                     readKey@lastDebounceTime:
   512                           	callstack 0
   513  0000C7                     	ds	4
   514  0000CB                     displayMenu@lastUpdateTime:
   515                           	callstack 0
   516  0000CB                     	ds	4
   517  0000CF                     	ds	3
   518                           
   519                           	psect	dataBANK0
   520  0000D2                     __pdataBANK0:
   521                           	callstack 0
   522  0000D2                     _Glim:
   523                           	callstack 0
   524  0000D2                     	ds	2
   525  0000D4                     _Hlim:
   526                           	callstack 0
   527  0000D4                     	ds	2
   528  0000D6                     _Tlim:
   529                           	callstack 0
   530  0000D6                     	ds	2
   531                           
   532                           	psect	cstackBANK0
   533  000060                     __pcstackBANK0:
   534                           	callstack 0
   535  000060                     ?_tempRead:
   536                           	callstack 0
   537  000060                     ?_humidade:
   538                           	callstack 0
   539  000060                     ?_gasRead:
   540                           	callstack 0
   541  000060                     floatToString@intStr:
   542                           	callstack 0
   543                           
   544                           ; 12 bytes @ 0x0
   545  000060                     	ds	4
   546  000064                     tempRead@TempC:
   547                           	callstack 0
   548  000064                     humidade@Humid:
   549                           	callstack 0
   550  000064                     gasRead@gas:
   551                           	callstack 0
   552                           
   553                           ; 4 bytes @ 0x4
   554  000064                     	ds	4
   555  000068                     _tempRead$1533:
   556                           	callstack 0
   557  000068                     _humidade$1534:
   558                           	callstack 0
   559  000068                     _gasRead$1535:
   560                           	callstack 0
   561                           
   562                           ; 4 bytes @ 0x8
   563  000068                     	ds	4
   564  00006C                     tempRead@rawAnalog:
   565                           	callstack 0
   566  00006C                     humidade@rawAnalog:
   567                           	callstack 0
   568  00006C                     gasRead@rawAnalog:
   569                           	callstack 0
   570  00006C                     floatToString@digit:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0xC
   574  00006C                     	ds	2
   575  00006E                     floatToString@intPart:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0xE
   579  00006E                     	ds	2
   580  000070                     floatToString@temp:
   581                           	callstack 0
   582                           
   583                           ; 2 bytes @ 0x10
   584  000070                     	ds	2
   585  000072                     floatToString@i:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x12
   589  000072                     	ds	2
   590  000074                     floatToString@index:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x14
   594  000074                     	ds	2
   595  000076                     displayMenu@menuIndex:
   596                           	callstack 0
   597                           
   598                           ; 2 bytes @ 0x16
   599  000076                     	ds	2
   600  000078                     ??_displayMenu:
   601                           
   602                           ; 1 bytes @ 0x18
   603  000078                     	ds	4
   604  00007C                     displayMenu@valueStr:
   605                           	callstack 0
   606                           
   607                           ; 10 bytes @ 0x1C
   608  00007C                     	ds	10
   609  000086                     displayMenu@currentTime:
   610                           	callstack 0
   611                           
   612                           ; 4 bytes @ 0x26
   613  000086                     	ds	4
   614  00008A                     displayMenu@currentTemp:
   615                           	callstack 0
   616                           
   617                           ; 4 bytes @ 0x2A
   618  00008A                     	ds	4
   619  00008E                     displayMenu@currentHumid:
   620                           	callstack 0
   621                           
   622                           ; 4 bytes @ 0x2E
   623  00008E                     	ds	4
   624  000092                     displayMenu@currentGas:
   625                           	callstack 0
   626                           
   627                           ; 4 bytes @ 0x32
   628  000092                     	ds	4
   629  000096                     ??_main:
   630                           
   631                           ; 1 bytes @ 0x36
   632  000096                     	ds	4
   633  00009A                     main@lastDisplayUpdate:
   634                           	callstack 0
   635                           
   636                           ; 4 bytes @ 0x3A
   637  00009A                     	ds	4
   638  00009E                     main@currentTime:
   639                           	callstack 0
   640                           
   641                           ; 4 bytes @ 0x3E
   642  00009E                     	ds	4
   643  0000A2                     main@currentTemp:
   644                           	callstack 0
   645                           
   646                           ; 4 bytes @ 0x42
   647  0000A2                     	ds	4
   648  0000A6                     main@currentHumid:
   649                           	callstack 0
   650                           
   651                           ; 4 bytes @ 0x46
   652  0000A6                     	ds	4
   653  0000AA                     main@currentGas:
   654                           	callstack 0
   655                           
   656                           ; 4 bytes @ 0x4A
   657  0000AA                     	ds	4
   658  0000AE                     main@tempLimit:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x4E
   662  0000AE                     	ds	2
   663  0000B0                     main@humLimit:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x50
   667  0000B0                     	ds	2
   668  0000B2                     main@gasLimit:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x52
   672  0000B2                     	ds	2
   673  0000B4                     main@lastKey:
   674                           	callstack 0
   675                           
   676                           ; 1 bytes @ 0x54
   677  0000B4                     	ds	1
   678  0000B5                     main@pressed_key:
   679                           	callstack 0
   680                           
   681                           ; 1 bytes @ 0x55
   682  0000B5                     	ds	1
   683  0000B6                     main@menuIndex:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x56
   687  0000B6                     	ds	2
   688                           
   689                           	psect	cstackCOMRAM
   690  000001                     __pcstackCOMRAM:
   691                           	callstack 0
   692  000001                     ?___llmod:
   693                           	callstack 0
   694  000001                     ___llmod@dividend:
   695                           	callstack 0
   696                           
   697                           ; 4 bytes @ 0x0
   698  000001                     	ds	4
   699  000005                     ___llmod@divisor:
   700                           	callstack 0
   701                           
   702                           ; 4 bytes @ 0x4
   703  000005                     	ds	4
   704  000009                     ___llmod@counter:
   705                           	callstack 0
   706                           
   707                           ; 1 bytes @ 0x8
   708  000009                     	ds	1
   709  00000A                     ??_DelayPORXLCD:
   710  00000A                     ??_DelayXLCD:
   711  00000A                     ?_readAnalog:
   712                           	callstack 0
   713  00000A                     ?___awdiv:
   714                           	callstack 0
   715  00000A                     ?___awmod:
   716                           	callstack 0
   717  00000A                     ?_millis:
   718                           	callstack 0
   719  00000A                     ?___fladd:
   720                           	callstack 0
   721  00000A                     ?___flneg:
   722                           	callstack 0
   723  00000A                     ?___fltol:
   724                           	callstack 0
   725  00000A                     ?___xxtofl:
   726                           	callstack 0
   727  00000A                     SetDDRamAddr@DDaddr:
   728                           	callstack 0
   729  00000A                     WriteCmdXLCD@cmd:
   730                           	callstack 0
   731  00000A                     WriteDataXLCD@data:
   732                           	callstack 0
   733  00000A                     setCoolerSpeed@PWMset:
   734                           	callstack 0
   735  00000A                     setMoist@moistSet:
   736                           	callstack 0
   737  00000A                     buzzer@buzzerStatus:
   738                           	callstack 0
   739  00000A                     ___awdiv@dividend:
   740                           	callstack 0
   741  00000A                     ___awmod@dividend:
   742                           	callstack 0
   743  00000A                     ___flneg@f1:
   744                           	callstack 0
   745  00000A                     ___fltol@f1:
   746                           	callstack 0
   747  00000A                     ___fladd@b:
   748                           	callstack 0
   749  00000A                     ___xxtofl@val:
   750                           	callstack 0
   751                           
   752                           ; 4 bytes @ 0x9
   753  00000A                     	ds	1
   754  00000B                     OpenXLCD@lcdtype:
   755                           	callstack 0
   756  00000B                     displayStuff@row:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0xA
   760  00000B                     	ds	1
   761  00000C                     ??_configureLCD:
   762  00000C                     ??_readAnalog:
   763  00000C                     ___awdiv@divisor:
   764                           	callstack 0
   765  00000C                     ___awmod@divisor:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0xB
   769  00000C                     	ds	1
   770  00000D                     displayStuff@column:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0xC
   774  00000D                     	ds	1
   775  00000E                     ??___fltol:
   776  00000E                     ??___xxtofl:
   777  00000E                     ___awdiv@counter:
   778                           	callstack 0
   779  00000E                     ___awmod@counter:
   780                           	callstack 0
   781  00000E                     readAnalog@result:
   782                           	callstack 0
   783  00000E                     millis@ms:
   784                           	callstack 0
   785  00000E                     ___fladd@a:
   786                           	callstack 0
   787                           
   788                           ; 4 bytes @ 0xD
   789  00000E                     	ds	1
   790  00000F                     ___awdiv@sign:
   791                           	callstack 0
   792  00000F                     ___awmod@sign:
   793                           	callstack 0
   794  00000F                     displayStuff@stuff:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0xE
   798  00000F                     	ds	1
   799  000010                     readAnalog@pin:
   800                           	callstack 0
   801  000010                     ___awdiv@quotient:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0xF
   805  000010                     	ds	1
   806  000011                     displayStuff@LCDWritePosition:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0x10
   810  000011                     	ds	1
   811  000012                     ??_readKey:
   812  000012                     ??___fladd:
   813  000012                     ___fltol@sign1:
   814                           	callstack 0
   815  000012                     ___xxtofl@sign:
   816                           	callstack 0
   817  000012                     itoa@value:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x11
   821  000012                     	ds	1
   822  000013                     ___fltol@exp1:
   823                           	callstack 0
   824  000013                     ___xxtofl@exp:
   825                           	callstack 0
   826  000013                     _displayStuff$792:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x12
   830  000013                     	ds	1
   831  000014                     itoa@ptr:
   832                           	callstack 0
   833  000014                     ___xxtofl@arg:
   834                           	callstack 0
   835                           
   836                           ; 4 bytes @ 0x13
   837  000014                     	ds	2
   838  000016                     ___fladd@signs:
   839                           	callstack 0
   840  000016                     itoa@count:
   841                           	callstack 0
   842                           
   843                           ; 2 bytes @ 0x15
   844  000016                     	ds	1
   845  000017                     ___fladd@aexp:
   846                           	callstack 0
   847                           
   848                           ; 1 bytes @ 0x16
   849  000017                     	ds	1
   850  000018                     ?___flmul:
   851                           	callstack 0
   852  000018                     ___fladd@bexp:
   853                           	callstack 0
   854  000018                     itoa@temp:
   855                           	callstack 0
   856  000018                     ___flge@ff1:
   857                           	callstack 0
   858  000018                     ___flmul@b:
   859                           	callstack 0
   860  000018                     readKey@InvCol:
   861                           	callstack 0
   862                           
   863                           ; 8 bytes @ 0x17
   864  000018                     	ds	1
   865  000019                     ___fladd@grs:
   866                           	callstack 0
   867                           
   868                           ; 1 bytes @ 0x18
   869  000019                     	ds	1
   870  00001A                     ?___flsub:
   871                           	callstack 0
   872  00001A                     ___flsub@b:
   873                           	callstack 0
   874                           
   875                           ; 4 bytes @ 0x19
   876  00001A                     	ds	2
   877  00001C                     ___flge@ff2:
   878                           	callstack 0
   879  00001C                     ___flmul@a:
   880                           	callstack 0
   881                           
   882                           ; 4 bytes @ 0x1B
   883  00001C                     	ds	2
   884  00001E                     ___flsub@a:
   885                           	callstack 0
   886                           
   887                           ; 4 bytes @ 0x1D
   888  00001E                     	ds	2
   889  000020                     ??___flmul:
   890  000020                     ??___flge:
   891  000020                     readKey@currentTime:
   892                           	callstack 0
   893                           
   894                           ; 4 bytes @ 0x1F
   895  000020                     	ds	2
   896  000022                     
   897                           ; 1 bytes @ 0x21
   898  000022                     	ds	2
   899  000024                     ___flmul@sign:
   900                           	callstack 0
   901  000024                     readKey@col:
   902                           	callstack 0
   903                           
   904                           ; 2 bytes @ 0x23
   905  000024                     	ds	1
   906  000025                     ___flmul@aexp:
   907                           	callstack 0
   908                           
   909                           ; 1 bytes @ 0x24
   910  000025                     	ds	1
   911  000026                     readKey@row:
   912                           	callstack 0
   913  000026                     ___flmul@grs:
   914                           	callstack 0
   915                           
   916                           ; 4 bytes @ 0x25
   917  000026                     	ds	2
   918  000028                     readKey@pressedKey:
   919                           	callstack 0
   920                           
   921                           ; 1 bytes @ 0x27
   922  000028                     	ds	1
   923  000029                     ?_readTwoDigitValue:
   924                           	callstack 0
   925  000029                     readTwoDigitValue@prompt:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x28
   929  000029                     	ds	1
   930  00002A                     ___flmul@bexp:
   931                           	callstack 0
   932                           
   933                           ; 1 bytes @ 0x29
   934  00002A                     	ds	1
   935  00002B                     ??_readTwoDigitValue:
   936  00002B                     ___flmul@prod:
   937                           	callstack 0
   938                           
   939                           ; 4 bytes @ 0x2A
   940  00002B                     	ds	2
   941  00002D                     readTwoDigitValue@input:
   942                           	callstack 0
   943                           
   944                           ; 3 bytes @ 0x2C
   945  00002D                     	ds	2
   946  00002F                     ___flmul@temp:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0x2E
   950  00002F                     	ds	1
   951  000030                     readTwoDigitValue@digitCount:
   952                           	callstack 0
   953                           
   954                           ; 2 bytes @ 0x2F
   955  000030                     	ds	1
   956  000031                     ?___fldiv:
   957                           	callstack 0
   958  000031                     floatToString@value:
   959                           	callstack 0
   960  000031                     ___fldiv@b:
   961                           	callstack 0
   962                           
   963                           ; 4 bytes @ 0x30
   964  000031                     	ds	1
   965  000032                     readTwoDigitValue@key:
   966                           	callstack 0
   967                           
   968                           ; 1 bytes @ 0x31
   969  000032                     	ds	3
   970  000035                     floatToString@buffer:
   971                           	callstack 0
   972  000035                     ___fldiv@a:
   973                           	callstack 0
   974                           
   975                           ; 4 bytes @ 0x34
   976  000035                     	ds	2
   977  000037                     floatToString@precision:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x36
   981  000037                     	ds	2
   982  000039                     ??_floatToString:
   983  000039                     ??___fldiv:
   984                           
   985                           ; 1 bytes @ 0x38
   986  000039                     	ds	4
   987  00003D                     ___fldiv@rem:
   988                           	callstack 0
   989                           
   990                           ; 4 bytes @ 0x3C
   991  00003D                     	ds	4
   992  000041                     ___fldiv@sign:
   993                           	callstack 0
   994                           
   995                           ; 1 bytes @ 0x40
   996  000041                     	ds	1
   997  000042                     ___fldiv@new_exp:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0x41
  1001  000042                     	ds	2
  1002  000044                     ___fldiv@grs:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x43
  1006  000044                     	ds	4
  1007  000048                     ___fldiv@bexp:
  1008                           	callstack 0
  1009                           
  1010                           ; 1 bytes @ 0x47
  1011  000048                     	ds	1
  1012  000049                     ___fldiv@aexp:
  1013                           	callstack 0
  1014                           
  1015                           ; 1 bytes @ 0x48
  1016  000049                     	ds	1
  1017  00004A                     
  1018                           ; 1 bytes @ 0x49
  1019 ;;
  1020 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1021 ;;
  1022 ;; *************** function _main *****************
  1023 ;; Defined at:
  1024 ;;		line 132 in file "main.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;		None
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;  gasLimit        2   82[BANK0 ] int 
  1029 ;;  humLimit        2   80[BANK0 ] int 
  1030 ;;  tempLimit       2   78[BANK0 ] int 
  1031 ;;  currentGas      4   74[BANK0 ] float 
  1032 ;;  currentHumid    4   70[BANK0 ] float 
  1033 ;;  currentTemp     4   66[BANK0 ] float 
  1034 ;;  currentTime     4   62[BANK0 ] unsigned long 
  1035 ;;  lastDisplayU    4   58[BANK0 ] unsigned long 
  1036 ;;  menuIndex       2   86[BANK0 ] int 
  1037 ;;  pressed_key     1   85[BANK0 ] unsigned char 
  1038 ;;  lastKey         1   84[BANK0 ] unsigned char 
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  1    wreg      void 
  1041 ;; Registers used:
  1042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1048 ;;      Params:         0       0       0       0       0       0       0       0       0
  1049 ;;      Locals:         0      30       0       0       0       0       0       0       0
  1050 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1051 ;;      Totals:         0      34       0       0       0       0       0       0       0
  1052 ;;Total ram usage:       34 bytes
  1053 ;; Hardware stack levels required when called: 6
  1054 ;; This function calls:
  1055 ;;		___flge
  1056 ;;		___xxtofl
  1057 ;;		_buzzer
  1058 ;;		_configureADC
  1059 ;;		_configureIO
  1060 ;;		_configureInterrupt
  1061 ;;		_configureLCD
  1062 ;;		_configureTimer
  1063 ;;		_displayMenu
  1064 ;;		_displayStuff
  1065 ;;		_gasRead
  1066 ;;		_humidade
  1067 ;;		_millis
  1068 ;;		_readKey
  1069 ;;		_readTwoDigitValue
  1070 ;;		_setCoolerSpeed
  1071 ;;		_setMoist
  1072 ;;		_tempRead
  1073 ;; This function is called by:
  1074 ;;		Startup code after reset
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           
  1078                           	psect	text0
  1079  0008C8                     __ptext0:
  1080                           	callstack 0
  1081  0008C8                     _main:
  1082                           	callstack 25
  1083  0008C8                     
  1084                           ;main.c: 133:     char lastKey = '\0';
  1085  0008C8  0E00               	movlw	0
  1086  0008CA  0100               	movlb	0	; () banked
  1087  0008CC  6FB4               	movwf	main@lastKey& (0+255),b
  1088                           
  1089                           ;main.c: 134:     int menuIndex = 0;
  1090  0008CE  0E00               	movlw	0
  1091  0008D0  6FB7               	movwf	(main@menuIndex+1)& (0+255),b
  1092  0008D2  0E00               	movlw	0
  1093  0008D4  6FB6               	movwf	main@menuIndex& (0+255),b
  1094                           
  1095                           ;main.c: 135:     unsigned long lastDisplayUpdate = 0;
  1096  0008D6  0E00               	movlw	0
  1097  0008D8  6F9A               	movwf	main@lastDisplayUpdate& (0+255),b
  1098  0008DA  0E00               	movlw	0
  1099  0008DC  6F9B               	movwf	(main@lastDisplayUpdate+1)& (0+255),b
  1100  0008DE  0E00               	movlw	0
  1101  0008E0  6F9C               	movwf	(main@lastDisplayUpdate+2)& (0+255),b
  1102  0008E2  0E00               	movlw	0
  1103  0008E4  6F9D               	movwf	(main@lastDisplayUpdate+3)& (0+255),b
  1104  0008E6                     
  1105                           ; BSR set to: 0
  1106                           ;main.c: 136:     char pressed_key;;main.c: 137:     unsigned long currentTime;;main.c: 
      +                          138:     float currentTemp;;main.c: 139:     float currentHumid;;main.c: 140:     float 
      +                          currentGas;;main.c: 143:     configureIO();
  1107  0008E6  ECC1  F017         	call	_configureIO	;wreg free
  1108  0008EA                     
  1109                           ;main.c: 144:     configureADC();
  1110  0008EA  ECEE  F017         	call	_configureADC	;wreg free
  1111  0008EE                     
  1112                           ;main.c: 145:     configureLCD();
  1113  0008EE  ECEE  F016         	call	_configureLCD	;wreg free
  1114  0008F2                     
  1115                           ;main.c: 146:     configureTimer();
  1116  0008F2  ECE8  F017         	call	_configureTimer	;wreg free
  1117  0008F6                     
  1118                           ;main.c: 147:     configureInterrupt();
  1119  0008F6  ECCD  F017         	call	_configureInterrupt	;wreg free
  1120  0008FA                     
  1121                           ;main.c: 150:     TRISDbits.TRISD0 = 0;
  1122  0008FA  9095               	bcf	149,0,c	;volatile
  1123  0008FC                     
  1124                           ;main.c: 151:     TRISDbits.TRISD1 = 0;
  1125  0008FC  9295               	bcf	149,1,c	;volatile
  1126  0008FE                     
  1127                           ;main.c: 152:     TRISDbits.TRISD2 = 0;
  1128  0008FE  9495               	bcf	149,2,c	;volatile
  1129  000900                     l5195:
  1130                           
  1131                           ;main.c: 156:         pressed_key = readKey();
  1132  000900  EC3F  F00F         	call	_readKey	;wreg free
  1133  000904  0100               	movlb	0	; () banked
  1134  000906  6FB5               	movwf	main@pressed_key& (0+255),b
  1135  000908                     
  1136                           ; BSR set to: 0
  1137                           ;main.c: 157:         currentTime = millis();
  1138  000908  ECAE  F017         	call	_millis	;wreg free
  1139  00090C  C00A  F09E         	movff	?_millis,main@currentTime
  1140  000910  C00B  F09F         	movff	?_millis+1,main@currentTime+1
  1141  000914  C00C  F0A0         	movff	?_millis+2,main@currentTime+2
  1142  000918  C00D  F0A1         	movff	?_millis+3,main@currentTime+3
  1143  00091C                     
  1144                           ;main.c: 160:         if (currentTime - lastDisplayUpdate >= 500) {
  1145  00091C  0100               	movlb	0	; () banked
  1146  00091E  519A               	movf	main@lastDisplayUpdate& (0+255),w,b
  1147  000920  5D9E               	subwf	main@currentTime& (0+255),w,b
  1148  000922  6F96               	movwf	??_main& (0+255),b
  1149  000924  519B               	movf	(main@lastDisplayUpdate+1)& (0+255),w,b
  1150  000926  599F               	subwfb	(main@currentTime+1)& (0+255),w,b
  1151  000928  6F97               	movwf	(??_main+1)& (0+255),b
  1152  00092A  519C               	movf	(main@lastDisplayUpdate+2)& (0+255),w,b
  1153  00092C  59A0               	subwfb	(main@currentTime+2)& (0+255),w,b
  1154  00092E  6F98               	movwf	(??_main+2)& (0+255),b
  1155  000930  519D               	movf	(main@lastDisplayUpdate+3)& (0+255),w,b
  1156  000932  59A1               	subwfb	(main@currentTime+3)& (0+255),w,b
  1157  000934  6F99               	movwf	(??_main+3)& (0+255),b
  1158  000936  5199               	movf	(??_main+3)& (0+255),w,b
  1159  000938  1198               	iorwf	(??_main+2)& (0+255),w,b
  1160  00093A  E10B               	bnz	u5240
  1161  00093C  0EF4               	movlw	244
  1162  00093E  5D96               	subwf	??_main& (0+255),w,b
  1163  000940  0E01               	movlw	1
  1164  000942  5997               	subwfb	(??_main+1)& (0+255),w,b
  1165  000944  A0D8               	btfss	status,0,c
  1166  000946  EFA7  F004         	goto	u5241
  1167  00094A  EFA9  F004         	goto	u5240
  1168  00094E                     u5241:
  1169  00094E  EFB7  F004         	goto	l5205
  1170  000952                     u5240:
  1171  000952                     
  1172                           ; BSR set to: 0
  1173                           ;main.c: 161:             displayMenu(menuIndex);
  1174  000952  C0B6  F076         	movff	main@menuIndex,displayMenu@menuIndex
  1175  000956  C0B7  F077         	movff	main@menuIndex+1,displayMenu@menuIndex+1
  1176  00095A  EC09  F000         	call	_displayMenu	;wreg free
  1177  00095E                     
  1178                           ;main.c: 162:             lastDisplayUpdate = currentTime;
  1179  00095E  C09E  F09A         	movff	main@currentTime,main@lastDisplayUpdate
  1180  000962  C09F  F09B         	movff	main@currentTime+1,main@lastDisplayUpdate+1
  1181  000966  C0A0  F09C         	movff	main@currentTime+2,main@lastDisplayUpdate+2
  1182  00096A  C0A1  F09D         	movff	main@currentTime+3,main@lastDisplayUpdate+3
  1183  00096E                     l5205:
  1184                           
  1185                           ;main.c: 166:         if (pressed_key == 'E' && lastKey != 'E') {
  1186  00096E  0E45               	movlw	69
  1187  000970  0100               	movlb	0	; () banked
  1188  000972  19B5               	xorwf	main@pressed_key& (0+255),w,b
  1189  000974  A4D8               	btfss	status,2,c
  1190  000976  EFBF  F004         	goto	u5251
  1191  00097A  EFC1  F004         	goto	u5250
  1192  00097E                     u5251:
  1193  00097E  EFE4  F004         	goto	l5217
  1194  000982                     u5250:
  1195  000982                     
  1196                           ; BSR set to: 0
  1197  000982  0E45               	movlw	69
  1198  000984  19B4               	xorwf	main@lastKey& (0+255),w,b
  1199  000986  B4D8               	btfsc	status,2,c
  1200  000988  EFC8  F004         	goto	u5261
  1201  00098C  EFCA  F004         	goto	u5260
  1202  000990                     u5261:
  1203  000990  EFE4  F004         	goto	l5217
  1204  000994                     u5260:
  1205  000994                     
  1206                           ; BSR set to: 0
  1207                           ;main.c: 167:             menuIndex++;
  1208  000994  4BB6               	infsnz	main@menuIndex& (0+255),f,b
  1209  000996  2BB7               	incf	(main@menuIndex+1)& (0+255),f,b
  1210  000998                     
  1211                           ; BSR set to: 0
  1212                           ;main.c: 168:             if (menuIndex > 4) {
  1213  000998  BFB7               	btfsc	(main@menuIndex+1)& (0+255),7,b
  1214  00099A  EFD8  F004         	goto	u5271
  1215  00099E  51B7               	movf	(main@menuIndex+1)& (0+255),w,b
  1216  0009A0  E109               	bnz	u5270
  1217  0009A2  0E05               	movlw	5
  1218  0009A4  5DB6               	subwf	main@menuIndex& (0+255),w,b
  1219  0009A6  A0D8               	btfss	status,0,c
  1220  0009A8  EFD8  F004         	goto	u5271
  1221  0009AC  EFDA  F004         	goto	u5270
  1222  0009B0                     u5271:
  1223  0009B0  EFDE  F004         	goto	l5215
  1224  0009B4                     u5270:
  1225  0009B4                     
  1226                           ; BSR set to: 0
  1227                           ;main.c: 169:                 menuIndex = 0;
  1228  0009B4  0E00               	movlw	0
  1229  0009B6  6FB7               	movwf	(main@menuIndex+1)& (0+255),b
  1230  0009B8  0E00               	movlw	0
  1231  0009BA  6FB6               	movwf	main@menuIndex& (0+255),b
  1232  0009BC                     l5215:
  1233                           
  1234                           ; BSR set to: 0
  1235                           ;main.c: 171:             displayMenu(menuIndex);
  1236  0009BC  C0B6  F076         	movff	main@menuIndex,displayMenu@menuIndex
  1237  0009C0  C0B7  F077         	movff	main@menuIndex+1,displayMenu@menuIndex+1
  1238  0009C4  EC09  F000         	call	_displayMenu	;wreg free
  1239  0009C8                     l5217:
  1240                           
  1241                           ;main.c: 173:         if (pressed_key == 'F' && lastKey != 'F'){
  1242  0009C8  0E46               	movlw	70
  1243  0009CA  0100               	movlb	0	; () banked
  1244  0009CC  19B5               	xorwf	main@pressed_key& (0+255),w,b
  1245  0009CE  A4D8               	btfss	status,2,c
  1246  0009D0  EFEC  F004         	goto	u5281
  1247  0009D4  EFEE  F004         	goto	u5280
  1248  0009D8                     u5281:
  1249  0009D8  EF0B  F005         	goto	l5229
  1250  0009DC                     u5280:
  1251  0009DC                     
  1252                           ; BSR set to: 0
  1253  0009DC  0E46               	movlw	70
  1254  0009DE  19B4               	xorwf	main@lastKey& (0+255),w,b
  1255  0009E0  B4D8               	btfsc	status,2,c
  1256  0009E2  EFF5  F004         	goto	u5291
  1257  0009E6  EFF7  F004         	goto	u5290
  1258  0009EA                     u5291:
  1259  0009EA  EF0B  F005         	goto	l5229
  1260  0009EE                     u5290:
  1261  0009EE                     
  1262                           ; BSR set to: 0
  1263                           ;main.c: 174:             menuIndex--;
  1264  0009EE  07B6               	decf	main@menuIndex& (0+255),f,b
  1265  0009F0  A0D8               	btfss	status,0,c
  1266  0009F2  07B7               	decf	(main@menuIndex+1)& (0+255),f,b
  1267  0009F4                     
  1268                           ; BSR set to: 0
  1269                           ;main.c: 175:             if (menuIndex < 0) {
  1270  0009F4  BFB7               	btfsc	(main@menuIndex+1)& (0+255),7,b
  1271  0009F6  EF01  F005         	goto	u5300
  1272  0009FA  EFFF  F004         	goto	u5301
  1273  0009FE                     u5301:
  1274  0009FE  EF05  F005         	goto	l5227
  1275  000A02                     u5300:
  1276  000A02                     
  1277                           ; BSR set to: 0
  1278                           ;main.c: 176:                 menuIndex = 4;
  1279  000A02  0E00               	movlw	0
  1280  000A04  6FB7               	movwf	(main@menuIndex+1)& (0+255),b
  1281  000A06  0E04               	movlw	4
  1282  000A08  6FB6               	movwf	main@menuIndex& (0+255),b
  1283  000A0A                     l5227:
  1284                           
  1285                           ; BSR set to: 0
  1286                           ;main.c: 178:             displayMenu(menuIndex);
  1287  000A0A  C0B6  F076         	movff	main@menuIndex,displayMenu@menuIndex
  1288  000A0E  C0B7  F077         	movff	main@menuIndex+1,displayMenu@menuIndex+1
  1289  000A12  EC09  F000         	call	_displayMenu	;wreg free
  1290  000A16                     l5229:
  1291                           
  1292                           ;main.c: 182:         if (pressed_key == 'A' && lastKey != 'A') {
  1293  000A16  0E41               	movlw	65
  1294  000A18  0100               	movlb	0	; () banked
  1295  000A1A  19B5               	xorwf	main@pressed_key& (0+255),w,b
  1296  000A1C  A4D8               	btfss	status,2,c
  1297  000A1E  EF13  F005         	goto	u5311
  1298  000A22  EF15  F005         	goto	u5310
  1299  000A26                     u5311:
  1300  000A26  EF6B  F005         	goto	l5253
  1301  000A2A                     u5310:
  1302  000A2A                     
  1303                           ; BSR set to: 0
  1304  000A2A  0E41               	movlw	65
  1305  000A2C  19B4               	xorwf	main@lastKey& (0+255),w,b
  1306  000A2E  B4D8               	btfsc	status,2,c
  1307  000A30  EF1C  F005         	goto	u5321
  1308  000A34  EF1E  F005         	goto	u5320
  1309  000A38                     u5321:
  1310  000A38  EF6B  F005         	goto	l5253
  1311  000A3C                     u5320:
  1312  000A3C                     
  1313                           ; BSR set to: 0
  1314                           ;main.c: 183:             int tempLimit = readTwoDigitValue("Limite Temp:");
  1315  000A3C  0E88               	movlw	low STR_1
  1316  000A3E  6E29               	movwf	readTwoDigitValue@prompt^0,c
  1317  000A40  0E7F               	movlw	high STR_1
  1318  000A42  6E2A               	movwf	(readTwoDigitValue@prompt+1)^0,c
  1319  000A44  ECB5  F011         	call	_readTwoDigitValue	;wreg free
  1320  000A48  C029  F0AE         	movff	?_readTwoDigitValue,main@tempLimit
  1321  000A4C  C02A  F0AF         	movff	?_readTwoDigitValue+1,main@tempLimit+1
  1322  000A50                     
  1323                           ;main.c: 184:             if (tempLimit != -1) {
  1324  000A50  0100               	movlb	0	; () banked
  1325  000A52  29AE               	incf	main@tempLimit& (0+255),w,b
  1326  000A54  E108               	bnz	u5330
  1327  000A56  29AF               	incf	(main@tempLimit+1)& (0+255),w,b
  1328  000A58  B4D8               	btfsc	status,2,c
  1329  000A5A  EF31  F005         	goto	u5331
  1330  000A5E  EF33  F005         	goto	u5330
  1331  000A62                     u5331:
  1332  000A62  EF5F  F005         	goto	l5247
  1333  000A66                     u5330:
  1334  000A66                     
  1335                           ; BSR set to: 0
  1336                           ;main.c: 185:                 Tlim = tempLimit;
  1337  000A66  C0AE  F0D6         	movff	main@tempLimit,_Tlim
  1338  000A6A  C0AF  F0D7         	movff	main@tempLimit+1,_Tlim+1
  1339  000A6E                     
  1340                           ; BSR set to: 0
  1341                           ;main.c: 186:                 displayStuff(1, 0, "Temp Salva!");
  1342  000A6E  0E00               	movlw	0
  1343  000A70  6E0C               	movwf	(displayStuff@row+1)^0,c
  1344  000A72  0E01               	movlw	1
  1345  000A74  6E0B               	movwf	displayStuff@row^0,c
  1346  000A76  0E00               	movlw	0
  1347  000A78  6E0E               	movwf	(displayStuff@column+1)^0,c
  1348  000A7A  0E00               	movlw	0
  1349  000A7C  6E0D               	movwf	displayStuff@column^0,c
  1350  000A7E  0E95               	movlw	low STR_2
  1351  000A80  6E0F               	movwf	displayStuff@stuff^0,c
  1352  000A82  0E7F               	movlw	high STR_2
  1353  000A84  6E10               	movwf	(displayStuff@stuff+1)^0,c
  1354  000A86  EC9A  F015         	call	_displayStuff	;wreg free
  1355  000A8A                     
  1356                           ;main.c: 187:                 _delay((unsigned long)((1000)*(20000000/4000.0)));
  1357  000A8A  0E1A               	movlw	26
  1358  000A8C  0100               	movlb	0	; () banked
  1359  000A8E  6F97               	movwf	(??_main+1)& (0+255),b
  1360  000A90  0E5E               	movlw	94
  1361  000A92  6F96               	movwf	??_main& (0+255),b
  1362  000A94  0E6E               	movlw	110
  1363  000A96                     u5517:
  1364  000A96  2EE8               	decfsz	wreg,f,c
  1365  000A98  D7FE               	bra	u5517
  1366  000A9A  2F96               	decfsz	??_main& (0+255),f,b
  1367  000A9C  D7FC               	bra	u5517
  1368  000A9E  2F97               	decfsz	(??_main+1)& (0+255),f,b
  1369  000AA0  D7FA               	bra	u5517
  1370  000AA2  F000               	nop	
  1371  000AA4                     l5243:
  1372                           
  1373                           ;main.c: 188:                 menuIndex = 0;
  1374  000AA4  0E00               	movlw	0
  1375  000AA6  0100               	movlb	0	; () banked
  1376  000AA8  6FB7               	movwf	(main@menuIndex+1)& (0+255),b
  1377  000AAA  0E00               	movlw	0
  1378  000AAC  6FB6               	movwf	main@menuIndex& (0+255),b
  1379  000AAE                     
  1380                           ; BSR set to: 0
  1381                           ;main.c: 189:                 displayMenu(menuIndex);
  1382  000AAE  0E00               	movlw	0
  1383  000AB0  6F77               	movwf	(displayMenu@menuIndex+1)& (0+255),b
  1384  000AB2  0E00               	movlw	0
  1385  000AB4  6F76               	movwf	displayMenu@menuIndex& (0+255),b
  1386  000AB6  EC09  F000         	call	_displayMenu	;wreg free
  1387                           
  1388                           ;main.c: 190:             } else if (tempLimit == -1) {
  1389  000ABA  EF6B  F005         	goto	l5253
  1390  000ABE                     l5247:
  1391                           
  1392                           ; BSR set to: 0
  1393  000ABE  29AE               	incf	main@tempLimit& (0+255),w,b
  1394  000AC0  E106               	bnz	u5341
  1395  000AC2  29AF               	incf	(main@tempLimit+1)& (0+255),w,b
  1396  000AC4  A4D8               	btfss	status,2,c
  1397  000AC6  EF67  F005         	goto	u5341
  1398  000ACA  EF69  F005         	goto	u5340
  1399  000ACE                     u5341:
  1400  000ACE  EF6B  F005         	goto	l5253
  1401  000AD2                     u5340:
  1402  000AD2  EF52  F005         	goto	l5243
  1403  000AD6                     l5253:
  1404                           
  1405                           ;main.c: 196:         if (pressed_key == 'B' && lastKey != 'B') {
  1406  000AD6  0E42               	movlw	66
  1407  000AD8  0100               	movlb	0	; () banked
  1408  000ADA  19B5               	xorwf	main@pressed_key& (0+255),w,b
  1409  000ADC  A4D8               	btfss	status,2,c
  1410  000ADE  EF73  F005         	goto	u5351
  1411  000AE2  EF75  F005         	goto	u5350
  1412  000AE6                     u5351:
  1413  000AE6  EFCB  F005         	goto	l5277
  1414  000AEA                     u5350:
  1415  000AEA                     
  1416                           ; BSR set to: 0
  1417  000AEA  0E42               	movlw	66
  1418  000AEC  19B4               	xorwf	main@lastKey& (0+255),w,b
  1419  000AEE  B4D8               	btfsc	status,2,c
  1420  000AF0  EF7C  F005         	goto	u5361
  1421  000AF4  EF7E  F005         	goto	u5360
  1422  000AF8                     u5361:
  1423  000AF8  EFCB  F005         	goto	l5277
  1424  000AFC                     u5360:
  1425  000AFC                     
  1426                           ; BSR set to: 0
  1427                           ;main.c: 197:             int humLimit = readTwoDigitValue("Limite Hum:");
  1428  000AFC  0EA1               	movlw	low STR_3
  1429  000AFE  6E29               	movwf	readTwoDigitValue@prompt^0,c
  1430  000B00  0E7F               	movlw	high STR_3
  1431  000B02  6E2A               	movwf	(readTwoDigitValue@prompt+1)^0,c
  1432  000B04  ECB5  F011         	call	_readTwoDigitValue	;wreg free
  1433  000B08  C029  F0B0         	movff	?_readTwoDigitValue,main@humLimit
  1434  000B0C  C02A  F0B1         	movff	?_readTwoDigitValue+1,main@humLimit+1
  1435  000B10                     
  1436                           ;main.c: 198:             if (humLimit != -1) {
  1437  000B10  0100               	movlb	0	; () banked
  1438  000B12  29B0               	incf	main@humLimit& (0+255),w,b
  1439  000B14  E108               	bnz	u5370
  1440  000B16  29B1               	incf	(main@humLimit+1)& (0+255),w,b
  1441  000B18  B4D8               	btfsc	status,2,c
  1442  000B1A  EF91  F005         	goto	u5371
  1443  000B1E  EF93  F005         	goto	u5370
  1444  000B22                     u5371:
  1445  000B22  EFBF  F005         	goto	l5271
  1446  000B26                     u5370:
  1447  000B26                     
  1448                           ; BSR set to: 0
  1449                           ;main.c: 199:                 Hlim = humLimit;
  1450  000B26  C0B0  F0D4         	movff	main@humLimit,_Hlim
  1451  000B2A  C0B1  F0D5         	movff	main@humLimit+1,_Hlim+1
  1452  000B2E                     
  1453                           ; BSR set to: 0
  1454                           ;main.c: 200:                 displayStuff(1, 0, "Humid Salvo!");
  1455  000B2E  0E00               	movlw	0
  1456  000B30  6E0C               	movwf	(displayStuff@row+1)^0,c
  1457  000B32  0E01               	movlw	1
  1458  000B34  6E0B               	movwf	displayStuff@row^0,c
  1459  000B36  0E00               	movlw	0
  1460  000B38  6E0E               	movwf	(displayStuff@column+1)^0,c
  1461  000B3A  0E00               	movlw	0
  1462  000B3C  6E0D               	movwf	displayStuff@column^0,c
  1463  000B3E  0E7B               	movlw	low STR_4
  1464  000B40  6E0F               	movwf	displayStuff@stuff^0,c
  1465  000B42  0E7F               	movlw	high STR_4
  1466  000B44  6E10               	movwf	(displayStuff@stuff+1)^0,c
  1467  000B46  EC9A  F015         	call	_displayStuff	;wreg free
  1468  000B4A                     
  1469                           ;main.c: 201:                 _delay((unsigned long)((1000)*(20000000/4000.0)));
  1470  000B4A  0E1A               	movlw	26
  1471  000B4C  0100               	movlb	0	; () banked
  1472  000B4E  6F97               	movwf	(??_main+1)& (0+255),b
  1473  000B50  0E5E               	movlw	94
  1474  000B52  6F96               	movwf	??_main& (0+255),b
  1475  000B54  0E6E               	movlw	110
  1476  000B56                     u5527:
  1477  000B56  2EE8               	decfsz	wreg,f,c
  1478  000B58  D7FE               	bra	u5527
  1479  000B5A  2F96               	decfsz	??_main& (0+255),f,b
  1480  000B5C  D7FC               	bra	u5527
  1481  000B5E  2F97               	decfsz	(??_main+1)& (0+255),f,b
  1482  000B60  D7FA               	bra	u5527
  1483  000B62  F000               	nop	
  1484  000B64                     l5267:
  1485                           
  1486                           ;main.c: 202:                 menuIndex = 0;
  1487  000B64  0E00               	movlw	0
  1488  000B66  0100               	movlb	0	; () banked
  1489  000B68  6FB7               	movwf	(main@menuIndex+1)& (0+255),b
  1490  000B6A  0E00               	movlw	0
  1491  000B6C  6FB6               	movwf	main@menuIndex& (0+255),b
  1492  000B6E                     
  1493                           ; BSR set to: 0
  1494                           ;main.c: 203:                 displayMenu(menuIndex);
  1495  000B6E  0E00               	movlw	0
  1496  000B70  6F77               	movwf	(displayMenu@menuIndex+1)& (0+255),b
  1497  000B72  0E00               	movlw	0
  1498  000B74  6F76               	movwf	displayMenu@menuIndex& (0+255),b
  1499  000B76  EC09  F000         	call	_displayMenu	;wreg free
  1500                           
  1501                           ;main.c: 204:             } else if (humLimit == -1) {
  1502  000B7A  EFCB  F005         	goto	l5277
  1503  000B7E                     l5271:
  1504                           
  1505                           ; BSR set to: 0
  1506  000B7E  29B0               	incf	main@humLimit& (0+255),w,b
  1507  000B80  E106               	bnz	u5381
  1508  000B82  29B1               	incf	(main@humLimit+1)& (0+255),w,b
  1509  000B84  A4D8               	btfss	status,2,c
  1510  000B86  EFC7  F005         	goto	u5381
  1511  000B8A  EFC9  F005         	goto	u5380
  1512  000B8E                     u5381:
  1513  000B8E  EFCB  F005         	goto	l5277
  1514  000B92                     u5380:
  1515  000B92  EFB2  F005         	goto	l5267
  1516  000B96                     l5277:
  1517                           
  1518                           ;main.c: 210:         if (pressed_key == 'C' && lastKey != 'C') {
  1519  000B96  0E43               	movlw	67
  1520  000B98  0100               	movlb	0	; () banked
  1521  000B9A  19B5               	xorwf	main@pressed_key& (0+255),w,b
  1522  000B9C  A4D8               	btfss	status,2,c
  1523  000B9E  EFD3  F005         	goto	u5391
  1524  000BA2  EFD5  F005         	goto	u5390
  1525  000BA6                     u5391:
  1526  000BA6  EF2B  F006         	goto	l5301
  1527  000BAA                     u5390:
  1528  000BAA                     
  1529                           ; BSR set to: 0
  1530  000BAA  0E43               	movlw	67
  1531  000BAC  19B4               	xorwf	main@lastKey& (0+255),w,b
  1532  000BAE  B4D8               	btfsc	status,2,c
  1533  000BB0  EFDC  F005         	goto	u5401
  1534  000BB4  EFDE  F005         	goto	u5400
  1535  000BB8                     u5401:
  1536  000BB8  EF2B  F006         	goto	l5301
  1537  000BBC                     u5400:
  1538  000BBC                     
  1539                           ; BSR set to: 0
  1540                           ;main.c: 211:             int gasLimit = readTwoDigitValue("Limite Gas");
  1541  000BBC  0EC4               	movlw	low STR_5
  1542  000BBE  6E29               	movwf	readTwoDigitValue@prompt^0,c
  1543  000BC0  0E7F               	movlw	high STR_5
  1544  000BC2  6E2A               	movwf	(readTwoDigitValue@prompt+1)^0,c
  1545  000BC4  ECB5  F011         	call	_readTwoDigitValue	;wreg free
  1546  000BC8  C029  F0B2         	movff	?_readTwoDigitValue,main@gasLimit
  1547  000BCC  C02A  F0B3         	movff	?_readTwoDigitValue+1,main@gasLimit+1
  1548  000BD0                     
  1549                           ;main.c: 212:             if (gasLimit != -1) {
  1550  000BD0  0100               	movlb	0	; () banked
  1551  000BD2  29B2               	incf	main@gasLimit& (0+255),w,b
  1552  000BD4  E108               	bnz	u5410
  1553  000BD6  29B3               	incf	(main@gasLimit+1)& (0+255),w,b
  1554  000BD8  B4D8               	btfsc	status,2,c
  1555  000BDA  EFF1  F005         	goto	u5411
  1556  000BDE  EFF3  F005         	goto	u5410
  1557  000BE2                     u5411:
  1558  000BE2  EF1F  F006         	goto	l5295
  1559  000BE6                     u5410:
  1560  000BE6                     
  1561                           ; BSR set to: 0
  1562                           ;main.c: 213:                 Glim = gasLimit;
  1563  000BE6  C0B2  F0D2         	movff	main@gasLimit,_Glim
  1564  000BEA  C0B3  F0D3         	movff	main@gasLimit+1,_Glim+1
  1565  000BEE                     
  1566                           ; BSR set to: 0
  1567                           ;main.c: 214:                 displayStuff(1, 0, "Gas Salvo!");
  1568  000BEE  0E00               	movlw	0
  1569  000BF0  6E0C               	movwf	(displayStuff@row+1)^0,c
  1570  000BF2  0E01               	movlw	1
  1571  000BF4  6E0B               	movwf	displayStuff@row^0,c
  1572  000BF6  0E00               	movlw	0
  1573  000BF8  6E0E               	movwf	(displayStuff@column+1)^0,c
  1574  000BFA  0E00               	movlw	0
  1575  000BFC  6E0D               	movwf	displayStuff@column^0,c
  1576  000BFE  0EB9               	movlw	low STR_6
  1577  000C00  6E0F               	movwf	displayStuff@stuff^0,c
  1578  000C02  0E7F               	movlw	high STR_6
  1579  000C04  6E10               	movwf	(displayStuff@stuff+1)^0,c
  1580  000C06  EC9A  F015         	call	_displayStuff	;wreg free
  1581  000C0A                     
  1582                           ;main.c: 215:                 _delay((unsigned long)((1000)*(20000000/4000.0)));
  1583  000C0A  0E1A               	movlw	26
  1584  000C0C  0100               	movlb	0	; () banked
  1585  000C0E  6F97               	movwf	(??_main+1)& (0+255),b
  1586  000C10  0E5E               	movlw	94
  1587  000C12  6F96               	movwf	??_main& (0+255),b
  1588  000C14  0E6E               	movlw	110
  1589  000C16                     u5537:
  1590  000C16  2EE8               	decfsz	wreg,f,c
  1591  000C18  D7FE               	bra	u5537
  1592  000C1A  2F96               	decfsz	??_main& (0+255),f,b
  1593  000C1C  D7FC               	bra	u5537
  1594  000C1E  2F97               	decfsz	(??_main+1)& (0+255),f,b
  1595  000C20  D7FA               	bra	u5537
  1596  000C22  F000               	nop	
  1597  000C24                     l5291:
  1598                           
  1599                           ;main.c: 216:                 menuIndex = 0;
  1600  000C24  0E00               	movlw	0
  1601  000C26  0100               	movlb	0	; () banked
  1602  000C28  6FB7               	movwf	(main@menuIndex+1)& (0+255),b
  1603  000C2A  0E00               	movlw	0
  1604  000C2C  6FB6               	movwf	main@menuIndex& (0+255),b
  1605  000C2E                     
  1606                           ; BSR set to: 0
  1607                           ;main.c: 217:                 displayMenu(menuIndex);
  1608  000C2E  0E00               	movlw	0
  1609  000C30  6F77               	movwf	(displayMenu@menuIndex+1)& (0+255),b
  1610  000C32  0E00               	movlw	0
  1611  000C34  6F76               	movwf	displayMenu@menuIndex& (0+255),b
  1612  000C36  EC09  F000         	call	_displayMenu	;wreg free
  1613                           
  1614                           ;main.c: 218:             } else if (gasLimit == -1) {
  1615  000C3A  EF2B  F006         	goto	l5301
  1616  000C3E                     l5295:
  1617                           
  1618                           ; BSR set to: 0
  1619  000C3E  29B2               	incf	main@gasLimit& (0+255),w,b
  1620  000C40  E106               	bnz	u5421
  1621  000C42  29B3               	incf	(main@gasLimit+1)& (0+255),w,b
  1622  000C44  A4D8               	btfss	status,2,c
  1623  000C46  EF27  F006         	goto	u5421
  1624  000C4A  EF29  F006         	goto	u5420
  1625  000C4E                     u5421:
  1626  000C4E  EF2B  F006         	goto	l5301
  1627  000C52                     u5420:
  1628  000C52  EF12  F006         	goto	l5291
  1629  000C56                     l5301:
  1630                           
  1631                           ;main.c: 224:         if (pressed_key == 'D' && lastKey != 'D') {
  1632  000C56  0E44               	movlw	68
  1633  000C58  0100               	movlb	0	; () banked
  1634  000C5A  19B5               	xorwf	main@pressed_key& (0+255),w,b
  1635  000C5C  A4D8               	btfss	status,2,c
  1636  000C5E  EF33  F006         	goto	u5431
  1637  000C62  EF35  F006         	goto	u5430
  1638  000C66                     u5431:
  1639  000C66  EF70  F006         	goto	l5315
  1640  000C6A                     u5430:
  1641  000C6A                     
  1642                           ; BSR set to: 0
  1643  000C6A  0E44               	movlw	68
  1644  000C6C  19B4               	xorwf	main@lastKey& (0+255),w,b
  1645  000C6E  B4D8               	btfsc	status,2,c
  1646  000C70  EF3C  F006         	goto	u5441
  1647  000C74  EF3E  F006         	goto	u5440
  1648  000C78                     u5441:
  1649  000C78  EF70  F006         	goto	l5315
  1650  000C7C                     u5440:
  1651  000C7C                     
  1652                           ; BSR set to: 0
  1653                           ;main.c: 225:             Tlim = 30;
  1654  000C7C  0E00               	movlw	0
  1655  000C7E  6FD7               	movwf	(_Tlim+1)& (0+255),b
  1656  000C80  0E1E               	movlw	30
  1657  000C82  6FD6               	movwf	_Tlim& (0+255),b
  1658                           
  1659                           ;main.c: 226:             Hlim = 50;
  1660  000C84  0E00               	movlw	0
  1661  000C86  6FD5               	movwf	(_Hlim+1)& (0+255),b
  1662  000C88  0E32               	movlw	50
  1663  000C8A  6FD4               	movwf	_Hlim& (0+255),b
  1664                           
  1665                           ;main.c: 227:             Glim = 20;
  1666  000C8C  0E00               	movlw	0
  1667  000C8E  6FD3               	movwf	(_Glim+1)& (0+255),b
  1668  000C90  0E14               	movlw	20
  1669  000C92  6FD2               	movwf	_Glim& (0+255),b
  1670  000C94                     
  1671                           ; BSR set to: 0
  1672                           ;main.c: 228:             displayStuff(0, 0, "Lim resetados!");
  1673  000C94  0E00               	movlw	0
  1674  000C96  6E0C               	movwf	(displayStuff@row+1)^0,c
  1675  000C98  0E00               	movlw	0
  1676  000C9A  6E0B               	movwf	displayStuff@row^0,c
  1677  000C9C  0E00               	movlw	0
  1678  000C9E  6E0E               	movwf	(displayStuff@column+1)^0,c
  1679  000CA0  0E00               	movlw	0
  1680  000CA2  6E0D               	movwf	displayStuff@column^0,c
  1681  000CA4  0E50               	movlw	low STR_7
  1682  000CA6  6E0F               	movwf	displayStuff@stuff^0,c
  1683  000CA8  0E7F               	movlw	high STR_7
  1684  000CAA  6E10               	movwf	(displayStuff@stuff+1)^0,c
  1685  000CAC  EC9A  F015         	call	_displayStuff	;wreg free
  1686  000CB0                     
  1687                           ;main.c: 229:             _delay((unsigned long)((1000)*(20000000/4000.0)));
  1688  000CB0  0E1A               	movlw	26
  1689  000CB2  0100               	movlb	0	; () banked
  1690  000CB4  6F97               	movwf	(??_main+1)& (0+255),b
  1691  000CB6  0E5E               	movlw	94
  1692  000CB8  6F96               	movwf	??_main& (0+255),b
  1693  000CBA  0E6E               	movlw	110
  1694  000CBC                     u5547:
  1695  000CBC  2EE8               	decfsz	wreg,f,c
  1696  000CBE  D7FE               	bra	u5547
  1697  000CC0  2F96               	decfsz	??_main& (0+255),f,b
  1698  000CC2  D7FC               	bra	u5547
  1699  000CC4  2F97               	decfsz	(??_main+1)& (0+255),f,b
  1700  000CC6  D7FA               	bra	u5547
  1701  000CC8  F000               	nop	
  1702  000CCA                     
  1703                           ;main.c: 230:             menuIndex = 0;
  1704  000CCA  0E00               	movlw	0
  1705  000CCC  0100               	movlb	0	; () banked
  1706  000CCE  6FB7               	movwf	(main@menuIndex+1)& (0+255),b
  1707  000CD0  0E00               	movlw	0
  1708  000CD2  6FB6               	movwf	main@menuIndex& (0+255),b
  1709  000CD4                     
  1710                           ; BSR set to: 0
  1711                           ;main.c: 231:             displayMenu(menuIndex);
  1712  000CD4  0E00               	movlw	0
  1713  000CD6  6F77               	movwf	(displayMenu@menuIndex+1)& (0+255),b
  1714  000CD8  0E00               	movlw	0
  1715  000CDA  6F76               	movwf	displayMenu@menuIndex& (0+255),b
  1716  000CDC  EC09  F000         	call	_displayMenu	;wreg free
  1717  000CE0                     l5315:
  1718                           
  1719                           ;main.c: 235:         currentTemp = tempRead();
  1720  000CE0  EC25  F014         	call	_tempRead	;wreg free
  1721  000CE4  C060  F0A2         	movff	?_tempRead,main@currentTemp
  1722  000CE8  C061  F0A3         	movff	?_tempRead+1,main@currentTemp+1
  1723  000CEC  C062  F0A4         	movff	?_tempRead+2,main@currentTemp+2
  1724  000CF0  C063  F0A5         	movff	?_tempRead+3,main@currentTemp+3
  1725  000CF4                     
  1726                           ;main.c: 236:         currentHumid = humidade();
  1727  000CF4  EC84  F014         	call	_humidade	;wreg free
  1728  000CF8  C060  F0A6         	movff	?_humidade,main@currentHumid
  1729  000CFC  C061  F0A7         	movff	?_humidade+1,main@currentHumid+1
  1730  000D00  C062  F0A8         	movff	?_humidade+2,main@currentHumid+2
  1731  000D04  C063  F0A9         	movff	?_humidade+3,main@currentHumid+3
  1732  000D08                     
  1733                           ;main.c: 237:         currentGas = gasRead();
  1734  000D08  ECE3  F014         	call	_gasRead	;wreg free
  1735  000D0C  C060  F0AA         	movff	?_gasRead,main@currentGas
  1736  000D10  C061  F0AB         	movff	?_gasRead+1,main@currentGas+1
  1737  000D14  C062  F0AC         	movff	?_gasRead+2,main@currentGas+2
  1738  000D18  C063  F0AD         	movff	?_gasRead+3,main@currentGas+3
  1739  000D1C                     
  1740                           ;main.c: 240:         if (currentTemp > Tlim || currentHumid > Hlim || currentGas > Glim
      +                          ) {
  1741  000D1C  C0D6  F00A         	movff	_Tlim,___xxtofl@val
  1742  000D20  C0D7  F00B         	movff	_Tlim+1,___xxtofl@val+1
  1743  000D24  0E00               	movlw	0
  1744  000D26  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  1745  000D28  0EFF               	movlw	-1
  1746  000D2A  6E0C               	movwf	(___xxtofl@val+2)^0,c
  1747  000D2C  6E0D               	movwf	(___xxtofl@val+3)^0,c
  1748  000D2E  0E01               	movlw	1
  1749  000D30  EC3B  F010         	call	___xxtofl
  1750  000D34  C00A  F018         	movff	?___xxtofl,___flge@ff1
  1751  000D38  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  1752  000D3C  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  1753  000D40  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  1754  000D44  C0A2  F01C         	movff	main@currentTemp,___flge@ff2
  1755  000D48  C0A3  F01D         	movff	main@currentTemp+1,___flge@ff2+1
  1756  000D4C  C0A4  F01E         	movff	main@currentTemp+2,___flge@ff2+2
  1757  000D50  C0A5  F01F         	movff	main@currentTemp+3,___flge@ff2+3
  1758  000D54  ECCA  F012         	call	___flge	;wreg free
  1759  000D58  A0D8               	btfss	status,0,c
  1760  000D5A  EFB1  F006         	goto	u5451
  1761  000D5E  EFB3  F006         	goto	u5450
  1762  000D62                     u5451:
  1763  000D62  EFFD  F006         	goto	l5327
  1764  000D66                     u5450:
  1765  000D66  C0D4  F00A         	movff	_Hlim,___xxtofl@val
  1766  000D6A  C0D5  F00B         	movff	_Hlim+1,___xxtofl@val+1
  1767  000D6E  0E00               	movlw	0
  1768  000D70  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  1769  000D72  0EFF               	movlw	-1
  1770  000D74  6E0C               	movwf	(___xxtofl@val+2)^0,c
  1771  000D76  6E0D               	movwf	(___xxtofl@val+3)^0,c
  1772  000D78  0E01               	movlw	1
  1773  000D7A  EC3B  F010         	call	___xxtofl
  1774  000D7E  C00A  F018         	movff	?___xxtofl,___flge@ff1
  1775  000D82  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  1776  000D86  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  1777  000D8A  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  1778  000D8E  C0A6  F01C         	movff	main@currentHumid,___flge@ff2
  1779  000D92  C0A7  F01D         	movff	main@currentHumid+1,___flge@ff2+1
  1780  000D96  C0A8  F01E         	movff	main@currentHumid+2,___flge@ff2+2
  1781  000D9A  C0A9  F01F         	movff	main@currentHumid+3,___flge@ff2+3
  1782  000D9E  ECCA  F012         	call	___flge	;wreg free
  1783  000DA2  A0D8               	btfss	status,0,c
  1784  000DA4  EFD6  F006         	goto	u5461
  1785  000DA8  EFD8  F006         	goto	u5460
  1786  000DAC                     u5461:
  1787  000DAC  EFFD  F006         	goto	l5327
  1788  000DB0                     u5460:
  1789  000DB0  C0D2  F00A         	movff	_Glim,___xxtofl@val
  1790  000DB4  C0D3  F00B         	movff	_Glim+1,___xxtofl@val+1
  1791  000DB8  0E00               	movlw	0
  1792  000DBA  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  1793  000DBC  0EFF               	movlw	-1
  1794  000DBE  6E0C               	movwf	(___xxtofl@val+2)^0,c
  1795  000DC0  6E0D               	movwf	(___xxtofl@val+3)^0,c
  1796  000DC2  0E01               	movlw	1
  1797  000DC4  EC3B  F010         	call	___xxtofl
  1798  000DC8  C00A  F018         	movff	?___xxtofl,___flge@ff1
  1799  000DCC  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  1800  000DD0  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  1801  000DD4  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  1802  000DD8  C0AA  F01C         	movff	main@currentGas,___flge@ff2
  1803  000DDC  C0AB  F01D         	movff	main@currentGas+1,___flge@ff2+1
  1804  000DE0  C0AC  F01E         	movff	main@currentGas+2,___flge@ff2+2
  1805  000DE4  C0AD  F01F         	movff	main@currentGas+3,___flge@ff2+3
  1806  000DE8  ECCA  F012         	call	___flge	;wreg free
  1807  000DEC  B0D8               	btfsc	status,0,c
  1808  000DEE  EFFB  F006         	goto	u5471
  1809  000DF2  EFFD  F006         	goto	u5470
  1810  000DF6                     u5471:
  1811  000DF6  EF05  F007         	goto	l5329
  1812  000DFA                     u5470:
  1813  000DFA                     l5327:
  1814                           
  1815                           ;main.c: 241:             buzzer(1);
  1816  000DFA  0E00               	movlw	0
  1817  000DFC  6E0B               	movwf	(buzzer@buzzerStatus+1)^0,c
  1818  000DFE  0E01               	movlw	1
  1819  000E00  6E0A               	movwf	buzzer@buzzerStatus^0,c
  1820  000E02  ECFE  F017         	call	_buzzer	;wreg free
  1821                           
  1822                           ;main.c: 242:         } else {
  1823  000E06  EF0B  F007         	goto	l121
  1824  000E0A                     l5329:
  1825                           
  1826                           ;main.c: 243:             buzzer(0);
  1827  000E0A  0E00               	movlw	0
  1828  000E0C  6E0B               	movwf	(buzzer@buzzerStatus+1)^0,c
  1829  000E0E  0E00               	movlw	0
  1830  000E10  6E0A               	movwf	buzzer@buzzerStatus^0,c
  1831  000E12  ECFE  F017         	call	_buzzer	;wreg free
  1832  000E16                     l121:
  1833                           
  1834                           ;main.c: 246:         if (currentTemp > Tlim) {
  1835  000E16  C0D6  F00A         	movff	_Tlim,___xxtofl@val
  1836  000E1A  C0D7  F00B         	movff	_Tlim+1,___xxtofl@val+1
  1837  000E1E  0E00               	movlw	0
  1838  000E20  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  1839  000E22  0EFF               	movlw	-1
  1840  000E24  6E0C               	movwf	(___xxtofl@val+2)^0,c
  1841  000E26  6E0D               	movwf	(___xxtofl@val+3)^0,c
  1842  000E28  0E01               	movlw	1
  1843  000E2A  EC3B  F010         	call	___xxtofl
  1844  000E2E  C00A  F018         	movff	?___xxtofl,___flge@ff1
  1845  000E32  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  1846  000E36  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  1847  000E3A  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  1848  000E3E  C0A2  F01C         	movff	main@currentTemp,___flge@ff2
  1849  000E42  C0A3  F01D         	movff	main@currentTemp+1,___flge@ff2+1
  1850  000E46  C0A4  F01E         	movff	main@currentTemp+2,___flge@ff2+2
  1851  000E4A  C0A5  F01F         	movff	main@currentTemp+3,___flge@ff2+3
  1852  000E4E  ECCA  F012         	call	___flge	;wreg free
  1853  000E52  B0D8               	btfsc	status,0,c
  1854  000E54  EF2E  F007         	goto	u5481
  1855  000E58  EF30  F007         	goto	u5480
  1856  000E5C                     u5481:
  1857  000E5C  EF34  F007         	goto	l122
  1858  000E60                     u5480:
  1859  000E60                     
  1860                           ;main.c: 247:             PORTDbits.RD0 = 1;
  1861  000E60  8083               	bsf	131,0,c	;volatile
  1862                           
  1863                           ;main.c: 248:             PORTCbits.RC2 = 1;
  1864  000E62  8482               	bsf	130,2,c	;volatile
  1865                           
  1866                           ;main.c: 249:         } else {
  1867  000E64  EF36  F007         	goto	l5333
  1868  000E68                     l122:
  1869                           
  1870                           ;main.c: 250:             PORTDbits.RD0 = 0;
  1871  000E68  9083               	bcf	131,0,c	;volatile
  1872                           
  1873                           ;main.c: 251:             PORTCbits.RC2 = 0;
  1874  000E6A  9482               	bcf	130,2,c	;volatile
  1875  000E6C                     l5333:
  1876                           
  1877                           ;main.c: 254:         if (currentHumid > Hlim) {
  1878  000E6C  C0D4  F00A         	movff	_Hlim,___xxtofl@val
  1879  000E70  C0D5  F00B         	movff	_Hlim+1,___xxtofl@val+1
  1880  000E74  0E00               	movlw	0
  1881  000E76  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  1882  000E78  0EFF               	movlw	-1
  1883  000E7A  6E0C               	movwf	(___xxtofl@val+2)^0,c
  1884  000E7C  6E0D               	movwf	(___xxtofl@val+3)^0,c
  1885  000E7E  0E01               	movlw	1
  1886  000E80  EC3B  F010         	call	___xxtofl
  1887  000E84  C00A  F018         	movff	?___xxtofl,___flge@ff1
  1888  000E88  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  1889  000E8C  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  1890  000E90  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  1891  000E94  C0A6  F01C         	movff	main@currentHumid,___flge@ff2
  1892  000E98  C0A7  F01D         	movff	main@currentHumid+1,___flge@ff2+1
  1893  000E9C  C0A8  F01E         	movff	main@currentHumid+2,___flge@ff2+2
  1894  000EA0  C0A9  F01F         	movff	main@currentHumid+3,___flge@ff2+3
  1895  000EA4  ECCA  F012         	call	___flge	;wreg free
  1896  000EA8  B0D8               	btfsc	status,0,c
  1897  000EAA  EF59  F007         	goto	u5491
  1898  000EAE  EF5B  F007         	goto	u5490
  1899  000EB2                     u5491:
  1900  000EB2  EF64  F007         	goto	l124
  1901  000EB6                     u5490:
  1902  000EB6                     
  1903                           ;main.c: 255:             PORTDbits.RD1 = 1;
  1904  000EB6  8283               	bsf	131,1,c	;volatile
  1905  000EB8                     
  1906                           ;main.c: 256:             setMoist(1);
  1907  000EB8  0E00               	movlw	0
  1908  000EBA  6E0B               	movwf	(setMoist@moistSet+1)^0,c
  1909  000EBC  0E01               	movlw	1
  1910  000EBE  6E0A               	movwf	setMoist@moistSet^0,c
  1911  000EC0  ECFC  F017         	call	_setMoist	;wreg free
  1912                           
  1913                           ;main.c: 257:         } else {
  1914  000EC4  EF6B  F007         	goto	l125
  1915  000EC8                     l124:
  1916                           
  1917                           ;main.c: 258:             PORTDbits.RD1 = 0;
  1918  000EC8  9283               	bcf	131,1,c	;volatile
  1919  000ECA                     
  1920                           ;main.c: 259:             setMoist(0);
  1921  000ECA  0E00               	movlw	0
  1922  000ECC  6E0B               	movwf	(setMoist@moistSet+1)^0,c
  1923  000ECE  0E00               	movlw	0
  1924  000ED0  6E0A               	movwf	setMoist@moistSet^0,c
  1925  000ED2  ECFC  F017         	call	_setMoist	;wreg free
  1926  000ED6                     l125:
  1927                           
  1928                           ;main.c: 262:         if (currentGas > Glim) {
  1929  000ED6  C0D2  F00A         	movff	_Glim,___xxtofl@val
  1930  000EDA  C0D3  F00B         	movff	_Glim+1,___xxtofl@val+1
  1931  000EDE  0E00               	movlw	0
  1932  000EE0  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  1933  000EE2  0EFF               	movlw	-1
  1934  000EE4  6E0C               	movwf	(___xxtofl@val+2)^0,c
  1935  000EE6  6E0D               	movwf	(___xxtofl@val+3)^0,c
  1936  000EE8  0E01               	movlw	1
  1937  000EEA  EC3B  F010         	call	___xxtofl
  1938  000EEE  C00A  F018         	movff	?___xxtofl,___flge@ff1
  1939  000EF2  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  1940  000EF6  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  1941  000EFA  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  1942  000EFE  C0AA  F01C         	movff	main@currentGas,___flge@ff2
  1943  000F02  C0AB  F01D         	movff	main@currentGas+1,___flge@ff2+1
  1944  000F06  C0AC  F01E         	movff	main@currentGas+2,___flge@ff2+2
  1945  000F0A  C0AD  F01F         	movff	main@currentGas+3,___flge@ff2+3
  1946  000F0E  ECCA  F012         	call	___flge	;wreg free
  1947  000F12  B0D8               	btfsc	status,0,c
  1948  000F14  EF8E  F007         	goto	u5501
  1949  000F18  EF90  F007         	goto	u5500
  1950  000F1C                     u5501:
  1951  000F1C  EF98  F007         	goto	l126
  1952  000F20                     u5500:
  1953  000F20                     
  1954                           ;main.c: 263:             PORTDbits.RD2 = 1;
  1955  000F20  8483               	bsf	131,2,c	;volatile
  1956  000F22                     
  1957                           ;main.c: 264:             setCoolerSpeed(255);
  1958  000F22  0E00               	movlw	0
  1959  000F24  6E0B               	movwf	(setCoolerSpeed@PWMset+1)^0,c
  1960  000F26  680A               	setf	setCoolerSpeed@PWMset^0,c
  1961  000F28  ECFD  F017         	call	_setCoolerSpeed	;wreg free
  1962                           
  1963                           ;main.c: 265:         } else {
  1964  000F2C  EF9F  F007         	goto	l5347
  1965  000F30                     l126:
  1966                           
  1967                           ;main.c: 266:             PORTDbits.RD2 = 0;
  1968  000F30  9483               	bcf	131,2,c	;volatile
  1969  000F32                     
  1970                           ;main.c: 267:             setCoolerSpeed(0);
  1971  000F32  0E00               	movlw	0
  1972  000F34  6E0B               	movwf	(setCoolerSpeed@PWMset+1)^0,c
  1973  000F36  0E00               	movlw	0
  1974  000F38  6E0A               	movwf	setCoolerSpeed@PWMset^0,c
  1975  000F3A  ECFD  F017         	call	_setCoolerSpeed	;wreg free
  1976  000F3E                     l5347:
  1977                           
  1978                           ;main.c: 270:         lastKey = pressed_key;
  1979  000F3E  C0B5  F0B4         	movff	main@pressed_key,main@lastKey
  1980  000F42  EF80  F004         	goto	l5195
  1981  000F46  EF07  F000         	goto	start
  1982  000F4A                     __end_of_main:
  1983                           	callstack 0
  1984                           
  1985 ;; *************** function _setMoist *****************
  1986 ;; Defined at:
  1987 ;;		line 633 in file "main.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;  moistSet        2    9[COMRAM] int 
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;		None
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  1    wreg      void 
  1994 ;; Registers used:
  1995 ;;		wreg, status,2, status,0
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2001 ;;      Params:         2       0       0       0       0       0       0       0       0
  2002 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2003 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2004 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2005 ;;Total ram usage:        2 bytes
  2006 ;; Hardware stack levels used: 1
  2007 ;; Hardware stack levels required when called: 2
  2008 ;; This function calls:
  2009 ;;		Nothing
  2010 ;; This function is called by:
  2011 ;;		_main
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           	psect	text1
  2016  002FF8                     __ptext1:
  2017                           	callstack 0
  2018  002FF8                     _setMoist:
  2019                           	callstack 28
  2020  002FF8  0012               	return		;funcret
  2021  002FFA                     __end_of_setMoist:
  2022                           	callstack 0
  2023                           
  2024 ;; *************** function _setCoolerSpeed *****************
  2025 ;; Defined at:
  2026 ;;		line 627 in file "main.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;  PWMset          2    9[COMRAM] int 
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;		None
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  1    wreg      void 
  2033 ;; Registers used:
  2034 ;;		None
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2040 ;;      Params:         2       0       0       0       0       0       0       0       0
  2041 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2042 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2043 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2044 ;;Total ram usage:        2 bytes
  2045 ;; Hardware stack levels used: 1
  2046 ;; Hardware stack levels required when called: 2
  2047 ;; This function calls:
  2048 ;;		Nothing
  2049 ;; This function is called by:
  2050 ;;		_main
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054                           	psect	text2
  2055  002FFA                     __ptext2:
  2056                           	callstack 0
  2057  002FFA                     _setCoolerSpeed:
  2058                           	callstack 28
  2059  002FFA  0012               	return		;funcret
  2060  002FFC                     __end_of_setCoolerSpeed:
  2061                           	callstack 0
  2062                           
  2063 ;; *************** function _readTwoDigitValue *****************
  2064 ;; Defined at:
  2065 ;;		line 396 in file "main.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;  prompt          2   40[COMRAM] PTR unsigned char 
  2068 ;;		 -> STR_5(11), STR_3(12), STR_1(13), 
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;  input           3   44[COMRAM] unsigned char [3]
  2071 ;;  digitCount      2   47[COMRAM] int 
  2072 ;;  key             1   49[COMRAM] unsigned char 
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  2   40[COMRAM] int 
  2075 ;; Registers used:
  2076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2082 ;;      Params:         2       0       0       0       0       0       0       0       0
  2083 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2084 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2085 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2086 ;;Total ram usage:       10 bytes
  2087 ;; Hardware stack levels used: 1
  2088 ;; Hardware stack levels required when called: 5
  2089 ;; This function calls:
  2090 ;;		_WriteCmdXLCD
  2091 ;;		_displayStuff
  2092 ;;		_readKey
  2093 ;; This function is called by:
  2094 ;;		_main
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           	psect	text3
  2099  00236A                     __ptext3:
  2100                           	callstack 0
  2101  00236A                     _readTwoDigitValue:
  2102                           	callstack 25
  2103  00236A                     
  2104                           ;main.c: 397:     char input[3] = {0};
  2105  00236A  0E00               	movlw	0
  2106  00236C  6E2D               	movwf	readTwoDigitValue@input^0,c
  2107  00236E  0E00               	movlw	0
  2108  002370  6E2E               	movwf	(readTwoDigitValue@input+1)^0,c
  2109  002372  0E00               	movlw	0
  2110  002374  6E2F               	movwf	(readTwoDigitValue@input+2)^0,c
  2111                           
  2112                           ;main.c: 398:     int digitCount = 0;
  2113  002376  0E00               	movlw	0
  2114  002378  6E31               	movwf	(readTwoDigitValue@digitCount+1)^0,c
  2115  00237A  0E00               	movlw	0
  2116  00237C  6E30               	movwf	readTwoDigitValue@digitCount^0,c
  2117  00237E                     
  2118                           ;main.c: 399:     char key;;main.c: 401:     WriteCmdXLCD(0x01);
  2119  00237E  0E01               	movlw	1
  2120  002380  EC73  F017         	call	_WriteCmdXLCD
  2121  002384                     
  2122                           ;main.c: 402:     _delay((unsigned long)((2)*(20000000/4000.0)));
  2123  002384  0E0D               	movlw	13
  2124  002386  6E2B               	movwf	??_readTwoDigitValue^0,c
  2125  002388  0EFC               	movlw	252
  2126  00238A                     u5557:
  2127  00238A  2EE8               	decfsz	wreg,f,c
  2128  00238C  D7FE               	bra	u5557
  2129  00238E  2E2B               	decfsz	??_readTwoDigitValue^0,f,c
  2130  002390  D7FC               	bra	u5557
  2131  002392                     
  2132                           ;main.c: 403:     WriteCmdXLCD(0x02);
  2133  002392  0E02               	movlw	2
  2134  002394  EC73  F017         	call	_WriteCmdXLCD
  2135  002398                     
  2136                           ;main.c: 404:     _delay((unsigned long)((2)*(20000000/4000.0)));
  2137  002398  0E0D               	movlw	13
  2138  00239A  6E2B               	movwf	??_readTwoDigitValue^0,c
  2139  00239C  0EFC               	movlw	252
  2140  00239E                     u5567:
  2141  00239E  2EE8               	decfsz	wreg,f,c
  2142  0023A0  D7FE               	bra	u5567
  2143  0023A2  2E2B               	decfsz	??_readTwoDigitValue^0,f,c
  2144  0023A4  D7FC               	bra	u5567
  2145  0023A6                     
  2146                           ;main.c: 406:     displayStuff(0, 0, prompt);
  2147  0023A6  0E00               	movlw	0
  2148  0023A8  6E0C               	movwf	(displayStuff@row+1)^0,c
  2149  0023AA  0E00               	movlw	0
  2150  0023AC  6E0B               	movwf	displayStuff@row^0,c
  2151  0023AE  0E00               	movlw	0
  2152  0023B0  6E0E               	movwf	(displayStuff@column+1)^0,c
  2153  0023B2  0E00               	movlw	0
  2154  0023B4  6E0D               	movwf	displayStuff@column^0,c
  2155  0023B6  C029  F00F         	movff	readTwoDigitValue@prompt,displayStuff@stuff
  2156  0023BA  C02A  F010         	movff	readTwoDigitValue@prompt+1,displayStuff@stuff+1
  2157  0023BE  EC9A  F015         	call	_displayStuff	;wreg free
  2158                           
  2159                           ;main.c: 408:     while (digitCount < 2) {
  2160  0023C2  EF28  F012         	goto	l4011
  2161  0023C6                     l3993:
  2162                           
  2163                           ;main.c: 409:         key = readKey();
  2164  0023C6  EC3F  F00F         	call	_readKey	;wreg free
  2165  0023CA  6E32               	movwf	readTwoDigitValue@key^0,c
  2166  0023CC                     
  2167                           ;main.c: 411:         if (key >= '0' && key <= '9') {
  2168  0023CC  0E2F               	movlw	47
  2169  0023CE  6432               	cpfsgt	readTwoDigitValue@key^0,c
  2170  0023D0  EFEC  F011         	goto	u3701
  2171  0023D4  EFEE  F011         	goto	u3700
  2172  0023D8                     u3701:
  2173  0023D8  EF1B  F012         	goto	l4007
  2174  0023DC                     u3700:
  2175  0023DC  0E3A               	movlw	58
  2176  0023DE  6032               	cpfslt	readTwoDigitValue@key^0,c
  2177  0023E0  EFF4  F011         	goto	u3711
  2178  0023E4  EFF6  F011         	goto	u3710
  2179  0023E8                     u3711:
  2180  0023E8  EF1B  F012         	goto	l4007
  2181  0023EC                     u3710:
  2182  0023EC                     
  2183                           ;main.c: 412:             input[digitCount] = key;
  2184  0023EC  0E2D               	movlw	low readTwoDigitValue@input
  2185  0023EE  2430               	addwf	readTwoDigitValue@digitCount^0,w,c
  2186  0023F0  6ED9               	movwf	fsr2l,c
  2187  0023F2  0E00               	movlw	high readTwoDigitValue@input
  2188  0023F4  2031               	addwfc	(readTwoDigitValue@digitCount+1)^0,w,c
  2189  0023F6  6EDA               	movwf	fsr2h,c
  2190  0023F8  C032  FFDF         	movff	readTwoDigitValue@key,indf2
  2191  0023FC                     
  2192                           ;main.c: 413:             displayStuff(1, digitCount, &input[digitCount]);
  2193  0023FC  0E00               	movlw	0
  2194  0023FE  6E0C               	movwf	(displayStuff@row+1)^0,c
  2195  002400  0E01               	movlw	1
  2196  002402  6E0B               	movwf	displayStuff@row^0,c
  2197  002404  C030  F00D         	movff	readTwoDigitValue@digitCount,displayStuff@column
  2198  002408  C031  F00E         	movff	readTwoDigitValue@digitCount+1,displayStuff@column+1
  2199  00240C  0E2D               	movlw	low readTwoDigitValue@input
  2200  00240E  2430               	addwf	readTwoDigitValue@digitCount^0,w,c
  2201  002410  6E0F               	movwf	displayStuff@stuff^0,c
  2202  002412  0E00               	movlw	high readTwoDigitValue@input
  2203  002414  2031               	addwfc	(readTwoDigitValue@digitCount+1)^0,w,c
  2204  002416  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2205  002418  EC9A  F015         	call	_displayStuff	;wreg free
  2206  00241C                     
  2207                           ;main.c: 414:             digitCount++;
  2208  00241C  4A30               	infsnz	readTwoDigitValue@digitCount^0,f,c
  2209  00241E  2A31               	incf	(readTwoDigitValue@digitCount+1)^0,f,c
  2210  002420                     
  2211                           ;main.c: 415:             _delay((unsigned long)((200)*(20000000/4000.0)));
  2212  002420  0E06               	movlw	6
  2213  002422  6E2C               	movwf	(??_readTwoDigitValue+1)^0,c
  2214  002424  0E13               	movlw	19
  2215  002426  6E2B               	movwf	??_readTwoDigitValue^0,c
  2216  002428  0EAE               	movlw	174
  2217  00242A                     u5577:
  2218  00242A  2EE8               	decfsz	wreg,f,c
  2219  00242C  D7FE               	bra	u5577
  2220  00242E  2E2B               	decfsz	??_readTwoDigitValue^0,f,c
  2221  002430  D7FC               	bra	u5577
  2222  002432  2E2C               	decfsz	(??_readTwoDigitValue+1)^0,f,c
  2223  002434  D7FA               	bra	u5577
  2224  002436                     l4007:
  2225                           
  2226                           ;main.c: 418:         if (key == 'F') {
  2227  002436  0E46               	movlw	70
  2228  002438  1832               	xorwf	readTwoDigitValue@key^0,w,c
  2229  00243A  A4D8               	btfss	status,2,c
  2230  00243C  EF22  F012         	goto	u3721
  2231  002440  EF24  F012         	goto	u3720
  2232  002444                     u3721:
  2233  002444  EF28  F012         	goto	l4011
  2234  002448                     u3720:
  2235  002448                     
  2236                           ;main.c: 419:             return -1;
  2237  002448  6829               	setf	?_readTwoDigitValue^0,c
  2238  00244A  682A               	setf	(?_readTwoDigitValue+1)^0,c
  2239  00244C  EF46  F012         	goto	l179
  2240  002450                     l4011:
  2241                           
  2242                           ;main.c: 408:     while (digitCount < 2) {
  2243  002450  BE31               	btfsc	(readTwoDigitValue@digitCount+1)^0,7,c
  2244  002452  EF34  F012         	goto	u3731
  2245  002456  5031               	movf	(readTwoDigitValue@digitCount+1)^0,w,c
  2246  002458  E109               	bnz	u3730
  2247  00245A  0E02               	movlw	2
  2248  00245C  5C30               	subwf	readTwoDigitValue@digitCount^0,w,c
  2249  00245E  A0D8               	btfss	status,0,c
  2250  002460  EF34  F012         	goto	u3731
  2251  002464  EF36  F012         	goto	u3730
  2252  002468                     u3731:
  2253  002468  EFE3  F011         	goto	l3993
  2254  00246C                     u3730:
  2255  00246C                     
  2256                           ;main.c: 424:     return (input[0] - '0') * 10 + (input[1] - '0');
  2257  00246C  502D               	movf	readTwoDigitValue@input^0,w,c
  2258  00246E  0D0A               	mullw	10
  2259  002470  CFF3 F02B          	movff	prodl,??_readTwoDigitValue
  2260  002474  CFF4 F02C          	movff	prodh,??_readTwoDigitValue+1
  2261  002478  502E               	movf	(readTwoDigitValue@input+1)^0,w,c
  2262  00247A  262B               	addwf	??_readTwoDigitValue^0,f,c
  2263  00247C  0E00               	movlw	0
  2264  00247E  222C               	addwfc	(??_readTwoDigitValue+1)^0,f,c
  2265  002480  0EF0               	movlw	240
  2266  002482  242B               	addwf	??_readTwoDigitValue^0,w,c
  2267  002484  6E29               	movwf	?_readTwoDigitValue^0,c
  2268  002486  0EFD               	movlw	253
  2269  002488  202C               	addwfc	(??_readTwoDigitValue+1)^0,w,c
  2270  00248A  6E2A               	movwf	(?_readTwoDigitValue+1)^0,c
  2271  00248C                     l179:
  2272  00248C  0012               	return		;funcret
  2273  00248E                     __end_of_readTwoDigitValue:
  2274                           	callstack 0
  2275                           
  2276 ;; *************** function _readKey *****************
  2277 ;; Defined at:
  2278 ;;		line 519 in file "main.c"
  2279 ;; Parameters:    Size  Location     Type
  2280 ;;		None
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;  pressedKey      1   39[COMRAM] unsigned char 
  2283 ;;  InvCol          8   23[COMRAM] const int [4]
  2284 ;;  currentTime     4   31[COMRAM] unsigned long 
  2285 ;;  row             2   37[COMRAM] int 
  2286 ;;  col             2   35[COMRAM] int 
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  1    wreg      unsigned char 
  2289 ;; Registers used:
  2290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2296 ;;      Params:         0       0       0       0       0       0       0       0       0
  2297 ;;      Locals:        17       0       0       0       0       0       0       0       0
  2298 ;;      Temps:          6       0       0       0       0       0       0       0       0
  2299 ;;      Totals:        23       0       0       0       0       0       0       0       0
  2300 ;;Total ram usage:       23 bytes
  2301 ;; Hardware stack levels used: 1
  2302 ;; Hardware stack levels required when called: 3
  2303 ;; This function calls:
  2304 ;;		_millis
  2305 ;; This function is called by:
  2306 ;;		_main
  2307 ;;		_readTwoDigitValue
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           	psect	text4
  2312  001E7E                     __ptext4:
  2313                           	callstack 0
  2314  001E7E                     _readKey:
  2315                           	callstack 26
  2316  001E7E                     
  2317                           ;main.c: 520:     const int InvCol[4] = {3, 2, 1, 0};
  2318  001E7E  0E07               	movlw	low readKey@F3616
  2319  001E80  6EF6               	movwf	tblptrl,c
  2320  001E82                     	if	1	;There is more than 1 active tblptr byte
  2321  001E82  0E7F               	movlw	high readKey@F3616
  2322  001E84  6EF7               	movwf	tblptrh,c
  2323  001E86                     	endif
  2324  001E86                     	if	0	;There are less than 3 active tblptr bytes
  2325  001E86                     	endif
  2326  001E86  EE20  F018         	lfsr	2,readKey@InvCol
  2327  001E8A  0E07               	movlw	7
  2328  001E8C                     u3200:
  2329  001E8C  0009               	tblrd		*+
  2330  001E8E  CFF5 FFDE          	movff	tablat,postinc2
  2331  001E92  06E8               	decf	wreg,f,c
  2332  001E94  E2FB               	bc	u3200
  2333  001E96                     
  2334                           ;main.c: 521:     static unsigned long lastDebounceTime = 0;;main.c: 522:     static uns
      +                          igned long lastKeyPressTime = 0;;main.c: 523:     static char lastStableKey = 0;;main.c:
      +                           524:     unsigned long currentTime = millis();
  2335  001E96  ECAE  F017         	call	_millis	;wreg free
  2336  001E9A  C00A  F020         	movff	?_millis,readKey@currentTime
  2337  001E9E  C00B  F021         	movff	?_millis+1,readKey@currentTime+1
  2338  001EA2  C00C  F022         	movff	?_millis+2,readKey@currentTime+2
  2339  001EA6  C00D  F023         	movff	?_millis+3,readKey@currentTime+3
  2340  001EAA                     
  2341                           ;main.c: 525:     int col, row;;main.c: 527:     for (col = 0; col < 4; col++) {
  2342  001EAA  0E00               	movlw	0
  2343  001EAC  6E25               	movwf	(readKey@col+1)^0,c
  2344  001EAE  0E00               	movlw	0
  2345  001EB0  6E24               	movwf	readKey@col^0,c
  2346  001EB2                     l3517:
  2347  001EB2  BE25               	btfsc	(readKey@col+1)^0,7,c
  2348  001EB4  EF65  F00F         	goto	u3211
  2349  001EB8  5025               	movf	(readKey@col+1)^0,w,c
  2350  001EBA  E109               	bnz	u3210
  2351  001EBC  0E04               	movlw	4
  2352  001EBE  5C24               	subwf	readKey@col^0,w,c
  2353  001EC0  A0D8               	btfss	status,0,c
  2354  001EC2  EF65  F00F         	goto	u3211
  2355  001EC6  EF67  F00F         	goto	u3210
  2356  001ECA                     u3211:
  2357  001ECA  EF69  F00F         	goto	l3521
  2358  001ECE                     u3210:
  2359  001ECE  EF33  F010         	goto	l3561
  2360  001ED2                     l3521:
  2361                           
  2362                           ;main.c: 528:         LATB = ~(1 << col);
  2363  001ED2  C024  F012         	movff	readKey@col,??_readKey
  2364  001ED6  0E01               	movlw	1
  2365  001ED8  6E13               	movwf	(??_readKey+1)^0,c
  2366  001EDA  2A12               	incf	??_readKey^0,f,c
  2367  001EDC  EF72  F00F         	goto	u3224
  2368  001EE0                     u3225:
  2369  001EE0  90D8               	bcf	status,0,c
  2370  001EE2  3613               	rlcf	(??_readKey+1)^0,f,c
  2371  001EE4                     u3224:
  2372  001EE4  2E12               	decfsz	??_readKey^0,f,c
  2373  001EE6  EF70  F00F         	goto	u3225
  2374  001EEA  5013               	movf	(??_readKey+1)^0,w,c
  2375  001EEC  0AFF               	xorlw	255
  2376  001EEE  6E8A               	movwf	138,c	;volatile
  2377  001EF0                     
  2378                           ;main.c: 529:         _delay((unsigned long)((5)*(20000000/4000.0)));
  2379  001EF0  0E21               	movlw	33
  2380  001EF2  6E12               	movwf	??_readKey^0,c
  2381  001EF4  0E76               	movlw	118
  2382  001EF6                     u5587:
  2383  001EF6  2EE8               	decfsz	wreg,f,c
  2384  001EF8  D7FE               	bra	u5587
  2385  001EFA  2E12               	decfsz	??_readKey^0,f,c
  2386  001EFC  D7FC               	bra	u5587
  2387  001EFE  D000               	nop2	
  2388  001F00                     
  2389                           ;main.c: 531:         for (row = 0; row < 4; row++) {
  2390  001F00  0E00               	movlw	0
  2391  001F02  6E27               	movwf	(readKey@row+1)^0,c
  2392  001F04  0E00               	movlw	0
  2393  001F06  6E26               	movwf	readKey@row^0,c
  2394  001F08                     l3531:
  2395                           
  2396                           ;main.c: 532:             if (!(PORTB & (1 << (row + 4)))) {
  2397  001F08  C026  F012         	movff	readKey@row,??_readKey
  2398  001F0C  0E04               	movlw	4
  2399  001F0E  2612               	addwf	??_readKey^0,f,c
  2400  001F10  0E01               	movlw	1
  2401  001F12  6E13               	movwf	(??_readKey+1)^0,c
  2402  001F14  2A12               	incf	??_readKey^0,f,c
  2403  001F16  EF8F  F00F         	goto	u3234
  2404  001F1A                     u3235:
  2405  001F1A  90D8               	bcf	status,0,c
  2406  001F1C  3613               	rlcf	(??_readKey+1)^0,f,c
  2407  001F1E                     u3234:
  2408  001F1E  2E12               	decfsz	??_readKey^0,f,c
  2409  001F20  EF8D  F00F         	goto	u3235
  2410  001F24  5013               	movf	(??_readKey+1)^0,w,c
  2411  001F26  1481               	andwf	129,w,c	;volatile
  2412  001F28  0900               	iorlw	0
  2413  001F2A  A4D8               	btfss	status,2,c
  2414  001F2C  EF9A  F00F         	goto	u3241
  2415  001F30  EF9C  F00F         	goto	u3240
  2416  001F34                     u3241:
  2417  001F34  EF1F  F010         	goto	l3553
  2418  001F38                     u3240:
  2419  001F38                     
  2420                           ;main.c: 534:                 char pressedKey = keymap[row][InvCol[col]];
  2421  001F38  90D8               	bcf	status,0,c
  2422  001F3A  3424               	rlcf	readKey@col^0,w,c
  2423  001F3C  6ED9               	movwf	fsr2l,c
  2424  001F3E  3425               	rlcf	(readKey@col+1)^0,w,c
  2425  001F40  6EDA               	movwf	fsr2h,c
  2426  001F42  0E18               	movlw	low readKey@InvCol
  2427  001F44  26D9               	addwf	fsr2l,f,c
  2428  001F46  0E00               	movlw	high readKey@InvCol
  2429  001F48  22DA               	addwfc	fsr2h,f,c
  2430  001F4A  CFDE F012          	movff	postinc2,??_readKey
  2431  001F4E  CFDD F013          	movff	postdec2,??_readKey+1
  2432  001F52  C026  F014         	movff	readKey@row,??_readKey+2
  2433  001F56  C027  F015         	movff	readKey@row+1,??_readKey+3
  2434  001F5A  90D8               	bcf	status,0,c
  2435  001F5C  3614               	rlcf	(??_readKey+2)^0,f,c
  2436  001F5E  3615               	rlcf	(??_readKey+3)^0,f,c
  2437  001F60  90D8               	bcf	status,0,c
  2438  001F62  3614               	rlcf	(??_readKey+2)^0,f,c
  2439  001F64  3615               	rlcf	(??_readKey+3)^0,f,c
  2440  001F66  0EF7               	movlw	low _keymap
  2441  001F68  6E16               	movwf	(??_readKey+4)^0,c
  2442  001F6A  0E7E               	movlw	high _keymap
  2443  001F6C  6E17               	movwf	(??_readKey+5)^0,c
  2444  001F6E  5014               	movf	(??_readKey+2)^0,w,c
  2445  001F70  2616               	addwf	(??_readKey+4)^0,f,c
  2446  001F72  5015               	movf	(??_readKey+3)^0,w,c
  2447  001F74  2217               	addwfc	(??_readKey+5)^0,f,c
  2448  001F76  5012               	movf	??_readKey^0,w,c
  2449  001F78  2616               	addwf	(??_readKey+4)^0,f,c
  2450  001F7A  5013               	movf	(??_readKey+1)^0,w,c
  2451  001F7C  2217               	addwfc	(??_readKey+5)^0,f,c
  2452  001F7E  C016  FFF6         	movff	??_readKey+4,tblptrl
  2453  001F82  C017  FFF7         	movff	??_readKey+5,tblptrh
  2454  001F86                     	if	0	;tblptru may be non-zero
  2455  001F86                     	endif
  2456  001F86                     	if	0	;tblptru may be non-zero
  2457  001F86                     	endif
  2458  001F86  0008               	tblrd		*
  2459  001F88  CFF5 F028          	movff	tablat,readKey@pressedKey
  2460  001F8C                     
  2461                           ;main.c: 536:                 if (pressedKey != lastStableKey) {
  2462  001F8C  5054               	movf	readKey@lastStableKey^0,w,c
  2463  001F8E  1828               	xorwf	readKey@pressedKey^0,w,c
  2464  001F90  B4D8               	btfsc	status,2,c
  2465  001F92  EFCD  F00F         	goto	u3251
  2466  001F96  EFCF  F00F         	goto	u3250
  2467  001F9A                     u3251:
  2468  001F9A  EFD9  F00F         	goto	l3539
  2469  001F9E                     u3250:
  2470  001F9E                     
  2471                           ;main.c: 537:                     lastDebounceTime = currentTime;
  2472  001F9E  C020  F0C7         	movff	readKey@currentTime,readKey@lastDebounceTime
  2473  001FA2  C021  F0C8         	movff	readKey@currentTime+1,readKey@lastDebounceTime+1
  2474  001FA6  C022  F0C9         	movff	readKey@currentTime+2,readKey@lastDebounceTime+2
  2475  001FAA  C023  F0CA         	movff	readKey@currentTime+3,readKey@lastDebounceTime+3
  2476                           
  2477                           ;main.c: 538:                     lastStableKey = pressedKey;
  2478  001FAE  C028  F054         	movff	readKey@pressedKey,readKey@lastStableKey
  2479  001FB2                     l3539:
  2480                           
  2481                           ;main.c: 541:                 if ((currentTime - lastDebounceTime) > 50) {
  2482  001FB2  0100               	movlb	0	; () banked
  2483  001FB4  51C7               	movf	readKey@lastDebounceTime& (0+255),w,b
  2484  001FB6  5C20               	subwf	readKey@currentTime^0,w,c
  2485  001FB8  6E12               	movwf	??_readKey^0,c
  2486  001FBA  51C8               	movf	(readKey@lastDebounceTime+1)& (0+255),w,b
  2487  001FBC  5821               	subwfb	(readKey@currentTime+1)^0,w,c
  2488  001FBE  6E13               	movwf	(??_readKey+1)^0,c
  2489  001FC0  51C9               	movf	(readKey@lastDebounceTime+2)& (0+255),w,b
  2490  001FC2  5822               	subwfb	(readKey@currentTime+2)^0,w,c
  2491  001FC4  6E14               	movwf	(??_readKey+2)^0,c
  2492  001FC6  51CA               	movf	(readKey@lastDebounceTime+3)& (0+255),w,b
  2493  001FC8  5823               	subwfb	(readKey@currentTime+3)^0,w,c
  2494  001FCA  6E15               	movwf	(??_readKey+3)^0,c
  2495  001FCC  5015               	movf	(??_readKey+3)^0,w,c
  2496  001FCE  1014               	iorwf	(??_readKey+2)^0,w,c
  2497  001FD0  1013               	iorwf	(??_readKey+1)^0,w,c
  2498  001FD2  E109               	bnz	u3260
  2499  001FD4  0E33               	movlw	51
  2500  001FD6  5C12               	subwf	??_readKey^0,w,c
  2501  001FD8  A0D8               	btfss	status,0,c
  2502  001FDA  EFF1  F00F         	goto	u3261
  2503  001FDE  EFF3  F00F         	goto	u3260
  2504  001FE2                     u3261:
  2505  001FE2  EF1C  F010         	goto	l3549
  2506  001FE6                     u3260:
  2507  001FE6                     
  2508                           ; BSR set to: 0
  2509                           ;main.c: 542:                     if ((currentTime - lastKeyPressTime) > 300) {
  2510  001FE6  51C3               	movf	readKey@lastKeyPressTime& (0+255),w,b
  2511  001FE8  5C20               	subwf	readKey@currentTime^0,w,c
  2512  001FEA  6E12               	movwf	??_readKey^0,c
  2513  001FEC  51C4               	movf	(readKey@lastKeyPressTime+1)& (0+255),w,b
  2514  001FEE  5821               	subwfb	(readKey@currentTime+1)^0,w,c
  2515  001FF0  6E13               	movwf	(??_readKey+1)^0,c
  2516  001FF2  51C5               	movf	(readKey@lastKeyPressTime+2)& (0+255),w,b
  2517  001FF4  5822               	subwfb	(readKey@currentTime+2)^0,w,c
  2518  001FF6  6E14               	movwf	(??_readKey+2)^0,c
  2519  001FF8  51C6               	movf	(readKey@lastKeyPressTime+3)& (0+255),w,b
  2520  001FFA  5823               	subwfb	(readKey@currentTime+3)^0,w,c
  2521  001FFC  6E15               	movwf	(??_readKey+3)^0,c
  2522  001FFE  5015               	movf	(??_readKey+3)^0,w,c
  2523  002000  1014               	iorwf	(??_readKey+2)^0,w,c
  2524  002002  E10B               	bnz	u3270
  2525  002004  0E2D               	movlw	45
  2526  002006  5C12               	subwf	??_readKey^0,w,c
  2527  002008  0E01               	movlw	1
  2528  00200A  5813               	subwfb	(??_readKey+1)^0,w,c
  2529  00200C  A0D8               	btfss	status,0,c
  2530  00200E  EF0B  F010         	goto	u3271
  2531  002012  EF0D  F010         	goto	u3270
  2532  002016                     u3271:
  2533  002016  EF1C  F010         	goto	l3549
  2534  00201A                     u3270:
  2535  00201A                     
  2536                           ; BSR set to: 0
  2537                           ;main.c: 543:                         lastKeyPressTime = currentTime;
  2538  00201A  C020  F0C3         	movff	readKey@currentTime,readKey@lastKeyPressTime
  2539  00201E  C021  F0C4         	movff	readKey@currentTime+1,readKey@lastKeyPressTime+1
  2540  002022  C022  F0C5         	movff	readKey@currentTime+2,readKey@lastKeyPressTime+2
  2541  002026  C023  F0C6         	movff	readKey@currentTime+3,readKey@lastKeyPressTime+3
  2542                           
  2543                           ;main.c: 544:                         keyState.currentKey = pressedKey;
  2544  00202A  C028  F0B9         	movff	readKey@pressedKey,_keyState+1
  2545                           
  2546                           ;main.c: 545:                         keyState.lastKey = pressedKey;
  2547  00202E  C028  F0B8         	movff	readKey@pressedKey,_keyState
  2548  002032                     
  2549                           ; BSR set to: 0
  2550                           ;main.c: 546:                         return pressedKey;
  2551  002032  5028               	movf	readKey@pressedKey^0,w,c
  2552  002034  EF3A  F010         	goto	l225
  2553  002038                     l3549:
  2554                           
  2555                           ; BSR set to: 0
  2556                           ;main.c: 549:                 return 0;
  2557  002038  0E00               	movlw	0
  2558  00203A  EF3A  F010         	goto	l225
  2559  00203E                     l3553:
  2560                           
  2561                           ;main.c: 551:         }
  2562  00203E  4A26               	infsnz	readKey@row^0,f,c
  2563  002040  2A27               	incf	(readKey@row+1)^0,f,c
  2564  002042  BE27               	btfsc	(readKey@row+1)^0,7,c
  2565  002044  EF2D  F010         	goto	u3281
  2566  002048  5027               	movf	(readKey@row+1)^0,w,c
  2567  00204A  E109               	bnz	u3280
  2568  00204C  0E04               	movlw	4
  2569  00204E  5C26               	subwf	readKey@row^0,w,c
  2570  002050  A0D8               	btfss	status,0,c
  2571  002052  EF2D  F010         	goto	u3281
  2572  002056  EF2F  F010         	goto	u3280
  2573  00205A                     u3281:
  2574  00205A  EF84  F00F         	goto	l3531
  2575  00205E                     u3280:
  2576  00205E                     
  2577                           ;main.c: 552:     }
  2578  00205E  4A24               	infsnz	readKey@col^0,f,c
  2579  002060  2A25               	incf	(readKey@col+1)^0,f,c
  2580  002062  EF59  F00F         	goto	l3517
  2581  002066                     l3561:
  2582                           
  2583                           ;main.c: 554:     keyState.lastKey = 0;
  2584  002066  0E00               	movlw	0
  2585  002068  0100               	movlb	0	; () banked
  2586  00206A  6FB8               	movwf	_keyState& (0+255),b
  2587                           
  2588                           ;main.c: 555:     lastStableKey = 0;
  2589  00206C  0E00               	movlw	0
  2590  00206E  6E54               	movwf	readKey@lastStableKey^0,c
  2591  002070  EF1C  F010         	goto	l3549
  2592  002074                     l225:
  2593                           
  2594                           ; BSR set to: 0
  2595  002074  0012               	return		;funcret
  2596  002076                     __end_of_readKey:
  2597                           	callstack 0
  2598                           
  2599 ;; *************** function _displayMenu *****************
  2600 ;; Defined at:
  2601 ;;		line 277 in file "main.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;  menuIndex       2   22[BANK0 ] int 
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;  valueStr       10   28[BANK0 ] unsigned char [10]
  2606 ;;  currentGas      4   50[BANK0 ] float 
  2607 ;;  currentHumid    4   46[BANK0 ] float 
  2608 ;;  currentTemp     4   42[BANK0 ] float 
  2609 ;;  currentTime     4   38[BANK0 ] unsigned long 
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  1    wreg      void 
  2612 ;; Registers used:
  2613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2619 ;;      Params:         0       2       0       0       0       0       0       0       0
  2620 ;;      Locals:         0      26       0       0       0       0       0       0       0
  2621 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2622 ;;      Totals:         0      32       0       0       0       0       0       0       0
  2623 ;;Total ram usage:       32 bytes
  2624 ;; Hardware stack levels used: 1
  2625 ;; Hardware stack levels required when called: 5
  2626 ;; This function calls:
  2627 ;;		_WriteCmdXLCD
  2628 ;;		___flge
  2629 ;;		___xxtofl
  2630 ;;		_displayStuff
  2631 ;;		_floatToString
  2632 ;;		_gasRead
  2633 ;;		_humidade
  2634 ;;		_itoa
  2635 ;;		_millis
  2636 ;;		_tempRead
  2637 ;; This function is called by:
  2638 ;;		_main
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           	psect	text5
  2643  000012                     __ptext5:
  2644                           	callstack 0
  2645  000012                     _displayMenu:
  2646                           	callstack 25
  2647  000012                     
  2648                           ;main.c: 278:     char valueStr[10];;main.c: 279:     static unsigned long lastUpdateTim
      +                          e = 0;;main.c: 280:     unsigned long currentTime = millis();
  2649  000012  ECAE  F017         	call	_millis	;wreg free
  2650  000016  C00A  F086         	movff	?_millis,displayMenu@currentTime
  2651  00001A  C00B  F087         	movff	?_millis+1,displayMenu@currentTime+1
  2652  00001E  C00C  F088         	movff	?_millis+2,displayMenu@currentTime+2
  2653  000022  C00D  F089         	movff	?_millis+3,displayMenu@currentTime+3
  2654  000026                     
  2655                           ;main.c: 281:     float currentTemp, currentHumid, currentGas;;main.c: 284:     if (curr
      +                          entTime - lastUpdateTime < 500) {
  2656  000026  0100               	movlb	0	; () banked
  2657  000028  51CB               	movf	displayMenu@lastUpdateTime& (0+255),w,b
  2658  00002A  5D86               	subwf	displayMenu@currentTime& (0+255),w,b
  2659  00002C  6F78               	movwf	??_displayMenu& (0+255),b
  2660  00002E  51CC               	movf	(displayMenu@lastUpdateTime+1)& (0+255),w,b
  2661  000030  5987               	subwfb	(displayMenu@currentTime+1)& (0+255),w,b
  2662  000032  6F79               	movwf	(??_displayMenu+1)& (0+255),b
  2663  000034  51CD               	movf	(displayMenu@lastUpdateTime+2)& (0+255),w,b
  2664  000036  5988               	subwfb	(displayMenu@currentTime+2)& (0+255),w,b
  2665  000038  6F7A               	movwf	(??_displayMenu+2)& (0+255),b
  2666  00003A  51CE               	movf	(displayMenu@lastUpdateTime+3)& (0+255),w,b
  2667  00003C  5989               	subwfb	(displayMenu@currentTime+3)& (0+255),w,b
  2668  00003E  6F7B               	movwf	(??_displayMenu+3)& (0+255),b
  2669  000040  517B               	movf	(??_displayMenu+3)& (0+255),w,b
  2670  000042  117A               	iorwf	(??_displayMenu+2)& (0+255),w,b
  2671  000044  E109               	bnz	u5091
  2672  000046  0EF4               	movlw	244
  2673  000048  5D78               	subwf	??_displayMenu& (0+255),w,b
  2674  00004A  0E01               	movlw	1
  2675  00004C  5979               	subwfb	(??_displayMenu+1)& (0+255),w,b
  2676  00004E  B0D8               	btfsc	status,0,c
  2677  000050  EF2C  F000         	goto	u5091
  2678  000054  EF2E  F000         	goto	u5090
  2679  000058                     u5091:
  2680  000058  EF32  F000         	goto	l135
  2681  00005C                     u5090:
  2682  00005C  EF63  F004         	goto	l136
  2683  000060                     l5041:
  2684                           
  2685                           ;main.c: 285:         return;
  2686  000060  EF63  F004         	goto	l136
  2687  000064                     l135:
  2688                           
  2689                           ; BSR set to: 0
  2690                           ;main.c: 287:     lastUpdateTime = currentTime;
  2691  000064  C086  F0CB         	movff	displayMenu@currentTime,displayMenu@lastUpdateTime
  2692  000068  C087  F0CC         	movff	displayMenu@currentTime+1,displayMenu@lastUpdateTime+1
  2693  00006C  C088  F0CD         	movff	displayMenu@currentTime+2,displayMenu@lastUpdateTime+2
  2694  000070  C089  F0CE         	movff	displayMenu@currentTime+3,displayMenu@lastUpdateTime+3
  2695  000074                     
  2696                           ; BSR set to: 0
  2697                           ;main.c: 289:     WriteCmdXLCD(0x01);
  2698  000074  0E01               	movlw	1
  2699  000076  EC73  F017         	call	_WriteCmdXLCD
  2700  00007A                     
  2701                           ;main.c: 290:     _delay((unsigned long)((2)*(20000000/4000.0)));
  2702  00007A  0E0D               	movlw	13
  2703  00007C  0100               	movlb	0	; () banked
  2704  00007E  6F78               	movwf	??_displayMenu& (0+255),b
  2705  000080  0EFB               	movlw	251
  2706  000082                     u5597:
  2707  000082  2EE8               	decfsz	wreg,f,c
  2708  000084  D7FE               	bra	u5597
  2709  000086  2F78               	decfsz	??_displayMenu& (0+255),f,b
  2710  000088  D7FC               	bra	u5597
  2711  00008A  D000               	nop2	
  2712  00008C                     
  2713                           ;main.c: 293:     currentTemp = tempRead();
  2714  00008C  EC25  F014         	call	_tempRead	;wreg free
  2715  000090  C060  F08A         	movff	?_tempRead,displayMenu@currentTemp
  2716  000094  C061  F08B         	movff	?_tempRead+1,displayMenu@currentTemp+1
  2717  000098  C062  F08C         	movff	?_tempRead+2,displayMenu@currentTemp+2
  2718  00009C  C063  F08D         	movff	?_tempRead+3,displayMenu@currentTemp+3
  2719  0000A0                     
  2720                           ;main.c: 294:     currentHumid = humidade();
  2721  0000A0  EC84  F014         	call	_humidade	;wreg free
  2722  0000A4  C060  F08E         	movff	?_humidade,displayMenu@currentHumid
  2723  0000A8  C061  F08F         	movff	?_humidade+1,displayMenu@currentHumid+1
  2724  0000AC  C062  F090         	movff	?_humidade+2,displayMenu@currentHumid+2
  2725  0000B0  C063  F091         	movff	?_humidade+3,displayMenu@currentHumid+3
  2726  0000B4                     
  2727                           ;main.c: 295:     currentGas = gasRead();
  2728  0000B4  ECE3  F014         	call	_gasRead	;wreg free
  2729  0000B8  C060  F092         	movff	?_gasRead,displayMenu@currentGas
  2730  0000BC  C061  F093         	movff	?_gasRead+1,displayMenu@currentGas+1
  2731  0000C0  C062  F094         	movff	?_gasRead+2,displayMenu@currentGas+2
  2732  0000C4  C063  F095         	movff	?_gasRead+3,displayMenu@currentGas+3
  2733                           
  2734                           ;main.c: 298:     switch (menuIndex) {
  2735  0000C8  EF40  F004         	goto	l5163
  2736  0000CC                     l5053:
  2737                           
  2738                           ; BSR set to: 0
  2739                           ;main.c: 300:             displayStuff(0, 0, "Temp:");
  2740  0000CC  0E00               	movlw	0
  2741  0000CE  6E0C               	movwf	(displayStuff@row+1)^0,c
  2742  0000D0  0E00               	movlw	0
  2743  0000D2  6E0B               	movwf	displayStuff@row^0,c
  2744  0000D4  0E00               	movlw	0
  2745  0000D6  6E0E               	movwf	(displayStuff@column+1)^0,c
  2746  0000D8  0E00               	movlw	0
  2747  0000DA  6E0D               	movwf	displayStuff@column^0,c
  2748  0000DC  0E8F               	movlw	low (STR_1+7)
  2749  0000DE  6E0F               	movwf	displayStuff@stuff^0,c
  2750  0000E0  0E7F               	movlw	high (STR_1+7)
  2751  0000E2  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2752  0000E4  EC9A  F015         	call	_displayStuff	;wreg free
  2753  0000E8                     
  2754                           ;main.c: 301:             floatToString(currentTemp, valueStr, 1);
  2755  0000E8  C08A  F031         	movff	displayMenu@currentTemp,floatToString@value
  2756  0000EC  C08B  F032         	movff	displayMenu@currentTemp+1,floatToString@value+1
  2757  0000F0  C08C  F033         	movff	displayMenu@currentTemp+2,floatToString@value+2
  2758  0000F4  C08D  F034         	movff	displayMenu@currentTemp+3,floatToString@value+3
  2759  0000F8  0E7C               	movlw	low displayMenu@valueStr
  2760  0000FA  6E35               	movwf	floatToString@buffer^0,c
  2761  0000FC  0E00               	movlw	high displayMenu@valueStr
  2762  0000FE  6E36               	movwf	(floatToString@buffer+1)^0,c
  2763  000100  0E00               	movlw	0
  2764  000102  6E38               	movwf	(floatToString@precision+1)^0,c
  2765  000104  0E01               	movlw	1
  2766  000106  6E37               	movwf	floatToString@precision^0,c
  2767  000108  ECE7  F00D         	call	_floatToString	;wreg free
  2768  00010C                     
  2769                           ;main.c: 302:             displayStuff(0, 6, valueStr);
  2770  00010C  0E00               	movlw	0
  2771  00010E  6E0C               	movwf	(displayStuff@row+1)^0,c
  2772  000110  0E00               	movlw	0
  2773  000112  6E0B               	movwf	displayStuff@row^0,c
  2774  000114  0E00               	movlw	0
  2775  000116  6E0E               	movwf	(displayStuff@column+1)^0,c
  2776  000118  0E06               	movlw	6
  2777  00011A  6E0D               	movwf	displayStuff@column^0,c
  2778  00011C  0E7C               	movlw	low displayMenu@valueStr
  2779  00011E  6E0F               	movwf	displayStuff@stuff^0,c
  2780  000120  0E00               	movlw	high displayMenu@valueStr
  2781  000122  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2782  000124  EC9A  F015         	call	_displayStuff	;wreg free
  2783  000128                     
  2784                           ;main.c: 303:             displayStuff(0, 11, "C");
  2785  000128  0E00               	movlw	0
  2786  00012A  6E0C               	movwf	(displayStuff@row+1)^0,c
  2787  00012C  0E00               	movlw	0
  2788  00012E  6E0B               	movwf	displayStuff@row^0,c
  2789  000130  0E00               	movlw	0
  2790  000132  6E0E               	movwf	(displayStuff@column+1)^0,c
  2791  000134  0E0B               	movlw	11
  2792  000136  6E0D               	movwf	displayStuff@column^0,c
  2793  000138  0EFC               	movlw	low STR_9
  2794  00013A  6E0F               	movwf	displayStuff@stuff^0,c
  2795  00013C  0E7F               	movlw	high STR_9
  2796  00013E  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2797  000140  EC9A  F015         	call	_displayStuff	;wreg free
  2798  000144                     
  2799                           ;main.c: 304:             displayStuff(1, 0, "Lim:");
  2800  000144  0E00               	movlw	0
  2801  000146  6E0C               	movwf	(displayStuff@row+1)^0,c
  2802  000148  0E01               	movlw	1
  2803  00014A  6E0B               	movwf	displayStuff@row^0,c
  2804  00014C  0E00               	movlw	0
  2805  00014E  6E0E               	movwf	(displayStuff@column+1)^0,c
  2806  000150  0E00               	movlw	0
  2807  000152  6E0D               	movwf	displayStuff@column^0,c
  2808  000154  0EE9               	movlw	low STR_10
  2809  000156  6E0F               	movwf	displayStuff@stuff^0,c
  2810  000158  0E7F               	movlw	high STR_10
  2811  00015A  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2812  00015C  EC9A  F015         	call	_displayStuff	;wreg free
  2813  000160                     
  2814                           ;main.c: 305:             itoa(Tlim, valueStr);
  2815  000160  C0D6  F012         	movff	_Tlim,itoa@value
  2816  000164  C0D7  F013         	movff	_Tlim+1,itoa@value+1
  2817  000168  0E7C               	movlw	low displayMenu@valueStr
  2818  00016A  6E14               	movwf	itoa@ptr^0,c
  2819  00016C  0E00               	movlw	high displayMenu@valueStr
  2820  00016E  6E15               	movwf	(itoa@ptr+1)^0,c
  2821  000170  EC15  F011         	call	_itoa	;wreg free
  2822  000174                     l5065:
  2823                           
  2824                           ;main.c: 306:             displayStuff(1, 4, valueStr);
  2825  000174  0E00               	movlw	0
  2826  000176  6E0C               	movwf	(displayStuff@row+1)^0,c
  2827  000178  0E01               	movlw	1
  2828  00017A  6E0B               	movwf	displayStuff@row^0,c
  2829  00017C  0E00               	movlw	0
  2830  00017E  6E0E               	movwf	(displayStuff@column+1)^0,c
  2831  000180  0E04               	movlw	4
  2832  000182  6E0D               	movwf	displayStuff@column^0,c
  2833  000184  0E7C               	movlw	low displayMenu@valueStr
  2834  000186  6E0F               	movwf	displayStuff@stuff^0,c
  2835  000188  0E00               	movlw	high displayMenu@valueStr
  2836  00018A  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2837  00018C  EC9A  F015         	call	_displayStuff	;wreg free
  2838                           
  2839                           ;main.c: 307:             break;
  2840  000190  EF63  F004         	goto	l136
  2841  000194                     l5067:
  2842                           
  2843                           ; BSR set to: 0
  2844                           ;main.c: 310:             displayStuff(0, 0, "Humid:");
  2845  000194  0E00               	movlw	0
  2846  000196  6E0C               	movwf	(displayStuff@row+1)^0,c
  2847  000198  0E00               	movlw	0
  2848  00019A  6E0B               	movwf	displayStuff@row^0,c
  2849  00019C  0E00               	movlw	0
  2850  00019E  6E0E               	movwf	(displayStuff@column+1)^0,c
  2851  0001A0  0E00               	movlw	0
  2852  0001A2  6E0D               	movwf	displayStuff@column^0,c
  2853  0001A4  0EE2               	movlw	low STR_11
  2854  0001A6  6E0F               	movwf	displayStuff@stuff^0,c
  2855  0001A8  0E7F               	movlw	high STR_11
  2856  0001AA  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2857  0001AC  EC9A  F015         	call	_displayStuff	;wreg free
  2858  0001B0                     
  2859                           ;main.c: 311:             floatToString(currentHumid, valueStr, 1);
  2860  0001B0  C08E  F031         	movff	displayMenu@currentHumid,floatToString@value
  2861  0001B4  C08F  F032         	movff	displayMenu@currentHumid+1,floatToString@value+1
  2862  0001B8  C090  F033         	movff	displayMenu@currentHumid+2,floatToString@value+2
  2863  0001BC  C091  F034         	movff	displayMenu@currentHumid+3,floatToString@value+3
  2864  0001C0  0E7C               	movlw	low displayMenu@valueStr
  2865  0001C2  6E35               	movwf	floatToString@buffer^0,c
  2866  0001C4  0E00               	movlw	high displayMenu@valueStr
  2867  0001C6  6E36               	movwf	(floatToString@buffer+1)^0,c
  2868  0001C8  0E00               	movlw	0
  2869  0001CA  6E38               	movwf	(floatToString@precision+1)^0,c
  2870  0001CC  0E01               	movlw	1
  2871  0001CE  6E37               	movwf	floatToString@precision^0,c
  2872  0001D0  ECE7  F00D         	call	_floatToString	;wreg free
  2873  0001D4                     
  2874                           ;main.c: 312:             displayStuff(0, 7, valueStr);
  2875  0001D4  0E00               	movlw	0
  2876  0001D6  6E0C               	movwf	(displayStuff@row+1)^0,c
  2877  0001D8  0E00               	movlw	0
  2878  0001DA  6E0B               	movwf	displayStuff@row^0,c
  2879  0001DC  0E00               	movlw	0
  2880  0001DE  6E0E               	movwf	(displayStuff@column+1)^0,c
  2881  0001E0  0E07               	movlw	7
  2882  0001E2  6E0D               	movwf	displayStuff@column^0,c
  2883  0001E4  0E7C               	movlw	low displayMenu@valueStr
  2884  0001E6  6E0F               	movwf	displayStuff@stuff^0,c
  2885  0001E8  0E00               	movlw	high displayMenu@valueStr
  2886  0001EA  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2887  0001EC  EC9A  F015         	call	_displayStuff	;wreg free
  2888  0001F0                     
  2889                           ;main.c: 313:             displayStuff(0, 12, "%");
  2890  0001F0  0E00               	movlw	0
  2891  0001F2  6E0C               	movwf	(displayStuff@row+1)^0,c
  2892  0001F4  0E00               	movlw	0
  2893  0001F6  6E0B               	movwf	displayStuff@row^0,c
  2894  0001F8  0E00               	movlw	0
  2895  0001FA  6E0E               	movwf	(displayStuff@column+1)^0,c
  2896  0001FC  0E0C               	movlw	12
  2897  0001FE  6E0D               	movwf	displayStuff@column^0,c
  2898  000200  0EFA               	movlw	low STR_12
  2899  000202  6E0F               	movwf	displayStuff@stuff^0,c
  2900  000204  0E7F               	movlw	high STR_12
  2901  000206  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2902  000208  EC9A  F015         	call	_displayStuff	;wreg free
  2903  00020C                     
  2904                           ;main.c: 314:             displayStuff(1, 0, "Lim:");
  2905  00020C  0E00               	movlw	0
  2906  00020E  6E0C               	movwf	(displayStuff@row+1)^0,c
  2907  000210  0E01               	movlw	1
  2908  000212  6E0B               	movwf	displayStuff@row^0,c
  2909  000214  0E00               	movlw	0
  2910  000216  6E0E               	movwf	(displayStuff@column+1)^0,c
  2911  000218  0E00               	movlw	0
  2912  00021A  6E0D               	movwf	displayStuff@column^0,c
  2913  00021C  0EE9               	movlw	low STR_10
  2914  00021E  6E0F               	movwf	displayStuff@stuff^0,c
  2915  000220  0E7F               	movlw	high STR_10
  2916  000222  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2917  000224  EC9A  F015         	call	_displayStuff	;wreg free
  2918  000228                     
  2919                           ;main.c: 315:             itoa(Hlim, valueStr);
  2920  000228  C0D4  F012         	movff	_Hlim,itoa@value
  2921  00022C  C0D5  F013         	movff	_Hlim+1,itoa@value+1
  2922  000230  0E7C               	movlw	low displayMenu@valueStr
  2923  000232  6E14               	movwf	itoa@ptr^0,c
  2924  000234  0E00               	movlw	high displayMenu@valueStr
  2925  000236  6E15               	movwf	(itoa@ptr+1)^0,c
  2926  000238  EC15  F011         	call	_itoa	;wreg free
  2927  00023C  EFBA  F000         	goto	l5065
  2928  000240                     l5081:
  2929                           
  2930                           ; BSR set to: 0
  2931                           ;main.c: 320:             displayStuff(0, 0, "Gas:");
  2932  000240  0E00               	movlw	0
  2933  000242  6E0C               	movwf	(displayStuff@row+1)^0,c
  2934  000244  0E00               	movlw	0
  2935  000246  6E0B               	movwf	displayStuff@row^0,c
  2936  000248  0E00               	movlw	0
  2937  00024A  6E0E               	movwf	(displayStuff@column+1)^0,c
  2938  00024C  0E00               	movlw	0
  2939  00024E  6E0D               	movwf	displayStuff@column^0,c
  2940  000250  0EEE               	movlw	low STR_14
  2941  000252  6E0F               	movwf	displayStuff@stuff^0,c
  2942  000254  0E7F               	movlw	high STR_14
  2943  000256  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2944  000258  EC9A  F015         	call	_displayStuff	;wreg free
  2945  00025C                     
  2946                           ;main.c: 321:             floatToString(currentGas, valueStr, 1);
  2947  00025C  C092  F031         	movff	displayMenu@currentGas,floatToString@value
  2948  000260  C093  F032         	movff	displayMenu@currentGas+1,floatToString@value+1
  2949  000264  C094  F033         	movff	displayMenu@currentGas+2,floatToString@value+2
  2950  000268  C095  F034         	movff	displayMenu@currentGas+3,floatToString@value+3
  2951  00026C  0E7C               	movlw	low displayMenu@valueStr
  2952  00026E  6E35               	movwf	floatToString@buffer^0,c
  2953  000270  0E00               	movlw	high displayMenu@valueStr
  2954  000272  6E36               	movwf	(floatToString@buffer+1)^0,c
  2955  000274  0E00               	movlw	0
  2956  000276  6E38               	movwf	(floatToString@precision+1)^0,c
  2957  000278  0E01               	movlw	1
  2958  00027A  6E37               	movwf	floatToString@precision^0,c
  2959  00027C  ECE7  F00D         	call	_floatToString	;wreg free
  2960  000280                     
  2961                           ;main.c: 322:             displayStuff(0, 5, valueStr);
  2962  000280  0E00               	movlw	0
  2963  000282  6E0C               	movwf	(displayStuff@row+1)^0,c
  2964  000284  0E00               	movlw	0
  2965  000286  6E0B               	movwf	displayStuff@row^0,c
  2966  000288  0E00               	movlw	0
  2967  00028A  6E0E               	movwf	(displayStuff@column+1)^0,c
  2968  00028C  0E05               	movlw	5
  2969  00028E  6E0D               	movwf	displayStuff@column^0,c
  2970  000290  0E7C               	movlw	low displayMenu@valueStr
  2971  000292  6E0F               	movwf	displayStuff@stuff^0,c
  2972  000294  0E00               	movlw	high displayMenu@valueStr
  2973  000296  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2974  000298  EC9A  F015         	call	_displayStuff	;wreg free
  2975  00029C                     
  2976                           ;main.c: 323:             displayStuff(0, 11, "ppm");
  2977  00029C  0E00               	movlw	0
  2978  00029E  6E0C               	movwf	(displayStuff@row+1)^0,c
  2979  0002A0  0E00               	movlw	0
  2980  0002A2  6E0B               	movwf	displayStuff@row^0,c
  2981  0002A4  0E00               	movlw	0
  2982  0002A6  6E0E               	movwf	(displayStuff@column+1)^0,c
  2983  0002A8  0E0B               	movlw	11
  2984  0002AA  6E0D               	movwf	displayStuff@column^0,c
  2985  0002AC  0EF3               	movlw	low STR_15
  2986  0002AE  6E0F               	movwf	displayStuff@stuff^0,c
  2987  0002B0  0E7F               	movlw	high STR_15
  2988  0002B2  6E10               	movwf	(displayStuff@stuff+1)^0,c
  2989  0002B4  EC9A  F015         	call	_displayStuff	;wreg free
  2990  0002B8                     
  2991                           ;main.c: 324:             displayStuff(1, 0, "Lim:");
  2992  0002B8  0E00               	movlw	0
  2993  0002BA  6E0C               	movwf	(displayStuff@row+1)^0,c
  2994  0002BC  0E01               	movlw	1
  2995  0002BE  6E0B               	movwf	displayStuff@row^0,c
  2996  0002C0  0E00               	movlw	0
  2997  0002C2  6E0E               	movwf	(displayStuff@column+1)^0,c
  2998  0002C4  0E00               	movlw	0
  2999  0002C6  6E0D               	movwf	displayStuff@column^0,c
  3000  0002C8  0EE9               	movlw	low STR_10
  3001  0002CA  6E0F               	movwf	displayStuff@stuff^0,c
  3002  0002CC  0E7F               	movlw	high STR_10
  3003  0002CE  6E10               	movwf	(displayStuff@stuff+1)^0,c
  3004  0002D0  EC9A  F015         	call	_displayStuff	;wreg free
  3005  0002D4                     
  3006                           ;main.c: 325:             itoa(Glim, valueStr);
  3007  0002D4  C0D2  F012         	movff	_Glim,itoa@value
  3008  0002D8  C0D3  F013         	movff	_Glim+1,itoa@value+1
  3009  0002DC  0E7C               	movlw	low displayMenu@valueStr
  3010  0002DE  6E14               	movwf	itoa@ptr^0,c
  3011  0002E0  0E00               	movlw	high displayMenu@valueStr
  3012  0002E2  6E15               	movwf	(itoa@ptr+1)^0,c
  3013  0002E4  EC15  F011         	call	_itoa	;wreg free
  3014  0002E8  EFBA  F000         	goto	l5065
  3015  0002EC                     l5095:
  3016                           
  3017                           ; BSR set to: 0
  3018                           ;main.c: 330:             displayStuff(0, 0, "Leituras");
  3019  0002EC  0E00               	movlw	0
  3020  0002EE  6E0C               	movwf	(displayStuff@row+1)^0,c
  3021  0002F0  0E00               	movlw	0
  3022  0002F2  6E0B               	movwf	displayStuff@row^0,c
  3023  0002F4  0E00               	movlw	0
  3024  0002F6  6E0E               	movwf	(displayStuff@column+1)^0,c
  3025  0002F8  0E00               	movlw	0
  3026  0002FA  6E0D               	movwf	displayStuff@column^0,c
  3027  0002FC  0ED9               	movlw	low STR_17
  3028  0002FE  6E0F               	movwf	displayStuff@stuff^0,c
  3029  000300  0E7F               	movlw	high STR_17
  3030  000302  6E10               	movwf	(displayStuff@stuff+1)^0,c
  3031  000304  EC9A  F015         	call	_displayStuff	;wreg free
  3032  000308                     
  3033                           ;main.c: 331:             if (currentTemp <= Tlim && currentHumid <= Hlim && currentGas 
      +                          <= Glim) {
  3034  000308  C0D6  F00A         	movff	_Tlim,___xxtofl@val
  3035  00030C  C0D7  F00B         	movff	_Tlim+1,___xxtofl@val+1
  3036  000310  0E00               	movlw	0
  3037  000312  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3038  000314  0EFF               	movlw	-1
  3039  000316  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3040  000318  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3041  00031A  0E01               	movlw	1
  3042  00031C  EC3B  F010         	call	___xxtofl
  3043  000320  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3044  000324  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3045  000328  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3046  00032C  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3047  000330  C08A  F01C         	movff	displayMenu@currentTemp,___flge@ff2
  3048  000334  C08B  F01D         	movff	displayMenu@currentTemp+1,___flge@ff2+1
  3049  000338  C08C  F01E         	movff	displayMenu@currentTemp+2,___flge@ff2+2
  3050  00033C  C08D  F01F         	movff	displayMenu@currentTemp+3,___flge@ff2+3
  3051  000340  ECCA  F012         	call	___flge	;wreg free
  3052  000344  A0D8               	btfss	status,0,c
  3053  000346  EFA7  F001         	goto	u5101
  3054  00034A  EFA9  F001         	goto	u5100
  3055  00034E                     u5101:
  3056  00034E  EF03  F002         	goto	l5105
  3057  000352                     u5100:
  3058  000352  C0D4  F00A         	movff	_Hlim,___xxtofl@val
  3059  000356  C0D5  F00B         	movff	_Hlim+1,___xxtofl@val+1
  3060  00035A  0E00               	movlw	0
  3061  00035C  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3062  00035E  0EFF               	movlw	-1
  3063  000360  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3064  000362  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3065  000364  0E01               	movlw	1
  3066  000366  EC3B  F010         	call	___xxtofl
  3067  00036A  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3068  00036E  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3069  000372  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3070  000376  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3071  00037A  C08E  F01C         	movff	displayMenu@currentHumid,___flge@ff2
  3072  00037E  C08F  F01D         	movff	displayMenu@currentHumid+1,___flge@ff2+1
  3073  000382  C090  F01E         	movff	displayMenu@currentHumid+2,___flge@ff2+2
  3074  000386  C091  F01F         	movff	displayMenu@currentHumid+3,___flge@ff2+3
  3075  00038A  ECCA  F012         	call	___flge	;wreg free
  3076  00038E  A0D8               	btfss	status,0,c
  3077  000390  EFCC  F001         	goto	u5111
  3078  000394  EFCE  F001         	goto	u5110
  3079  000398                     u5111:
  3080  000398  EF03  F002         	goto	l5105
  3081  00039C                     u5110:
  3082  00039C  C0D2  F00A         	movff	_Glim,___xxtofl@val
  3083  0003A0  C0D3  F00B         	movff	_Glim+1,___xxtofl@val+1
  3084  0003A4  0E00               	movlw	0
  3085  0003A6  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3086  0003A8  0EFF               	movlw	-1
  3087  0003AA  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3088  0003AC  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3089  0003AE  0E01               	movlw	1
  3090  0003B0  EC3B  F010         	call	___xxtofl
  3091  0003B4  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3092  0003B8  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3093  0003BC  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3094  0003C0  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3095  0003C4  C092  F01C         	movff	displayMenu@currentGas,___flge@ff2
  3096  0003C8  C093  F01D         	movff	displayMenu@currentGas+1,___flge@ff2+1
  3097  0003CC  C094  F01E         	movff	displayMenu@currentGas+2,___flge@ff2+2
  3098  0003D0  C095  F01F         	movff	displayMenu@currentGas+3,___flge@ff2+3
  3099  0003D4  ECCA  F012         	call	___flge	;wreg free
  3100  0003D8  A0D8               	btfss	status,0,c
  3101  0003DA  EFF1  F001         	goto	u5121
  3102  0003DE  EFF3  F001         	goto	u5120
  3103  0003E2                     u5121:
  3104  0003E2  EF03  F002         	goto	l5105
  3105  0003E6                     u5120:
  3106  0003E6                     
  3107                           ;main.c: 332:                 displayStuff(1, 0, "OK");
  3108  0003E6  0E00               	movlw	0
  3109  0003E8  6E0C               	movwf	(displayStuff@row+1)^0,c
  3110  0003EA  0E01               	movlw	1
  3111  0003EC  6E0B               	movwf	displayStuff@row^0,c
  3112  0003EE  0E00               	movlw	0
  3113  0003F0  6E0E               	movwf	(displayStuff@column+1)^0,c
  3114  0003F2  0E00               	movlw	0
  3115  0003F4  6E0D               	movwf	displayStuff@column^0,c
  3116  0003F6  0EF7               	movlw	low STR_18
  3117  0003F8  6E0F               	movwf	displayStuff@stuff^0,c
  3118  0003FA  0E7F               	movlw	high STR_18
  3119  0003FC  6E10               	movwf	(displayStuff@stuff+1)^0,c
  3120  0003FE  EC9A  F015         	call	_displayStuff	;wreg free
  3121                           
  3122                           ;main.c: 333:             } else {
  3123  000402  EF63  F004         	goto	l136
  3124  000406                     l5105:
  3125                           
  3126                           ;main.c: 334:                 static int errorCycle = 0;;main.c: 335:                 er
      +                          rorCycle++;
  3127  000406  4A50               	infsnz	displayMenu@errorCycle^0,f,c
  3128  000408  2A51               	incf	(displayMenu@errorCycle+1)^0,f,c
  3129  00040A                     
  3130                           ;main.c: 337:                 if (errorCycle > 3) errorCycle = 0;
  3131  00040A  BE51               	btfsc	(displayMenu@errorCycle+1)^0,7,c
  3132  00040C  EF11  F002         	goto	u5131
  3133  000410  5051               	movf	(displayMenu@errorCycle+1)^0,w,c
  3134  000412  E109               	bnz	u5130
  3135  000414  0E04               	movlw	4
  3136  000416  5C50               	subwf	displayMenu@errorCycle^0,w,c
  3137  000418  A0D8               	btfss	status,0,c
  3138  00041A  EF11  F002         	goto	u5131
  3139  00041E  EF13  F002         	goto	u5130
  3140  000422                     u5131:
  3141  000422  EFB8  F002         	goto	l5125
  3142  000426                     u5130:
  3143  000426  0E00               	movlw	0
  3144  000428  6E51               	movwf	(displayMenu@errorCycle+1)^0,c
  3145  00042A  0E00               	movlw	0
  3146  00042C  6E50               	movwf	displayMenu@errorCycle^0,c
  3147  00042E  EFB8  F002         	goto	l5125
  3148  000432                     l5111:
  3149                           
  3150                           ; BSR set to: 0
  3151                           ;main.c: 341:                         if (currentTemp > Tlim) {
  3152  000432  C0D6  F00A         	movff	_Tlim,___xxtofl@val
  3153  000436  C0D7  F00B         	movff	_Tlim+1,___xxtofl@val+1
  3154  00043A  0E00               	movlw	0
  3155  00043C  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3156  00043E  0EFF               	movlw	-1
  3157  000440  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3158  000442  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3159  000444  0E01               	movlw	1
  3160  000446  EC3B  F010         	call	___xxtofl
  3161  00044A  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3162  00044E  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3163  000452  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3164  000456  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3165  00045A  C08A  F01C         	movff	displayMenu@currentTemp,___flge@ff2
  3166  00045E  C08B  F01D         	movff	displayMenu@currentTemp+1,___flge@ff2+1
  3167  000462  C08C  F01E         	movff	displayMenu@currentTemp+2,___flge@ff2+2
  3168  000466  C08D  F01F         	movff	displayMenu@currentTemp+3,___flge@ff2+3
  3169  00046A  ECCA  F012         	call	___flge	;wreg free
  3170  00046E  B0D8               	btfsc	status,0,c
  3171  000470  EF3C  F002         	goto	u5141
  3172  000474  EF3E  F002         	goto	u5140
  3173  000478                     u5141:
  3174  000478  EF30  F000         	goto	l5041
  3175  00047C                     u5140:
  3176  00047C                     
  3177                           ;main.c: 342:                             displayStuff(1, 0, "T_lim excedida!");
  3178  00047C  0E00               	movlw	0
  3179  00047E  6E0C               	movwf	(displayStuff@row+1)^0,c
  3180  000480  0E01               	movlw	1
  3181  000482  6E0B               	movwf	displayStuff@row^0,c
  3182  000484  0E00               	movlw	0
  3183  000486  6E0E               	movwf	(displayStuff@column+1)^0,c
  3184  000488  0E00               	movlw	0
  3185  00048A  6E0D               	movwf	displayStuff@column^0,c
  3186  00048C  0E30               	movlw	low STR_19
  3187  00048E  6E0F               	movwf	displayStuff@stuff^0,c
  3188  000490  0E7F               	movlw	high STR_19
  3189  000492  6E10               	movwf	(displayStuff@stuff+1)^0,c
  3190  000494  EC9A  F015         	call	_displayStuff	;wreg free
  3191  000498  EF63  F004         	goto	l136
  3192  00049C                     l5115:
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;main.c: 346:                         if (currentHumid > Hlim) {
  3196  00049C  C0D4  F00A         	movff	_Hlim,___xxtofl@val
  3197  0004A0  C0D5  F00B         	movff	_Hlim+1,___xxtofl@val+1
  3198  0004A4  0E00               	movlw	0
  3199  0004A6  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3200  0004A8  0EFF               	movlw	-1
  3201  0004AA  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3202  0004AC  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3203  0004AE  0E01               	movlw	1
  3204  0004B0  EC3B  F010         	call	___xxtofl
  3205  0004B4  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3206  0004B8  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3207  0004BC  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3208  0004C0  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3209  0004C4  C08E  F01C         	movff	displayMenu@currentHumid,___flge@ff2
  3210  0004C8  C08F  F01D         	movff	displayMenu@currentHumid+1,___flge@ff2+1
  3211  0004CC  C090  F01E         	movff	displayMenu@currentHumid+2,___flge@ff2+2
  3212  0004D0  C091  F01F         	movff	displayMenu@currentHumid+3,___flge@ff2+3
  3213  0004D4  ECCA  F012         	call	___flge	;wreg free
  3214  0004D8  B0D8               	btfsc	status,0,c
  3215  0004DA  EF71  F002         	goto	u5151
  3216  0004DE  EF73  F002         	goto	u5150
  3217  0004E2                     u5151:
  3218  0004E2  EF30  F000         	goto	l5041
  3219  0004E6                     u5150:
  3220  0004E6                     
  3221                           ;main.c: 347:                             displayStuff(1, 0, "H_lim excedida!");
  3222  0004E6  0E00               	movlw	0
  3223  0004E8  6E0C               	movwf	(displayStuff@row+1)^0,c
  3224  0004EA  0E01               	movlw	1
  3225  0004EC  6E0B               	movwf	displayStuff@row^0,c
  3226  0004EE  0E00               	movlw	0
  3227  0004F0  6E0E               	movwf	(displayStuff@column+1)^0,c
  3228  0004F2  0E00               	movlw	0
  3229  0004F4  6E0D               	movwf	displayStuff@column^0,c
  3230  0004F6  0E20               	movlw	low STR_20
  3231  0004F8  6E0F               	movwf	displayStuff@stuff^0,c
  3232  0004FA  0E7F               	movlw	high STR_20
  3233  0004FC  6E10               	movwf	(displayStuff@stuff+1)^0,c
  3234  0004FE  EC9A  F015         	call	_displayStuff	;wreg free
  3235  000502  EF63  F004         	goto	l136
  3236  000506                     l5119:
  3237                           
  3238                           ; BSR set to: 0
  3239                           ;main.c: 351:                         if (currentGas > Glim) {
  3240  000506  C0D2  F00A         	movff	_Glim,___xxtofl@val
  3241  00050A  C0D3  F00B         	movff	_Glim+1,___xxtofl@val+1
  3242  00050E  0E00               	movlw	0
  3243  000510  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3244  000512  0EFF               	movlw	-1
  3245  000514  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3246  000516  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3247  000518  0E01               	movlw	1
  3248  00051A  EC3B  F010         	call	___xxtofl
  3249  00051E  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3250  000522  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3251  000526  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3252  00052A  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3253  00052E  C092  F01C         	movff	displayMenu@currentGas,___flge@ff2
  3254  000532  C093  F01D         	movff	displayMenu@currentGas+1,___flge@ff2+1
  3255  000536  C094  F01E         	movff	displayMenu@currentGas+2,___flge@ff2+2
  3256  00053A  C095  F01F         	movff	displayMenu@currentGas+3,___flge@ff2+3
  3257  00053E  ECCA  F012         	call	___flge	;wreg free
  3258  000542  B0D8               	btfsc	status,0,c
  3259  000544  EFA6  F002         	goto	u5161
  3260  000548  EFA8  F002         	goto	u5160
  3261  00054C                     u5161:
  3262  00054C  EF30  F000         	goto	l5041
  3263  000550                     u5160:
  3264  000550                     
  3265                           ;main.c: 352:                             displayStuff(1, 0, "G_lim excedido!");
  3266  000550  0E00               	movlw	0
  3267  000552  6E0C               	movwf	(displayStuff@row+1)^0,c
  3268  000554  0E01               	movlw	1
  3269  000556  6E0B               	movwf	displayStuff@row^0,c
  3270  000558  0E00               	movlw	0
  3271  00055A  6E0E               	movwf	(displayStuff@column+1)^0,c
  3272  00055C  0E00               	movlw	0
  3273  00055E  6E0D               	movwf	displayStuff@column^0,c
  3274  000560  0E40               	movlw	low STR_21
  3275  000562  6E0F               	movwf	displayStuff@stuff^0,c
  3276  000564  0E7F               	movlw	high STR_21
  3277  000566  6E10               	movwf	(displayStuff@stuff+1)^0,c
  3278  000568  EC9A  F015         	call	_displayStuff	;wreg free
  3279  00056C  EF63  F004         	goto	l136
  3280  000570                     l5125:
  3281  000570  C050  F078         	movff	displayMenu@errorCycle,??_displayMenu
  3282  000574  C051  F079         	movff	displayMenu@errorCycle+1,??_displayMenu+1
  3283                           
  3284                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3285                           ; Switch size 1, requested type "simple"
  3286                           ; Number of cases is 1, Range of values is 0 to 0
  3287                           ; switch strategies available:
  3288                           ; Name         Instructions Cycles
  3289                           ; simple_byte            4     3 (average)
  3290                           ;	Chosen strategy is simple_byte
  3291  000578  0100               	movlb	0	; () banked
  3292  00057A  5179               	movf	(??_displayMenu+1)& (0+255),w,b
  3293  00057C  0A00               	xorlw	0	; case 0
  3294  00057E  B4D8               	btfsc	status,2,c
  3295  000580  EFC4  F002         	goto	l5409
  3296  000584  EF63  F004         	goto	l136
  3297  000588                     l5409:
  3298                           
  3299                           ; BSR set to: 0
  3300                           ; Switch size 1, requested type "simple"
  3301                           ; Number of cases is 3, Range of values is 0 to 2
  3302                           ; switch strategies available:
  3303                           ; Name         Instructions Cycles
  3304                           ; simple_byte           10     6 (average)
  3305                           ;	Chosen strategy is simple_byte
  3306  000588  5178               	movf	??_displayMenu& (0+255),w,b
  3307  00058A  0A00               	xorlw	0	; case 0
  3308  00058C  B4D8               	btfsc	status,2,c
  3309  00058E  EF19  F002         	goto	l5111
  3310  000592  0A01               	xorlw	1	; case 1
  3311  000594  B4D8               	btfsc	status,2,c
  3312  000596  EF4E  F002         	goto	l5115
  3313  00059A  0A03               	xorlw	3	; case 2
  3314  00059C  B4D8               	btfsc	status,2,c
  3315  00059E  EF83  F002         	goto	l5119
  3316  0005A2  EF63  F004         	goto	l136
  3317  0005A6                     l5127:
  3318                           
  3319                           ; BSR set to: 0
  3320                           ;main.c: 360:             displayStuff(0, 0, "Sistemas:");
  3321  0005A6  0E00               	movlw	0
  3322  0005A8  6E0C               	movwf	(displayStuff@row+1)^0,c
  3323  0005AA  0E00               	movlw	0
  3324  0005AC  6E0B               	movwf	displayStuff@row^0,c
  3325  0005AE  0E00               	movlw	0
  3326  0005B0  6E0E               	movwf	(displayStuff@column+1)^0,c
  3327  0005B2  0E00               	movlw	0
  3328  0005B4  6E0D               	movwf	displayStuff@column^0,c
  3329  0005B6  0ECF               	movlw	low STR_22
  3330  0005B8  6E0F               	movwf	displayStuff@stuff^0,c
  3331  0005BA  0E7F               	movlw	high STR_22
  3332  0005BC  6E10               	movwf	(displayStuff@stuff+1)^0,c
  3333  0005BE  EC9A  F015         	call	_displayStuff	;wreg free
  3334  0005C2                     
  3335                           ;main.c: 361:             if (currentTemp <= Tlim && currentHumid <= Hlim && currentGas 
      +                          <= Glim) {
  3336  0005C2  C0D6  F00A         	movff	_Tlim,___xxtofl@val
  3337  0005C6  C0D7  F00B         	movff	_Tlim+1,___xxtofl@val+1
  3338  0005CA  0E00               	movlw	0
  3339  0005CC  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3340  0005CE  0EFF               	movlw	-1
  3341  0005D0  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3342  0005D2  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3343  0005D4  0E01               	movlw	1
  3344  0005D6  EC3B  F010         	call	___xxtofl
  3345  0005DA  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3346  0005DE  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3347  0005E2  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3348  0005E6  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3349  0005EA  C08A  F01C         	movff	displayMenu@currentTemp,___flge@ff2
  3350  0005EE  C08B  F01D         	movff	displayMenu@currentTemp+1,___flge@ff2+1
  3351  0005F2  C08C  F01E         	movff	displayMenu@currentTemp+2,___flge@ff2+2
  3352  0005F6  C08D  F01F         	movff	displayMenu@currentTemp+3,___flge@ff2+3
  3353  0005FA  ECCA  F012         	call	___flge	;wreg free
  3354  0005FE  A0D8               	btfss	status,0,c
  3355  000600  EF04  F003         	goto	u5171
  3356  000604  EF06  F003         	goto	u5170
  3357  000608                     u5171:
  3358  000608  EF60  F003         	goto	l5137
  3359  00060C                     u5170:
  3360  00060C  C0D4  F00A         	movff	_Hlim,___xxtofl@val
  3361  000610  C0D5  F00B         	movff	_Hlim+1,___xxtofl@val+1
  3362  000614  0E00               	movlw	0
  3363  000616  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3364  000618  0EFF               	movlw	-1
  3365  00061A  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3366  00061C  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3367  00061E  0E01               	movlw	1
  3368  000620  EC3B  F010         	call	___xxtofl
  3369  000624  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3370  000628  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3371  00062C  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3372  000630  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3373  000634  C08E  F01C         	movff	displayMenu@currentHumid,___flge@ff2
  3374  000638  C08F  F01D         	movff	displayMenu@currentHumid+1,___flge@ff2+1
  3375  00063C  C090  F01E         	movff	displayMenu@currentHumid+2,___flge@ff2+2
  3376  000640  C091  F01F         	movff	displayMenu@currentHumid+3,___flge@ff2+3
  3377  000644  ECCA  F012         	call	___flge	;wreg free
  3378  000648  A0D8               	btfss	status,0,c
  3379  00064A  EF29  F003         	goto	u5181
  3380  00064E  EF2B  F003         	goto	u5180
  3381  000652                     u5181:
  3382  000652  EF60  F003         	goto	l5137
  3383  000656                     u5180:
  3384  000656  C0D2  F00A         	movff	_Glim,___xxtofl@val
  3385  00065A  C0D3  F00B         	movff	_Glim+1,___xxtofl@val+1
  3386  00065E  0E00               	movlw	0
  3387  000660  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3388  000662  0EFF               	movlw	-1
  3389  000664  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3390  000666  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3391  000668  0E01               	movlw	1
  3392  00066A  EC3B  F010         	call	___xxtofl
  3393  00066E  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3394  000672  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3395  000676  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3396  00067A  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3397  00067E  C092  F01C         	movff	displayMenu@currentGas,___flge@ff2
  3398  000682  C093  F01D         	movff	displayMenu@currentGas+1,___flge@ff2+1
  3399  000686  C094  F01E         	movff	displayMenu@currentGas+2,___flge@ff2+2
  3400  00068A  C095  F01F         	movff	displayMenu@currentGas+3,___flge@ff2+3
  3401  00068E  ECCA  F012         	call	___flge	;wreg free
  3402  000692  A0D8               	btfss	status,0,c
  3403  000694  EF4E  F003         	goto	u5191
  3404  000698  EF50  F003         	goto	u5190
  3405  00069C                     u5191:
  3406  00069C  EF60  F003         	goto	l5137
  3407  0006A0                     u5190:
  3408  0006A0                     
  3409                           ;main.c: 362:                 displayStuff(1, 0, "OK");
  3410  0006A0  0E00               	movlw	0
  3411  0006A2  6E0C               	movwf	(displayStuff@row+1)^0,c
  3412  0006A4  0E01               	movlw	1
  3413  0006A6  6E0B               	movwf	displayStuff@row^0,c
  3414  0006A8  0E00               	movlw	0
  3415  0006AA  6E0E               	movwf	(displayStuff@column+1)^0,c
  3416  0006AC  0E00               	movlw	0
  3417  0006AE  6E0D               	movwf	displayStuff@column^0,c
  3418  0006B0  0EF7               	movlw	low STR_18
  3419  0006B2  6E0F               	movwf	displayStuff@stuff^0,c
  3420  0006B4  0E7F               	movlw	high STR_18
  3421  0006B6  6E10               	movwf	(displayStuff@stuff+1)^0,c
  3422  0006B8  EC9A  F015         	call	_displayStuff	;wreg free
  3423                           
  3424                           ;main.c: 363:             } else {
  3425  0006BC  EF63  F004         	goto	l136
  3426  0006C0                     l5137:
  3427                           
  3428                           ;main.c: 364:                 static int systemCycle = 0;;main.c: 365:                 s
      +                          ystemCycle++;
  3429  0006C0  4A4E               	infsnz	displayMenu@systemCycle^0,f,c
  3430  0006C2  2A4F               	incf	(displayMenu@systemCycle+1)^0,f,c
  3431  0006C4                     
  3432                           ;main.c: 367:                 if (systemCycle > 3) systemCycle = 0;
  3433  0006C4  BE4F               	btfsc	(displayMenu@systemCycle+1)^0,7,c
  3434  0006C6  EF6E  F003         	goto	u5201
  3435  0006CA  504F               	movf	(displayMenu@systemCycle+1)^0,w,c
  3436  0006CC  E109               	bnz	u5200
  3437  0006CE  0E04               	movlw	4
  3438  0006D0  5C4E               	subwf	displayMenu@systemCycle^0,w,c
  3439  0006D2  A0D8               	btfss	status,0,c
  3440  0006D4  EF6E  F003         	goto	u5201
  3441  0006D8  EF70  F003         	goto	u5200
  3442  0006DC                     u5201:
  3443  0006DC  EF15  F004         	goto	l5157
  3444  0006E0                     u5200:
  3445  0006E0  0E00               	movlw	0
  3446  0006E2  6E4F               	movwf	(displayMenu@systemCycle+1)^0,c
  3447  0006E4  0E00               	movlw	0
  3448  0006E6  6E4E               	movwf	displayMenu@systemCycle^0,c
  3449  0006E8  EF15  F004         	goto	l5157
  3450  0006EC                     l5143:
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;main.c: 371:                         if (currentTemp > Tlim) {
  3454  0006EC  C0D6  F00A         	movff	_Tlim,___xxtofl@val
  3455  0006F0  C0D7  F00B         	movff	_Tlim+1,___xxtofl@val+1
  3456  0006F4  0E00               	movlw	0
  3457  0006F6  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3458  0006F8  0EFF               	movlw	-1
  3459  0006FA  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3460  0006FC  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3461  0006FE  0E01               	movlw	1
  3462  000700  EC3B  F010         	call	___xxtofl
  3463  000704  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3464  000708  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3465  00070C  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3466  000710  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3467  000714  C08A  F01C         	movff	displayMenu@currentTemp,___flge@ff2
  3468  000718  C08B  F01D         	movff	displayMenu@currentTemp+1,___flge@ff2+1
  3469  00071C  C08C  F01E         	movff	displayMenu@currentTemp+2,___flge@ff2+2
  3470  000720  C08D  F01F         	movff	displayMenu@currentTemp+3,___flge@ff2+3
  3471  000724  ECCA  F012         	call	___flge	;wreg free
  3472  000728  B0D8               	btfsc	status,0,c
  3473  00072A  EF99  F003         	goto	u5211
  3474  00072E  EF9B  F003         	goto	u5210
  3475  000732                     u5211:
  3476  000732  EF63  F004         	goto	l136
  3477  000736                     u5210:
  3478  000736                     
  3479                           ;main.c: 372:                             displayStuff(1, 0, "Resfriador ON");
  3480  000736  0E00               	movlw	0
  3481  000738  6E0C               	movwf	(displayStuff@row+1)^0,c
  3482  00073A  0E01               	movlw	1
  3483  00073C  6E0B               	movwf	displayStuff@row^0,c
  3484  00073E  0E00               	movlw	0
  3485  000740  6E0E               	movwf	(displayStuff@column+1)^0,c
  3486  000742  0E00               	movlw	0
  3487  000744  6E0D               	movwf	displayStuff@column^0,c
  3488  000746  0E5F               	movlw	low STR_24
  3489  000748  6E0F               	movwf	displayStuff@stuff^0,c
  3490  00074A  0E7F               	movlw	high STR_24
  3491  00074C  6E10               	movwf	(displayStuff@stuff+1)^0,c
  3492  00074E  EC9A  F015         	call	_displayStuff	;wreg free
  3493  000752  EF63  F004         	goto	l136
  3494  000756                     l5147:
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;main.c: 376:                         if (currentHumid > Hlim) {
  3498  000756  C0D4  F00A         	movff	_Hlim,___xxtofl@val
  3499  00075A  C0D5  F00B         	movff	_Hlim+1,___xxtofl@val+1
  3500  00075E  0E00               	movlw	0
  3501  000760  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3502  000762  0EFF               	movlw	-1
  3503  000764  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3504  000766  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3505  000768  0E01               	movlw	1
  3506  00076A  EC3B  F010         	call	___xxtofl
  3507  00076E  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3508  000772  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3509  000776  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3510  00077A  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3511  00077E  C08E  F01C         	movff	displayMenu@currentHumid,___flge@ff2
  3512  000782  C08F  F01D         	movff	displayMenu@currentHumid+1,___flge@ff2+1
  3513  000786  C090  F01E         	movff	displayMenu@currentHumid+2,___flge@ff2+2
  3514  00078A  C091  F01F         	movff	displayMenu@currentHumid+3,___flge@ff2+3
  3515  00078E  ECCA  F012         	call	___flge	;wreg free
  3516  000792  B0D8               	btfsc	status,0,c
  3517  000794  EFCE  F003         	goto	u5221
  3518  000798  EFD0  F003         	goto	u5220
  3519  00079C                     u5221:
  3520  00079C  EF63  F004         	goto	l136
  3521  0007A0                     u5220:
  3522  0007A0                     
  3523                           ;main.c: 377:                             displayStuff(1, 0, "Humidificador ON");
  3524  0007A0  0E00               	movlw	0
  3525  0007A2  6E0C               	movwf	(displayStuff@row+1)^0,c
  3526  0007A4  0E01               	movlw	1
  3527  0007A6  6E0B               	movwf	displayStuff@row^0,c
  3528  0007A8  0E00               	movlw	0
  3529  0007AA  6E0E               	movwf	(displayStuff@column+1)^0,c
  3530  0007AC  0E00               	movlw	0
  3531  0007AE  6E0D               	movwf	displayStuff@column^0,c
  3532  0007B0  0E0F               	movlw	low STR_25
  3533  0007B2  6E0F               	movwf	displayStuff@stuff^0,c
  3534  0007B4  0E7F               	movlw	high STR_25
  3535  0007B6  6E10               	movwf	(displayStuff@stuff+1)^0,c
  3536  0007B8  EC9A  F015         	call	_displayStuff	;wreg free
  3537  0007BC  EF63  F004         	goto	l136
  3538  0007C0                     l5151:
  3539                           
  3540                           ; BSR set to: 0
  3541                           ;main.c: 381:                         if (currentGas > Glim) {
  3542  0007C0  C0D2  F00A         	movff	_Glim,___xxtofl@val
  3543  0007C4  C0D3  F00B         	movff	_Glim+1,___xxtofl@val+1
  3544  0007C8  0E00               	movlw	0
  3545  0007CA  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3546  0007CC  0EFF               	movlw	-1
  3547  0007CE  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3548  0007D0  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3549  0007D2  0E01               	movlw	1
  3550  0007D4  EC3B  F010         	call	___xxtofl
  3551  0007D8  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3552  0007DC  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3553  0007E0  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3554  0007E4  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3555  0007E8  C092  F01C         	movff	displayMenu@currentGas,___flge@ff2
  3556  0007EC  C093  F01D         	movff	displayMenu@currentGas+1,___flge@ff2+1
  3557  0007F0  C094  F01E         	movff	displayMenu@currentGas+2,___flge@ff2+2
  3558  0007F4  C095  F01F         	movff	displayMenu@currentGas+3,___flge@ff2+3
  3559  0007F8  ECCA  F012         	call	___flge	;wreg free
  3560  0007FC  B0D8               	btfsc	status,0,c
  3561  0007FE  EF03  F004         	goto	u5231
  3562  000802  EF05  F004         	goto	u5230
  3563  000806                     u5231:
  3564  000806  EF63  F004         	goto	l136
  3565  00080A                     u5230:
  3566  00080A                     
  3567                           ;main.c: 382:                             displayStuff(1, 0, "Exaustor ON");
  3568  00080A  0E00               	movlw	0
  3569  00080C  6E0C               	movwf	(displayStuff@row+1)^0,c
  3570  00080E  0E01               	movlw	1
  3571  000810  6E0B               	movwf	displayStuff@row^0,c
  3572  000812  0E00               	movlw	0
  3573  000814  6E0E               	movwf	(displayStuff@column+1)^0,c
  3574  000816  0E00               	movlw	0
  3575  000818  6E0D               	movwf	displayStuff@column^0,c
  3576  00081A  0EAD               	movlw	low STR_26
  3577  00081C  6E0F               	movwf	displayStuff@stuff^0,c
  3578  00081E  0E7F               	movlw	high STR_26
  3579  000820  6E10               	movwf	(displayStuff@stuff+1)^0,c
  3580  000822  EC9A  F015         	call	_displayStuff	;wreg free
  3581  000826  EF63  F004         	goto	l136
  3582  00082A                     l5157:
  3583  00082A  C04E  F078         	movff	displayMenu@systemCycle,??_displayMenu
  3584  00082E  C04F  F079         	movff	displayMenu@systemCycle+1,??_displayMenu+1
  3585                           
  3586                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3587                           ; Switch size 1, requested type "simple"
  3588                           ; Number of cases is 1, Range of values is 0 to 0
  3589                           ; switch strategies available:
  3590                           ; Name         Instructions Cycles
  3591                           ; simple_byte            4     3 (average)
  3592                           ;	Chosen strategy is simple_byte
  3593  000832  0100               	movlb	0	; () banked
  3594  000834  5179               	movf	(??_displayMenu+1)& (0+255),w,b
  3595  000836  0A00               	xorlw	0	; case 0
  3596  000838  B4D8               	btfsc	status,2,c
  3597  00083A  EF21  F004         	goto	l5411
  3598  00083E  EF63  F004         	goto	l136
  3599  000842                     l5411:
  3600                           
  3601                           ; BSR set to: 0
  3602                           ; Switch size 1, requested type "simple"
  3603                           ; Number of cases is 3, Range of values is 0 to 2
  3604                           ; switch strategies available:
  3605                           ; Name         Instructions Cycles
  3606                           ; simple_byte           10     6 (average)
  3607                           ;	Chosen strategy is simple_byte
  3608  000842  5178               	movf	??_displayMenu& (0+255),w,b
  3609  000844  0A00               	xorlw	0	; case 0
  3610  000846  B4D8               	btfsc	status,2,c
  3611  000848  EF76  F003         	goto	l5143
  3612  00084C  0A01               	xorlw	1	; case 1
  3613  00084E  B4D8               	btfsc	status,2,c
  3614  000850  EFAB  F003         	goto	l5147
  3615  000854  0A03               	xorlw	3	; case 2
  3616  000856  B4D8               	btfsc	status,2,c
  3617  000858  EFE0  F003         	goto	l5151
  3618  00085C  EF63  F004         	goto	l136
  3619  000860                     l5159:
  3620                           
  3621                           ; BSR set to: 0
  3622                           ;main.c: 390:             displayStuff(0, 0, "Menu Inválido");
  3623  000860  0E00               	movlw	0
  3624  000862  6E0C               	movwf	(displayStuff@row+1)^0,c
  3625  000864  0E00               	movlw	0
  3626  000866  6E0B               	movwf	displayStuff@row^0,c
  3627  000868  0E00               	movlw	0
  3628  00086A  6E0E               	movwf	(displayStuff@column+1)^0,c
  3629  00086C  0E00               	movlw	0
  3630  00086E  6E0D               	movwf	displayStuff@column^0,c
  3631  000870  0E6D               	movlw	low STR_27
  3632  000872  6E0F               	movwf	displayStuff@stuff^0,c
  3633  000874  0E7F               	movlw	high STR_27
  3634  000876  6E10               	movwf	(displayStuff@stuff+1)^0,c
  3635  000878  EC9A  F015         	call	_displayStuff	;wreg free
  3636                           
  3637                           ;main.c: 391:             break;
  3638  00087C  EF63  F004         	goto	l136
  3639  000880                     l5163:
  3640  000880  C076  F078         	movff	displayMenu@menuIndex,??_displayMenu
  3641  000884  C077  F079         	movff	displayMenu@menuIndex+1,??_displayMenu+1
  3642                           
  3643                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3644                           ; Switch size 1, requested type "simple"
  3645                           ; Number of cases is 1, Range of values is 0 to 0
  3646                           ; switch strategies available:
  3647                           ; Name         Instructions Cycles
  3648                           ; simple_byte            4     3 (average)
  3649                           ;	Chosen strategy is simple_byte
  3650  000888  0100               	movlb	0	; () banked
  3651  00088A  5179               	movf	(??_displayMenu+1)& (0+255),w,b
  3652  00088C  0A00               	xorlw	0	; case 0
  3653  00088E  B4D8               	btfsc	status,2,c
  3654  000890  EF4C  F004         	goto	l5413
  3655  000894  EF30  F004         	goto	l5159
  3656  000898                     l5413:
  3657                           
  3658                           ; BSR set to: 0
  3659                           ; Switch size 1, requested type "simple"
  3660                           ; Number of cases is 5, Range of values is 0 to 4
  3661                           ; switch strategies available:
  3662                           ; Name         Instructions Cycles
  3663                           ; simple_byte           16     9 (average)
  3664                           ;	Chosen strategy is simple_byte
  3665  000898  5178               	movf	??_displayMenu& (0+255),w,b
  3666  00089A  0A00               	xorlw	0	; case 0
  3667  00089C  B4D8               	btfsc	status,2,c
  3668  00089E  EF66  F000         	goto	l5053
  3669  0008A2  0A01               	xorlw	1	; case 1
  3670  0008A4  B4D8               	btfsc	status,2,c
  3671  0008A6  EFCA  F000         	goto	l5067
  3672  0008AA  0A03               	xorlw	3	; case 2
  3673  0008AC  B4D8               	btfsc	status,2,c
  3674  0008AE  EF20  F001         	goto	l5081
  3675  0008B2  0A01               	xorlw	1	; case 3
  3676  0008B4  B4D8               	btfsc	status,2,c
  3677  0008B6  EF76  F001         	goto	l5095
  3678  0008BA  0A07               	xorlw	7	; case 4
  3679  0008BC  B4D8               	btfsc	status,2,c
  3680  0008BE  EFD3  F002         	goto	l5127
  3681  0008C2  EF30  F004         	goto	l5159
  3682  0008C6                     l136:
  3683  0008C6  0012               	return		;funcret
  3684  0008C8                     __end_of_displayMenu:
  3685                           	callstack 0
  3686                           
  3687 ;; *************** function _tempRead *****************
  3688 ;; Defined at:
  3689 ;;		line 590 in file "main.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;		None
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;  TempC           4    4[BANK0 ] float 
  3694 ;;  rawAnalog       2   12[BANK0 ] unsigned int 
  3695 ;; Return value:  Size  Location     Type
  3696 ;;                  4    0[BANK0 ] float 
  3697 ;; Registers used:
  3698 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3699 ;; Tracked objects:
  3700 ;;		On entry : 0/0
  3701 ;;		On exit  : 0/0
  3702 ;;		Unchanged: 0/0
  3703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3704 ;;      Params:         0       4       0       0       0       0       0       0       0
  3705 ;;      Locals:         0      10       0       0       0       0       0       0       0
  3706 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3707 ;;      Totals:         0      14       0       0       0       0       0       0       0
  3708 ;;Total ram usage:       14 bytes
  3709 ;; Hardware stack levels used: 1
  3710 ;; Hardware stack levels required when called: 3
  3711 ;; This function calls:
  3712 ;;		___fldiv
  3713 ;;		___flmul
  3714 ;;		___xxtofl
  3715 ;;		_readAnalog
  3716 ;; This function is called by:
  3717 ;;		_main
  3718 ;;		_displayMenu
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           	psect	text6
  3723  00284A                     __ptext6:
  3724                           	callstack 0
  3725  00284A                     _tempRead:
  3726                           	callstack 27
  3727  00284A                     
  3728                           ;main.c: 591:     unsigned int rawAnalog = readAnalog(0);
  3729  00284A  0E00               	movlw	0
  3730  00284C  EC71  F016         	call	_readAnalog
  3731  002850  C00A  F06C         	movff	?_readAnalog,tempRead@rawAnalog
  3732  002854  C00B  F06D         	movff	?_readAnalog+1,tempRead@rawAnalog+1
  3733  002858                     
  3734                           ;main.c: 592:     float TempC = ((rawAnalog * 5.0) / 1023.0) / 0.01;
  3735  002858  0E00               	movlw	0
  3736  00285A  6E35               	movwf	___fldiv@a^0,c
  3737  00285C  0EC0               	movlw	192
  3738  00285E  6E36               	movwf	(___fldiv@a+1)^0,c
  3739  002860  0E7F               	movlw	127
  3740  002862  6E37               	movwf	(___fldiv@a+2)^0,c
  3741  002864  0E44               	movlw	68
  3742  002866  6E38               	movwf	(___fldiv@a+3)^0,c
  3743  002868  0E00               	movlw	0
  3744  00286A  6E1C               	movwf	___flmul@a^0,c
  3745  00286C  0E00               	movlw	0
  3746  00286E  6E1D               	movwf	(___flmul@a+1)^0,c
  3747  002870  0EA0               	movlw	160
  3748  002872  6E1E               	movwf	(___flmul@a+2)^0,c
  3749  002874  0E40               	movlw	64
  3750  002876  6E1F               	movwf	(___flmul@a+3)^0,c
  3751  002878  C06C  F00A         	movff	tempRead@rawAnalog,___xxtofl@val
  3752  00287C  C06D  F00B         	movff	tempRead@rawAnalog+1,___xxtofl@val+1
  3753  002880  6A0C               	clrf	(___xxtofl@val+2)^0,c
  3754  002882  6A0D               	clrf	(___xxtofl@val+3)^0,c
  3755  002884  0E00               	movlw	0
  3756  002886  EC3B  F010         	call	___xxtofl
  3757  00288A  C00A  F018         	movff	?___xxtofl,___flmul@b
  3758  00288E  C00B  F019         	movff	?___xxtofl+1,___flmul@b+1
  3759  002892  C00C  F01A         	movff	?___xxtofl+2,___flmul@b+2
  3760  002896  C00D  F01B         	movff	?___xxtofl+3,___flmul@b+3
  3761  00289A  EC05  F00A         	call	___flmul	;wreg free
  3762  00289E  C018  F031         	movff	?___flmul,___fldiv@b
  3763  0028A2  C019  F032         	movff	?___flmul+1,___fldiv@b+1
  3764  0028A6  C01A  F033         	movff	?___flmul+2,___fldiv@b+2
  3765  0028AA  C01B  F034         	movff	?___flmul+3,___fldiv@b+3
  3766  0028AE  EC1A  F00C         	call	___fldiv	;wreg free
  3767  0028B2  C031  F068         	movff	?___fldiv,_tempRead$1533
  3768  0028B6  C032  F069         	movff	?___fldiv+1,_tempRead$1533+1
  3769  0028BA  C033  F06A         	movff	?___fldiv+2,_tempRead$1533+2
  3770  0028BE  C034  F06B         	movff	?___fldiv+3,_tempRead$1533+3
  3771  0028C2                     
  3772                           ;main.c: 592:     float TempC = ((rawAnalog * 5.0) / 1023.0) / 0.01;
  3773  0028C2  C068  F031         	movff	_tempRead$1533,___fldiv@b
  3774  0028C6  C069  F032         	movff	_tempRead$1533+1,___fldiv@b+1
  3775  0028CA  C06A  F033         	movff	_tempRead$1533+2,___fldiv@b+2
  3776  0028CE  C06B  F034         	movff	_tempRead$1533+3,___fldiv@b+3
  3777  0028D2  0E0A               	movlw	10
  3778  0028D4  6E35               	movwf	___fldiv@a^0,c
  3779  0028D6  0ED7               	movlw	215
  3780  0028D8  6E36               	movwf	(___fldiv@a+1)^0,c
  3781  0028DA  0E23               	movlw	35
  3782  0028DC  6E37               	movwf	(___fldiv@a+2)^0,c
  3783  0028DE  0E3C               	movlw	60
  3784  0028E0  6E38               	movwf	(___fldiv@a+3)^0,c
  3785  0028E2  EC1A  F00C         	call	___fldiv	;wreg free
  3786  0028E6  C031  F064         	movff	?___fldiv,tempRead@TempC
  3787  0028EA  C032  F065         	movff	?___fldiv+1,tempRead@TempC+1
  3788  0028EE  C033  F066         	movff	?___fldiv+2,tempRead@TempC+2
  3789  0028F2  C034  F067         	movff	?___fldiv+3,tempRead@TempC+3
  3790  0028F6                     
  3791                           ;main.c: 594:     return TempC;
  3792  0028F6  C064  F060         	movff	tempRead@TempC,?_tempRead
  3793  0028FA  C065  F061         	movff	tempRead@TempC+1,?_tempRead+1
  3794  0028FE  C066  F062         	movff	tempRead@TempC+2,?_tempRead+2
  3795  002902  C067  F063         	movff	tempRead@TempC+3,?_tempRead+3
  3796  002906  0012               	return		;funcret
  3797  002908                     __end_of_tempRead:
  3798                           	callstack 0
  3799                           
  3800 ;; *************** function _millis *****************
  3801 ;; Defined at:
  3802 ;;		line 444 in file "main.c"
  3803 ;; Parameters:    Size  Location     Type
  3804 ;;		None
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;  ms              4   13[COMRAM] unsigned long 
  3807 ;; Return value:  Size  Location     Type
  3808 ;;                  4    9[COMRAM] unsigned long 
  3809 ;; Registers used:
  3810 ;;		None
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3816 ;;      Params:         4       0       0       0       0       0       0       0       0
  3817 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3818 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3819 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3820 ;;Total ram usage:        8 bytes
  3821 ;; Hardware stack levels used: 1
  3822 ;; Hardware stack levels required when called: 2
  3823 ;; This function calls:
  3824 ;;		Nothing
  3825 ;; This function is called by:
  3826 ;;		_main
  3827 ;;		_displayMenu
  3828 ;;		_readKey
  3829 ;; This function uses a non-reentrant model
  3830 ;;
  3831                           
  3832                           	psect	text7
  3833  002F5C                     __ptext7:
  3834                           	callstack 0
  3835  002F5C                     _millis:
  3836                           	callstack 26
  3837  002F5C                     
  3838                           ;main.c: 445:     unsigned long ms;;main.c: 447:     INTCONbits.GIE = 0;
  3839  002F5C  9EF2               	bcf	242,7,c	;volatile
  3840                           
  3841                           ;main.c: 448:     ms = milliseconds;
  3842  002F5E  C04A  F00E         	movff	_milliseconds,millis@ms	;volatile
  3843  002F62  C04B  F00F         	movff	_milliseconds+1,millis@ms+1	;volatile
  3844  002F66  C04C  F010         	movff	_milliseconds+2,millis@ms+2	;volatile
  3845  002F6A  C04D  F011         	movff	_milliseconds+3,millis@ms+3	;volatile
  3846                           
  3847                           ;main.c: 449:     INTCONbits.GIE = 1;
  3848  002F6E  8EF2               	bsf	242,7,c	;volatile
  3849                           
  3850                           ;main.c: 451:     return ms;
  3851  002F70  C00E  F00A         	movff	millis@ms,?_millis
  3852  002F74  C00F  F00B         	movff	millis@ms+1,?_millis+1
  3853  002F78  C010  F00C         	movff	millis@ms+2,?_millis+2
  3854  002F7C  C011  F00D         	movff	millis@ms+3,?_millis+3
  3855  002F80  0012               	return		;funcret
  3856  002F82                     __end_of_millis:
  3857                           	callstack 0
  3858                           
  3859 ;; *************** function _itoa *****************
  3860 ;; Defined at:
  3861 ;;		line 651 in file "main.c"
  3862 ;; Parameters:    Size  Location     Type
  3863 ;;  value           2   17[COMRAM] int 
  3864 ;;  ptr             2   19[COMRAM] PTR unsigned char 
  3865 ;;		 -> displayMenu@valueStr(10), 
  3866 ;; Auto vars:     Size  Location     Type
  3867 ;;  temp            2   23[COMRAM] int 
  3868 ;;  count           2   21[COMRAM] int 
  3869 ;;  start           2    0        PTR unsigned char 
  3870 ;;		 -> displayMenu@valueStr(10), 
  3871 ;; Return value:  Size  Location     Type
  3872 ;;                  2   17[COMRAM] int 
  3873 ;; Registers used:
  3874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3880 ;;      Params:         4       0       0       0       0       0       0       0       0
  3881 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3882 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3883 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3884 ;;Total ram usage:        8 bytes
  3885 ;; Hardware stack levels used: 1
  3886 ;; Hardware stack levels required when called: 3
  3887 ;; This function calls:
  3888 ;;		___awdiv
  3889 ;;		___awmod
  3890 ;; This function is called by:
  3891 ;;		_displayMenu
  3892 ;; This function uses a non-reentrant model
  3893 ;;
  3894                           
  3895                           	psect	text8
  3896  00222A                     __ptext8:
  3897                           	callstack 0
  3898  00222A                     _itoa:
  3899                           	callstack 26
  3900  00222A                     
  3901                           ;main.c: 652:     int count = 0, temp;
  3902  00222A  0E00               	movlw	0
  3903  00222C  6E17               	movwf	(itoa@count+1)^0,c
  3904  00222E  0E00               	movlw	0
  3905  002230  6E16               	movwf	itoa@count^0,c
  3906  002232                     
  3907                           ;main.c: 655:     if (ptr == ((void*)0))
  3908  002232  5014               	movf	itoa@ptr^0,w,c
  3909  002234  1015               	iorwf	(itoa@ptr+1)^0,w,c
  3910  002236  A4D8               	btfss	status,2,c
  3911  002238  EF20  F011         	goto	u5041
  3912  00223C  EF22  F011         	goto	u5040
  3913  002240                     u5041:
  3914  002240  EF24  F011         	goto	l4999
  3915  002244                     u5040:
  3916  002244  EFB4  F011         	goto	l271
  3917  002248                     l4999:
  3918                           
  3919                           ;main.c: 658:     if (value == 0) {
  3920  002248  5012               	movf	itoa@value^0,w,c
  3921  00224A  1013               	iorwf	(itoa@value+1)^0,w,c
  3922  00224C  A4D8               	btfss	status,2,c
  3923  00224E  EF2B  F011         	goto	u5051
  3924  002252  EF2D  F011         	goto	u5050
  3925  002256                     u5051:
  3926  002256  EF3D  F011         	goto	l5007
  3927  00225A                     u5050:
  3928  00225A                     
  3929                           ;main.c: 659:         *ptr = '0';
  3930  00225A  C014  FFD9         	movff	itoa@ptr,fsr2l
  3931  00225E  C015  FFDA         	movff	itoa@ptr+1,fsr2h
  3932  002262  0E30               	movlw	48
  3933  002264  6EDF               	movwf	indf2,c
  3934  002266                     
  3935                           ;main.c: 660:         ptr[1] = '\0';
  3936  002266  EE20 F001          	lfsr	2,1
  3937  00226A  5014               	movf	itoa@ptr^0,w,c
  3938  00226C  26D9               	addwf	fsr2l,f,c
  3939  00226E  5015               	movf	(itoa@ptr+1)^0,w,c
  3940  002270  22DA               	addwfc	fsr2h,f,c
  3941  002272  0E00               	movlw	0
  3942  002274  6EDF               	movwf	indf2,c
  3943  002276  EFB4  F011         	goto	l271
  3944  00227A                     l5007:
  3945                           
  3946                           ;main.c: 664:     if (value < 0) {
  3947  00227A  BE13               	btfsc	(itoa@value+1)^0,7,c
  3948  00227C  EF44  F011         	goto	u5060
  3949  002280  EF42  F011         	goto	u5061
  3950  002284                     u5061:
  3951  002284  EF52  F011         	goto	l5019
  3952  002288                     u5060:
  3953  002288                     
  3954                           ;main.c: 665:         value = -value;
  3955  002288  6C12               	negf	itoa@value^0,c
  3956  00228A  1E13               	comf	(itoa@value+1)^0,f,c
  3957  00228C  B0D8               	btfsc	status,0,c
  3958  00228E  2A13               	incf	(itoa@value+1)^0,f,c
  3959  002290                     
  3960                           ;main.c: 666:         *ptr++ = '-';
  3961  002290  C014  FFD9         	movff	itoa@ptr,fsr2l
  3962  002294  C015  FFDA         	movff	itoa@ptr+1,fsr2h
  3963  002298  0E2D               	movlw	45
  3964  00229A  6EDF               	movwf	indf2,c
  3965  00229C  4A14               	infsnz	itoa@ptr^0,f,c
  3966  00229E  2A15               	incf	(itoa@ptr+1)^0,f,c
  3967  0022A0                     
  3968                           ;main.c: 667:         count++;
  3969  0022A0  4A16               	infsnz	itoa@count^0,f,c
  3970  0022A2  2A17               	incf	(itoa@count+1)^0,f,c
  3971  0022A4                     l5019:
  3972                           
  3973                           ;main.c: 671:     temp = value;
  3974  0022A4  C012  F018         	movff	itoa@value,itoa@temp
  3975  0022A8  C013  F019         	movff	itoa@value+1,itoa@temp+1
  3976                           
  3977                           ;main.c: 672:     while (temp > 0) {
  3978  0022AC  EF68  F011         	goto	l5025
  3979  0022B0                     l5021:
  3980                           
  3981                           ;main.c: 673:         temp /= 10;
  3982  0022B0  C018  F00A         	movff	itoa@temp,___awdiv@dividend
  3983  0022B4  C019  F00B         	movff	itoa@temp+1,___awdiv@dividend+1
  3984  0022B8  0E00               	movlw	0
  3985  0022BA  6E0D               	movwf	(___awdiv@divisor+1)^0,c
  3986  0022BC  0E0A               	movlw	10
  3987  0022BE  6E0C               	movwf	___awdiv@divisor^0,c
  3988  0022C0  ECC3  F013         	call	___awdiv	;wreg free
  3989  0022C4  C00A  F018         	movff	?___awdiv,itoa@temp
  3990  0022C8  C00B  F019         	movff	?___awdiv+1,itoa@temp+1
  3991  0022CC                     
  3992                           ;main.c: 674:         count++;
  3993  0022CC  4A16               	infsnz	itoa@count^0,f,c
  3994  0022CE  2A17               	incf	(itoa@count+1)^0,f,c
  3995  0022D0                     l5025:
  3996                           
  3997                           ;main.c: 672:     while (temp > 0) {
  3998  0022D0  BE19               	btfsc	(itoa@temp+1)^0,7,c
  3999  0022D2  EF75  F011         	goto	u5070
  4000  0022D6  5019               	movf	(itoa@temp+1)^0,w,c
  4001  0022D8  E106               	bnz	u5071
  4002  0022DA  0418               	decf	itoa@temp^0,w,c
  4003  0022DC  B0D8               	btfsc	status,0,c
  4004  0022DE  EF73  F011         	goto	u5071
  4005  0022E2  EF75  F011         	goto	u5070
  4006  0022E6                     u5071:
  4007  0022E6  EF58  F011         	goto	l5021
  4008  0022EA                     u5070:
  4009  0022EA                     
  4010                           ;main.c: 677:     ptr[count] = '\0';
  4011  0022EA  5016               	movf	itoa@count^0,w,c
  4012  0022EC  2414               	addwf	itoa@ptr^0,w,c
  4013  0022EE  6ED9               	movwf	fsr2l,c
  4014  0022F0  5017               	movf	(itoa@count+1)^0,w,c
  4015  0022F2  2015               	addwfc	(itoa@ptr+1)^0,w,c
  4016  0022F4  6EDA               	movwf	fsr2h,c
  4017  0022F6  0E00               	movlw	0
  4018  0022F8  6EDF               	movwf	indf2,c
  4019  0022FA                     
  4020                           ;main.c: 679:     temp = value;
  4021  0022FA  C012  F018         	movff	itoa@value,itoa@temp
  4022  0022FE  C013  F019         	movff	itoa@value+1,itoa@temp+1
  4023                           
  4024                           ;main.c: 680:     while (temp > 0) {
  4025  002302  EFA7  F011         	goto	l5035
  4026  002306                     l5031:
  4027                           
  4028                           ;main.c: 681:         ptr[--count] = temp % 10 + '0';
  4029  002306  0616               	decf	itoa@count^0,f,c
  4030  002308  A0D8               	btfss	status,0,c
  4031  00230A  0617               	decf	(itoa@count+1)^0,f,c
  4032  00230C  5016               	movf	itoa@count^0,w,c
  4033  00230E  2414               	addwf	itoa@ptr^0,w,c
  4034  002310  6ED9               	movwf	fsr2l,c
  4035  002312  5017               	movf	(itoa@count+1)^0,w,c
  4036  002314  2015               	addwfc	(itoa@ptr+1)^0,w,c
  4037  002316  6EDA               	movwf	fsr2h,c
  4038  002318  C018  F00A         	movff	itoa@temp,___awmod@dividend
  4039  00231C  C019  F00B         	movff	itoa@temp+1,___awmod@dividend+1
  4040  002320  0E00               	movlw	0
  4041  002322  6E0D               	movwf	(___awmod@divisor+1)^0,c
  4042  002324  0E0A               	movlw	10
  4043  002326  6E0C               	movwf	___awmod@divisor^0,c
  4044  002328  EC42  F015         	call	___awmod	;wreg free
  4045  00232C  500A               	movf	?___awmod^0,w,c
  4046  00232E  0F30               	addlw	48
  4047  002330  6EDF               	movwf	indf2,c
  4048  002332                     
  4049                           ;main.c: 682:         temp /= 10;
  4050  002332  C018  F00A         	movff	itoa@temp,___awdiv@dividend
  4051  002336  C019  F00B         	movff	itoa@temp+1,___awdiv@dividend+1
  4052  00233A  0E00               	movlw	0
  4053  00233C  6E0D               	movwf	(___awdiv@divisor+1)^0,c
  4054  00233E  0E0A               	movlw	10
  4055  002340  6E0C               	movwf	___awdiv@divisor^0,c
  4056  002342  ECC3  F013         	call	___awdiv	;wreg free
  4057  002346  C00A  F018         	movff	?___awdiv,itoa@temp
  4058  00234A  C00B  F019         	movff	?___awdiv+1,itoa@temp+1
  4059  00234E                     l5035:
  4060                           
  4061                           ;main.c: 680:     while (temp > 0) {
  4062  00234E  BE19               	btfsc	(itoa@temp+1)^0,7,c
  4063  002350  EFB4  F011         	goto	u5080
  4064  002354  5019               	movf	(itoa@temp+1)^0,w,c
  4065  002356  E106               	bnz	u5081
  4066  002358  0418               	decf	itoa@temp^0,w,c
  4067  00235A  B0D8               	btfsc	status,0,c
  4068  00235C  EFB2  F011         	goto	u5081
  4069  002360  EFB4  F011         	goto	u5080
  4070  002364                     u5081:
  4071  002364  EF83  F011         	goto	l5031
  4072  002368                     u5080:
  4073  002368                     l271:
  4074  002368  0012               	return		;funcret
  4075  00236A                     __end_of_itoa:
  4076                           	callstack 0
  4077                           
  4078 ;; *************** function _humidade *****************
  4079 ;; Defined at:
  4080 ;;		line 598 in file "main.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;		None
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;  Humid           4    4[BANK0 ] float 
  4085 ;;  rawAnalog       2   12[BANK0 ] unsigned int 
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  4    0[BANK0 ] float 
  4088 ;; Registers used:
  4089 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4095 ;;      Params:         0       4       0       0       0       0       0       0       0
  4096 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4097 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4098 ;;      Totals:         0      14       0       0       0       0       0       0       0
  4099 ;;Total ram usage:       14 bytes
  4100 ;; Hardware stack levels used: 1
  4101 ;; Hardware stack levels required when called: 3
  4102 ;; This function calls:
  4103 ;;		___fldiv
  4104 ;;		___flmul
  4105 ;;		___xxtofl
  4106 ;;		_readAnalog
  4107 ;; This function is called by:
  4108 ;;		_main
  4109 ;;		_displayMenu
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113                           	psect	text9
  4114  002908                     __ptext9:
  4115                           	callstack 0
  4116  002908                     _humidade:
  4117                           	callstack 27
  4118  002908                     
  4119                           ;main.c: 599:     unsigned int rawAnalog = readAnalog(3);
  4120  002908  0E03               	movlw	3
  4121  00290A  EC71  F016         	call	_readAnalog
  4122  00290E  C00A  F06C         	movff	?_readAnalog,humidade@rawAnalog
  4123  002912  C00B  F06D         	movff	?_readAnalog+1,humidade@rawAnalog+1
  4124  002916                     
  4125                           ;main.c: 600:     float Humid = ((rawAnalog * 5.0) / 1023.0) * 20;
  4126  002916  0E00               	movlw	0
  4127  002918  6E35               	movwf	___fldiv@a^0,c
  4128  00291A  0EC0               	movlw	192
  4129  00291C  6E36               	movwf	(___fldiv@a+1)^0,c
  4130  00291E  0E7F               	movlw	127
  4131  002920  6E37               	movwf	(___fldiv@a+2)^0,c
  4132  002922  0E44               	movlw	68
  4133  002924  6E38               	movwf	(___fldiv@a+3)^0,c
  4134  002926  0E00               	movlw	0
  4135  002928  6E1C               	movwf	___flmul@a^0,c
  4136  00292A  0E00               	movlw	0
  4137  00292C  6E1D               	movwf	(___flmul@a+1)^0,c
  4138  00292E  0EA0               	movlw	160
  4139  002930  6E1E               	movwf	(___flmul@a+2)^0,c
  4140  002932  0E40               	movlw	64
  4141  002934  6E1F               	movwf	(___flmul@a+3)^0,c
  4142  002936  C06C  F00A         	movff	humidade@rawAnalog,___xxtofl@val
  4143  00293A  C06D  F00B         	movff	humidade@rawAnalog+1,___xxtofl@val+1
  4144  00293E  6A0C               	clrf	(___xxtofl@val+2)^0,c
  4145  002940  6A0D               	clrf	(___xxtofl@val+3)^0,c
  4146  002942  0E00               	movlw	0
  4147  002944  EC3B  F010         	call	___xxtofl
  4148  002948  C00A  F018         	movff	?___xxtofl,___flmul@b
  4149  00294C  C00B  F019         	movff	?___xxtofl+1,___flmul@b+1
  4150  002950  C00C  F01A         	movff	?___xxtofl+2,___flmul@b+2
  4151  002954  C00D  F01B         	movff	?___xxtofl+3,___flmul@b+3
  4152  002958  EC05  F00A         	call	___flmul	;wreg free
  4153  00295C  C018  F031         	movff	?___flmul,___fldiv@b
  4154  002960  C019  F032         	movff	?___flmul+1,___fldiv@b+1
  4155  002964  C01A  F033         	movff	?___flmul+2,___fldiv@b+2
  4156  002968  C01B  F034         	movff	?___flmul+3,___fldiv@b+3
  4157  00296C  EC1A  F00C         	call	___fldiv	;wreg free
  4158  002970  C031  F068         	movff	?___fldiv,_humidade$1534
  4159  002974  C032  F069         	movff	?___fldiv+1,_humidade$1534+1
  4160  002978  C033  F06A         	movff	?___fldiv+2,_humidade$1534+2
  4161  00297C  C034  F06B         	movff	?___fldiv+3,_humidade$1534+3
  4162  002980                     
  4163                           ;main.c: 600:     float Humid = ((rawAnalog * 5.0) / 1023.0) * 20;
  4164  002980  C068  F018         	movff	_humidade$1534,___flmul@b
  4165  002984  C069  F019         	movff	_humidade$1534+1,___flmul@b+1
  4166  002988  C06A  F01A         	movff	_humidade$1534+2,___flmul@b+2
  4167  00298C  C06B  F01B         	movff	_humidade$1534+3,___flmul@b+3
  4168  002990  0E00               	movlw	0
  4169  002992  6E1C               	movwf	___flmul@a^0,c
  4170  002994  0E00               	movlw	0
  4171  002996  6E1D               	movwf	(___flmul@a+1)^0,c
  4172  002998  0EA0               	movlw	160
  4173  00299A  6E1E               	movwf	(___flmul@a+2)^0,c
  4174  00299C  0E41               	movlw	65
  4175  00299E  6E1F               	movwf	(___flmul@a+3)^0,c
  4176  0029A0  EC05  F00A         	call	___flmul	;wreg free
  4177  0029A4  C018  F064         	movff	?___flmul,humidade@Humid
  4178  0029A8  C019  F065         	movff	?___flmul+1,humidade@Humid+1
  4179  0029AC  C01A  F066         	movff	?___flmul+2,humidade@Humid+2
  4180  0029B0  C01B  F067         	movff	?___flmul+3,humidade@Humid+3
  4181  0029B4                     
  4182                           ;main.c: 603:     return Humid;
  4183  0029B4  C064  F060         	movff	humidade@Humid,?_humidade
  4184  0029B8  C065  F061         	movff	humidade@Humid+1,?_humidade+1
  4185  0029BC  C066  F062         	movff	humidade@Humid+2,?_humidade+2
  4186  0029C0  C067  F063         	movff	humidade@Humid+3,?_humidade+3
  4187  0029C4  0012               	return		;funcret
  4188  0029C6                     __end_of_humidade:
  4189                           	callstack 0
  4190                           
  4191 ;; *************** function _gasRead *****************
  4192 ;; Defined at:
  4193 ;;		line 607 in file "main.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;		None
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;  gas             4    4[BANK0 ] float 
  4198 ;;  rawAnalog       2   12[BANK0 ] unsigned int 
  4199 ;; Return value:  Size  Location     Type
  4200 ;;                  4    0[BANK0 ] float 
  4201 ;; Registers used:
  4202 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4203 ;; Tracked objects:
  4204 ;;		On entry : 0/0
  4205 ;;		On exit  : 0/0
  4206 ;;		Unchanged: 0/0
  4207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4208 ;;      Params:         0       4       0       0       0       0       0       0       0
  4209 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4210 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4211 ;;      Totals:         0      14       0       0       0       0       0       0       0
  4212 ;;Total ram usage:       14 bytes
  4213 ;; Hardware stack levels used: 1
  4214 ;; Hardware stack levels required when called: 3
  4215 ;; This function calls:
  4216 ;;		___fldiv
  4217 ;;		___flmul
  4218 ;;		___xxtofl
  4219 ;;		_readAnalog
  4220 ;; This function is called by:
  4221 ;;		_main
  4222 ;;		_displayMenu
  4223 ;; This function uses a non-reentrant model
  4224 ;;
  4225                           
  4226                           	psect	text10
  4227  0029C6                     __ptext10:
  4228                           	callstack 0
  4229  0029C6                     _gasRead:
  4230                           	callstack 27
  4231  0029C6                     
  4232                           ;main.c: 608:     unsigned int rawAnalog = readAnalog(2);
  4233  0029C6  0E02               	movlw	2
  4234  0029C8  EC71  F016         	call	_readAnalog
  4235  0029CC  C00A  F06C         	movff	?_readAnalog,gasRead@rawAnalog
  4236  0029D0  C00B  F06D         	movff	?_readAnalog+1,gasRead@rawAnalog+1
  4237  0029D4                     
  4238                           ;main.c: 609:     float gas = ((rawAnalog * 5.0) / 1023.0) * 20;
  4239  0029D4  0E00               	movlw	0
  4240  0029D6  6E35               	movwf	___fldiv@a^0,c
  4241  0029D8  0EC0               	movlw	192
  4242  0029DA  6E36               	movwf	(___fldiv@a+1)^0,c
  4243  0029DC  0E7F               	movlw	127
  4244  0029DE  6E37               	movwf	(___fldiv@a+2)^0,c
  4245  0029E0  0E44               	movlw	68
  4246  0029E2  6E38               	movwf	(___fldiv@a+3)^0,c
  4247  0029E4  0E00               	movlw	0
  4248  0029E6  6E1C               	movwf	___flmul@a^0,c
  4249  0029E8  0E00               	movlw	0
  4250  0029EA  6E1D               	movwf	(___flmul@a+1)^0,c
  4251  0029EC  0EA0               	movlw	160
  4252  0029EE  6E1E               	movwf	(___flmul@a+2)^0,c
  4253  0029F0  0E40               	movlw	64
  4254  0029F2  6E1F               	movwf	(___flmul@a+3)^0,c
  4255  0029F4  C06C  F00A         	movff	gasRead@rawAnalog,___xxtofl@val
  4256  0029F8  C06D  F00B         	movff	gasRead@rawAnalog+1,___xxtofl@val+1
  4257  0029FC  6A0C               	clrf	(___xxtofl@val+2)^0,c
  4258  0029FE  6A0D               	clrf	(___xxtofl@val+3)^0,c
  4259  002A00  0E00               	movlw	0
  4260  002A02  EC3B  F010         	call	___xxtofl
  4261  002A06  C00A  F018         	movff	?___xxtofl,___flmul@b
  4262  002A0A  C00B  F019         	movff	?___xxtofl+1,___flmul@b+1
  4263  002A0E  C00C  F01A         	movff	?___xxtofl+2,___flmul@b+2
  4264  002A12  C00D  F01B         	movff	?___xxtofl+3,___flmul@b+3
  4265  002A16  EC05  F00A         	call	___flmul	;wreg free
  4266  002A1A  C018  F031         	movff	?___flmul,___fldiv@b
  4267  002A1E  C019  F032         	movff	?___flmul+1,___fldiv@b+1
  4268  002A22  C01A  F033         	movff	?___flmul+2,___fldiv@b+2
  4269  002A26  C01B  F034         	movff	?___flmul+3,___fldiv@b+3
  4270  002A2A  EC1A  F00C         	call	___fldiv	;wreg free
  4271  002A2E  C031  F068         	movff	?___fldiv,_gasRead$1535
  4272  002A32  C032  F069         	movff	?___fldiv+1,_gasRead$1535+1
  4273  002A36  C033  F06A         	movff	?___fldiv+2,_gasRead$1535+2
  4274  002A3A  C034  F06B         	movff	?___fldiv+3,_gasRead$1535+3
  4275  002A3E                     
  4276                           ;main.c: 609:     float gas = ((rawAnalog * 5.0) / 1023.0) * 20;
  4277  002A3E  C068  F018         	movff	_gasRead$1535,___flmul@b
  4278  002A42  C069  F019         	movff	_gasRead$1535+1,___flmul@b+1
  4279  002A46  C06A  F01A         	movff	_gasRead$1535+2,___flmul@b+2
  4280  002A4A  C06B  F01B         	movff	_gasRead$1535+3,___flmul@b+3
  4281  002A4E  0E00               	movlw	0
  4282  002A50  6E1C               	movwf	___flmul@a^0,c
  4283  002A52  0E00               	movlw	0
  4284  002A54  6E1D               	movwf	(___flmul@a+1)^0,c
  4285  002A56  0EA0               	movlw	160
  4286  002A58  6E1E               	movwf	(___flmul@a+2)^0,c
  4287  002A5A  0E41               	movlw	65
  4288  002A5C  6E1F               	movwf	(___flmul@a+3)^0,c
  4289  002A5E  EC05  F00A         	call	___flmul	;wreg free
  4290  002A62  C018  F064         	movff	?___flmul,gasRead@gas
  4291  002A66  C019  F065         	movff	?___flmul+1,gasRead@gas+1
  4292  002A6A  C01A  F066         	movff	?___flmul+2,gasRead@gas+2
  4293  002A6E  C01B  F067         	movff	?___flmul+3,gasRead@gas+3
  4294  002A72                     
  4295                           ;main.c: 611:     return gas;
  4296  002A72  C064  F060         	movff	gasRead@gas,?_gasRead
  4297  002A76  C065  F061         	movff	gasRead@gas+1,?_gasRead+1
  4298  002A7A  C066  F062         	movff	gasRead@gas+2,?_gasRead+2
  4299  002A7E  C067  F063         	movff	gasRead@gas+3,?_gasRead+3
  4300  002A82  0012               	return		;funcret
  4301  002A84                     __end_of_gasRead:
  4302                           	callstack 0
  4303                           
  4304 ;; *************** function _readAnalog *****************
  4305 ;; Defined at:
  4306 ;;		line 573 in file "main.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;  pin             1    wreg     unsigned char 
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;  pin             1   15[COMRAM] unsigned char 
  4311 ;;  result          2   13[COMRAM] unsigned int 
  4312 ;; Return value:  Size  Location     Type
  4313 ;;                  2    9[COMRAM] unsigned int 
  4314 ;; Registers used:
  4315 ;;		wreg, status,2, status,0
  4316 ;; Tracked objects:
  4317 ;;		On entry : 0/0
  4318 ;;		On exit  : 0/0
  4319 ;;		Unchanged: 0/0
  4320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4321 ;;      Params:         2       0       0       0       0       0       0       0       0
  4322 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4323 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4324 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4325 ;;Total ram usage:        7 bytes
  4326 ;; Hardware stack levels used: 1
  4327 ;; Hardware stack levels required when called: 2
  4328 ;; This function calls:
  4329 ;;		Nothing
  4330 ;; This function is called by:
  4331 ;;		_tempRead
  4332 ;;		_humidade
  4333 ;;		_gasRead
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336                           
  4337                           	psect	text11
  4338  002CE2                     __ptext11:
  4339                           	callstack 0
  4340  002CE2                     _readAnalog:
  4341                           	callstack 27
  4342                           
  4343                           ;incstack = 0
  4344                           ;readAnalog@pin stored from wreg
  4345  002CE2  6E10               	movwf	readAnalog@pin^0,c
  4346  002CE4                     
  4347                           ;main.c: 575:     if (pin > 12) {
  4348  002CE4  0E0C               	movlw	12
  4349  002CE6  6410               	cpfsgt	readAnalog@pin^0,c
  4350  002CE8  EF78  F016         	goto	u2451
  4351  002CEC  EF7A  F016         	goto	u2450
  4352  002CF0                     u2451:
  4353  002CF0  EF80  F016         	goto	l2959
  4354  002CF4                     u2450:
  4355  002CF4                     
  4356                           ;main.c: 576:         return 0;
  4357  002CF4  0E00               	movlw	0
  4358  002CF6  6E0B               	movwf	(?_readAnalog+1)^0,c
  4359  002CF8  0E00               	movlw	0
  4360  002CFA  6E0A               	movwf	?_readAnalog^0,c
  4361  002CFC  EFA7  F016         	goto	l232
  4362  002D00                     l2959:
  4363                           
  4364                           ;main.c: 579:     ADCON0bits.CHS = pin;
  4365  002D00  C010  F00C         	movff	readAnalog@pin,??_readAnalog
  4366  002D04  460C               	rlncf	??_readAnalog^0,f,c
  4367  002D06  460C               	rlncf	??_readAnalog^0,f,c
  4368  002D08  50C2               	movf	194,w,c	;volatile
  4369  002D0A  180C               	xorwf	??_readAnalog^0,w,c
  4370  002D0C  0BC3               	andlw	-61
  4371  002D0E  180C               	xorwf	??_readAnalog^0,w,c
  4372  002D10  6EC2               	movwf	194,c	;volatile
  4373  002D12                     
  4374                           ;main.c: 580:     _delay((unsigned long)((2)*(20000000/4000.0)));
  4375  002D12  0E0D               	movlw	13
  4376  002D14  6E0C               	movwf	??_readAnalog^0,c
  4377  002D16  0EFC               	movlw	252
  4378  002D18                     u5607:
  4379  002D18  2EE8               	decfsz	wreg,f,c
  4380  002D1A  D7FE               	bra	u5607
  4381  002D1C  2E0C               	decfsz	??_readAnalog^0,f,c
  4382  002D1E  D7FC               	bra	u5607
  4383  002D20                     
  4384                           ;main.c: 581:     ADCON0bits.GO_DONE = 1;
  4385  002D20  82C2               	bsf	194,1,c	;volatile
  4386  002D22                     l233:
  4387  002D22  B2C2               	btfsc	194,1,c	;volatile
  4388  002D24  EF96  F016         	goto	u2461
  4389  002D28  EF98  F016         	goto	u2460
  4390  002D2C                     u2461:
  4391  002D2C  EF91  F016         	goto	l233
  4392  002D30                     u2460:
  4393  002D30                     
  4394                           ;main.c: 585:     result = (ADRESH << 8) | ADRESL;
  4395  002D30  50C3               	movf	195,w,c	;volatile
  4396  002D32  CFC4 F00C          	movff	4036,??_readAnalog	;volatile
  4397  002D36  6A0D               	clrf	(??_readAnalog+1)^0,c
  4398  002D38  C00C  F00D         	movff	??_readAnalog,??_readAnalog+1
  4399  002D3C  6A0C               	clrf	??_readAnalog^0,c
  4400  002D3E  100C               	iorwf	??_readAnalog^0,w,c
  4401  002D40  6E0E               	movwf	readAnalog@result^0,c
  4402  002D42  500D               	movf	(??_readAnalog+1)^0,w,c
  4403  002D44  6E0F               	movwf	(readAnalog@result+1)^0,c
  4404  002D46                     
  4405                           ;main.c: 586:     return result;
  4406  002D46  C00E  F00A         	movff	readAnalog@result,?_readAnalog
  4407  002D4A  C00F  F00B         	movff	readAnalog@result+1,?_readAnalog+1
  4408  002D4E                     l232:
  4409  002D4E  0012               	return		;funcret
  4410  002D50                     __end_of_readAnalog:
  4411                           	callstack 0
  4412                           
  4413 ;; *************** function ___fldiv *****************
  4414 ;; Defined at:
  4415 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;  b               4   48[COMRAM] unsigned int 
  4418 ;;  a               4   52[COMRAM] unsigned int 
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;  grs             4   67[COMRAM] unsigned long 
  4421 ;;  rem             4   60[COMRAM] unsigned long 
  4422 ;;  new_exp         2   65[COMRAM] short 
  4423 ;;  aexp            1   72[COMRAM] unsigned char 
  4424 ;;  bexp            1   71[COMRAM] unsigned char 
  4425 ;;  sign            1   64[COMRAM] unsigned char 
  4426 ;; Return value:  Size  Location     Type
  4427 ;;                  4   48[COMRAM] unsigned char 
  4428 ;; Registers used:
  4429 ;;		wreg, status,2, status,0
  4430 ;; Tracked objects:
  4431 ;;		On entry : 0/0
  4432 ;;		On exit  : 0/0
  4433 ;;		Unchanged: 0/0
  4434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4435 ;;      Params:         8       0       0       0       0       0       0       0       0
  4436 ;;      Locals:        13       0       0       0       0       0       0       0       0
  4437 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4438 ;;      Totals:        25       0       0       0       0       0       0       0       0
  4439 ;;Total ram usage:       25 bytes
  4440 ;; Hardware stack levels used: 1
  4441 ;; Hardware stack levels required when called: 2
  4442 ;; This function calls:
  4443 ;;		Nothing
  4444 ;; This function is called by:
  4445 ;;		_tempRead
  4446 ;;		_humidade
  4447 ;;		_gasRead
  4448 ;; This function uses a non-reentrant model
  4449 ;;
  4450                           
  4451                           	psect	text12
  4452  001834                     __ptext12:
  4453                           	callstack 0
  4454  001834                     ___fldiv:
  4455                           	callstack 27
  4456  001834  5034               	movf	(___fldiv@b+3)^0,w,c
  4457  001836  0B80               	andlw	128
  4458  001838  6E41               	movwf	___fldiv@sign^0,c
  4459  00183A  5034               	movf	(___fldiv@b+3)^0,w,c
  4460  00183C  2434               	addwf	(___fldiv@b+3)^0,w,c
  4461  00183E  6E48               	movwf	___fldiv@bexp^0,c
  4462  001840  AE33               	btfss	(___fldiv@b+2)^0,7,c
  4463  001842  EF25  F00C         	goto	u2481
  4464  001846  EF27  F00C         	goto	u2480
  4465  00184A                     u2481:
  4466  00184A  EF28  F00C         	goto	l3065
  4467  00184E                     u2480:
  4468  00184E  8048               	bsf	___fldiv@bexp^0,0,c
  4469  001850                     l3065:
  4470  001850  5048               	movf	___fldiv@bexp^0,w,c
  4471  001852  B4D8               	btfsc	status,2,c
  4472  001854  EF2E  F00C         	goto	u2491
  4473  001858  EF30  F00C         	goto	u2490
  4474  00185C                     u2491:
  4475  00185C  EF45  F00C         	goto	l3075
  4476  001860                     u2490:
  4477  001860  2848               	incf	___fldiv@bexp^0,w,c
  4478  001862  A4D8               	btfss	status,2,c
  4479  001864  EF36  F00C         	goto	u2501
  4480  001868  EF38  F00C         	goto	u2500
  4481  00186C                     u2501:
  4482  00186C  EF40  F00C         	goto	l3071
  4483  001870                     u2500:
  4484  001870  0E00               	movlw	0
  4485  001872  6E31               	movwf	___fldiv@b^0,c
  4486  001874  0E00               	movlw	0
  4487  001876  6E32               	movwf	(___fldiv@b+1)^0,c
  4488  001878  0E00               	movlw	0
  4489  00187A  6E33               	movwf	(___fldiv@b+2)^0,c
  4490  00187C  0E00               	movlw	0
  4491  00187E  6E34               	movwf	(___fldiv@b+3)^0,c
  4492  001880                     l3071:
  4493  001880  8E33               	bsf	(___fldiv@b+2)^0,7,c
  4494  001882  0E00               	movlw	0
  4495  001884  6E34               	movwf	(___fldiv@b+3)^0,c
  4496  001886  EF4D  F00C         	goto	l3077
  4497  00188A                     l3075:
  4498  00188A  0E00               	movlw	0
  4499  00188C  6E31               	movwf	___fldiv@b^0,c
  4500  00188E  0E00               	movlw	0
  4501  001890  6E32               	movwf	(___fldiv@b+1)^0,c
  4502  001892  0E00               	movlw	0
  4503  001894  6E33               	movwf	(___fldiv@b+2)^0,c
  4504  001896  0E00               	movlw	0
  4505  001898  6E34               	movwf	(___fldiv@b+3)^0,c
  4506  00189A                     l3077:
  4507  00189A  5038               	movf	(___fldiv@a+3)^0,w,c
  4508  00189C  0B80               	andlw	128
  4509  00189E  1A41               	xorwf	___fldiv@sign^0,f,c
  4510  0018A0  5038               	movf	(___fldiv@a+3)^0,w,c
  4511  0018A2  2438               	addwf	(___fldiv@a+3)^0,w,c
  4512  0018A4  6E49               	movwf	___fldiv@aexp^0,c
  4513  0018A6  AE37               	btfss	(___fldiv@a+2)^0,7,c
  4514  0018A8  EF58  F00C         	goto	u2511
  4515  0018AC  EF5A  F00C         	goto	u2510
  4516  0018B0                     u2511:
  4517  0018B0  EF5B  F00C         	goto	l3085
  4518  0018B4                     u2510:
  4519  0018B4  8049               	bsf	___fldiv@aexp^0,0,c
  4520  0018B6                     l3085:
  4521  0018B6  5049               	movf	___fldiv@aexp^0,w,c
  4522  0018B8  B4D8               	btfsc	status,2,c
  4523  0018BA  EF61  F00C         	goto	u2521
  4524  0018BE  EF63  F00C         	goto	u2520
  4525  0018C2                     u2521:
  4526  0018C2  EF78  F00C         	goto	l3095
  4527  0018C6                     u2520:
  4528  0018C6  2849               	incf	___fldiv@aexp^0,w,c
  4529  0018C8  A4D8               	btfss	status,2,c
  4530  0018CA  EF69  F00C         	goto	u2531
  4531  0018CE  EF6B  F00C         	goto	u2530
  4532  0018D2                     u2531:
  4533  0018D2  EF73  F00C         	goto	l3091
  4534  0018D6                     u2530:
  4535  0018D6  0E00               	movlw	0
  4536  0018D8  6E35               	movwf	___fldiv@a^0,c
  4537  0018DA  0E00               	movlw	0
  4538  0018DC  6E36               	movwf	(___fldiv@a+1)^0,c
  4539  0018DE  0E00               	movlw	0
  4540  0018E0  6E37               	movwf	(___fldiv@a+2)^0,c
  4541  0018E2  0E00               	movlw	0
  4542  0018E4  6E38               	movwf	(___fldiv@a+3)^0,c
  4543  0018E6                     l3091:
  4544  0018E6  8E37               	bsf	(___fldiv@a+2)^0,7,c
  4545  0018E8  0E00               	movlw	0
  4546  0018EA  6E38               	movwf	(___fldiv@a+3)^0,c
  4547  0018EC  EF80  F00C         	goto	l3097
  4548  0018F0                     l3095:
  4549  0018F0  0E00               	movlw	0
  4550  0018F2  6E35               	movwf	___fldiv@a^0,c
  4551  0018F4  0E00               	movlw	0
  4552  0018F6  6E36               	movwf	(___fldiv@a+1)^0,c
  4553  0018F8  0E00               	movlw	0
  4554  0018FA  6E37               	movwf	(___fldiv@a+2)^0,c
  4555  0018FC  0E00               	movlw	0
  4556  0018FE  6E38               	movwf	(___fldiv@a+3)^0,c
  4557  001900                     l3097:
  4558  001900  5035               	movf	___fldiv@a^0,w,c
  4559  001902  1036               	iorwf	(___fldiv@a+1)^0,w,c
  4560  001904  1037               	iorwf	(___fldiv@a+2)^0,w,c
  4561  001906  1038               	iorwf	(___fldiv@a+3)^0,w,c
  4562  001908  A4D8               	btfss	status,2,c
  4563  00190A  EF89  F00C         	goto	u2541
  4564  00190E  EF8B  F00C         	goto	u2540
  4565  001912                     u2541:
  4566  001912  EFA3  F00C         	goto	l3109
  4567  001916                     u2540:
  4568  001916  0E00               	movlw	0
  4569  001918  6E31               	movwf	___fldiv@b^0,c
  4570  00191A  0E00               	movlw	0
  4571  00191C  6E32               	movwf	(___fldiv@b+1)^0,c
  4572  00191E  0E00               	movlw	0
  4573  001920  6E33               	movwf	(___fldiv@b+2)^0,c
  4574  001922  0E00               	movlw	0
  4575  001924  6E34               	movwf	(___fldiv@b+3)^0,c
  4576  001926  0E80               	movlw	128
  4577  001928  1233               	iorwf	(___fldiv@b+2)^0,f,c
  4578  00192A  0E7F               	movlw	127
  4579  00192C  1234               	iorwf	(___fldiv@b+3)^0,f,c
  4580  00192E                     l3103:
  4581  00192E  5041               	movf	___fldiv@sign^0,w,c
  4582  001930  1234               	iorwf	(___fldiv@b+3)^0,f,c
  4583  001932  C031  F031         	movff	___fldiv@b,?___fldiv
  4584  001936  C032  F032         	movff	___fldiv@b+1,?___fldiv+1
  4585  00193A  C033  F033         	movff	___fldiv@b+2,?___fldiv+2
  4586  00193E  C034  F034         	movff	___fldiv@b+3,?___fldiv+3
  4587  001942  EFE6  F00D         	goto	l968
  4588  001946                     l3109:
  4589  001946  5048               	movf	___fldiv@bexp^0,w,c
  4590  001948  A4D8               	btfss	status,2,c
  4591  00194A  EFA9  F00C         	goto	u2551
  4592  00194E  EFAB  F00C         	goto	u2550
  4593  001952                     u2551:
  4594  001952  EFB5  F00C         	goto	l3117
  4595  001956                     u2550:
  4596  001956  0E00               	movlw	0
  4597  001958  6E31               	movwf	?___fldiv^0,c
  4598  00195A  0E00               	movlw	0
  4599  00195C  6E32               	movwf	(?___fldiv+1)^0,c
  4600  00195E  0E00               	movlw	0
  4601  001960  6E33               	movwf	(?___fldiv+2)^0,c
  4602  001962  0E00               	movlw	0
  4603  001964  6E34               	movwf	(?___fldiv+3)^0,c
  4604  001966  EFE6  F00D         	goto	l968
  4605  00196A                     l3117:
  4606  00196A  5049               	movf	___fldiv@aexp^0,w,c
  4607  00196C  C048  F039         	movff	___fldiv@bexp,??___fldiv
  4608  001970  6A3A               	clrf	(??___fldiv+1)^0,c
  4609  001972  5E39               	subwf	??___fldiv^0,f,c
  4610  001974  0E00               	movlw	0
  4611  001976  5A3A               	subwfb	(??___fldiv+1)^0,f,c
  4612  001978  0E7F               	movlw	127
  4613  00197A  2439               	addwf	??___fldiv^0,w,c
  4614  00197C  6E42               	movwf	___fldiv@new_exp^0,c
  4615  00197E  0E00               	movlw	0
  4616  001980  203A               	addwfc	(??___fldiv+1)^0,w,c
  4617  001982  6E43               	movwf	(___fldiv@new_exp+1)^0,c
  4618  001984  C031  F03D         	movff	___fldiv@b,___fldiv@rem
  4619  001988  C032  F03E         	movff	___fldiv@b+1,___fldiv@rem+1
  4620  00198C  C033  F03F         	movff	___fldiv@b+2,___fldiv@rem+2
  4621  001990  C034  F040         	movff	___fldiv@b+3,___fldiv@rem+3
  4622  001994  0E00               	movlw	0
  4623  001996  6E31               	movwf	___fldiv@b^0,c
  4624  001998  0E00               	movlw	0
  4625  00199A  6E32               	movwf	(___fldiv@b+1)^0,c
  4626  00199C  0E00               	movlw	0
  4627  00199E  6E33               	movwf	(___fldiv@b+2)^0,c
  4628  0019A0  0E00               	movlw	0
  4629  0019A2  6E34               	movwf	(___fldiv@b+3)^0,c
  4630  0019A4  0E00               	movlw	0
  4631  0019A6  6E44               	movwf	___fldiv@grs^0,c
  4632  0019A8  0E00               	movlw	0
  4633  0019AA  6E45               	movwf	(___fldiv@grs+1)^0,c
  4634  0019AC  0E00               	movlw	0
  4635  0019AE  6E46               	movwf	(___fldiv@grs+2)^0,c
  4636  0019B0  0E00               	movlw	0
  4637  0019B2  6E47               	movwf	(___fldiv@grs+3)^0,c
  4638  0019B4  0E00               	movlw	0
  4639  0019B6  6E49               	movwf	___fldiv@aexp^0,c
  4640  0019B8  EF16  F00D         	goto	l970
  4641  0019BC                     l3127:
  4642  0019BC  5049               	movf	___fldiv@aexp^0,w,c
  4643  0019BE  B4D8               	btfsc	status,2,c
  4644  0019C0  EFE4  F00C         	goto	u2561
  4645  0019C4  EFE6  F00C         	goto	u2560
  4646  0019C8                     u2561:
  4647  0019C8  EFFD  F00C         	goto	l3135
  4648  0019CC                     u2560:
  4649  0019CC  90D8               	bcf	status,0,c
  4650  0019CE  363D               	rlcf	___fldiv@rem^0,f,c
  4651  0019D0  363E               	rlcf	(___fldiv@rem+1)^0,f,c
  4652  0019D2  363F               	rlcf	(___fldiv@rem+2)^0,f,c
  4653  0019D4  3640               	rlcf	(___fldiv@rem+3)^0,f,c
  4654  0019D6  90D8               	bcf	status,0,c
  4655  0019D8  3631               	rlcf	___fldiv@b^0,f,c
  4656  0019DA  3632               	rlcf	(___fldiv@b+1)^0,f,c
  4657  0019DC  3633               	rlcf	(___fldiv@b+2)^0,f,c
  4658  0019DE  3634               	rlcf	(___fldiv@b+3)^0,f,c
  4659  0019E0  AE47               	btfss	(___fldiv@grs+3)^0,7,c
  4660  0019E2  EFF5  F00C         	goto	u2571
  4661  0019E6  EFF7  F00C         	goto	u2570
  4662  0019EA                     u2571:
  4663  0019EA  EFF8  F00C         	goto	l973
  4664  0019EE                     u2570:
  4665  0019EE  8031               	bsf	___fldiv@b^0,0,c
  4666  0019F0                     l973:
  4667  0019F0  90D8               	bcf	status,0,c
  4668  0019F2  3644               	rlcf	___fldiv@grs^0,f,c
  4669  0019F4  3645               	rlcf	(___fldiv@grs+1)^0,f,c
  4670  0019F6  3646               	rlcf	(___fldiv@grs+2)^0,f,c
  4671  0019F8  3647               	rlcf	(___fldiv@grs+3)^0,f,c
  4672  0019FA                     l3135:
  4673  0019FA  5035               	movf	___fldiv@a^0,w,c
  4674  0019FC  5C3D               	subwf	___fldiv@rem^0,w,c
  4675  0019FE  5036               	movf	(___fldiv@a+1)^0,w,c
  4676  001A00  583E               	subwfb	(___fldiv@rem+1)^0,w,c
  4677  001A02  5037               	movf	(___fldiv@a+2)^0,w,c
  4678  001A04  583F               	subwfb	(___fldiv@rem+2)^0,w,c
  4679  001A06  5038               	movf	(___fldiv@a+3)^0,w,c
  4680  001A08  5840               	subwfb	(___fldiv@rem+3)^0,w,c
  4681  001A0A  A0D8               	btfss	status,0,c
  4682  001A0C  EF0A  F00D         	goto	u2581
  4683  001A10  EF0C  F00D         	goto	u2580
  4684  001A14                     u2581:
  4685  001A14  EF15  F00D         	goto	l3141
  4686  001A18                     u2580:
  4687  001A18  8C47               	bsf	(___fldiv@grs+3)^0,6,c
  4688  001A1A  5035               	movf	___fldiv@a^0,w,c
  4689  001A1C  5E3D               	subwf	___fldiv@rem^0,f,c
  4690  001A1E  5036               	movf	(___fldiv@a+1)^0,w,c
  4691  001A20  5A3E               	subwfb	(___fldiv@rem+1)^0,f,c
  4692  001A22  5037               	movf	(___fldiv@a+2)^0,w,c
  4693  001A24  5A3F               	subwfb	(___fldiv@rem+2)^0,f,c
  4694  001A26  5038               	movf	(___fldiv@a+3)^0,w,c
  4695  001A28  5A40               	subwfb	(___fldiv@rem+3)^0,f,c
  4696  001A2A                     l3141:
  4697  001A2A  2A49               	incf	___fldiv@aexp^0,f,c
  4698  001A2C                     l970:
  4699  001A2C  0E19               	movlw	25
  4700  001A2E  6449               	cpfsgt	___fldiv@aexp^0,c
  4701  001A30  EF1C  F00D         	goto	u2591
  4702  001A34  EF1E  F00D         	goto	u2590
  4703  001A38                     u2591:
  4704  001A38  EFDE  F00C         	goto	l3127
  4705  001A3C                     u2590:
  4706  001A3C  503D               	movf	___fldiv@rem^0,w,c
  4707  001A3E  103E               	iorwf	(___fldiv@rem+1)^0,w,c
  4708  001A40  103F               	iorwf	(___fldiv@rem+2)^0,w,c
  4709  001A42  1040               	iorwf	(___fldiv@rem+3)^0,w,c
  4710  001A44  B4D8               	btfsc	status,2,c
  4711  001A46  EF27  F00D         	goto	u2601
  4712  001A4A  EF29  F00D         	goto	u2600
  4713  001A4E                     u2601:
  4714  001A4E  EF41  F00D         	goto	l3153
  4715  001A52                     u2600:
  4716  001A52  8044               	bsf	___fldiv@grs^0,0,c
  4717  001A54  EF41  F00D         	goto	l3153
  4718  001A58                     l3147:
  4719  001A58  90D8               	bcf	status,0,c
  4720  001A5A  3631               	rlcf	___fldiv@b^0,f,c
  4721  001A5C  3632               	rlcf	(___fldiv@b+1)^0,f,c
  4722  001A5E  3633               	rlcf	(___fldiv@b+2)^0,f,c
  4723  001A60  3634               	rlcf	(___fldiv@b+3)^0,f,c
  4724  001A62  AE47               	btfss	(___fldiv@grs+3)^0,7,c
  4725  001A64  EF36  F00D         	goto	u2611
  4726  001A68  EF38  F00D         	goto	u2610
  4727  001A6C                     u2611:
  4728  001A6C  EF39  F00D         	goto	l979
  4729  001A70                     u2610:
  4730  001A70  8031               	bsf	___fldiv@b^0,0,c
  4731  001A72                     l979:
  4732  001A72  90D8               	bcf	status,0,c
  4733  001A74  3644               	rlcf	___fldiv@grs^0,f,c
  4734  001A76  3645               	rlcf	(___fldiv@grs+1)^0,f,c
  4735  001A78  3646               	rlcf	(___fldiv@grs+2)^0,f,c
  4736  001A7A  3647               	rlcf	(___fldiv@grs+3)^0,f,c
  4737  001A7C  0642               	decf	___fldiv@new_exp^0,f,c
  4738  001A7E  A0D8               	btfss	status,0,c
  4739  001A80  0643               	decf	(___fldiv@new_exp+1)^0,f,c
  4740  001A82                     l3153:
  4741  001A82  AE33               	btfss	(___fldiv@b+2)^0,7,c
  4742  001A84  EF46  F00D         	goto	u2621
  4743  001A88  EF48  F00D         	goto	u2620
  4744  001A8C                     u2621:
  4745  001A8C  EF2C  F00D         	goto	l3147
  4746  001A90                     u2620:
  4747  001A90  0E00               	movlw	0
  4748  001A92  6E49               	movwf	___fldiv@aexp^0,c
  4749  001A94  AE47               	btfss	(___fldiv@grs+3)^0,7,c
  4750  001A96  EF4F  F00D         	goto	u2631
  4751  001A9A  EF51  F00D         	goto	u2630
  4752  001A9E                     u2631:
  4753  001A9E  EF75  F00D         	goto	l981
  4754  001AA2                     u2630:
  4755  001AA2  0EFF               	movlw	255
  4756  001AA4  1444               	andwf	___fldiv@grs^0,w,c
  4757  001AA6  6E39               	movwf	??___fldiv^0,c
  4758  001AA8  0EFF               	movlw	255
  4759  001AAA  1445               	andwf	(___fldiv@grs+1)^0,w,c
  4760  001AAC  6E3A               	movwf	(??___fldiv+1)^0,c
  4761  001AAE  0EFF               	movlw	255
  4762  001AB0  1446               	andwf	(___fldiv@grs+2)^0,w,c
  4763  001AB2  6E3B               	movwf	(??___fldiv+2)^0,c
  4764  001AB4  0E7F               	movlw	127
  4765  001AB6  1447               	andwf	(___fldiv@grs+3)^0,w,c
  4766  001AB8  6E3C               	movwf	(??___fldiv+3)^0,c
  4767  001ABA  5039               	movf	??___fldiv^0,w,c
  4768  001ABC  103A               	iorwf	(??___fldiv+1)^0,w,c
  4769  001ABE  103B               	iorwf	(??___fldiv+2)^0,w,c
  4770  001AC0  103C               	iorwf	(??___fldiv+3)^0,w,c
  4771  001AC2  B4D8               	btfsc	status,2,c
  4772  001AC4  EF66  F00D         	goto	u2641
  4773  001AC8  EF68  F00D         	goto	u2640
  4774  001ACC                     u2641:
  4775  001ACC  EF6C  F00D         	goto	l982
  4776  001AD0                     u2640:
  4777  001AD0                     l3161:
  4778  001AD0  0E01               	movlw	1
  4779  001AD2  6E49               	movwf	___fldiv@aexp^0,c
  4780  001AD4  EF75  F00D         	goto	l981
  4781  001AD8                     l982:
  4782  001AD8  A031               	btfss	___fldiv@b^0,0,c
  4783  001ADA  EF71  F00D         	goto	u2651
  4784  001ADE  EF73  F00D         	goto	u2650
  4785  001AE2                     u2651:
  4786  001AE2  EF75  F00D         	goto	l981
  4787  001AE6                     u2650:
  4788  001AE6  EF68  F00D         	goto	l3161
  4789  001AEA                     l981:
  4790  001AEA  5049               	movf	___fldiv@aexp^0,w,c
  4791  001AEC  B4D8               	btfsc	status,2,c
  4792  001AEE  EF7B  F00D         	goto	u2661
  4793  001AF2  EF7D  F00D         	goto	u2660
  4794  001AF6                     u2661:
  4795  001AF6  EFA1  F00D         	goto	l3173
  4796  001AFA                     u2660:
  4797  001AFA  0E01               	movlw	1
  4798  001AFC  2631               	addwf	___fldiv@b^0,f,c
  4799  001AFE  0E00               	movlw	0
  4800  001B00  2232               	addwfc	(___fldiv@b+1)^0,f,c
  4801  001B02  2233               	addwfc	(___fldiv@b+2)^0,f,c
  4802  001B04  2234               	addwfc	(___fldiv@b+3)^0,f,c
  4803  001B06  A034               	btfss	(___fldiv@b+3)^0,0,c
  4804  001B08  EF88  F00D         	goto	u2671
  4805  001B0C  EF8A  F00D         	goto	u2670
  4806  001B10                     u2671:
  4807  001B10  EFA1  F00D         	goto	l3173
  4808  001B14                     u2670:
  4809  001B14  C031  F039         	movff	___fldiv@b,??___fldiv
  4810  001B18  C032  F03A         	movff	___fldiv@b+1,??___fldiv+1
  4811  001B1C  C033  F03B         	movff	___fldiv@b+2,??___fldiv+2
  4812  001B20  C034  F03C         	movff	___fldiv@b+3,??___fldiv+3
  4813  001B24  343C               	rlcf	(??___fldiv+3)^0,w,c
  4814  001B26  323C               	rrcf	(??___fldiv+3)^0,f,c
  4815  001B28  323B               	rrcf	(??___fldiv+2)^0,f,c
  4816  001B2A  323A               	rrcf	(??___fldiv+1)^0,f,c
  4817  001B2C  3239               	rrcf	??___fldiv^0,f,c
  4818  001B2E  C039  F031         	movff	??___fldiv,___fldiv@b
  4819  001B32  C03A  F032         	movff	??___fldiv+1,___fldiv@b+1
  4820  001B36  C03B  F033         	movff	??___fldiv+2,___fldiv@b+2
  4821  001B3A  C03C  F034         	movff	??___fldiv+3,___fldiv@b+3
  4822  001B3E  4A42               	infsnz	___fldiv@new_exp^0,f,c
  4823  001B40  2A43               	incf	(___fldiv@new_exp+1)^0,f,c
  4824  001B42                     l3173:
  4825  001B42  BE43               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4826  001B44  EFAC  F00D         	goto	u2681
  4827  001B48  5043               	movf	(___fldiv@new_exp+1)^0,w,c
  4828  001B4A  E108               	bnz	u2680
  4829  001B4C  2842               	incf	___fldiv@new_exp^0,w,c
  4830  001B4E  A0D8               	btfss	status,0,c
  4831  001B50  EFAC  F00D         	goto	u2681
  4832  001B54  EFAE  F00D         	goto	u2680
  4833  001B58                     u2681:
  4834  001B58  EFB9  F00D         	goto	l3177
  4835  001B5C                     u2680:
  4836  001B5C  0E00               	movlw	0
  4837  001B5E  6E43               	movwf	(___fldiv@new_exp+1)^0,c
  4838  001B60  6842               	setf	___fldiv@new_exp^0,c
  4839  001B62  0E00               	movlw	0
  4840  001B64  6E31               	movwf	___fldiv@b^0,c
  4841  001B66  0E00               	movlw	0
  4842  001B68  6E32               	movwf	(___fldiv@b+1)^0,c
  4843  001B6A  0E00               	movlw	0
  4844  001B6C  6E33               	movwf	(___fldiv@b+2)^0,c
  4845  001B6E  0E00               	movlw	0
  4846  001B70  6E34               	movwf	(___fldiv@b+3)^0,c
  4847  001B72                     l3177:
  4848  001B72  BE43               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4849  001B74  EFC6  F00D         	goto	u2690
  4850  001B78  5043               	movf	(___fldiv@new_exp+1)^0,w,c
  4851  001B7A  E106               	bnz	u2691
  4852  001B7C  0442               	decf	___fldiv@new_exp^0,w,c
  4853  001B7E  B0D8               	btfsc	status,0,c
  4854  001B80  EFC4  F00D         	goto	u2691
  4855  001B84  EFC6  F00D         	goto	u2690
  4856  001B88                     u2691:
  4857  001B88  EFD4  F00D         	goto	l3181
  4858  001B8C                     u2690:
  4859  001B8C  0E00               	movlw	0
  4860  001B8E  6E43               	movwf	(___fldiv@new_exp+1)^0,c
  4861  001B90  0E00               	movlw	0
  4862  001B92  6E42               	movwf	___fldiv@new_exp^0,c
  4863  001B94  0E00               	movlw	0
  4864  001B96  6E31               	movwf	___fldiv@b^0,c
  4865  001B98  0E00               	movlw	0
  4866  001B9A  6E32               	movwf	(___fldiv@b+1)^0,c
  4867  001B9C  0E00               	movlw	0
  4868  001B9E  6E33               	movwf	(___fldiv@b+2)^0,c
  4869  001BA0  0E00               	movlw	0
  4870  001BA2  6E34               	movwf	(___fldiv@b+3)^0,c
  4871  001BA4  0E00               	movlw	0
  4872  001BA6  6E41               	movwf	___fldiv@sign^0,c
  4873  001BA8                     l3181:
  4874  001BA8  C042  F048         	movff	___fldiv@new_exp,___fldiv@bexp
  4875  001BAC  A048               	btfss	___fldiv@bexp^0,0,c
  4876  001BAE  EFDB  F00D         	goto	u2701
  4877  001BB2  EFDD  F00D         	goto	u2700
  4878  001BB6                     u2701:
  4879  001BB6  EFE0  F00D         	goto	l3187
  4880  001BBA                     u2700:
  4881  001BBA  8E33               	bsf	(___fldiv@b+2)^0,7,c
  4882  001BBC  EFE1  F00D         	goto	l3189
  4883  001BC0                     l3187:
  4884  001BC0  9E33               	bcf	(___fldiv@b+2)^0,7,c
  4885  001BC2                     l3189:
  4886  001BC2  90D8               	bcf	status,0,c
  4887  001BC4  3048               	rrcf	___fldiv@bexp^0,w,c
  4888  001BC6  6E34               	movwf	(___fldiv@b+3)^0,c
  4889  001BC8  EF97  F00C         	goto	l3103
  4890  001BCC                     l968:
  4891  001BCC  0012               	return		;funcret
  4892  001BCE                     __end_of___fldiv:
  4893                           	callstack 0
  4894                           
  4895 ;; *************** function _floatToString *****************
  4896 ;; Defined at:
  4897 ;;		line 689 in file "main.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;  value           4   48[COMRAM] float 
  4900 ;;  buffer          2   52[COMRAM] PTR unsigned char 
  4901 ;;		 -> displayMenu@valueStr(10), 
  4902 ;;  precision       2   54[COMRAM] int 
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;  digit           2   12[BANK0 ] int 
  4905 ;;  temp            2   16[BANK0 ] int 
  4906 ;;  intStr         12    0[BANK0 ] unsigned char [12]
  4907 ;;  index           2   20[BANK0 ] int 
  4908 ;;  i               2   18[BANK0 ] int 
  4909 ;;  intPart         2   14[BANK0 ] int 
  4910 ;; Return value:  Size  Location     Type
  4911 ;;                  1    wreg      void 
  4912 ;; Registers used:
  4913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4914 ;; Tracked objects:
  4915 ;;		On entry : 0/0
  4916 ;;		On exit  : 0/0
  4917 ;;		Unchanged: 0/0
  4918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4919 ;;      Params:         8       0       0       0       0       0       0       0       0
  4920 ;;      Locals:         0      22       0       0       0       0       0       0       0
  4921 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4922 ;;      Totals:        10      22       0       0       0       0       0       0       0
  4923 ;;Total ram usage:       32 bytes
  4924 ;; Hardware stack levels used: 1
  4925 ;; Hardware stack levels required when called: 4
  4926 ;; This function calls:
  4927 ;;		___awdiv
  4928 ;;		___awmod
  4929 ;;		___flmul
  4930 ;;		___flneg
  4931 ;;		___flsub
  4932 ;;		___fltol
  4933 ;;		___xxtofl
  4934 ;; This function is called by:
  4935 ;;		_displayMenu
  4936 ;; This function uses a non-reentrant model
  4937 ;;
  4938                           
  4939                           	psect	text13
  4940  001BCE                     __ptext13:
  4941                           	callstack 0
  4942  001BCE                     _floatToString:
  4943                           	callstack 25
  4944  001BCE                     
  4945                           ;main.c: 690:     int intPart;;main.c: 691:     int i, index = 0;
  4946  001BCE  0E00               	movlw	0
  4947  001BD0  0100               	movlb	0	; () banked
  4948  001BD2  6F75               	movwf	(floatToString@index+1)& (0+255),b
  4949  001BD4  0E00               	movlw	0
  4950  001BD6  6F74               	movwf	floatToString@index& (0+255),b
  4951  001BD8                     
  4952                           ; BSR set to: 0
  4953                           ;main.c: 692:     char intStr[12];;main.c: 694:     if (value < 0) {
  4954  001BD8  BE34               	btfsc	(floatToString@value+3)^0,7,c
  4955  001BDA  EFF3  F00D         	goto	u4990
  4956  001BDE  EFF1  F00D         	goto	u4991
  4957  001BE2                     u4991:
  4958  001BE2  EF0D  F00E         	goto	l4939
  4959  001BE6                     u4990:
  4960  001BE6                     
  4961                           ; BSR set to: 0
  4962                           ;main.c: 695:         *buffer++ = '-';
  4963  001BE6  C035  FFD9         	movff	floatToString@buffer,fsr2l
  4964  001BEA  C036  FFDA         	movff	floatToString@buffer+1,fsr2h
  4965  001BEE  0E2D               	movlw	45
  4966  001BF0  6EDF               	movwf	indf2,c
  4967  001BF2                     
  4968                           ; BSR set to: 0
  4969  001BF2  4A35               	infsnz	floatToString@buffer^0,f,c
  4970  001BF4  2A36               	incf	(floatToString@buffer+1)^0,f,c
  4971  001BF6                     
  4972                           ; BSR set to: 0
  4973                           ;main.c: 696:         value = -value;
  4974  001BF6  C031  F00A         	movff	floatToString@value,___flneg@f1
  4975  001BFA  C032  F00B         	movff	floatToString@value+1,___flneg@f1+1
  4976  001BFE  C033  F00C         	movff	floatToString@value+2,___flneg@f1+2
  4977  001C02  C034  F00D         	movff	floatToString@value+3,___flneg@f1+3
  4978  001C06  EC92  F017         	call	___flneg	;wreg free
  4979  001C0A  C00A  F031         	movff	?___flneg,floatToString@value
  4980  001C0E  C00B  F032         	movff	?___flneg+1,floatToString@value+1
  4981  001C12  C00C  F033         	movff	?___flneg+2,floatToString@value+2
  4982  001C16  C00D  F034         	movff	?___flneg+3,floatToString@value+3
  4983  001C1A                     l4939:
  4984                           
  4985                           ;main.c: 699:     intPart = (int)value;
  4986  001C1A  C031  F00A         	movff	floatToString@value,___fltol@f1
  4987  001C1E  C032  F00B         	movff	floatToString@value+1,___fltol@f1+1
  4988  001C22  C033  F00C         	movff	floatToString@value+2,___fltol@f1+2
  4989  001C26  C034  F00D         	movff	floatToString@value+3,___fltol@f1+3
  4990  001C2A  EC47  F012         	call	___fltol	;wreg free
  4991  001C2E  C00A  F06E         	movff	?___fltol,floatToString@intPart
  4992  001C32  C00B  F06F         	movff	?___fltol+1,floatToString@intPart+1
  4993  001C36                     
  4994                           ;main.c: 700:     value -= intPart;
  4995  001C36  C031  F01A         	movff	floatToString@value,___flsub@b
  4996  001C3A  C032  F01B         	movff	floatToString@value+1,___flsub@b+1
  4997  001C3E  C033  F01C         	movff	floatToString@value+2,___flsub@b+2
  4998  001C42  C034  F01D         	movff	floatToString@value+3,___flsub@b+3
  4999  001C46  C06E  F00A         	movff	floatToString@intPart,___xxtofl@val
  5000  001C4A  C06F  F00B         	movff	floatToString@intPart+1,___xxtofl@val+1
  5001  001C4E  0E00               	movlw	0
  5002  001C50  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  5003  001C52  0EFF               	movlw	-1
  5004  001C54  6E0C               	movwf	(___xxtofl@val+2)^0,c
  5005  001C56  6E0D               	movwf	(___xxtofl@val+3)^0,c
  5006  001C58  0E01               	movlw	1
  5007  001C5A  EC3B  F010         	call	___xxtofl
  5008  001C5E  C00A  F01E         	movff	?___xxtofl,___flsub@a
  5009  001C62  C00B  F01F         	movff	?___xxtofl+1,___flsub@a+1
  5010  001C66  C00C  F020         	movff	?___xxtofl+2,___flsub@a+2
  5011  001C6A  C00D  F021         	movff	?___xxtofl+3,___flsub@a+3
  5012  001C6E  ECCB  F016         	call	___flsub	;wreg free
  5013  001C72  C01A  F031         	movff	?___flsub,floatToString@value
  5014  001C76  C01B  F032         	movff	?___flsub+1,floatToString@value+1
  5015  001C7A  C01C  F033         	movff	?___flsub+2,floatToString@value+2
  5016  001C7E  C01D  F034         	movff	?___flsub+3,floatToString@value+3
  5017  001C82                     
  5018                           ;main.c: 702:     if(intPart == 0) {
  5019  001C82  0100               	movlb	0	; () banked
  5020  001C84  516E               	movf	floatToString@intPart& (0+255),w,b
  5021  001C86  116F               	iorwf	(floatToString@intPart+1)& (0+255),w,b
  5022  001C88  A4D8               	btfss	status,2,c
  5023  001C8A  EF49  F00E         	goto	u5001
  5024  001C8E  EF4B  F00E         	goto	u5000
  5025  001C92                     u5001:
  5026  001C92  EF51  F00E         	goto	l283
  5027  001C96                     u5000:
  5028  001C96                     
  5029                           ; BSR set to: 0
  5030                           ;main.c: 703:         intStr[index++] = '0';
  5031  001C96  0E30               	movlw	48
  5032  001C98  6F60               	movwf	floatToString@intStr& (0+255),b
  5033  001C9A                     
  5034                           ; BSR set to: 0
  5035  001C9A  4B74               	infsnz	floatToString@index& (0+255),f,b
  5036  001C9C  2B75               	incf	(floatToString@index+1)& (0+255),f,b
  5037                           
  5038                           ;main.c: 704:     } else {
  5039  001C9E  EF8B  F00E         	goto	l4959
  5040  001CA2                     l283:
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;main.c: 705:         int temp = intPart;
  5044  001CA2  C06E  F070         	movff	floatToString@intPart,floatToString@temp
  5045  001CA6  C06F  F071         	movff	floatToString@intPart+1,floatToString@temp+1
  5046  001CAA                     
  5047                           ; BSR set to: 0
  5048                           ;main.c: 706:         index = 0;
  5049  001CAA  0E00               	movlw	0
  5050  001CAC  6F75               	movwf	(floatToString@index+1)& (0+255),b
  5051  001CAE  0E00               	movlw	0
  5052  001CB0  6F74               	movwf	floatToString@index& (0+255),b
  5053  001CB2                     l4951:
  5054                           
  5055                           ; BSR set to: 0
  5056                           ;main.c: 708:             intStr[index++] = (temp % 10) + '0';
  5057  001CB2  0E60               	movlw	low floatToString@intStr
  5058  001CB4  2574               	addwf	floatToString@index& (0+255),w,b
  5059  001CB6  6ED9               	movwf	fsr2l,c
  5060  001CB8  0E00               	movlw	high floatToString@intStr
  5061  001CBA  2175               	addwfc	(floatToString@index+1)& (0+255),w,b
  5062  001CBC  6EDA               	movwf	fsr2h,c
  5063  001CBE  C070  F00A         	movff	floatToString@temp,___awmod@dividend
  5064  001CC2  C071  F00B         	movff	floatToString@temp+1,___awmod@dividend+1
  5065  001CC6  0E00               	movlw	0
  5066  001CC8  6E0D               	movwf	(___awmod@divisor+1)^0,c
  5067  001CCA  0E0A               	movlw	10
  5068  001CCC  6E0C               	movwf	___awmod@divisor^0,c
  5069  001CCE  EC42  F015         	call	___awmod	;wreg free
  5070  001CD2  500A               	movf	?___awmod^0,w,c
  5071  001CD4  0F30               	addlw	48
  5072  001CD6  6EDF               	movwf	indf2,c
  5073  001CD8  0100               	movlb	0	; () banked
  5074  001CDA  4B74               	infsnz	floatToString@index& (0+255),f,b
  5075  001CDC  2B75               	incf	(floatToString@index+1)& (0+255),f,b
  5076  001CDE                     
  5077                           ; BSR set to: 0
  5078                           ;main.c: 709:             temp /= 10;
  5079  001CDE  C070  F00A         	movff	floatToString@temp,___awdiv@dividend
  5080  001CE2  C071  F00B         	movff	floatToString@temp+1,___awdiv@dividend+1
  5081  001CE6  0E00               	movlw	0
  5082  001CE8  6E0D               	movwf	(___awdiv@divisor+1)^0,c
  5083  001CEA  0E0A               	movlw	10
  5084  001CEC  6E0C               	movwf	___awdiv@divisor^0,c
  5085  001CEE  ECC3  F013         	call	___awdiv	;wreg free
  5086  001CF2  C00A  F070         	movff	?___awdiv,floatToString@temp
  5087  001CF6  C00B  F071         	movff	?___awdiv+1,floatToString@temp+1
  5088  001CFA                     
  5089                           ;main.c: 710:         } while (temp > 0);
  5090  001CFA  0100               	movlb	0	; () banked
  5091  001CFC  BF71               	btfsc	(floatToString@temp+1)& (0+255),7,b
  5092  001CFE  EF8B  F00E         	goto	u5010
  5093  001D02  5171               	movf	(floatToString@temp+1)& (0+255),w,b
  5094  001D04  E106               	bnz	u5011
  5095  001D06  0570               	decf	floatToString@temp& (0+255),w,b
  5096  001D08  B0D8               	btfsc	status,0,c
  5097  001D0A  EF89  F00E         	goto	u5011
  5098  001D0E  EF8B  F00E         	goto	u5010
  5099  001D12                     u5011:
  5100  001D12  EF59  F00E         	goto	l4951
  5101  001D16                     u5010:
  5102  001D16                     l4959:
  5103                           
  5104                           ; BSR set to: 0
  5105                           ;main.c: 713:     for (i = 0; i < index; i++) {
  5106  001D16  0E00               	movlw	0
  5107  001D18  6F73               	movwf	(floatToString@i+1)& (0+255),b
  5108  001D1A  0E00               	movlw	0
  5109  001D1C  6F72               	movwf	floatToString@i& (0+255),b
  5110  001D1E  EFAD  F00E         	goto	l4965
  5111  001D22                     l4961:
  5112                           
  5113                           ; BSR set to: 0
  5114                           ;main.c: 714:         buffer[i] = intStr[index - i - 1];
  5115  001D22  0E60               	movlw	low floatToString@intStr
  5116  001D24  6E39               	movwf	??_floatToString^0,c
  5117  001D26  0E00               	movlw	high floatToString@intStr
  5118  001D28  6E3A               	movwf	(??_floatToString+1)^0,c
  5119  001D2A  5172               	movf	floatToString@i& (0+255),w,b
  5120  001D2C  5E39               	subwf	??_floatToString^0,f,c
  5121  001D2E  5173               	movf	(floatToString@i+1)& (0+255),w,b
  5122  001D30  5A3A               	subwfb	(??_floatToString+1)^0,f,c
  5123  001D32  5174               	movf	floatToString@index& (0+255),w,b
  5124  001D34  2639               	addwf	??_floatToString^0,f,c
  5125  001D36  5175               	movf	(floatToString@index+1)& (0+255),w,b
  5126  001D38  223A               	addwfc	(??_floatToString+1)^0,f,c
  5127  001D3A  0EFF               	movlw	255
  5128  001D3C  2439               	addwf	??_floatToString^0,w,c
  5129  001D3E  6ED9               	movwf	fsr2l,c
  5130  001D40  0EFF               	movlw	255
  5131  001D42  203A               	addwfc	(??_floatToString+1)^0,w,c
  5132  001D44  6EDA               	movwf	fsr2h,c
  5133  001D46  5172               	movf	floatToString@i& (0+255),w,b
  5134  001D48  2435               	addwf	floatToString@buffer^0,w,c
  5135  001D4A  6EE1               	movwf	fsr1l,c
  5136  001D4C  5173               	movf	(floatToString@i+1)& (0+255),w,b
  5137  001D4E  2036               	addwfc	(floatToString@buffer+1)^0,w,c
  5138  001D50  6EE2               	movwf	fsr1h,c
  5139  001D52  CFDF FFE7          	movff	indf2,indf1
  5140  001D56                     
  5141                           ; BSR set to: 0
  5142                           ;main.c: 715:     }
  5143  001D56  4B72               	infsnz	floatToString@i& (0+255),f,b
  5144  001D58  2B73               	incf	(floatToString@i+1)& (0+255),f,b
  5145  001D5A                     l4965:
  5146                           
  5147                           ; BSR set to: 0
  5148  001D5A  5174               	movf	floatToString@index& (0+255),w,b
  5149  001D5C  5D72               	subwf	floatToString@i& (0+255),w,b
  5150  001D5E  5173               	movf	(floatToString@i+1)& (0+255),w,b
  5151  001D60  0A80               	xorlw	128
  5152  001D62  6E39               	movwf	??_floatToString^0,c
  5153  001D64  5175               	movf	(floatToString@index+1)& (0+255),w,b
  5154  001D66  0A80               	xorlw	128
  5155  001D68  5839               	subwfb	??_floatToString^0,w,c
  5156  001D6A  A0D8               	btfss	status,0,c
  5157  001D6C  EFBA  F00E         	goto	u5021
  5158  001D70  EFBC  F00E         	goto	u5020
  5159  001D74                     u5021:
  5160  001D74  EF91  F00E         	goto	l4961
  5161  001D78                     u5020:
  5162  001D78                     
  5163                           ; BSR set to: 0
  5164                           ;main.c: 716:     buffer += index;
  5165  001D78  5174               	movf	floatToString@index& (0+255),w,b
  5166  001D7A  2635               	addwf	floatToString@buffer^0,f,c
  5167  001D7C  5175               	movf	(floatToString@index+1)& (0+255),w,b
  5168  001D7E  2236               	addwfc	(floatToString@buffer+1)^0,f,c
  5169  001D80                     
  5170                           ; BSR set to: 0
  5171                           ;main.c: 718:     *buffer++ = '.';
  5172  001D80  C035  FFD9         	movff	floatToString@buffer,fsr2l
  5173  001D84  C036  FFDA         	movff	floatToString@buffer+1,fsr2h
  5174  001D88  0E2E               	movlw	46
  5175  001D8A  6EDF               	movwf	indf2,c
  5176  001D8C                     
  5177                           ; BSR set to: 0
  5178  001D8C  4A35               	infsnz	floatToString@buffer^0,f,c
  5179  001D8E  2A36               	incf	(floatToString@buffer+1)^0,f,c
  5180  001D90                     
  5181                           ; BSR set to: 0
  5182                           ;main.c: 720:     for (i = 0; i < precision; i++) {
  5183  001D90  0E00               	movlw	0
  5184  001D92  6F73               	movwf	(floatToString@i+1)& (0+255),b
  5185  001D94  0E00               	movlw	0
  5186  001D96  6F72               	movwf	floatToString@i& (0+255),b
  5187  001D98  EF29  F00F         	goto	l4987
  5188  001D9C                     l4975:
  5189                           
  5190                           ; BSR set to: 0
  5191                           ;main.c: 721:         value *= 10;
  5192  001D9C  C031  F018         	movff	floatToString@value,___flmul@b
  5193  001DA0  C032  F019         	movff	floatToString@value+1,___flmul@b+1
  5194  001DA4  C033  F01A         	movff	floatToString@value+2,___flmul@b+2
  5195  001DA8  C034  F01B         	movff	floatToString@value+3,___flmul@b+3
  5196  001DAC  0E00               	movlw	0
  5197  001DAE  6E1C               	movwf	___flmul@a^0,c
  5198  001DB0  0E00               	movlw	0
  5199  001DB2  6E1D               	movwf	(___flmul@a+1)^0,c
  5200  001DB4  0E20               	movlw	32
  5201  001DB6  6E1E               	movwf	(___flmul@a+2)^0,c
  5202  001DB8  0E41               	movlw	65
  5203  001DBA  6E1F               	movwf	(___flmul@a+3)^0,c
  5204  001DBC  EC05  F00A         	call	___flmul	;wreg free
  5205  001DC0  C018  F031         	movff	?___flmul,floatToString@value
  5206  001DC4  C019  F032         	movff	?___flmul+1,floatToString@value+1
  5207  001DC8  C01A  F033         	movff	?___flmul+2,floatToString@value+2
  5208  001DCC  C01B  F034         	movff	?___flmul+3,floatToString@value+3
  5209  001DD0                     
  5210                           ;main.c: 722:         int digit = (int)value;
  5211  001DD0  C031  F00A         	movff	floatToString@value,___fltol@f1
  5212  001DD4  C032  F00B         	movff	floatToString@value+1,___fltol@f1+1
  5213  001DD8  C033  F00C         	movff	floatToString@value+2,___fltol@f1+2
  5214  001DDC  C034  F00D         	movff	floatToString@value+3,___fltol@f1+3
  5215  001DE0  EC47  F012         	call	___fltol	;wreg free
  5216  001DE4  C00A  F06C         	movff	?___fltol,floatToString@digit
  5217  001DE8  C00B  F06D         	movff	?___fltol+1,floatToString@digit+1
  5218  001DEC                     
  5219                           ;main.c: 723:         *buffer++ = digit + '0';
  5220  001DEC  0100               	movlb	0	; () banked
  5221  001DEE  516C               	movf	floatToString@digit& (0+255),w,b
  5222  001DF0  0F30               	addlw	48
  5223  001DF2  C035  FFD9         	movff	floatToString@buffer,fsr2l
  5224  001DF6  C036  FFDA         	movff	floatToString@buffer+1,fsr2h
  5225  001DFA  6EDF               	movwf	indf2,c
  5226  001DFC                     
  5227                           ; BSR set to: 0
  5228  001DFC  4A35               	infsnz	floatToString@buffer^0,f,c
  5229  001DFE  2A36               	incf	(floatToString@buffer+1)^0,f,c
  5230  001E00                     
  5231                           ; BSR set to: 0
  5232                           ;main.c: 724:         value -= digit;
  5233  001E00  C031  F01A         	movff	floatToString@value,___flsub@b
  5234  001E04  C032  F01B         	movff	floatToString@value+1,___flsub@b+1
  5235  001E08  C033  F01C         	movff	floatToString@value+2,___flsub@b+2
  5236  001E0C  C034  F01D         	movff	floatToString@value+3,___flsub@b+3
  5237  001E10  C06C  F00A         	movff	floatToString@digit,___xxtofl@val
  5238  001E14  C06D  F00B         	movff	floatToString@digit+1,___xxtofl@val+1
  5239  001E18  0E00               	movlw	0
  5240  001E1A  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  5241  001E1C  0EFF               	movlw	-1
  5242  001E1E  6E0C               	movwf	(___xxtofl@val+2)^0,c
  5243  001E20  6E0D               	movwf	(___xxtofl@val+3)^0,c
  5244  001E22  0E01               	movlw	1
  5245  001E24  EC3B  F010         	call	___xxtofl
  5246  001E28  C00A  F01E         	movff	?___xxtofl,___flsub@a
  5247  001E2C  C00B  F01F         	movff	?___xxtofl+1,___flsub@a+1
  5248  001E30  C00C  F020         	movff	?___xxtofl+2,___flsub@a+2
  5249  001E34  C00D  F021         	movff	?___xxtofl+3,___flsub@a+3
  5250  001E38  ECCB  F016         	call	___flsub	;wreg free
  5251  001E3C  C01A  F031         	movff	?___flsub,floatToString@value
  5252  001E40  C01B  F032         	movff	?___flsub+1,floatToString@value+1
  5253  001E44  C01C  F033         	movff	?___flsub+2,floatToString@value+2
  5254  001E48  C01D  F034         	movff	?___flsub+3,floatToString@value+3
  5255  001E4C                     
  5256                           ;main.c: 725:     }
  5257  001E4C  0100               	movlb	0	; () banked
  5258  001E4E  4B72               	infsnz	floatToString@i& (0+255),f,b
  5259  001E50  2B73               	incf	(floatToString@i+1)& (0+255),f,b
  5260  001E52                     l4987:
  5261                           
  5262                           ; BSR set to: 0
  5263  001E52  5037               	movf	floatToString@precision^0,w,c
  5264  001E54  5D72               	subwf	floatToString@i& (0+255),w,b
  5265  001E56  5173               	movf	(floatToString@i+1)& (0+255),w,b
  5266  001E58  0A80               	xorlw	128
  5267  001E5A  6E39               	movwf	??_floatToString^0,c
  5268  001E5C  5038               	movf	(floatToString@precision+1)^0,w,c
  5269  001E5E  0A80               	xorlw	128
  5270  001E60  5839               	subwfb	??_floatToString^0,w,c
  5271  001E62  A0D8               	btfss	status,0,c
  5272  001E64  EF36  F00F         	goto	u5031
  5273  001E68  EF38  F00F         	goto	u5030
  5274  001E6C                     u5031:
  5275  001E6C  EFCE  F00E         	goto	l4975
  5276  001E70                     u5030:
  5277  001E70                     
  5278                           ; BSR set to: 0
  5279                           ;main.c: 727:     *buffer = '\0';
  5280  001E70  C035  FFD9         	movff	floatToString@buffer,fsr2l
  5281  001E74  C036  FFDA         	movff	floatToString@buffer+1,fsr2h
  5282  001E78  0E00               	movlw	0
  5283  001E7A  6EDF               	movwf	indf2,c
  5284  001E7C                     
  5285                           ; BSR set to: 0
  5286  001E7C  0012               	return		;funcret
  5287  001E7E                     __end_of_floatToString:
  5288                           	callstack 0
  5289                           
  5290 ;; *************** function ___xxtofl *****************
  5291 ;; Defined at:
  5292 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  5293 ;; Parameters:    Size  Location     Type
  5294 ;;  sign            1    wreg     unsigned char 
  5295 ;;  val             4    9[COMRAM] long 
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;  sign            1   17[COMRAM] unsigned char 
  5298 ;;  arg             4   19[COMRAM] unsigned long 
  5299 ;;  exp             1   18[COMRAM] unsigned char 
  5300 ;; Return value:  Size  Location     Type
  5301 ;;                  4    9[COMRAM] unsigned char 
  5302 ;; Registers used:
  5303 ;;		wreg, status,2, status,0
  5304 ;; Tracked objects:
  5305 ;;		On entry : 0/0
  5306 ;;		On exit  : 0/0
  5307 ;;		Unchanged: 0/0
  5308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5309 ;;      Params:         4       0       0       0       0       0       0       0       0
  5310 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5311 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5312 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5313 ;;Total ram usage:       14 bytes
  5314 ;; Hardware stack levels used: 1
  5315 ;; Hardware stack levels required when called: 2
  5316 ;; This function calls:
  5317 ;;		Nothing
  5318 ;; This function is called by:
  5319 ;;		_main
  5320 ;;		_displayMenu
  5321 ;;		_tempRead
  5322 ;;		_humidade
  5323 ;;		_gasRead
  5324 ;;		_floatToString
  5325 ;; This function uses a non-reentrant model
  5326 ;;
  5327                           
  5328                           	psect	text14
  5329  002076                     __ptext14:
  5330                           	callstack 0
  5331  002076                     ___xxtofl:
  5332                           	callstack 27
  5333                           
  5334                           ; BSR set to: 0
  5335                           ;incstack = 0
  5336                           ;___xxtofl@sign stored from wreg
  5337  002076  6E12               	movwf	___xxtofl@sign^0,c
  5338  002078  5012               	movf	___xxtofl@sign^0,w,c
  5339  00207A  B4D8               	btfsc	status,2,c
  5340  00207C  EF42  F010         	goto	u4891
  5341  002080  EF44  F010         	goto	u4890
  5342  002084                     u4891:
  5343  002084  EF66  F010         	goto	l1041
  5344  002088                     u4890:
  5345  002088  BE0D               	btfsc	(___xxtofl@val+3)^0,7,c
  5346  00208A  EF4B  F010         	goto	u4900
  5347  00208E  EF49  F010         	goto	u4901
  5348  002092                     u4901:
  5349  002092  EF66  F010         	goto	l1041
  5350  002096                     u4900:
  5351  002096  C00A  F00E         	movff	___xxtofl@val,??___xxtofl
  5352  00209A  C00B  F00F         	movff	___xxtofl@val+1,??___xxtofl+1
  5353  00209E  C00C  F010         	movff	___xxtofl@val+2,??___xxtofl+2
  5354  0020A2  C00D  F011         	movff	___xxtofl@val+3,??___xxtofl+3
  5355  0020A6  1E0E               	comf	??___xxtofl^0,f,c
  5356  0020A8  1E0F               	comf	(??___xxtofl+1)^0,f,c
  5357  0020AA  1E10               	comf	(??___xxtofl+2)^0,f,c
  5358  0020AC  1E11               	comf	(??___xxtofl+3)^0,f,c
  5359  0020AE  2A0E               	incf	??___xxtofl^0,f,c
  5360  0020B0  0E00               	movlw	0
  5361  0020B2  220F               	addwfc	(??___xxtofl+1)^0,f,c
  5362  0020B4  2210               	addwfc	(??___xxtofl+2)^0,f,c
  5363  0020B6  2211               	addwfc	(??___xxtofl+3)^0,f,c
  5364  0020B8  C00E  F014         	movff	??___xxtofl,___xxtofl@arg
  5365  0020BC  C00F  F015         	movff	??___xxtofl+1,___xxtofl@arg+1
  5366  0020C0  C010  F016         	movff	??___xxtofl+2,___xxtofl@arg+2
  5367  0020C4  C011  F017         	movff	??___xxtofl+3,___xxtofl@arg+3
  5368  0020C8  EF6E  F010         	goto	l4859
  5369  0020CC                     l1041:
  5370  0020CC  C00A  F014         	movff	___xxtofl@val,___xxtofl@arg
  5371  0020D0  C00B  F015         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5372  0020D4  C00C  F016         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5373  0020D8  C00D  F017         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5374  0020DC                     l4859:
  5375  0020DC  500A               	movf	___xxtofl@val^0,w,c
  5376  0020DE  100B               	iorwf	(___xxtofl@val+1)^0,w,c
  5377  0020E0  100C               	iorwf	(___xxtofl@val+2)^0,w,c
  5378  0020E2  100D               	iorwf	(___xxtofl@val+3)^0,w,c
  5379  0020E4  A4D8               	btfss	status,2,c
  5380  0020E6  EF77  F010         	goto	u4911
  5381  0020EA  EF79  F010         	goto	u4910
  5382  0020EE                     u4911:
  5383  0020EE  EF83  F010         	goto	l4865
  5384  0020F2                     u4910:
  5385  0020F2  0E00               	movlw	0
  5386  0020F4  6E0A               	movwf	?___xxtofl^0,c
  5387  0020F6  0E00               	movlw	0
  5388  0020F8  6E0B               	movwf	(?___xxtofl+1)^0,c
  5389  0020FA  0E00               	movlw	0
  5390  0020FC  6E0C               	movwf	(?___xxtofl+2)^0,c
  5391  0020FE  0E00               	movlw	0
  5392  002100  6E0D               	movwf	(?___xxtofl+3)^0,c
  5393  002102  EF14  F011         	goto	l1044
  5394  002106                     l4865:
  5395  002106  0E96               	movlw	150
  5396  002108  6E13               	movwf	___xxtofl@exp^0,c
  5397  00210A  EF8D  F010         	goto	l4869
  5398  00210E                     l4867:
  5399  00210E  2A13               	incf	___xxtofl@exp^0,f,c
  5400  002110  90D8               	bcf	status,0,c
  5401  002112  3217               	rrcf	(___xxtofl@arg+3)^0,f,c
  5402  002114  3216               	rrcf	(___xxtofl@arg+2)^0,f,c
  5403  002116  3215               	rrcf	(___xxtofl@arg+1)^0,f,c
  5404  002118  3214               	rrcf	___xxtofl@arg^0,f,c
  5405  00211A                     l4869:
  5406  00211A  0E00               	movlw	0
  5407  00211C  1414               	andwf	___xxtofl@arg^0,w,c
  5408  00211E  6E0E               	movwf	??___xxtofl^0,c
  5409  002120  0E00               	movlw	0
  5410  002122  1415               	andwf	(___xxtofl@arg+1)^0,w,c
  5411  002124  6E0F               	movwf	(??___xxtofl+1)^0,c
  5412  002126  0E00               	movlw	0
  5413  002128  1416               	andwf	(___xxtofl@arg+2)^0,w,c
  5414  00212A  6E10               	movwf	(??___xxtofl+2)^0,c
  5415  00212C  0EFE               	movlw	254
  5416  00212E  1417               	andwf	(___xxtofl@arg+3)^0,w,c
  5417  002130  6E11               	movwf	(??___xxtofl+3)^0,c
  5418  002132  500E               	movf	??___xxtofl^0,w,c
  5419  002134  100F               	iorwf	(??___xxtofl+1)^0,w,c
  5420  002136  1010               	iorwf	(??___xxtofl+2)^0,w,c
  5421  002138  1011               	iorwf	(??___xxtofl+3)^0,w,c
  5422  00213A  A4D8               	btfss	status,2,c
  5423  00213C  EFA2  F010         	goto	u4921
  5424  002140  EFA4  F010         	goto	u4920
  5425  002144                     u4921:
  5426  002144  EF87  F010         	goto	l4867
  5427  002148                     u4920:
  5428  002148  EFB2  F010         	goto	l1048
  5429  00214C                     l4871:
  5430  00214C  2A13               	incf	___xxtofl@exp^0,f,c
  5431  00214E  0E01               	movlw	1
  5432  002150  2614               	addwf	___xxtofl@arg^0,f,c
  5433  002152  0E00               	movlw	0
  5434  002154  2215               	addwfc	(___xxtofl@arg+1)^0,f,c
  5435  002156  2216               	addwfc	(___xxtofl@arg+2)^0,f,c
  5436  002158  2217               	addwfc	(___xxtofl@arg+3)^0,f,c
  5437  00215A  90D8               	bcf	status,0,c
  5438  00215C  3217               	rrcf	(___xxtofl@arg+3)^0,f,c
  5439  00215E  3216               	rrcf	(___xxtofl@arg+2)^0,f,c
  5440  002160  3215               	rrcf	(___xxtofl@arg+1)^0,f,c
  5441  002162  3214               	rrcf	___xxtofl@arg^0,f,c
  5442  002164                     l1048:
  5443  002164  0E00               	movlw	0
  5444  002166  1414               	andwf	___xxtofl@arg^0,w,c
  5445  002168  6E0E               	movwf	??___xxtofl^0,c
  5446  00216A  0E00               	movlw	0
  5447  00216C  1415               	andwf	(___xxtofl@arg+1)^0,w,c
  5448  00216E  6E0F               	movwf	(??___xxtofl+1)^0,c
  5449  002170  0E00               	movlw	0
  5450  002172  1416               	andwf	(___xxtofl@arg+2)^0,w,c
  5451  002174  6E10               	movwf	(??___xxtofl+2)^0,c
  5452  002176  0EFF               	movlw	255
  5453  002178  1417               	andwf	(___xxtofl@arg+3)^0,w,c
  5454  00217A  6E11               	movwf	(??___xxtofl+3)^0,c
  5455  00217C  500E               	movf	??___xxtofl^0,w,c
  5456  00217E  100F               	iorwf	(??___xxtofl+1)^0,w,c
  5457  002180  1010               	iorwf	(??___xxtofl+2)^0,w,c
  5458  002182  1011               	iorwf	(??___xxtofl+3)^0,w,c
  5459  002184  A4D8               	btfss	status,2,c
  5460  002186  EFC7  F010         	goto	u4931
  5461  00218A  EFC9  F010         	goto	u4930
  5462  00218E                     u4931:
  5463  00218E  EFA6  F010         	goto	l4871
  5464  002192                     u4930:
  5465  002192  EFD1  F010         	goto	l4879
  5466  002196                     l4877:
  5467  002196  0613               	decf	___xxtofl@exp^0,f,c
  5468  002198  90D8               	bcf	status,0,c
  5469  00219A  3614               	rlcf	___xxtofl@arg^0,f,c
  5470  00219C  3615               	rlcf	(___xxtofl@arg+1)^0,f,c
  5471  00219E  3616               	rlcf	(___xxtofl@arg+2)^0,f,c
  5472  0021A0  3617               	rlcf	(___xxtofl@arg+3)^0,f,c
  5473  0021A2                     l4879:
  5474  0021A2  BE16               	btfsc	(___xxtofl@arg+2)^0,7,c
  5475  0021A4  EFD6  F010         	goto	u4941
  5476  0021A8  EFD8  F010         	goto	u4940
  5477  0021AC                     u4941:
  5478  0021AC  EFE0  F010         	goto	l1055
  5479  0021B0                     u4940:
  5480  0021B0  0E02               	movlw	2
  5481  0021B2  6013               	cpfslt	___xxtofl@exp^0,c
  5482  0021B4  EFDE  F010         	goto	u4951
  5483  0021B8  EFE0  F010         	goto	u4950
  5484  0021BC                     u4951:
  5485  0021BC  EFCB  F010         	goto	l4877
  5486  0021C0                     u4950:
  5487  0021C0                     l1055:
  5488  0021C0  B013               	btfsc	___xxtofl@exp^0,0,c
  5489  0021C2  EFE5  F010         	goto	u4961
  5490  0021C6  EFE7  F010         	goto	u4960
  5491  0021CA                     u4961:
  5492  0021CA  EFE8  F010         	goto	l4885
  5493  0021CE                     u4960:
  5494  0021CE  9E16               	bcf	(___xxtofl@arg+2)^0,7,c
  5495  0021D0                     l4885:
  5496  0021D0  90D8               	bcf	status,0,c
  5497  0021D2  3213               	rrcf	___xxtofl@exp^0,f,c
  5498  0021D4  C013  F00E         	movff	___xxtofl@exp,??___xxtofl
  5499  0021D8  6A0F               	clrf	(??___xxtofl+1)^0,c
  5500  0021DA  6A10               	clrf	(??___xxtofl+2)^0,c
  5501  0021DC  6A11               	clrf	(??___xxtofl+3)^0,c
  5502  0021DE  C00E  F011         	movff	??___xxtofl,??___xxtofl+3
  5503  0021E2  6A10               	clrf	(??___xxtofl+2)^0,c
  5504  0021E4  6A0F               	clrf	(??___xxtofl+1)^0,c
  5505  0021E6  6A0E               	clrf	??___xxtofl^0,c
  5506  0021E8  500E               	movf	??___xxtofl^0,w,c
  5507  0021EA  1214               	iorwf	___xxtofl@arg^0,f,c
  5508  0021EC  500F               	movf	(??___xxtofl+1)^0,w,c
  5509  0021EE  1215               	iorwf	(___xxtofl@arg+1)^0,f,c
  5510  0021F0  5010               	movf	(??___xxtofl+2)^0,w,c
  5511  0021F2  1216               	iorwf	(___xxtofl@arg+2)^0,f,c
  5512  0021F4  5011               	movf	(??___xxtofl+3)^0,w,c
  5513  0021F6  1217               	iorwf	(___xxtofl@arg+3)^0,f,c
  5514  0021F8  5012               	movf	___xxtofl@sign^0,w,c
  5515  0021FA  B4D8               	btfsc	status,2,c
  5516  0021FC  EF02  F011         	goto	u4971
  5517  002200  EF04  F011         	goto	u4970
  5518  002204                     u4971:
  5519  002204  EF0C  F011         	goto	l4895
  5520  002208                     u4970:
  5521  002208  BE0D               	btfsc	(___xxtofl@val+3)^0,7,c
  5522  00220A  EF0B  F011         	goto	u4980
  5523  00220E  EF09  F011         	goto	u4981
  5524  002212                     u4981:
  5525  002212  EF0C  F011         	goto	l4895
  5526  002216                     u4980:
  5527  002216  8E17               	bsf	(___xxtofl@arg+3)^0,7,c
  5528  002218                     l4895:
  5529  002218  C014  F00A         	movff	___xxtofl@arg,?___xxtofl
  5530  00221C  C015  F00B         	movff	___xxtofl@arg+1,?___xxtofl+1
  5531  002220  C016  F00C         	movff	___xxtofl@arg+2,?___xxtofl+2
  5532  002224  C017  F00D         	movff	___xxtofl@arg+3,?___xxtofl+3
  5533  002228                     l1044:
  5534  002228  0012               	return		;funcret
  5535  00222A                     __end_of___xxtofl:
  5536                           	callstack 0
  5537                           
  5538 ;; *************** function ___fltol *****************
  5539 ;; Defined at:
  5540 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5541 ;; Parameters:    Size  Location     Type
  5542 ;;  f1              4    9[COMRAM] unsigned char 
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;  exp1            1   18[COMRAM] unsigned char 
  5545 ;;  sign1           1   17[COMRAM] unsigned char 
  5546 ;; Return value:  Size  Location     Type
  5547 ;;                  4    9[COMRAM] long 
  5548 ;; Registers used:
  5549 ;;		wreg, status,2, status,0
  5550 ;; Tracked objects:
  5551 ;;		On entry : 0/0
  5552 ;;		On exit  : 0/0
  5553 ;;		Unchanged: 0/0
  5554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5555 ;;      Params:         4       0       0       0       0       0       0       0       0
  5556 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5557 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5558 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5559 ;;Total ram usage:       10 bytes
  5560 ;; Hardware stack levels used: 1
  5561 ;; Hardware stack levels required when called: 2
  5562 ;; This function calls:
  5563 ;;		Nothing
  5564 ;; This function is called by:
  5565 ;;		_floatToString
  5566 ;; This function uses a non-reentrant model
  5567 ;;
  5568                           
  5569                           	psect	text15
  5570  00248E                     __ptext15:
  5571                           	callstack 0
  5572  00248E                     ___fltol:
  5573                           	callstack 26
  5574  00248E  340C               	rlcf	(___fltol@f1+2)^0,w,c
  5575  002490  340D               	rlcf	(___fltol@f1+3)^0,w,c
  5576  002492  6E13               	movwf	___fltol@exp1^0,c
  5577  002494  5013               	movf	___fltol@exp1^0,w,c
  5578  002496  A4D8               	btfss	status,2,c
  5579  002498  EF50  F012         	goto	u4821
  5580  00249C  EF52  F012         	goto	u4820
  5581  0024A0                     u4821:
  5582  0024A0  EF5C  F012         	goto	l4815
  5583  0024A4                     u4820:
  5584  0024A4                     l4811:
  5585  0024A4  0E00               	movlw	0
  5586  0024A6  6E0A               	movwf	?___fltol^0,c
  5587  0024A8  0E00               	movlw	0
  5588  0024AA  6E0B               	movwf	(?___fltol+1)^0,c
  5589  0024AC  0E00               	movlw	0
  5590  0024AE  6E0C               	movwf	(?___fltol+2)^0,c
  5591  0024B0  0E00               	movlw	0
  5592  0024B2  6E0D               	movwf	(?___fltol+3)^0,c
  5593  0024B4  EFC9  F012         	goto	l683
  5594  0024B8                     l4815:
  5595  0024B8  C00A  F00E         	movff	___fltol@f1,??___fltol
  5596  0024BC  C00B  F00F         	movff	___fltol@f1+1,??___fltol+1
  5597  0024C0  C00C  F010         	movff	___fltol@f1+2,??___fltol+2
  5598  0024C4  C00D  F011         	movff	___fltol@f1+3,??___fltol+3
  5599  0024C8  0E20               	movlw	32
  5600  0024CA  EF6C  F012         	goto	u4830
  5601  0024CE                     u4835:
  5602  0024CE  90D8               	bcf	status,0,c
  5603  0024D0  3211               	rrcf	(??___fltol+3)^0,f,c
  5604  0024D2  3210               	rrcf	(??___fltol+2)^0,f,c
  5605  0024D4  320F               	rrcf	(??___fltol+1)^0,f,c
  5606  0024D6  320E               	rrcf	??___fltol^0,f,c
  5607  0024D8                     u4830:
  5608  0024D8  2EE8               	decfsz	wreg,f,c
  5609  0024DA  EF67  F012         	goto	u4835
  5610  0024DE  500E               	movf	??___fltol^0,w,c
  5611  0024E0  6E12               	movwf	___fltol@sign1^0,c
  5612  0024E2  8E0C               	bsf	(___fltol@f1+2)^0,7,c
  5613  0024E4  0EFF               	movlw	255
  5614  0024E6  160A               	andwf	___fltol@f1^0,f,c
  5615  0024E8  0EFF               	movlw	255
  5616  0024EA  160B               	andwf	(___fltol@f1+1)^0,f,c
  5617  0024EC  0EFF               	movlw	255
  5618  0024EE  160C               	andwf	(___fltol@f1+2)^0,f,c
  5619  0024F0  0E00               	movlw	0
  5620  0024F2  160D               	andwf	(___fltol@f1+3)^0,f,c
  5621  0024F4  0E96               	movlw	150
  5622  0024F6  5E13               	subwf	___fltol@exp1^0,f,c
  5623  0024F8  BE13               	btfsc	___fltol@exp1^0,7,c
  5624  0024FA  EF83  F012         	goto	u4840
  5625  0024FE  EF81  F012         	goto	u4841
  5626  002502                     u4841:
  5627  002502  EF99  F012         	goto	l4835
  5628  002506                     u4840:
  5629  002506  5013               	movf	___fltol@exp1^0,w,c
  5630  002508  0A80               	xorlw	128
  5631  00250A  0F97               	addlw	151
  5632  00250C  B0D8               	btfsc	status,0,c
  5633  00250E  EF8B  F012         	goto	u4851
  5634  002512  EF8D  F012         	goto	u4850
  5635  002516                     u4851:
  5636  002516  EF8F  F012         	goto	l4831
  5637  00251A                     u4850:
  5638  00251A  EF52  F012         	goto	l4811
  5639  00251E                     l4831:
  5640  00251E  90D8               	bcf	status,0,c
  5641  002520  320D               	rrcf	(___fltol@f1+3)^0,f,c
  5642  002522  320C               	rrcf	(___fltol@f1+2)^0,f,c
  5643  002524  320B               	rrcf	(___fltol@f1+1)^0,f,c
  5644  002526  320A               	rrcf	___fltol@f1^0,f,c
  5645  002528  3E13               	incfsz	___fltol@exp1^0,f,c
  5646  00252A  EF8F  F012         	goto	l4831
  5647  00252E  EFB1  F012         	goto	l4845
  5648  002532                     l4835:
  5649  002532  0E1F               	movlw	31
  5650  002534  6413               	cpfsgt	___fltol@exp1^0,c
  5651  002536  EF9F  F012         	goto	u4861
  5652  00253A  EFA1  F012         	goto	u4860
  5653  00253E                     u4861:
  5654  00253E  EFA9  F012         	goto	l4843
  5655  002542                     u4860:
  5656  002542  EF52  F012         	goto	l4811
  5657  002546                     l4841:
  5658  002546  90D8               	bcf	status,0,c
  5659  002548  360A               	rlcf	___fltol@f1^0,f,c
  5660  00254A  360B               	rlcf	(___fltol@f1+1)^0,f,c
  5661  00254C  360C               	rlcf	(___fltol@f1+2)^0,f,c
  5662  00254E  360D               	rlcf	(___fltol@f1+3)^0,f,c
  5663  002550  0613               	decf	___fltol@exp1^0,f,c
  5664  002552                     l4843:
  5665  002552  5013               	movf	___fltol@exp1^0,w,c
  5666  002554  A4D8               	btfss	status,2,c
  5667  002556  EFAF  F012         	goto	u4871
  5668  00255A  EFB1  F012         	goto	u4870
  5669  00255E                     u4871:
  5670  00255E  EFA3  F012         	goto	l4841
  5671  002562                     u4870:
  5672  002562                     l4845:
  5673  002562  5012               	movf	___fltol@sign1^0,w,c
  5674  002564  B4D8               	btfsc	status,2,c
  5675  002566  EFB7  F012         	goto	u4881
  5676  00256A  EFB9  F012         	goto	u4880
  5677  00256E                     u4881:
  5678  00256E  EFC1  F012         	goto	l4849
  5679  002572                     u4880:
  5680  002572  1E0D               	comf	(___fltol@f1+3)^0,f,c
  5681  002574  1E0C               	comf	(___fltol@f1+2)^0,f,c
  5682  002576  1E0B               	comf	(___fltol@f1+1)^0,f,c
  5683  002578  6C0A               	negf	___fltol@f1^0,c
  5684  00257A  0E00               	movlw	0
  5685  00257C  220B               	addwfc	(___fltol@f1+1)^0,f,c
  5686  00257E  220C               	addwfc	(___fltol@f1+2)^0,f,c
  5687  002580  220D               	addwfc	(___fltol@f1+3)^0,f,c
  5688  002582                     l4849:
  5689  002582  C00A  F00A         	movff	___fltol@f1,?___fltol
  5690  002586  C00B  F00B         	movff	___fltol@f1+1,?___fltol+1
  5691  00258A  C00C  F00C         	movff	___fltol@f1+2,?___fltol+2
  5692  00258E  C00D  F00D         	movff	___fltol@f1+3,?___fltol+3
  5693  002592                     l683:
  5694  002592  0012               	return		;funcret
  5695  002594                     __end_of___fltol:
  5696                           	callstack 0
  5697                           
  5698 ;; *************** function ___flsub *****************
  5699 ;; Defined at:
  5700 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5701 ;; Parameters:    Size  Location     Type
  5702 ;;  b               4   25[COMRAM] long 
  5703 ;;  a               4   29[COMRAM] long 
  5704 ;; Auto vars:     Size  Location     Type
  5705 ;;		None
  5706 ;; Return value:  Size  Location     Type
  5707 ;;                  4   25[COMRAM] long 
  5708 ;; Registers used:
  5709 ;;		wreg, status,2, status,0, cstack
  5710 ;; Tracked objects:
  5711 ;;		On entry : 0/0
  5712 ;;		On exit  : 0/0
  5713 ;;		Unchanged: 0/0
  5714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5715 ;;      Params:         8       0       0       0       0       0       0       0       0
  5716 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5717 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5718 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5719 ;;Total ram usage:        8 bytes
  5720 ;; Hardware stack levels used: 1
  5721 ;; Hardware stack levels required when called: 3
  5722 ;; This function calls:
  5723 ;;		___fladd
  5724 ;; This function is called by:
  5725 ;;		_floatToString
  5726 ;; This function uses a non-reentrant model
  5727 ;;
  5728                           
  5729                           	psect	text16
  5730  002D96                     __ptext16:
  5731                           	callstack 0
  5732  002D96                     ___flsub:
  5733                           	callstack 25
  5734  002D96  0E00               	movlw	0
  5735  002D98  1A1E               	xorwf	___flsub@a^0,f,c
  5736  002D9A  0E00               	movlw	0
  5737  002D9C  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  5738  002D9E  0E00               	movlw	0
  5739  002DA0  1A20               	xorwf	(___flsub@a+2)^0,f,c
  5740  002DA2  0E80               	movlw	128
  5741  002DA4  1A21               	xorwf	(___flsub@a+3)^0,f,c
  5742  002DA6  C01A  F00A         	movff	___flsub@b,___fladd@b
  5743  002DAA  C01B  F00B         	movff	___flsub@b+1,___fladd@b+1
  5744  002DAE  C01C  F00C         	movff	___flsub@b+2,___fladd@b+2
  5745  002DB2  C01D  F00D         	movff	___flsub@b+3,___fladd@b+3
  5746  002DB6  C01E  F00E         	movff	___flsub@a,___fladd@a
  5747  002DBA  C01F  F00F         	movff	___flsub@a+1,___fladd@a+1
  5748  002DBE  C020  F010         	movff	___flsub@a+2,___fladd@a+2
  5749  002DC2  C021  F011         	movff	___flsub@a+3,___fladd@a+3
  5750  002DC6  ECA5  F007         	call	___fladd	;wreg free
  5751  002DCA  C00A  F01A         	movff	?___fladd,?___flsub
  5752  002DCE  C00B  F01B         	movff	?___fladd+1,?___flsub+1
  5753  002DD2  C00C  F01C         	movff	?___fladd+2,?___flsub+2
  5754  002DD6  C00D  F01D         	movff	?___fladd+3,?___flsub+3
  5755  002DDA  0012               	return		;funcret
  5756  002DDC                     __end_of___flsub:
  5757                           	callstack 0
  5758                           
  5759 ;; *************** function ___fladd *****************
  5760 ;; Defined at:
  5761 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5762 ;; Parameters:    Size  Location     Type
  5763 ;;  b               4    9[COMRAM] long 
  5764 ;;  a               4   13[COMRAM] long 
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;  grs             1   24[COMRAM] unsigned char 
  5767 ;;  bexp            1   23[COMRAM] unsigned char 
  5768 ;;  aexp            1   22[COMRAM] unsigned char 
  5769 ;;  signs           1   21[COMRAM] unsigned char 
  5770 ;; Return value:  Size  Location     Type
  5771 ;;                  4    9[COMRAM] unsigned char 
  5772 ;; Registers used:
  5773 ;;		wreg, status,2, status,0
  5774 ;; Tracked objects:
  5775 ;;		On entry : 0/0
  5776 ;;		On exit  : 0/0
  5777 ;;		Unchanged: 0/0
  5778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5779 ;;      Params:         8       0       0       0       0       0       0       0       0
  5780 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5781 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5782 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5783 ;;Total ram usage:       16 bytes
  5784 ;; Hardware stack levels used: 1
  5785 ;; Hardware stack levels required when called: 2
  5786 ;; This function calls:
  5787 ;;		Nothing
  5788 ;; This function is called by:
  5789 ;;		___flsub
  5790 ;; This function uses a non-reentrant model
  5791 ;;
  5792                           
  5793                           	psect	text17
  5794  000F4A                     __ptext17:
  5795                           	callstack 0
  5796  000F4A                     ___fladd:
  5797                           	callstack 25
  5798  000F4A  500D               	movf	(___fladd@b+3)^0,w,c
  5799  000F4C  0B80               	andlw	128
  5800  000F4E  6E16               	movwf	___fladd@signs^0,c
  5801  000F50  500D               	movf	(___fladd@b+3)^0,w,c
  5802  000F52  240D               	addwf	(___fladd@b+3)^0,w,c
  5803  000F54  6E18               	movwf	___fladd@bexp^0,c
  5804  000F56  AE0C               	btfss	(___fladd@b+2)^0,7,c
  5805  000F58  EFB0  F007         	goto	u4111
  5806  000F5C  EFB2  F007         	goto	u4110
  5807  000F60                     u4111:
  5808  000F60  EFB3  F007         	goto	l4389
  5809  000F64                     u4110:
  5810  000F64  8018               	bsf	___fladd@bexp^0,0,c
  5811  000F66                     l4389:
  5812  000F66  5018               	movf	___fladd@bexp^0,w,c
  5813  000F68  B4D8               	btfsc	status,2,c
  5814  000F6A  EFB9  F007         	goto	u4121
  5815  000F6E  EFBB  F007         	goto	u4120
  5816  000F72                     u4121:
  5817  000F72  EFD0  F007         	goto	l4399
  5818  000F76                     u4120:
  5819  000F76  2818               	incf	___fladd@bexp^0,w,c
  5820  000F78  A4D8               	btfss	status,2,c
  5821  000F7A  EFC1  F007         	goto	u4131
  5822  000F7E  EFC3  F007         	goto	u4130
  5823  000F82                     u4131:
  5824  000F82  EFCB  F007         	goto	l4395
  5825  000F86                     u4130:
  5826  000F86  0E00               	movlw	0
  5827  000F88  6E0A               	movwf	___fladd@b^0,c
  5828  000F8A  0E00               	movlw	0
  5829  000F8C  6E0B               	movwf	(___fladd@b+1)^0,c
  5830  000F8E  0E00               	movlw	0
  5831  000F90  6E0C               	movwf	(___fladd@b+2)^0,c
  5832  000F92  0E00               	movlw	0
  5833  000F94  6E0D               	movwf	(___fladd@b+3)^0,c
  5834  000F96                     l4395:
  5835  000F96  8E0C               	bsf	(___fladd@b+2)^0,7,c
  5836  000F98  0E00               	movlw	0
  5837  000F9A  6E0D               	movwf	(___fladd@b+3)^0,c
  5838  000F9C  EFD8  F007         	goto	l4401
  5839  000FA0                     l4399:
  5840  000FA0  0E00               	movlw	0
  5841  000FA2  6E0A               	movwf	___fladd@b^0,c
  5842  000FA4  0E00               	movlw	0
  5843  000FA6  6E0B               	movwf	(___fladd@b+1)^0,c
  5844  000FA8  0E00               	movlw	0
  5845  000FAA  6E0C               	movwf	(___fladd@b+2)^0,c
  5846  000FAC  0E00               	movlw	0
  5847  000FAE  6E0D               	movwf	(___fladd@b+3)^0,c
  5848  000FB0                     l4401:
  5849  000FB0  5011               	movf	(___fladd@a+3)^0,w,c
  5850  000FB2  0B80               	andlw	128
  5851  000FB4  6E17               	movwf	___fladd@aexp^0,c
  5852  000FB6  5016               	movf	___fladd@signs^0,w,c
  5853  000FB8  1817               	xorwf	___fladd@aexp^0,w,c
  5854  000FBA  B4D8               	btfsc	status,2,c
  5855  000FBC  EFE2  F007         	goto	u4141
  5856  000FC0  EFE4  F007         	goto	u4140
  5857  000FC4                     u4141:
  5858  000FC4  EFE5  F007         	goto	l4407
  5859  000FC8                     u4140:
  5860  000FC8  8C16               	bsf	___fladd@signs^0,6,c
  5861  000FCA                     l4407:
  5862  000FCA  5011               	movf	(___fladd@a+3)^0,w,c
  5863  000FCC  2411               	addwf	(___fladd@a+3)^0,w,c
  5864  000FCE  6E17               	movwf	___fladd@aexp^0,c
  5865  000FD0  AE10               	btfss	(___fladd@a+2)^0,7,c
  5866  000FD2  EFED  F007         	goto	u4151
  5867  000FD6  EFEF  F007         	goto	u4150
  5868  000FDA                     u4151:
  5869  000FDA  EFF0  F007         	goto	l4413
  5870  000FDE                     u4150:
  5871  000FDE  8017               	bsf	___fladd@aexp^0,0,c
  5872  000FE0                     l4413:
  5873  000FE0  5017               	movf	___fladd@aexp^0,w,c
  5874  000FE2  B4D8               	btfsc	status,2,c
  5875  000FE4  EFF6  F007         	goto	u4161
  5876  000FE8  EFF8  F007         	goto	u4160
  5877  000FEC                     u4161:
  5878  000FEC  EF0D  F008         	goto	l4423
  5879  000FF0                     u4160:
  5880  000FF0  2817               	incf	___fladd@aexp^0,w,c
  5881  000FF2  A4D8               	btfss	status,2,c
  5882  000FF4  EFFE  F007         	goto	u4171
  5883  000FF8  EF00  F008         	goto	u4170
  5884  000FFC                     u4171:
  5885  000FFC  EF08  F008         	goto	l4419
  5886  001000                     u4170:
  5887  001000  0E00               	movlw	0
  5888  001002  6E0E               	movwf	___fladd@a^0,c
  5889  001004  0E00               	movlw	0
  5890  001006  6E0F               	movwf	(___fladd@a+1)^0,c
  5891  001008  0E00               	movlw	0
  5892  00100A  6E10               	movwf	(___fladd@a+2)^0,c
  5893  00100C  0E00               	movlw	0
  5894  00100E  6E11               	movwf	(___fladd@a+3)^0,c
  5895  001010                     l4419:
  5896  001010  8E10               	bsf	(___fladd@a+2)^0,7,c
  5897  001012  0E00               	movlw	0
  5898  001014  6E11               	movwf	(___fladd@a+3)^0,c
  5899  001016  EF15  F008         	goto	l4425
  5900  00101A                     l4423:
  5901  00101A  0E00               	movlw	0
  5902  00101C  6E0E               	movwf	___fladd@a^0,c
  5903  00101E  0E00               	movlw	0
  5904  001020  6E0F               	movwf	(___fladd@a+1)^0,c
  5905  001022  0E00               	movlw	0
  5906  001024  6E10               	movwf	(___fladd@a+2)^0,c
  5907  001026  0E00               	movlw	0
  5908  001028  6E11               	movwf	(___fladd@a+3)^0,c
  5909  00102A                     l4425:
  5910  00102A  5018               	movf	___fladd@bexp^0,w,c
  5911  00102C  5C17               	subwf	___fladd@aexp^0,w,c
  5912  00102E  B0D8               	btfsc	status,0,c
  5913  001030  EF1C  F008         	goto	u4181
  5914  001034  EF1E  F008         	goto	u4180
  5915  001038                     u4181:
  5916  001038  EF45  F008         	goto	l4461
  5917  00103C                     u4180:
  5918  00103C  AC16               	btfss	___fladd@signs^0,6,c
  5919  00103E  EF23  F008         	goto	u4191
  5920  001042  EF25  F008         	goto	u4190
  5921  001046                     u4191:
  5922  001046  EF27  F008         	goto	l4431
  5923  00104A                     u4190:
  5924  00104A  0E80               	movlw	128
  5925  00104C  1A16               	xorwf	___fladd@signs^0,f,c
  5926  00104E                     l4431:
  5927  00104E  C018  F019         	movff	___fladd@bexp,___fladd@grs
  5928  001052  C017  F018         	movff	___fladd@aexp,___fladd@bexp
  5929  001056  C019  F017         	movff	___fladd@grs,___fladd@aexp
  5930  00105A  C00A  F019         	movff	___fladd@b,___fladd@grs
  5931  00105E  C00E  F00A         	movff	___fladd@a,___fladd@b
  5932  001062  C019  F00E         	movff	___fladd@grs,___fladd@a
  5933  001066  C00B  F019         	movff	___fladd@b+1,___fladd@grs
  5934  00106A  C00F  F00B         	movff	___fladd@a+1,___fladd@b+1
  5935  00106E  C019  F00F         	movff	___fladd@grs,___fladd@a+1
  5936  001072  C00C  F019         	movff	___fladd@b+2,___fladd@grs
  5937  001076  C010  F00C         	movff	___fladd@a+2,___fladd@b+2
  5938  00107A  C019  F010         	movff	___fladd@grs,___fladd@a+2
  5939  00107E  C00D  F019         	movff	___fladd@b+3,___fladd@grs
  5940  001082  C011  F00D         	movff	___fladd@a+3,___fladd@b+3
  5941  001086  C019  F011         	movff	___fladd@grs,___fladd@a+3
  5942  00108A                     l4461:
  5943  00108A  0E00               	movlw	0
  5944  00108C  6E19               	movwf	___fladd@grs^0,c
  5945  00108E  5018               	movf	___fladd@bexp^0,w,c
  5946  001090  C017  F012         	movff	___fladd@aexp,??___fladd
  5947  001094  6A13               	clrf	(??___fladd+1)^0,c
  5948  001096  5E12               	subwf	??___fladd^0,f,c
  5949  001098  0E00               	movlw	0
  5950  00109A  5A13               	subwfb	(??___fladd+1)^0,f,c
  5951  00109C  BE13               	btfsc	(??___fladd+1)^0,7,c
  5952  00109E  EF5A  F008         	goto	u4201
  5953  0010A2  5013               	movf	(??___fladd+1)^0,w,c
  5954  0010A4  E109               	bnz	u4200
  5955  0010A6  0E1A               	movlw	26
  5956  0010A8  5C12               	subwf	??___fladd^0,w,c
  5957  0010AA  A0D8               	btfss	status,0,c
  5958  0010AC  EF5A  F008         	goto	u4201
  5959  0010B0  EF5C  F008         	goto	u4200
  5960  0010B4                     u4201:
  5961  0010B4  EF93  F008         	goto	l915
  5962  0010B8                     u4200:
  5963  0010B8  500A               	movf	___fladd@b^0,w,c
  5964  0010BA  100B               	iorwf	(___fladd@b+1)^0,w,c
  5965  0010BC  100C               	iorwf	(___fladd@b+2)^0,w,c
  5966  0010BE  100D               	iorwf	(___fladd@b+3)^0,w,c
  5967  0010C0  A4D8               	btfss	status,2,c
  5968  0010C2  EF65  F008         	goto	u4211
  5969  0010C6  EF68  F008         	goto	u4210
  5970  0010CA                     u4211:
  5971  0010CA  0E01               	movlw	1
  5972  0010CC  EF69  F008         	goto	u4220
  5973  0010D0                     u4210:
  5974  0010D0  0E00               	movlw	0
  5975  0010D2                     u4220:
  5976  0010D2  6E19               	movwf	___fladd@grs^0,c
  5977  0010D4  0E00               	movlw	0
  5978  0010D6  6E0A               	movwf	___fladd@b^0,c
  5979  0010D8  0E00               	movlw	0
  5980  0010DA  6E0B               	movwf	(___fladd@b+1)^0,c
  5981  0010DC  0E00               	movlw	0
  5982  0010DE  6E0C               	movwf	(___fladd@b+2)^0,c
  5983  0010E0  0E00               	movlw	0
  5984  0010E2  6E0D               	movwf	(___fladd@b+3)^0,c
  5985  0010E4  C017  F018         	movff	___fladd@aexp,___fladd@bexp
  5986  0010E8  EF9C  F008         	goto	l914
  5987  0010EC                     l916:
  5988  0010EC  A019               	btfss	___fladd@grs^0,0,c
  5989  0010EE  EF7B  F008         	goto	u4231
  5990  0010F2  EF7D  F008         	goto	u4230
  5991  0010F6                     u4231:
  5992  0010F6  EF83  F008         	goto	l4473
  5993  0010FA                     u4230:
  5994  0010FA  90D8               	bcf	status,0,c
  5995  0010FC  3019               	rrcf	___fladd@grs^0,w,c
  5996  0010FE  0901               	iorlw	1
  5997  001100  6E19               	movwf	___fladd@grs^0,c
  5998  001102  EF85  F008         	goto	l4475
  5999  001106                     l4473:
  6000  001106  90D8               	bcf	status,0,c
  6001  001108  3219               	rrcf	___fladd@grs^0,f,c
  6002  00110A                     l4475:
  6003  00110A  A00A               	btfss	___fladd@b^0,0,c
  6004  00110C  EF8A  F008         	goto	u4241
  6005  001110  EF8C  F008         	goto	u4240
  6006  001114                     u4241:
  6007  001114  EF8D  F008         	goto	l4479
  6008  001118                     u4240:
  6009  001118  8E19               	bsf	___fladd@grs^0,7,c
  6010  00111A                     l4479:
  6011  00111A  340D               	rlcf	(___fladd@b+3)^0,w,c
  6012  00111C  320D               	rrcf	(___fladd@b+3)^0,f,c
  6013  00111E  320C               	rrcf	(___fladd@b+2)^0,f,c
  6014  001120  320B               	rrcf	(___fladd@b+1)^0,f,c
  6015  001122  320A               	rrcf	___fladd@b^0,f,c
  6016  001124  2A18               	incf	___fladd@bexp^0,f,c
  6017  001126                     l915:
  6018  001126  5017               	movf	___fladd@aexp^0,w,c
  6019  001128  5C18               	subwf	___fladd@bexp^0,w,c
  6020  00112A  A0D8               	btfss	status,0,c
  6021  00112C  EF9A  F008         	goto	u4251
  6022  001130  EF9C  F008         	goto	u4250
  6023  001134                     u4251:
  6024  001134  EF76  F008         	goto	l916
  6025  001138                     u4250:
  6026  001138                     l914:
  6027  001138  BC16               	btfsc	___fladd@signs^0,6,c
  6028  00113A  EFA1  F008         	goto	u4261
  6029  00113E  EFA3  F008         	goto	u4260
  6030  001142                     u4261:
  6031  001142  EFE3  F008         	goto	l4507
  6032  001146                     u4260:
  6033  001146  5018               	movf	___fladd@bexp^0,w,c
  6034  001148  A4D8               	btfss	status,2,c
  6035  00114A  EFA9  F008         	goto	u4271
  6036  00114E  EFAB  F008         	goto	u4270
  6037  001152                     u4271:
  6038  001152  EFB5  F008         	goto	l4489
  6039  001156                     u4270:
  6040  001156  0E00               	movlw	0
  6041  001158  6E0A               	movwf	?___fladd^0,c
  6042  00115A  0E00               	movlw	0
  6043  00115C  6E0B               	movwf	(?___fladd+1)^0,c
  6044  00115E  0E00               	movlw	0
  6045  001160  6E0C               	movwf	(?___fladd+2)^0,c
  6046  001162  0E00               	movlw	0
  6047  001164  6E0D               	movwf	(?___fladd+3)^0,c
  6048  001166  EF04  F00A         	goto	l923
  6049  00116A                     l4489:
  6050  00116A  500E               	movf	___fladd@a^0,w,c
  6051  00116C  260A               	addwf	___fladd@b^0,f,c
  6052  00116E  500F               	movf	(___fladd@a+1)^0,w,c
  6053  001170  220B               	addwfc	(___fladd@b+1)^0,f,c
  6054  001172  5010               	movf	(___fladd@a+2)^0,w,c
  6055  001174  220C               	addwfc	(___fladd@b+2)^0,f,c
  6056  001176  5011               	movf	(___fladd@a+3)^0,w,c
  6057  001178  220D               	addwfc	(___fladd@b+3)^0,f,c
  6058  00117A  A00D               	btfss	(___fladd@b+3)^0,0,c
  6059  00117C  EFC2  F008         	goto	u4281
  6060  001180  EFC4  F008         	goto	u4280
  6061  001184                     u4281:
  6062  001184  EF70  F009         	goto	l4543
  6063  001188                     u4280:
  6064  001188  A019               	btfss	___fladd@grs^0,0,c
  6065  00118A  EFC9  F008         	goto	u4291
  6066  00118E  EFCB  F008         	goto	u4290
  6067  001192                     u4291:
  6068  001192  EFD1  F008         	goto	l4497
  6069  001196                     u4290:
  6070  001196  90D8               	bcf	status,0,c
  6071  001198  3019               	rrcf	___fladd@grs^0,w,c
  6072  00119A  0901               	iorlw	1
  6073  00119C  6E19               	movwf	___fladd@grs^0,c
  6074  00119E  EFD3  F008         	goto	l4499
  6075  0011A2                     l4497:
  6076  0011A2  90D8               	bcf	status,0,c
  6077  0011A4  3219               	rrcf	___fladd@grs^0,f,c
  6078  0011A6                     l4499:
  6079  0011A6  A00A               	btfss	___fladd@b^0,0,c
  6080  0011A8  EFD8  F008         	goto	u4301
  6081  0011AC  EFDA  F008         	goto	u4300
  6082  0011B0                     u4301:
  6083  0011B0  EFDB  F008         	goto	l4503
  6084  0011B4                     u4300:
  6085  0011B4  8E19               	bsf	___fladd@grs^0,7,c
  6086  0011B6                     l4503:
  6087  0011B6  340D               	rlcf	(___fladd@b+3)^0,w,c
  6088  0011B8  320D               	rrcf	(___fladd@b+3)^0,f,c
  6089  0011BA  320C               	rrcf	(___fladd@b+2)^0,f,c
  6090  0011BC  320B               	rrcf	(___fladd@b+1)^0,f,c
  6091  0011BE  320A               	rrcf	___fladd@b^0,f,c
  6092  0011C0  2A18               	incf	___fladd@bexp^0,f,c
  6093  0011C2  EF70  F009         	goto	l4543
  6094  0011C6                     l4507:
  6095  0011C6  500E               	movf	___fladd@a^0,w,c
  6096  0011C8  5C0A               	subwf	___fladd@b^0,w,c
  6097  0011CA  500F               	movf	(___fladd@a+1)^0,w,c
  6098  0011CC  580B               	subwfb	(___fladd@b+1)^0,w,c
  6099  0011CE  5010               	movf	(___fladd@a+2)^0,w,c
  6100  0011D0  580C               	subwfb	(___fladd@b+2)^0,w,c
  6101  0011D2  500D               	movf	(___fladd@b+3)^0,w,c
  6102  0011D4  0A80               	xorlw	128
  6103  0011D6  6E12               	movwf	??___fladd^0,c
  6104  0011D8  5011               	movf	(___fladd@a+3)^0,w,c
  6105  0011DA  0A80               	xorlw	128
  6106  0011DC  5812               	subwfb	??___fladd^0,w,c
  6107  0011DE  B0D8               	btfsc	status,0,c
  6108  0011E0  EFF4  F008         	goto	u4311
  6109  0011E4  EFF6  F008         	goto	u4310
  6110  0011E8                     u4311:
  6111  0011E8  EF21  F009         	goto	l4517
  6112  0011EC                     u4310:
  6113  0011EC  500A               	movf	___fladd@b^0,w,c
  6114  0011EE  5C0E               	subwf	___fladd@a^0,w,c
  6115  0011F0  6E12               	movwf	??___fladd^0,c
  6116  0011F2  500B               	movf	(___fladd@b+1)^0,w,c
  6117  0011F4  580F               	subwfb	(___fladd@a+1)^0,w,c
  6118  0011F6  6E13               	movwf	(??___fladd+1)^0,c
  6119  0011F8  500C               	movf	(___fladd@b+2)^0,w,c
  6120  0011FA  5810               	subwfb	(___fladd@a+2)^0,w,c
  6121  0011FC  6E14               	movwf	(??___fladd+2)^0,c
  6122  0011FE  500D               	movf	(___fladd@b+3)^0,w,c
  6123  001200  5811               	subwfb	(___fladd@a+3)^0,w,c
  6124  001202  6E15               	movwf	(??___fladd+3)^0,c
  6125  001204  0EFF               	movlw	255
  6126  001206  2412               	addwf	??___fladd^0,w,c
  6127  001208  6E0A               	movwf	___fladd@b^0,c
  6128  00120A  0EFF               	movlw	255
  6129  00120C  2013               	addwfc	(??___fladd+1)^0,w,c
  6130  00120E  6E0B               	movwf	(___fladd@b+1)^0,c
  6131  001210  0EFF               	movlw	255
  6132  001212  2014               	addwfc	(??___fladd+2)^0,w,c
  6133  001214  6E0C               	movwf	(___fladd@b+2)^0,c
  6134  001216  0EFF               	movlw	255
  6135  001218  2015               	addwfc	(??___fladd+3)^0,w,c
  6136  00121A  6E0D               	movwf	(___fladd@b+3)^0,c
  6137  00121C  0E80               	movlw	128
  6138  00121E  1A16               	xorwf	___fladd@signs^0,f,c
  6139  001220  6C19               	negf	___fladd@grs^0,c
  6140  001222  5019               	movf	___fladd@grs^0,w,c
  6141  001224  A4D8               	btfss	status,2,c
  6142  001226  EF17  F009         	goto	u4321
  6143  00122A  EF19  F009         	goto	u4320
  6144  00122E                     u4321:
  6145  00122E  EF29  F009         	goto	l931
  6146  001232                     u4320:
  6147  001232  0E01               	movlw	1
  6148  001234  260A               	addwf	___fladd@b^0,f,c
  6149  001236  0E00               	movlw	0
  6150  001238  220B               	addwfc	(___fladd@b+1)^0,f,c
  6151  00123A  220C               	addwfc	(___fladd@b+2)^0,f,c
  6152  00123C  220D               	addwfc	(___fladd@b+3)^0,f,c
  6153  00123E  EF29  F009         	goto	l931
  6154  001242                     l4517:
  6155  001242  500E               	movf	___fladd@a^0,w,c
  6156  001244  5E0A               	subwf	___fladd@b^0,f,c
  6157  001246  500F               	movf	(___fladd@a+1)^0,w,c
  6158  001248  5A0B               	subwfb	(___fladd@b+1)^0,f,c
  6159  00124A  5010               	movf	(___fladd@a+2)^0,w,c
  6160  00124C  5A0C               	subwfb	(___fladd@b+2)^0,f,c
  6161  00124E  5011               	movf	(___fladd@a+3)^0,w,c
  6162  001250  5A0D               	subwfb	(___fladd@b+3)^0,f,c
  6163  001252                     l931:
  6164  001252  500A               	movf	___fladd@b^0,w,c
  6165  001254  100B               	iorwf	(___fladd@b+1)^0,w,c
  6166  001256  100C               	iorwf	(___fladd@b+2)^0,w,c
  6167  001258  100D               	iorwf	(___fladd@b+3)^0,w,c
  6168  00125A  A4D8               	btfss	status,2,c
  6169  00125C  EF32  F009         	goto	u4331
  6170  001260  EF34  F009         	goto	u4330
  6171  001264                     u4331:
  6172  001264  EF69  F009         	goto	l4541
  6173  001268                     u4330:
  6174  001268  5019               	movf	___fladd@grs^0,w,c
  6175  00126A  A4D8               	btfss	status,2,c
  6176  00126C  EF3A  F009         	goto	u4341
  6177  001270  EF3C  F009         	goto	u4340
  6178  001274                     u4341:
  6179  001274  EF69  F009         	goto	l4541
  6180  001278                     u4340:
  6181  001278  0E00               	movlw	0
  6182  00127A  6E0A               	movwf	?___fladd^0,c
  6183  00127C  0E00               	movlw	0
  6184  00127E  6E0B               	movwf	(?___fladd+1)^0,c
  6185  001280  0E00               	movlw	0
  6186  001282  6E0C               	movwf	(?___fladd+2)^0,c
  6187  001284  0E00               	movlw	0
  6188  001286  6E0D               	movwf	(?___fladd+3)^0,c
  6189  001288  EF04  F00A         	goto	l923
  6190  00128C                     l4525:
  6191  00128C  90D8               	bcf	status,0,c
  6192  00128E  360A               	rlcf	___fladd@b^0,f,c
  6193  001290  360B               	rlcf	(___fladd@b+1)^0,f,c
  6194  001292  360C               	rlcf	(___fladd@b+2)^0,f,c
  6195  001294  360D               	rlcf	(___fladd@b+3)^0,f,c
  6196  001296  AE19               	btfss	___fladd@grs^0,7,c
  6197  001298  EF50  F009         	goto	u4351
  6198  00129C  EF52  F009         	goto	u4350
  6199  0012A0                     u4351:
  6200  0012A0  EF53  F009         	goto	l4531
  6201  0012A4                     u4350:
  6202  0012A4  800A               	bsf	___fladd@b^0,0,c
  6203  0012A6                     l4531:
  6204  0012A6  A019               	btfss	___fladd@grs^0,0,c
  6205  0012A8  EF58  F009         	goto	u4361
  6206  0012AC  EF5A  F009         	goto	u4360
  6207  0012B0                     u4361:
  6208  0012B0  EF5E  F009         	goto	l4535
  6209  0012B4                     u4360:
  6210  0012B4  80D8               	bsf	status,0,c
  6211  0012B6  3619               	rlcf	___fladd@grs^0,f,c
  6212  0012B8  EF60  F009         	goto	l4537
  6213  0012BC                     l4535:
  6214  0012BC  90D8               	bcf	status,0,c
  6215  0012BE  3619               	rlcf	___fladd@grs^0,f,c
  6216  0012C0                     l4537:
  6217  0012C0  5018               	movf	___fladd@bexp^0,w,c
  6218  0012C2  B4D8               	btfsc	status,2,c
  6219  0012C4  EF66  F009         	goto	u4371
  6220  0012C8  EF68  F009         	goto	u4370
  6221  0012CC                     u4371:
  6222  0012CC  EF69  F009         	goto	l4541
  6223  0012D0                     u4370:
  6224  0012D0  0618               	decf	___fladd@bexp^0,f,c
  6225  0012D2                     l4541:
  6226  0012D2  AE0C               	btfss	(___fladd@b+2)^0,7,c
  6227  0012D4  EF6E  F009         	goto	u4381
  6228  0012D8  EF70  F009         	goto	u4380
  6229  0012DC                     u4381:
  6230  0012DC  EF46  F009         	goto	l4525
  6231  0012E0                     u4380:
  6232  0012E0                     l4543:
  6233  0012E0  0E00               	movlw	0
  6234  0012E2  6E17               	movwf	___fladd@aexp^0,c
  6235  0012E4  AE19               	btfss	___fladd@grs^0,7,c
  6236  0012E6  EF77  F009         	goto	u4391
  6237  0012EA  EF79  F009         	goto	u4390
  6238  0012EE                     u4391:
  6239  0012EE  EF91  F009         	goto	l940
  6240  0012F2                     u4390:
  6241  0012F2  C019  F012         	movff	___fladd@grs,??___fladd
  6242  0012F6  0E7F               	movlw	127
  6243  0012F8  1612               	andwf	??___fladd^0,f,c
  6244  0012FA  B4D8               	btfsc	status,2,c
  6245  0012FC  EF82  F009         	goto	u4401
  6246  001300  EF84  F009         	goto	u4400
  6247  001304                     u4401:
  6248  001304  EF88  F009         	goto	l941
  6249  001308                     u4400:
  6250  001308                     l4549:
  6251  001308  0E01               	movlw	1
  6252  00130A  6E17               	movwf	___fladd@aexp^0,c
  6253  00130C  EF91  F009         	goto	l940
  6254  001310                     l941:
  6255  001310  A00A               	btfss	___fladd@b^0,0,c
  6256  001312  EF8D  F009         	goto	u4411
  6257  001316  EF8F  F009         	goto	u4410
  6258  00131A                     u4411:
  6259  00131A  EF91  F009         	goto	l940
  6260  00131E                     u4410:
  6261  00131E  EF84  F009         	goto	l4549
  6262  001322                     l940:
  6263  001322  5017               	movf	___fladd@aexp^0,w,c
  6264  001324  B4D8               	btfsc	status,2,c
  6265  001326  EF97  F009         	goto	u4421
  6266  00132A  EF99  F009         	goto	u4420
  6267  00132E                     u4421:
  6268  00132E  EFC4  F009         	goto	l4561
  6269  001332                     u4420:
  6270  001332  0E01               	movlw	1
  6271  001334  260A               	addwf	___fladd@b^0,f,c
  6272  001336  0E00               	movlw	0
  6273  001338  220B               	addwfc	(___fladd@b+1)^0,f,c
  6274  00133A  220C               	addwfc	(___fladd@b+2)^0,f,c
  6275  00133C  220D               	addwfc	(___fladd@b+3)^0,f,c
  6276  00133E  A00D               	btfss	(___fladd@b+3)^0,0,c
  6277  001340  EFA4  F009         	goto	u4431
  6278  001344  EFA6  F009         	goto	u4430
  6279  001348                     u4431:
  6280  001348  EFC4  F009         	goto	l4561
  6281  00134C                     u4430:
  6282  00134C  C00A  F012         	movff	___fladd@b,??___fladd
  6283  001350  C00B  F013         	movff	___fladd@b+1,??___fladd+1
  6284  001354  C00C  F014         	movff	___fladd@b+2,??___fladd+2
  6285  001358  C00D  F015         	movff	___fladd@b+3,??___fladd+3
  6286  00135C  3415               	rlcf	(??___fladd+3)^0,w,c
  6287  00135E  3215               	rrcf	(??___fladd+3)^0,f,c
  6288  001360  3214               	rrcf	(??___fladd+2)^0,f,c
  6289  001362  3213               	rrcf	(??___fladd+1)^0,f,c
  6290  001364  3212               	rrcf	??___fladd^0,f,c
  6291  001366  C012  F00A         	movff	??___fladd,___fladd@b
  6292  00136A  C013  F00B         	movff	??___fladd+1,___fladd@b+1
  6293  00136E  C014  F00C         	movff	??___fladd+2,___fladd@b+2
  6294  001372  C015  F00D         	movff	??___fladd+3,___fladd@b+3
  6295  001376  2818               	incf	___fladd@bexp^0,w,c
  6296  001378  B4D8               	btfsc	status,2,c
  6297  00137A  EFC1  F009         	goto	u4441
  6298  00137E  EFC3  F009         	goto	u4440
  6299  001382                     u4441:
  6300  001382  EFC4  F009         	goto	l4561
  6301  001386                     u4440:
  6302  001386  2A18               	incf	___fladd@bexp^0,f,c
  6303  001388                     l4561:
  6304  001388  2818               	incf	___fladd@bexp^0,w,c
  6305  00138A  B4D8               	btfsc	status,2,c
  6306  00138C  EFCA  F009         	goto	u4451
  6307  001390  EFCC  F009         	goto	u4450
  6308  001394                     u4451:
  6309  001394  EFD4  F009         	goto	l4565
  6310  001398                     u4450:
  6311  001398  5018               	movf	___fladd@bexp^0,w,c
  6312  00139A  A4D8               	btfss	status,2,c
  6313  00139C  EFD2  F009         	goto	u4461
  6314  0013A0  EFD4  F009         	goto	u4460
  6315  0013A4                     u4461:
  6316  0013A4  EFE6  F009         	goto	l4569
  6317  0013A8                     u4460:
  6318  0013A8                     l4565:
  6319  0013A8  0E00               	movlw	0
  6320  0013AA  6E0A               	movwf	___fladd@b^0,c
  6321  0013AC  0E00               	movlw	0
  6322  0013AE  6E0B               	movwf	(___fladd@b+1)^0,c
  6323  0013B0  0E00               	movlw	0
  6324  0013B2  6E0C               	movwf	(___fladd@b+2)^0,c
  6325  0013B4  0E00               	movlw	0
  6326  0013B6  6E0D               	movwf	(___fladd@b+3)^0,c
  6327  0013B8  5018               	movf	___fladd@bexp^0,w,c
  6328  0013BA  A4D8               	btfss	status,2,c
  6329  0013BC  EFE2  F009         	goto	u4471
  6330  0013C0  EFE4  F009         	goto	u4470
  6331  0013C4                     u4471:
  6332  0013C4  EFE6  F009         	goto	l4569
  6333  0013C8                     u4470:
  6334  0013C8  0E00               	movlw	0
  6335  0013CA  6E16               	movwf	___fladd@signs^0,c
  6336  0013CC                     l4569:
  6337  0013CC  A018               	btfss	___fladd@bexp^0,0,c
  6338  0013CE  EFEB  F009         	goto	u4481
  6339  0013D2  EFED  F009         	goto	u4480
  6340  0013D6                     u4481:
  6341  0013D6  EFF0  F009         	goto	l4573
  6342  0013DA                     u4480:
  6343  0013DA  8E0C               	bsf	(___fladd@b+2)^0,7,c
  6344  0013DC  EFF1  F009         	goto	l4575
  6345  0013E0                     l4573:
  6346  0013E0  9E0C               	bcf	(___fladd@b+2)^0,7,c
  6347  0013E2                     l4575:
  6348  0013E2  90D8               	bcf	status,0,c
  6349  0013E4  3018               	rrcf	___fladd@bexp^0,w,c
  6350  0013E6  6E0D               	movwf	(___fladd@b+3)^0,c
  6351  0013E8  AE16               	btfss	___fladd@signs^0,7,c
  6352  0013EA  EFF9  F009         	goto	u4491
  6353  0013EE  EFFB  F009         	goto	u4490
  6354  0013F2                     u4491:
  6355  0013F2  EFFC  F009         	goto	l4581
  6356  0013F6                     u4490:
  6357  0013F6  8E0D               	bsf	(___fladd@b+3)^0,7,c
  6358  0013F8                     l4581:
  6359  0013F8  C00A  F00A         	movff	___fladd@b,?___fladd
  6360  0013FC  C00B  F00B         	movff	___fladd@b+1,?___fladd+1
  6361  001400  C00C  F00C         	movff	___fladd@b+2,?___fladd+2
  6362  001404  C00D  F00D         	movff	___fladd@b+3,?___fladd+3
  6363  001408                     l923:
  6364  001408  0012               	return		;funcret
  6365  00140A                     __end_of___fladd:
  6366                           	callstack 0
  6367                           
  6368 ;; *************** function ___flneg *****************
  6369 ;; Defined at:
  6370 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  6371 ;; Parameters:    Size  Location     Type
  6372 ;;  f1              4    9[COMRAM] unsigned char 
  6373 ;; Auto vars:     Size  Location     Type
  6374 ;;		None
  6375 ;; Return value:  Size  Location     Type
  6376 ;;                  4    9[COMRAM] unsigned char 
  6377 ;; Registers used:
  6378 ;;		wreg, status,2, status,0
  6379 ;; Tracked objects:
  6380 ;;		On entry : 0/0
  6381 ;;		On exit  : 0/0
  6382 ;;		Unchanged: 0/0
  6383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6384 ;;      Params:         4       0       0       0       0       0       0       0       0
  6385 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6386 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6387 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6388 ;;Total ram usage:        4 bytes
  6389 ;; Hardware stack levels used: 1
  6390 ;; Hardware stack levels required when called: 2
  6391 ;; This function calls:
  6392 ;;		Nothing
  6393 ;; This function is called by:
  6394 ;;		_floatToString
  6395 ;; This function uses a non-reentrant model
  6396 ;;
  6397                           
  6398                           	psect	text18
  6399  002F24                     __ptext18:
  6400                           	callstack 0
  6401  002F24                     ___flneg:
  6402                           	callstack 26
  6403  002F24  500A               	movf	___flneg@f1^0,w,c
  6404  002F26  100B               	iorwf	(___flneg@f1+1)^0,w,c
  6405  002F28  100C               	iorwf	(___flneg@f1+2)^0,w,c
  6406  002F2A  100D               	iorwf	(___flneg@f1+3)^0,w,c
  6407  002F2C  B4D8               	btfsc	status,2,c
  6408  002F2E  EF9B  F017         	goto	u4811
  6409  002F32  EF9D  F017         	goto	u4810
  6410  002F36                     u4811:
  6411  002F36  EFA5  F017         	goto	l4805
  6412  002F3A                     u4810:
  6413  002F3A  0E00               	movlw	0
  6414  002F3C  1A0A               	xorwf	___flneg@f1^0,f,c
  6415  002F3E  0E00               	movlw	0
  6416  002F40  1A0B               	xorwf	(___flneg@f1+1)^0,f,c
  6417  002F42  0E00               	movlw	0
  6418  002F44  1A0C               	xorwf	(___flneg@f1+2)^0,f,c
  6419  002F46  0E80               	movlw	128
  6420  002F48  1A0D               	xorwf	(___flneg@f1+3)^0,f,c
  6421  002F4A                     l4805:
  6422  002F4A  C00A  F00A         	movff	___flneg@f1,?___flneg
  6423  002F4E  C00B  F00B         	movff	___flneg@f1+1,?___flneg+1
  6424  002F52  C00C  F00C         	movff	___flneg@f1+2,?___flneg+2
  6425  002F56  C00D  F00D         	movff	___flneg@f1+3,?___flneg+3
  6426  002F5A  0012               	return		;funcret
  6427  002F5C                     __end_of___flneg:
  6428                           	callstack 0
  6429                           
  6430 ;; *************** function ___flmul *****************
  6431 ;; Defined at:
  6432 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  6433 ;; Parameters:    Size  Location     Type
  6434 ;;  b               4   23[COMRAM] unsigned char 
  6435 ;;  a               4   27[COMRAM] unsigned char 
  6436 ;; Auto vars:     Size  Location     Type
  6437 ;;  prod            4   42[COMRAM] struct .
  6438 ;;  grs             4   37[COMRAM] unsigned long 
  6439 ;;  temp            2   46[COMRAM] struct .
  6440 ;;  bexp            1   41[COMRAM] unsigned char 
  6441 ;;  aexp            1   36[COMRAM] unsigned char 
  6442 ;;  sign            1   35[COMRAM] unsigned char 
  6443 ;; Return value:  Size  Location     Type
  6444 ;;                  4   23[COMRAM] unsigned char 
  6445 ;; Registers used:
  6446 ;;		wreg, status,2, status,0, prodl, prodh
  6447 ;; Tracked objects:
  6448 ;;		On entry : 0/0
  6449 ;;		On exit  : 0/0
  6450 ;;		Unchanged: 0/0
  6451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6452 ;;      Params:         8       0       0       0       0       0       0       0       0
  6453 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6454 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6455 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6456 ;;Total ram usage:       25 bytes
  6457 ;; Hardware stack levels used: 1
  6458 ;; Hardware stack levels required when called: 2
  6459 ;; This function calls:
  6460 ;;		Nothing
  6461 ;; This function is called by:
  6462 ;;		_tempRead
  6463 ;;		_humidade
  6464 ;;		_gasRead
  6465 ;;		_floatToString
  6466 ;; This function uses a non-reentrant model
  6467 ;;
  6468                           
  6469                           	psect	text19
  6470  00140A                     __ptext19:
  6471                           	callstack 0
  6472  00140A                     ___flmul:
  6473                           	callstack 27
  6474  00140A  501B               	movf	(___flmul@b+3)^0,w,c
  6475  00140C  0B80               	andlw	128
  6476  00140E  6E24               	movwf	___flmul@sign^0,c
  6477  001410  501B               	movf	(___flmul@b+3)^0,w,c
  6478  001412  241B               	addwf	(___flmul@b+3)^0,w,c
  6479  001414  6E2A               	movwf	___flmul@bexp^0,c
  6480  001416  AE1A               	btfss	(___flmul@b+2)^0,7,c
  6481  001418  EF10  F00A         	goto	u4501
  6482  00141C  EF12  F00A         	goto	u4500
  6483  001420                     u4501:
  6484  001420  EF13  F00A         	goto	l4591
  6485  001424                     u4500:
  6486  001424  802A               	bsf	___flmul@bexp^0,0,c
  6487  001426                     l4591:
  6488  001426  502A               	movf	___flmul@bexp^0,w,c
  6489  001428  B4D8               	btfsc	status,2,c
  6490  00142A  EF19  F00A         	goto	u4511
  6491  00142E  EF1B  F00A         	goto	u4510
  6492  001432                     u4511:
  6493  001432  EF2E  F00A         	goto	l4599
  6494  001436                     u4510:
  6495  001436  282A               	incf	___flmul@bexp^0,w,c
  6496  001438  A4D8               	btfss	status,2,c
  6497  00143A  EF21  F00A         	goto	u4521
  6498  00143E  EF23  F00A         	goto	u4520
  6499  001442                     u4521:
  6500  001442  EF2B  F00A         	goto	l4597
  6501  001446                     u4520:
  6502  001446  0E00               	movlw	0
  6503  001448  6E18               	movwf	___flmul@b^0,c
  6504  00144A  0E00               	movlw	0
  6505  00144C  6E19               	movwf	(___flmul@b+1)^0,c
  6506  00144E  0E00               	movlw	0
  6507  001450  6E1A               	movwf	(___flmul@b+2)^0,c
  6508  001452  0E00               	movlw	0
  6509  001454  6E1B               	movwf	(___flmul@b+3)^0,c
  6510  001456                     l4597:
  6511  001456  8E1A               	bsf	(___flmul@b+2)^0,7,c
  6512  001458  EF36  F00A         	goto	l4601
  6513  00145C                     l4599:
  6514  00145C  0E00               	movlw	0
  6515  00145E  6E18               	movwf	___flmul@b^0,c
  6516  001460  0E00               	movlw	0
  6517  001462  6E19               	movwf	(___flmul@b+1)^0,c
  6518  001464  0E00               	movlw	0
  6519  001466  6E1A               	movwf	(___flmul@b+2)^0,c
  6520  001468  0E00               	movlw	0
  6521  00146A  6E1B               	movwf	(___flmul@b+3)^0,c
  6522  00146C                     l4601:
  6523  00146C  501F               	movf	(___flmul@a+3)^0,w,c
  6524  00146E  0B80               	andlw	128
  6525  001470  1A24               	xorwf	___flmul@sign^0,f,c
  6526  001472  501F               	movf	(___flmul@a+3)^0,w,c
  6527  001474  241F               	addwf	(___flmul@a+3)^0,w,c
  6528  001476  6E25               	movwf	___flmul@aexp^0,c
  6529  001478  AE1E               	btfss	(___flmul@a+2)^0,7,c
  6530  00147A  EF41  F00A         	goto	u4531
  6531  00147E  EF43  F00A         	goto	u4530
  6532  001482                     u4531:
  6533  001482  EF44  F00A         	goto	l4609
  6534  001486                     u4530:
  6535  001486  8025               	bsf	___flmul@aexp^0,0,c
  6536  001488                     l4609:
  6537  001488  5025               	movf	___flmul@aexp^0,w,c
  6538  00148A  B4D8               	btfsc	status,2,c
  6539  00148C  EF4A  F00A         	goto	u4541
  6540  001490  EF4C  F00A         	goto	u4540
  6541  001494                     u4541:
  6542  001494  EF5F  F00A         	goto	l4617
  6543  001498                     u4540:
  6544  001498  2825               	incf	___flmul@aexp^0,w,c
  6545  00149A  A4D8               	btfss	status,2,c
  6546  00149C  EF52  F00A         	goto	u4551
  6547  0014A0  EF54  F00A         	goto	u4550
  6548  0014A4                     u4551:
  6549  0014A4  EF5C  F00A         	goto	l4615
  6550  0014A8                     u4550:
  6551  0014A8  0E00               	movlw	0
  6552  0014AA  6E1C               	movwf	___flmul@a^0,c
  6553  0014AC  0E00               	movlw	0
  6554  0014AE  6E1D               	movwf	(___flmul@a+1)^0,c
  6555  0014B0  0E00               	movlw	0
  6556  0014B2  6E1E               	movwf	(___flmul@a+2)^0,c
  6557  0014B4  0E00               	movlw	0
  6558  0014B6  6E1F               	movwf	(___flmul@a+3)^0,c
  6559  0014B8                     l4615:
  6560  0014B8  8E1E               	bsf	(___flmul@a+2)^0,7,c
  6561  0014BA  EF67  F00A         	goto	l1000
  6562  0014BE                     l4617:
  6563  0014BE  0E00               	movlw	0
  6564  0014C0  6E1C               	movwf	___flmul@a^0,c
  6565  0014C2  0E00               	movlw	0
  6566  0014C4  6E1D               	movwf	(___flmul@a+1)^0,c
  6567  0014C6  0E00               	movlw	0
  6568  0014C8  6E1E               	movwf	(___flmul@a+2)^0,c
  6569  0014CA  0E00               	movlw	0
  6570  0014CC  6E1F               	movwf	(___flmul@a+3)^0,c
  6571  0014CE                     l1000:
  6572  0014CE  5025               	movf	___flmul@aexp^0,w,c
  6573  0014D0  B4D8               	btfsc	status,2,c
  6574  0014D2  EF6D  F00A         	goto	u4561
  6575  0014D6  EF6F  F00A         	goto	u4560
  6576  0014DA                     u4561:
  6577  0014DA  EF77  F00A         	goto	l4621
  6578  0014DE                     u4560:
  6579  0014DE  502A               	movf	___flmul@bexp^0,w,c
  6580  0014E0  A4D8               	btfss	status,2,c
  6581  0014E2  EF75  F00A         	goto	u4571
  6582  0014E6  EF77  F00A         	goto	u4570
  6583  0014EA                     u4571:
  6584  0014EA  EF81  F00A         	goto	l4625
  6585  0014EE                     u4570:
  6586  0014EE                     l4621:
  6587  0014EE  0E00               	movlw	0
  6588  0014F0  6E18               	movwf	?___flmul^0,c
  6589  0014F2  0E00               	movlw	0
  6590  0014F4  6E19               	movwf	(?___flmul+1)^0,c
  6591  0014F6  0E00               	movlw	0
  6592  0014F8  6E1A               	movwf	(?___flmul+2)^0,c
  6593  0014FA  0E00               	movlw	0
  6594  0014FC  6E1B               	movwf	(?___flmul+3)^0,c
  6595  0014FE  EF19  F00C         	goto	l1004
  6596  001502                     l4625:
  6597  001502  501E               	movf	(___flmul@a+2)^0,w,c
  6598  001504  0218               	mulwf	___flmul@b^0,c
  6599  001506  CFF3 F02F          	movff	prodl,___flmul@temp
  6600  00150A  CFF4 F030          	movff	prodh,___flmul@temp+1
  6601  00150E  502F               	movf	___flmul@temp^0,w,c
  6602  001510  6E26               	movwf	___flmul@grs^0,c
  6603  001512  6A27               	clrf	(___flmul@grs+1)^0,c
  6604  001514  6A28               	clrf	(___flmul@grs+2)^0,c
  6605  001516  6A29               	clrf	(___flmul@grs+3)^0,c
  6606  001518  5030               	movf	(___flmul@temp+1)^0,w,c
  6607  00151A  6E2B               	movwf	___flmul@prod^0,c
  6608  00151C  6A2C               	clrf	(___flmul@prod+1)^0,c
  6609  00151E  6A2D               	clrf	(___flmul@prod+2)^0,c
  6610  001520  6A2E               	clrf	(___flmul@prod+3)^0,c
  6611  001522  501D               	movf	(___flmul@a+1)^0,w,c
  6612  001524  0219               	mulwf	(___flmul@b+1)^0,c
  6613  001526  CFF3 F02F          	movff	prodl,___flmul@temp
  6614  00152A  CFF4 F030          	movff	prodh,___flmul@temp+1
  6615  00152E  502F               	movf	___flmul@temp^0,w,c
  6616  001530  2626               	addwf	___flmul@grs^0,f,c
  6617  001532  0E00               	movlw	0
  6618  001534  2227               	addwfc	(___flmul@grs+1)^0,f,c
  6619  001536  2228               	addwfc	(___flmul@grs+2)^0,f,c
  6620  001538  2229               	addwfc	(___flmul@grs+3)^0,f,c
  6621  00153A  5030               	movf	(___flmul@temp+1)^0,w,c
  6622  00153C  262B               	addwf	___flmul@prod^0,f,c
  6623  00153E  0E00               	movlw	0
  6624  001540  222C               	addwfc	(___flmul@prod+1)^0,f,c
  6625  001542  222D               	addwfc	(___flmul@prod+2)^0,f,c
  6626  001544  222E               	addwfc	(___flmul@prod+3)^0,f,c
  6627  001546  501C               	movf	___flmul@a^0,w,c
  6628  001548  021A               	mulwf	(___flmul@b+2)^0,c
  6629  00154A  CFF3 F02F          	movff	prodl,___flmul@temp
  6630  00154E  CFF4 F030          	movff	prodh,___flmul@temp+1
  6631  001552  502F               	movf	___flmul@temp^0,w,c
  6632  001554  2626               	addwf	___flmul@grs^0,f,c
  6633  001556  0E00               	movlw	0
  6634  001558  2227               	addwfc	(___flmul@grs+1)^0,f,c
  6635  00155A  2228               	addwfc	(___flmul@grs+2)^0,f,c
  6636  00155C  2229               	addwfc	(___flmul@grs+3)^0,f,c
  6637  00155E  5030               	movf	(___flmul@temp+1)^0,w,c
  6638  001560  262B               	addwf	___flmul@prod^0,f,c
  6639  001562  0E00               	movlw	0
  6640  001564  222C               	addwfc	(___flmul@prod+1)^0,f,c
  6641  001566  222D               	addwfc	(___flmul@prod+2)^0,f,c
  6642  001568  222E               	addwfc	(___flmul@prod+3)^0,f,c
  6643  00156A  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  6644  00156E  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  6645  001572  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  6646  001576  6A26               	clrf	___flmul@grs^0,c
  6647  001578  501C               	movf	___flmul@a^0,w,c
  6648  00157A  0219               	mulwf	(___flmul@b+1)^0,c
  6649  00157C  CFF3 F02F          	movff	prodl,___flmul@temp
  6650  001580  CFF4 F030          	movff	prodh,___flmul@temp+1
  6651  001584  502F               	movf	___flmul@temp^0,w,c
  6652  001586  2626               	addwf	___flmul@grs^0,f,c
  6653  001588  5030               	movf	(___flmul@temp+1)^0,w,c
  6654  00158A  2227               	addwfc	(___flmul@grs+1)^0,f,c
  6655  00158C  0E00               	movlw	0
  6656  00158E  2228               	addwfc	(___flmul@grs+2)^0,f,c
  6657  001590  0E00               	movlw	0
  6658  001592  2229               	addwfc	(___flmul@grs+3)^0,f,c
  6659  001594  501D               	movf	(___flmul@a+1)^0,w,c
  6660  001596  0218               	mulwf	___flmul@b^0,c
  6661  001598  CFF3 F02F          	movff	prodl,___flmul@temp
  6662  00159C  CFF4 F030          	movff	prodh,___flmul@temp+1
  6663  0015A0  502F               	movf	___flmul@temp^0,w,c
  6664  0015A2  2626               	addwf	___flmul@grs^0,f,c
  6665  0015A4  5030               	movf	(___flmul@temp+1)^0,w,c
  6666  0015A6  2227               	addwfc	(___flmul@grs+1)^0,f,c
  6667  0015A8  0E00               	movlw	0
  6668  0015AA  2228               	addwfc	(___flmul@grs+2)^0,f,c
  6669  0015AC  0E00               	movlw	0
  6670  0015AE  2229               	addwfc	(___flmul@grs+3)^0,f,c
  6671  0015B0  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  6672  0015B4  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  6673  0015B8  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  6674  0015BC  6A26               	clrf	___flmul@grs^0,c
  6675  0015BE  501C               	movf	___flmul@a^0,w,c
  6676  0015C0  0218               	mulwf	___flmul@b^0,c
  6677  0015C2  CFF3 F02F          	movff	prodl,___flmul@temp
  6678  0015C6  CFF4 F030          	movff	prodh,___flmul@temp+1
  6679  0015CA  502F               	movf	___flmul@temp^0,w,c
  6680  0015CC  2626               	addwf	___flmul@grs^0,f,c
  6681  0015CE  5030               	movf	(___flmul@temp+1)^0,w,c
  6682  0015D0  2227               	addwfc	(___flmul@grs+1)^0,f,c
  6683  0015D2  0E00               	movlw	0
  6684  0015D4  2228               	addwfc	(___flmul@grs+2)^0,f,c
  6685  0015D6  0E00               	movlw	0
  6686  0015D8  2229               	addwfc	(___flmul@grs+3)^0,f,c
  6687  0015DA  501E               	movf	(___flmul@a+2)^0,w,c
  6688  0015DC  0219               	mulwf	(___flmul@b+1)^0,c
  6689  0015DE  CFF3 F02F          	movff	prodl,___flmul@temp
  6690  0015E2  CFF4 F030          	movff	prodh,___flmul@temp+1
  6691  0015E6  502F               	movf	___flmul@temp^0,w,c
  6692  0015E8  262B               	addwf	___flmul@prod^0,f,c
  6693  0015EA  5030               	movf	(___flmul@temp+1)^0,w,c
  6694  0015EC  222C               	addwfc	(___flmul@prod+1)^0,f,c
  6695  0015EE  0E00               	movlw	0
  6696  0015F0  222D               	addwfc	(___flmul@prod+2)^0,f,c
  6697  0015F2  0E00               	movlw	0
  6698  0015F4  222E               	addwfc	(___flmul@prod+3)^0,f,c
  6699  0015F6  501D               	movf	(___flmul@a+1)^0,w,c
  6700  0015F8  021A               	mulwf	(___flmul@b+2)^0,c
  6701  0015FA  CFF3 F02F          	movff	prodl,___flmul@temp
  6702  0015FE  CFF4 F030          	movff	prodh,___flmul@temp+1
  6703  001602  502F               	movf	___flmul@temp^0,w,c
  6704  001604  262B               	addwf	___flmul@prod^0,f,c
  6705  001606  5030               	movf	(___flmul@temp+1)^0,w,c
  6706  001608  222C               	addwfc	(___flmul@prod+1)^0,f,c
  6707  00160A  0E00               	movlw	0
  6708  00160C  222D               	addwfc	(___flmul@prod+2)^0,f,c
  6709  00160E  0E00               	movlw	0
  6710  001610  222E               	addwfc	(___flmul@prod+3)^0,f,c
  6711  001612  501E               	movf	(___flmul@a+2)^0,w,c
  6712  001614  021A               	mulwf	(___flmul@b+2)^0,c
  6713  001616  CFF3 F02F          	movff	prodl,___flmul@temp
  6714  00161A  CFF4 F030          	movff	prodh,___flmul@temp+1
  6715  00161E  502F               	movf	___flmul@temp^0,w,c
  6716  001620  6E20               	movwf	??___flmul^0,c
  6717  001622  5030               	movf	(___flmul@temp+1)^0,w,c
  6718  001624  6E21               	movwf	(??___flmul+1)^0,c
  6719  001626  6A22               	clrf	(??___flmul+2)^0,c
  6720  001628  6A23               	clrf	(??___flmul+3)^0,c
  6721  00162A  C022  F023         	movff	??___flmul+2,??___flmul+3
  6722  00162E  C021  F022         	movff	??___flmul+1,??___flmul+2
  6723  001632  C020  F021         	movff	??___flmul,??___flmul+1
  6724  001636  6A20               	clrf	??___flmul^0,c
  6725  001638  5020               	movf	??___flmul^0,w,c
  6726  00163A  262B               	addwf	___flmul@prod^0,f,c
  6727  00163C  5021               	movf	(??___flmul+1)^0,w,c
  6728  00163E  222C               	addwfc	(___flmul@prod+1)^0,f,c
  6729  001640  5022               	movf	(??___flmul+2)^0,w,c
  6730  001642  222D               	addwfc	(___flmul@prod+2)^0,f,c
  6731  001644  5023               	movf	(??___flmul+3)^0,w,c
  6732  001646  222E               	addwfc	(___flmul@prod+3)^0,f,c
  6733  001648  C026  F020         	movff	___flmul@grs,??___flmul
  6734  00164C  C027  F021         	movff	___flmul@grs+1,??___flmul+1
  6735  001650  C028  F022         	movff	___flmul@grs+2,??___flmul+2
  6736  001654  C029  F023         	movff	___flmul@grs+3,??___flmul+3
  6737  001658  0E19               	movlw	25
  6738  00165A  EF34  F00B         	goto	u4580
  6739  00165E                     u4585:
  6740  00165E  90D8               	bcf	status,0,c
  6741  001660  3223               	rrcf	(??___flmul+3)^0,f,c
  6742  001662  3222               	rrcf	(??___flmul+2)^0,f,c
  6743  001664  3221               	rrcf	(??___flmul+1)^0,f,c
  6744  001666  3220               	rrcf	??___flmul^0,f,c
  6745  001668                     u4580:
  6746  001668  2EE8               	decfsz	wreg,f,c
  6747  00166A  EF2F  F00B         	goto	u4585
  6748  00166E  5020               	movf	??___flmul^0,w,c
  6749  001670  262B               	addwf	___flmul@prod^0,f,c
  6750  001672  5021               	movf	(??___flmul+1)^0,w,c
  6751  001674  222C               	addwfc	(___flmul@prod+1)^0,f,c
  6752  001676  5022               	movf	(??___flmul+2)^0,w,c
  6753  001678  222D               	addwfc	(___flmul@prod+2)^0,f,c
  6754  00167A  5023               	movf	(??___flmul+3)^0,w,c
  6755  00167C  222E               	addwfc	(___flmul@prod+3)^0,f,c
  6756  00167E  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  6757  001682  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  6758  001686  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  6759  00168A  6A26               	clrf	___flmul@grs^0,c
  6760  00168C  5025               	movf	___flmul@aexp^0,w,c
  6761  00168E  C02A  F020         	movff	___flmul@bexp,??___flmul
  6762  001692  6A21               	clrf	(??___flmul+1)^0,c
  6763  001694  2620               	addwf	??___flmul^0,f,c
  6764  001696  0E00               	movlw	0
  6765  001698  2221               	addwfc	(??___flmul+1)^0,f,c
  6766  00169A  0E82               	movlw	130
  6767  00169C  2420               	addwf	??___flmul^0,w,c
  6768  00169E  6E2F               	movwf	___flmul@temp^0,c
  6769  0016A0  0EFF               	movlw	255
  6770  0016A2  2021               	addwfc	(??___flmul+1)^0,w,c
  6771  0016A4  6E30               	movwf	(___flmul@temp+1)^0,c
  6772  0016A6  EF6A  F00B         	goto	l4673
  6773  0016AA                     l4667:
  6774  0016AA  90D8               	bcf	status,0,c
  6775  0016AC  362B               	rlcf	___flmul@prod^0,f,c
  6776  0016AE  362C               	rlcf	(___flmul@prod+1)^0,f,c
  6777  0016B0  362D               	rlcf	(___flmul@prod+2)^0,f,c
  6778  0016B2  362E               	rlcf	(___flmul@prod+3)^0,f,c
  6779  0016B4  AE29               	btfss	(___flmul@grs+3)^0,7,c
  6780  0016B6  EF5F  F00B         	goto	u4591
  6781  0016BA  EF61  F00B         	goto	u4590
  6782  0016BE                     u4591:
  6783  0016BE  EF62  F00B         	goto	l1007
  6784  0016C2                     u4590:
  6785  0016C2  802B               	bsf	___flmul@prod^0,0,c
  6786  0016C4                     l1007:
  6787  0016C4  90D8               	bcf	status,0,c
  6788  0016C6  3626               	rlcf	___flmul@grs^0,f,c
  6789  0016C8  3627               	rlcf	(___flmul@grs+1)^0,f,c
  6790  0016CA  3628               	rlcf	(___flmul@grs+2)^0,f,c
  6791  0016CC  3629               	rlcf	(___flmul@grs+3)^0,f,c
  6792  0016CE  062F               	decf	___flmul@temp^0,f,c
  6793  0016D0  A0D8               	btfss	status,0,c
  6794  0016D2  0630               	decf	(___flmul@temp+1)^0,f,c
  6795  0016D4                     l4673:
  6796  0016D4  AE2D               	btfss	(___flmul@prod+2)^0,7,c
  6797  0016D6  EF6F  F00B         	goto	u4601
  6798  0016DA  EF71  F00B         	goto	u4600
  6799  0016DE                     u4601:
  6800  0016DE  EF55  F00B         	goto	l4667
  6801  0016E2                     u4600:
  6802  0016E2  0E00               	movlw	0
  6803  0016E4  6E25               	movwf	___flmul@aexp^0,c
  6804  0016E6  AE29               	btfss	(___flmul@grs+3)^0,7,c
  6805  0016E8  EF78  F00B         	goto	u4611
  6806  0016EC  EF7A  F00B         	goto	u4610
  6807  0016F0                     u4611:
  6808  0016F0  EF9E  F00B         	goto	l1009
  6809  0016F4                     u4610:
  6810  0016F4  0EFF               	movlw	255
  6811  0016F6  1426               	andwf	___flmul@grs^0,w,c
  6812  0016F8  6E20               	movwf	??___flmul^0,c
  6813  0016FA  0EFF               	movlw	255
  6814  0016FC  1427               	andwf	(___flmul@grs+1)^0,w,c
  6815  0016FE  6E21               	movwf	(??___flmul+1)^0,c
  6816  001700  0EFF               	movlw	255
  6817  001702  1428               	andwf	(___flmul@grs+2)^0,w,c
  6818  001704  6E22               	movwf	(??___flmul+2)^0,c
  6819  001706  0E7F               	movlw	127
  6820  001708  1429               	andwf	(___flmul@grs+3)^0,w,c
  6821  00170A  6E23               	movwf	(??___flmul+3)^0,c
  6822  00170C  5020               	movf	??___flmul^0,w,c
  6823  00170E  1021               	iorwf	(??___flmul+1)^0,w,c
  6824  001710  1022               	iorwf	(??___flmul+2)^0,w,c
  6825  001712  1023               	iorwf	(??___flmul+3)^0,w,c
  6826  001714  B4D8               	btfsc	status,2,c
  6827  001716  EF8F  F00B         	goto	u4621
  6828  00171A  EF91  F00B         	goto	u4620
  6829  00171E                     u4621:
  6830  00171E  EF95  F00B         	goto	l1010
  6831  001722                     u4620:
  6832  001722                     l4681:
  6833  001722  0E01               	movlw	1
  6834  001724  6E25               	movwf	___flmul@aexp^0,c
  6835  001726  EF9E  F00B         	goto	l1009
  6836  00172A                     l1010:
  6837  00172A  A02B               	btfss	___flmul@prod^0,0,c
  6838  00172C  EF9A  F00B         	goto	u4631
  6839  001730  EF9C  F00B         	goto	u4630
  6840  001734                     u4631:
  6841  001734  EF9E  F00B         	goto	l1009
  6842  001738                     u4630:
  6843  001738  EF91  F00B         	goto	l4681
  6844  00173C                     l1009:
  6845  00173C  5025               	movf	___flmul@aexp^0,w,c
  6846  00173E  B4D8               	btfsc	status,2,c
  6847  001740  EFA4  F00B         	goto	u4641
  6848  001744  EFA6  F00B         	goto	u4640
  6849  001748                     u4641:
  6850  001748  EFCA  F00B         	goto	l4693
  6851  00174C                     u4640:
  6852  00174C  0E01               	movlw	1
  6853  00174E  262B               	addwf	___flmul@prod^0,f,c
  6854  001750  0E00               	movlw	0
  6855  001752  222C               	addwfc	(___flmul@prod+1)^0,f,c
  6856  001754  222D               	addwfc	(___flmul@prod+2)^0,f,c
  6857  001756  222E               	addwfc	(___flmul@prod+3)^0,f,c
  6858  001758  A02E               	btfss	(___flmul@prod+3)^0,0,c
  6859  00175A  EFB1  F00B         	goto	u4651
  6860  00175E  EFB3  F00B         	goto	u4650
  6861  001762                     u4651:
  6862  001762  EFCA  F00B         	goto	l4693
  6863  001766                     u4650:
  6864  001766  C02B  F020         	movff	___flmul@prod,??___flmul
  6865  00176A  C02C  F021         	movff	___flmul@prod+1,??___flmul+1
  6866  00176E  C02D  F022         	movff	___flmul@prod+2,??___flmul+2
  6867  001772  C02E  F023         	movff	___flmul@prod+3,??___flmul+3
  6868  001776  3423               	rlcf	(??___flmul+3)^0,w,c
  6869  001778  3223               	rrcf	(??___flmul+3)^0,f,c
  6870  00177A  3222               	rrcf	(??___flmul+2)^0,f,c
  6871  00177C  3221               	rrcf	(??___flmul+1)^0,f,c
  6872  00177E  3220               	rrcf	??___flmul^0,f,c
  6873  001780  C020  F02B         	movff	??___flmul,___flmul@prod
  6874  001784  C021  F02C         	movff	??___flmul+1,___flmul@prod+1
  6875  001788  C022  F02D         	movff	??___flmul+2,___flmul@prod+2
  6876  00178C  C023  F02E         	movff	??___flmul+3,___flmul@prod+3
  6877  001790  4A2F               	infsnz	___flmul@temp^0,f,c
  6878  001792  2A30               	incf	(___flmul@temp+1)^0,f,c
  6879  001794                     l4693:
  6880  001794  BE30               	btfsc	(___flmul@temp+1)^0,7,c
  6881  001796  EFD5  F00B         	goto	u4661
  6882  00179A  5030               	movf	(___flmul@temp+1)^0,w,c
  6883  00179C  E108               	bnz	u4660
  6884  00179E  282F               	incf	___flmul@temp^0,w,c
  6885  0017A0  A0D8               	btfss	status,0,c
  6886  0017A2  EFD5  F00B         	goto	u4661
  6887  0017A6  EFD7  F00B         	goto	u4660
  6888  0017AA                     u4661:
  6889  0017AA  EFE1  F00B         	goto	l4697
  6890  0017AE                     u4660:
  6891  0017AE  0E00               	movlw	0
  6892  0017B0  6E2B               	movwf	___flmul@prod^0,c
  6893  0017B2  0E00               	movlw	0
  6894  0017B4  6E2C               	movwf	(___flmul@prod+1)^0,c
  6895  0017B6  0E80               	movlw	128
  6896  0017B8  6E2D               	movwf	(___flmul@prod+2)^0,c
  6897  0017BA  0E7F               	movlw	127
  6898  0017BC  6E2E               	movwf	(___flmul@prod+3)^0,c
  6899  0017BE  EF0F  F00C         	goto	l4709
  6900  0017C2                     l4697:
  6901  0017C2  BE30               	btfsc	(___flmul@temp+1)^0,7,c
  6902  0017C4  EFEE  F00B         	goto	u4670
  6903  0017C8  5030               	movf	(___flmul@temp+1)^0,w,c
  6904  0017CA  E106               	bnz	u4671
  6905  0017CC  042F               	decf	___flmul@temp^0,w,c
  6906  0017CE  B0D8               	btfsc	status,0,c
  6907  0017D0  EFEC  F00B         	goto	u4671
  6908  0017D4  EFEE  F00B         	goto	u4670
  6909  0017D8                     u4671:
  6910  0017D8  EFFA  F00B         	goto	l1017
  6911  0017DC                     u4670:
  6912  0017DC  0E00               	movlw	0
  6913  0017DE  6E2B               	movwf	___flmul@prod^0,c
  6914  0017E0  0E00               	movlw	0
  6915  0017E2  6E2C               	movwf	(___flmul@prod+1)^0,c
  6916  0017E4  0E00               	movlw	0
  6917  0017E6  6E2D               	movwf	(___flmul@prod+2)^0,c
  6918  0017E8  0E00               	movlw	0
  6919  0017EA  6E2E               	movwf	(___flmul@prod+3)^0,c
  6920  0017EC  0E00               	movlw	0
  6921  0017EE  6E24               	movwf	___flmul@sign^0,c
  6922  0017F0  EF0F  F00C         	goto	l4709
  6923  0017F4                     l1017:
  6924  0017F4  C02F  F02A         	movff	___flmul@temp,___flmul@bexp
  6925  0017F8  0EFF               	movlw	255
  6926  0017FA  162B               	andwf	___flmul@prod^0,f,c
  6927  0017FC  0EFF               	movlw	255
  6928  0017FE  162C               	andwf	(___flmul@prod+1)^0,f,c
  6929  001800  0E7F               	movlw	127
  6930  001802  162D               	andwf	(___flmul@prod+2)^0,f,c
  6931  001804  0E00               	movlw	0
  6932  001806  162E               	andwf	(___flmul@prod+3)^0,f,c
  6933  001808  A02A               	btfss	___flmul@bexp^0,0,c
  6934  00180A  EF09  F00C         	goto	u4681
  6935  00180E  EF0B  F00C         	goto	u4680
  6936  001812                     u4681:
  6937  001812  EF0C  F00C         	goto	l4707
  6938  001816                     u4680:
  6939  001816  8E2D               	bsf	(___flmul@prod+2)^0,7,c
  6940  001818                     l4707:
  6941  001818  90D8               	bcf	status,0,c
  6942  00181A  302A               	rrcf	___flmul@bexp^0,w,c
  6943  00181C  6E2E               	movwf	(___flmul@prod+3)^0,c
  6944  00181E                     l4709:
  6945  00181E  5024               	movf	___flmul@sign^0,w,c
  6946  001820  122E               	iorwf	(___flmul@prod+3)^0,f,c
  6947  001822  C02B  F018         	movff	___flmul@prod,?___flmul
  6948  001826  C02C  F019         	movff	___flmul@prod+1,?___flmul+1
  6949  00182A  C02D  F01A         	movff	___flmul@prod+2,?___flmul+2
  6950  00182E  C02E  F01B         	movff	___flmul@prod+3,?___flmul+3
  6951  001832                     l1004:
  6952  001832  0012               	return		;funcret
  6953  001834                     __end_of___flmul:
  6954                           	callstack 0
  6955                           
  6956 ;; *************** function ___awmod *****************
  6957 ;; Defined at:
  6958 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  6959 ;; Parameters:    Size  Location     Type
  6960 ;;  dividend        2    9[COMRAM] int 
  6961 ;;  divisor         2   11[COMRAM] int 
  6962 ;; Auto vars:     Size  Location     Type
  6963 ;;  sign            1   14[COMRAM] unsigned char 
  6964 ;;  counter         1   13[COMRAM] unsigned char 
  6965 ;; Return value:  Size  Location     Type
  6966 ;;                  2    9[COMRAM] int 
  6967 ;; Registers used:
  6968 ;;		wreg, status,2, status,0
  6969 ;; Tracked objects:
  6970 ;;		On entry : 0/0
  6971 ;;		On exit  : 0/0
  6972 ;;		Unchanged: 0/0
  6973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6974 ;;      Params:         4       0       0       0       0       0       0       0       0
  6975 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6976 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6977 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6978 ;;Total ram usage:        6 bytes
  6979 ;; Hardware stack levels used: 1
  6980 ;; Hardware stack levels required when called: 2
  6981 ;; This function calls:
  6982 ;;		Nothing
  6983 ;; This function is called by:
  6984 ;;		_itoa
  6985 ;;		_floatToString
  6986 ;; This function uses a non-reentrant model
  6987 ;;
  6988                           
  6989                           	psect	text20
  6990  002A84                     __ptext20:
  6991                           	callstack 0
  6992  002A84                     ___awmod:
  6993                           	callstack 26
  6994  002A84  0E00               	movlw	0
  6995  002A86  6E0F               	movwf	___awmod@sign^0,c
  6996  002A88  BE0B               	btfsc	(___awmod@dividend+1)^0,7,c
  6997  002A8A  EF4B  F015         	goto	u4750
  6998  002A8E  EF49  F015         	goto	u4751
  6999  002A92                     u4751:
  7000  002A92  EF51  F015         	goto	l4773
  7001  002A96                     u4750:
  7002  002A96  6C0A               	negf	___awmod@dividend^0,c
  7003  002A98  1E0B               	comf	(___awmod@dividend+1)^0,f,c
  7004  002A9A  B0D8               	btfsc	status,0,c
  7005  002A9C  2A0B               	incf	(___awmod@dividend+1)^0,f,c
  7006  002A9E  0E01               	movlw	1
  7007  002AA0  6E0F               	movwf	___awmod@sign^0,c
  7008  002AA2                     l4773:
  7009  002AA2  BE0D               	btfsc	(___awmod@divisor+1)^0,7,c
  7010  002AA4  EF58  F015         	goto	u4760
  7011  002AA8  EF56  F015         	goto	u4761
  7012  002AAC                     u4761:
  7013  002AAC  EF5C  F015         	goto	l4777
  7014  002AB0                     u4760:
  7015  002AB0  6C0C               	negf	___awmod@divisor^0,c
  7016  002AB2  1E0D               	comf	(___awmod@divisor+1)^0,f,c
  7017  002AB4  B0D8               	btfsc	status,0,c
  7018  002AB6  2A0D               	incf	(___awmod@divisor+1)^0,f,c
  7019  002AB8                     l4777:
  7020  002AB8  500C               	movf	___awmod@divisor^0,w,c
  7021  002ABA  100D               	iorwf	(___awmod@divisor+1)^0,w,c
  7022  002ABC  B4D8               	btfsc	status,2,c
  7023  002ABE  EF63  F015         	goto	u4771
  7024  002AC2  EF65  F015         	goto	u4770
  7025  002AC6                     u4771:
  7026  002AC6  EF89  F015         	goto	l4793
  7027  002ACA                     u4770:
  7028  002ACA  0E01               	movlw	1
  7029  002ACC  6E0E               	movwf	___awmod@counter^0,c
  7030  002ACE  EF6D  F015         	goto	l4783
  7031  002AD2                     l4781:
  7032  002AD2  90D8               	bcf	status,0,c
  7033  002AD4  360C               	rlcf	___awmod@divisor^0,f,c
  7034  002AD6  360D               	rlcf	(___awmod@divisor+1)^0,f,c
  7035  002AD8  2A0E               	incf	___awmod@counter^0,f,c
  7036  002ADA                     l4783:
  7037  002ADA  AE0D               	btfss	(___awmod@divisor+1)^0,7,c
  7038  002ADC  EF72  F015         	goto	u4781
  7039  002AE0  EF74  F015         	goto	u4780
  7040  002AE4                     u4781:
  7041  002AE4  EF69  F015         	goto	l4781
  7042  002AE8                     u4780:
  7043  002AE8                     l4785:
  7044  002AE8  500C               	movf	___awmod@divisor^0,w,c
  7045  002AEA  5C0A               	subwf	___awmod@dividend^0,w,c
  7046  002AEC  500D               	movf	(___awmod@divisor+1)^0,w,c
  7047  002AEE  580B               	subwfb	(___awmod@dividend+1)^0,w,c
  7048  002AF0  A0D8               	btfss	status,0,c
  7049  002AF2  EF7D  F015         	goto	u4791
  7050  002AF6  EF7F  F015         	goto	u4790
  7051  002AFA                     u4791:
  7052  002AFA  EF83  F015         	goto	l4789
  7053  002AFE                     u4790:
  7054  002AFE  500C               	movf	___awmod@divisor^0,w,c
  7055  002B00  5E0A               	subwf	___awmod@dividend^0,f,c
  7056  002B02  500D               	movf	(___awmod@divisor+1)^0,w,c
  7057  002B04  5A0B               	subwfb	(___awmod@dividend+1)^0,f,c
  7058  002B06                     l4789:
  7059  002B06  90D8               	bcf	status,0,c
  7060  002B08  320D               	rrcf	(___awmod@divisor+1)^0,f,c
  7061  002B0A  320C               	rrcf	___awmod@divisor^0,f,c
  7062  002B0C  2E0E               	decfsz	___awmod@counter^0,f,c
  7063  002B0E  EF74  F015         	goto	l4785
  7064  002B12                     l4793:
  7065  002B12  500F               	movf	___awmod@sign^0,w,c
  7066  002B14  B4D8               	btfsc	status,2,c
  7067  002B16  EF8F  F015         	goto	u4801
  7068  002B1A  EF91  F015         	goto	u4800
  7069  002B1E                     u4801:
  7070  002B1E  EF95  F015         	goto	l4797
  7071  002B22                     u4800:
  7072  002B22  6C0A               	negf	___awmod@dividend^0,c
  7073  002B24  1E0B               	comf	(___awmod@dividend+1)^0,f,c
  7074  002B26  B0D8               	btfsc	status,0,c
  7075  002B28  2A0B               	incf	(___awmod@dividend+1)^0,f,c
  7076  002B2A                     l4797:
  7077  002B2A  C00A  F00A         	movff	___awmod@dividend,?___awmod
  7078  002B2E  C00B  F00B         	movff	___awmod@dividend+1,?___awmod+1
  7079  002B32  0012               	return		;funcret
  7080  002B34                     __end_of___awmod:
  7081                           	callstack 0
  7082                           
  7083 ;; *************** function ___awdiv *****************
  7084 ;; Defined at:
  7085 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  7086 ;; Parameters:    Size  Location     Type
  7087 ;;  dividend        2    9[COMRAM] int 
  7088 ;;  divisor         2   11[COMRAM] int 
  7089 ;; Auto vars:     Size  Location     Type
  7090 ;;  quotient        2   15[COMRAM] int 
  7091 ;;  sign            1   14[COMRAM] unsigned char 
  7092 ;;  counter         1   13[COMRAM] unsigned char 
  7093 ;; Return value:  Size  Location     Type
  7094 ;;                  2    9[COMRAM] int 
  7095 ;; Registers used:
  7096 ;;		wreg, status,2, status,0
  7097 ;; Tracked objects:
  7098 ;;		On entry : 0/0
  7099 ;;		On exit  : 0/0
  7100 ;;		Unchanged: 0/0
  7101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7102 ;;      Params:         4       0       0       0       0       0       0       0       0
  7103 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7104 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7105 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7106 ;;Total ram usage:        8 bytes
  7107 ;; Hardware stack levels used: 1
  7108 ;; Hardware stack levels required when called: 2
  7109 ;; This function calls:
  7110 ;;		Nothing
  7111 ;; This function is called by:
  7112 ;;		_itoa
  7113 ;;		_floatToString
  7114 ;; This function uses a non-reentrant model
  7115 ;;
  7116                           
  7117                           	psect	text21
  7118  002786                     __ptext21:
  7119                           	callstack 0
  7120  002786                     ___awdiv:
  7121                           	callstack 26
  7122  002786  0E00               	movlw	0
  7123  002788  6E0F               	movwf	___awdiv@sign^0,c
  7124  00278A  BE0D               	btfsc	(___awdiv@divisor+1)^0,7,c
  7125  00278C  EFCC  F013         	goto	u4690
  7126  002790  EFCA  F013         	goto	u4691
  7127  002794                     u4691:
  7128  002794  EFD2  F013         	goto	l4729
  7129  002798                     u4690:
  7130  002798  6C0C               	negf	___awdiv@divisor^0,c
  7131  00279A  1E0D               	comf	(___awdiv@divisor+1)^0,f,c
  7132  00279C  B0D8               	btfsc	status,0,c
  7133  00279E  2A0D               	incf	(___awdiv@divisor+1)^0,f,c
  7134  0027A0  0E01               	movlw	1
  7135  0027A2  6E0F               	movwf	___awdiv@sign^0,c
  7136  0027A4                     l4729:
  7137  0027A4  BE0B               	btfsc	(___awdiv@dividend+1)^0,7,c
  7138  0027A6  EFD9  F013         	goto	u4700
  7139  0027AA  EFD7  F013         	goto	u4701
  7140  0027AE                     u4701:
  7141  0027AE  EFDF  F013         	goto	l4735
  7142  0027B2                     u4700:
  7143  0027B2  6C0A               	negf	___awdiv@dividend^0,c
  7144  0027B4  1E0B               	comf	(___awdiv@dividend+1)^0,f,c
  7145  0027B6  B0D8               	btfsc	status,0,c
  7146  0027B8  2A0B               	incf	(___awdiv@dividend+1)^0,f,c
  7147  0027BA  0E01               	movlw	1
  7148  0027BC  1A0F               	xorwf	___awdiv@sign^0,f,c
  7149  0027BE                     l4735:
  7150  0027BE  0E00               	movlw	0
  7151  0027C0  6E11               	movwf	(___awdiv@quotient+1)^0,c
  7152  0027C2  0E00               	movlw	0
  7153  0027C4  6E10               	movwf	___awdiv@quotient^0,c
  7154  0027C6  500C               	movf	___awdiv@divisor^0,w,c
  7155  0027C8  100D               	iorwf	(___awdiv@divisor+1)^0,w,c
  7156  0027CA  B4D8               	btfsc	status,2,c
  7157  0027CC  EFEA  F013         	goto	u4711
  7158  0027D0  EFEC  F013         	goto	u4710
  7159  0027D4                     u4711:
  7160  0027D4  EF14  F014         	goto	l4757
  7161  0027D8                     u4710:
  7162  0027D8  0E01               	movlw	1
  7163  0027DA  6E0E               	movwf	___awdiv@counter^0,c
  7164  0027DC  EFF4  F013         	goto	l4743
  7165  0027E0                     l4741:
  7166  0027E0  90D8               	bcf	status,0,c
  7167  0027E2  360C               	rlcf	___awdiv@divisor^0,f,c
  7168  0027E4  360D               	rlcf	(___awdiv@divisor+1)^0,f,c
  7169  0027E6  2A0E               	incf	___awdiv@counter^0,f,c
  7170  0027E8                     l4743:
  7171  0027E8  AE0D               	btfss	(___awdiv@divisor+1)^0,7,c
  7172  0027EA  EFF9  F013         	goto	u4721
  7173  0027EE  EFFB  F013         	goto	u4720
  7174  0027F2                     u4721:
  7175  0027F2  EFF0  F013         	goto	l4741
  7176  0027F6                     u4720:
  7177  0027F6                     l4745:
  7178  0027F6  90D8               	bcf	status,0,c
  7179  0027F8  3610               	rlcf	___awdiv@quotient^0,f,c
  7180  0027FA  3611               	rlcf	(___awdiv@quotient+1)^0,f,c
  7181  0027FC  500C               	movf	___awdiv@divisor^0,w,c
  7182  0027FE  5C0A               	subwf	___awdiv@dividend^0,w,c
  7183  002800  500D               	movf	(___awdiv@divisor+1)^0,w,c
  7184  002802  580B               	subwfb	(___awdiv@dividend+1)^0,w,c
  7185  002804  A0D8               	btfss	status,0,c
  7186  002806  EF07  F014         	goto	u4731
  7187  00280A  EF09  F014         	goto	u4730
  7188  00280E                     u4731:
  7189  00280E  EF0E  F014         	goto	l4753
  7190  002812                     u4730:
  7191  002812  500C               	movf	___awdiv@divisor^0,w,c
  7192  002814  5E0A               	subwf	___awdiv@dividend^0,f,c
  7193  002816  500D               	movf	(___awdiv@divisor+1)^0,w,c
  7194  002818  5A0B               	subwfb	(___awdiv@dividend+1)^0,f,c
  7195  00281A  8010               	bsf	___awdiv@quotient^0,0,c
  7196  00281C                     l4753:
  7197  00281C  90D8               	bcf	status,0,c
  7198  00281E  320D               	rrcf	(___awdiv@divisor+1)^0,f,c
  7199  002820  320C               	rrcf	___awdiv@divisor^0,f,c
  7200  002822  2E0E               	decfsz	___awdiv@counter^0,f,c
  7201  002824  EFFB  F013         	goto	l4745
  7202  002828                     l4757:
  7203  002828  500F               	movf	___awdiv@sign^0,w,c
  7204  00282A  B4D8               	btfsc	status,2,c
  7205  00282C  EF1A  F014         	goto	u4741
  7206  002830  EF1C  F014         	goto	u4740
  7207  002834                     u4741:
  7208  002834  EF20  F014         	goto	l4761
  7209  002838                     u4740:
  7210  002838  6C10               	negf	___awdiv@quotient^0,c
  7211  00283A  1E11               	comf	(___awdiv@quotient+1)^0,f,c
  7212  00283C  B0D8               	btfsc	status,0,c
  7213  00283E  2A11               	incf	(___awdiv@quotient+1)^0,f,c
  7214  002840                     l4761:
  7215  002840  C010  F00A         	movff	___awdiv@quotient,?___awdiv
  7216  002844  C011  F00B         	movff	___awdiv@quotient+1,?___awdiv+1
  7217  002848  0012               	return		;funcret
  7218  00284A                     __end_of___awdiv:
  7219                           	callstack 0
  7220                           
  7221 ;; *************** function _displayStuff *****************
  7222 ;; Defined at:
  7223 ;;		line 615 in file "main.c"
  7224 ;; Parameters:    Size  Location     Type
  7225 ;;  row             2   10[COMRAM] int 
  7226 ;;  column          2   12[COMRAM] int 
  7227 ;;  stuff           2   14[COMRAM] PTR unsigned char 
  7228 ;;		 -> readTwoDigitValue@input(3), STR_27(14), STR_26(12), STR_25(17), 
  7229 ;;		 -> STR_24(14), STR_23(3), STR_22(10), STR_21(16), 
  7230 ;;		 -> STR_20(16), STR_19(16), STR_18(3), STR_17(9), 
  7231 ;;		 -> STR_16(5), STR_15(4), STR_14(5), STR_13(5), 
  7232 ;;		 -> STR_12(2), STR_11(7), STR_10(5), STR_9(2), 
  7233 ;;		 -> displayMenu@valueStr(10), STR_8(6), STR_7(15), STR_6(11), 
  7234 ;;		 -> STR_5(11), STR_4(13), STR_3(12), STR_2(12), 
  7235 ;;		 -> STR_1(13), 
  7236 ;; Auto vars:     Size  Location     Type
  7237 ;;  LCDWritePosi    2   16[COMRAM] int 
  7238 ;; Return value:  Size  Location     Type
  7239 ;;                  1    wreg      void 
  7240 ;; Registers used:
  7241 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7242 ;; Tracked objects:
  7243 ;;		On entry : 0/0
  7244 ;;		On exit  : 0/0
  7245 ;;		Unchanged: 0/0
  7246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7247 ;;      Params:         6       0       0       0       0       0       0       0       0
  7248 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7249 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7250 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7251 ;;Total ram usage:       10 bytes
  7252 ;; Hardware stack levels used: 1
  7253 ;; Hardware stack levels required when called: 4
  7254 ;; This function calls:
  7255 ;;		_WriteCmdXLCD
  7256 ;;		_WriteDataXLCD
  7257 ;; This function is called by:
  7258 ;;		_main
  7259 ;;		_displayMenu
  7260 ;;		_readTwoDigitValue
  7261 ;; This function uses a non-reentrant model
  7262 ;;
  7263                           
  7264                           	psect	text22
  7265  002B34                     __ptext22:
  7266                           	callstack 0
  7267  002B34                     _displayStuff:
  7268                           	callstack 25
  7269  002B34                     
  7270                           ;main.c: 616:     int LCDWritePosition = (row == 0 ? 0x80 : 0xC0) + column;
  7271  002B34  500B               	movf	displayStuff@row^0,w,c
  7272  002B36  100C               	iorwf	(displayStuff@row+1)^0,w,c
  7273  002B38  B4D8               	btfsc	status,2,c
  7274  002B3A  EFA1  F015         	goto	u3291
  7275  002B3E  EFA3  F015         	goto	u3290
  7276  002B42                     u3291:
  7277  002B42  EFA9  F015         	goto	l3571
  7278  002B46                     u3290:
  7279  002B46  0E00               	movlw	0
  7280  002B48  6E14               	movwf	(_displayStuff$792+1)^0,c
  7281  002B4A  0EC0               	movlw	192
  7282  002B4C  6E13               	movwf	_displayStuff$792^0,c
  7283  002B4E  EFAD  F015         	goto	l3573
  7284  002B52                     l3571:
  7285  002B52  0E00               	movlw	0
  7286  002B54  6E14               	movwf	(_displayStuff$792+1)^0,c
  7287  002B56  0E80               	movlw	128
  7288  002B58  6E13               	movwf	_displayStuff$792^0,c
  7289  002B5A                     l3573:
  7290  002B5A  500D               	movf	displayStuff@column^0,w,c
  7291  002B5C  2413               	addwf	_displayStuff$792^0,w,c
  7292  002B5E  6E11               	movwf	displayStuff@LCDWritePosition^0,c
  7293  002B60  500E               	movf	(displayStuff@column+1)^0,w,c
  7294  002B62  2014               	addwfc	(_displayStuff$792+1)^0,w,c
  7295  002B64  6E12               	movwf	(displayStuff@LCDWritePosition+1)^0,c
  7296  002B66                     
  7297                           ;main.c: 619:     WriteCmdXLCD(LCDWritePosition);
  7298  002B66  5011               	movf	displayStuff@LCDWritePosition^0,w,c
  7299  002B68  EC73  F017         	call	_WriteCmdXLCD
  7300                           
  7301                           ;main.c: 620:     while (*stuff) {
  7302  002B6C  EFCC  F015         	goto	l3581
  7303  002B70                     l3577:
  7304                           
  7305                           ;main.c: 621:         WriteDataXLCD(*stuff);
  7306  002B70  C00F  FFF6         	movff	displayStuff@stuff,tblptrl
  7307  002B74  C010  FFF7         	movff	displayStuff@stuff+1,tblptrh
  7308  002B78  6AF8               	clrf	tblptru,c
  7309  002B7A  0E07               	movlw	(high __ramtop+-1)
  7310  002B7C  64F7               	cpfsgt	tblptrh,c
  7311  002B7E  D003               	bra	u3307
  7312  002B80  0008               	tblrd		*
  7313  002B82  50F5               	movf	tablat,w,c
  7314  002B84  D005               	bra	u3300
  7315  002B86                     u3307:
  7316  002B86  CFF6 FFE1          	movff	tblptrl,fsr1l
  7317  002B8A  CFF7 FFE2          	movff	tblptrh,fsr1h
  7318  002B8E  50E7               	movf	indf1,w,c
  7319  002B90                     u3300:
  7320  002B90  EC54  F017         	call	_WriteDataXLCD
  7321  002B94                     
  7322                           ;main.c: 622:         stuff++;
  7323  002B94  4A0F               	infsnz	displayStuff@stuff^0,f,c
  7324  002B96  2A10               	incf	(displayStuff@stuff+1)^0,f,c
  7325  002B98                     l3581:
  7326                           
  7327                           ;main.c: 620:     while (*stuff) {
  7328  002B98  C00F  FFF6         	movff	displayStuff@stuff,tblptrl
  7329  002B9C  C010  FFF7         	movff	displayStuff@stuff+1,tblptrh
  7330  002BA0  6AF8               	clrf	tblptru,c
  7331  002BA2  0E07               	movlw	(high __ramtop+-1)
  7332  002BA4  64F7               	cpfsgt	tblptrh,c
  7333  002BA6  D003               	bra	u3317
  7334  002BA8  0008               	tblrd		*
  7335  002BAA  50F5               	movf	tablat,w,c
  7336  002BAC  D005               	bra	u3310
  7337  002BAE                     u3317:
  7338  002BAE  CFF6 FFE1          	movff	tblptrl,fsr1l
  7339  002BB2  CFF7 FFE2          	movff	tblptrh,fsr1h
  7340  002BB6  50E7               	movf	indf1,w,c
  7341  002BB8                     u3310:
  7342  002BB8  0900               	iorlw	0
  7343  002BBA  A4D8               	btfss	status,2,c
  7344  002BBC  EFE2  F015         	goto	u3321
  7345  002BC0  EFE4  F015         	goto	u3320
  7346  002BC4                     u3321:
  7347  002BC4  EFB8  F015         	goto	l3577
  7348  002BC8                     u3320:
  7349  002BC8  0012               	return		;funcret
  7350  002BCA                     __end_of_displayStuff:
  7351                           	callstack 0
  7352                           
  7353 ;; *************** function _WriteDataXLCD *****************
  7354 ;; Defined at:
  7355 ;;		line 449 in file "nxlcd.c"
  7356 ;; Parameters:    Size  Location     Type
  7357 ;;  data            1    wreg     unsigned char 
  7358 ;; Auto vars:     Size  Location     Type
  7359 ;;  data            1    9[COMRAM] unsigned char 
  7360 ;; Return value:  Size  Location     Type
  7361 ;;                  1    wreg      void 
  7362 ;; Registers used:
  7363 ;;		wreg, status,2, status,0, cstack
  7364 ;; Tracked objects:
  7365 ;;		On entry : 0/0
  7366 ;;		On exit  : 0/0
  7367 ;;		Unchanged: 0/0
  7368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7369 ;;      Params:         0       0       0       0       0       0       0       0       0
  7370 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7371 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7372 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7373 ;;Total ram usage:        1 bytes
  7374 ;; Hardware stack levels used: 1
  7375 ;; Hardware stack levels required when called: 3
  7376 ;; This function calls:
  7377 ;;		_DelayFor18TCY
  7378 ;; This function is called by:
  7379 ;;		_displayStuff
  7380 ;;		_putsXLCD
  7381 ;;		_putrsXLCD
  7382 ;; This function uses a non-reentrant model
  7383 ;;
  7384                           
  7385                           	psect	text23
  7386  002EA8                     __ptext23:
  7387                           	callstack 0
  7388  002EA8                     _WriteDataXLCD:
  7389                           	callstack 25
  7390                           
  7391                           ;incstack = 0
  7392                           ;WriteDataXLCD@data stored from wreg
  7393  002EA8  6E0A               	movwf	WriteDataXLCD@data^0,c
  7394  002EAA                     
  7395                           ;nxlcd.c: 449: void WriteDataXLCD(char data);nxlcd.c: 450: {;nxlcd.c: 464:         TRISD
      +                           &= 0x0f;
  7396  002EAA  0E0F               	movlw	15
  7397  002EAC  1695               	andwf	149,f,c	;volatile
  7398                           
  7399                           ;nxlcd.c: 465:         PORTD &= 0x0f;
  7400  002EAE  0E0F               	movlw	15
  7401  002EB0  1683               	andwf	131,f,c	;volatile
  7402                           
  7403                           ;nxlcd.c: 466:         PORTD |= data&0xf0;
  7404  002EB2  500A               	movf	WriteDataXLCD@data^0,w,c
  7405  002EB4  0BF0               	andlw	240
  7406  002EB6  1283               	iorwf	131,f,c	;volatile
  7407  002EB8                     
  7408                           ;nxlcd.c: 472:         LATEbits.LATE0 = 1;
  7409  002EB8  808D               	bsf	141,0,c	;volatile
  7410  002EBA                     
  7411                           ;nxlcd.c: 473:         LATEbits.LATE2 = 0;
  7412  002EBA  948D               	bcf	141,2,c	;volatile
  7413  002EBC                     
  7414                           ;nxlcd.c: 474:         DelayFor18TCY();
  7415  002EBC  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  7416  002EC0                     
  7417                           ;nxlcd.c: 475:         LATEbits.LATE1 = 1;
  7418  002EC0  828D               	bsf	141,1,c	;volatile
  7419  002EC2                     
  7420                           ;nxlcd.c: 476:         DelayFor18TCY();
  7421  002EC2  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  7422  002EC6                     
  7423                           ;nxlcd.c: 477:         LATEbits.LATE1 = 0;
  7424  002EC6  928D               	bcf	141,1,c	;volatile
  7425                           
  7426                           ;nxlcd.c: 479:         PORTD &= 0x0f;
  7427  002EC8  0E0F               	movlw	15
  7428  002ECA  1683               	andwf	131,f,c	;volatile
  7429                           
  7430                           ;nxlcd.c: 480:         PORTD |= ((data<<4)&0xf0);
  7431  002ECC  380A               	swapf	WriteDataXLCD@data^0,w,c
  7432  002ECE  0BF0               	andlw	240
  7433  002ED0  0BF0               	andlw	240
  7434  002ED2  1283               	iorwf	131,f,c	;volatile
  7435  002ED4                     
  7436                           ;nxlcd.c: 485:         DelayFor18TCY();
  7437  002ED4  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  7438  002ED8                     
  7439                           ;nxlcd.c: 486:         LATEbits.LATE1 = 1;
  7440  002ED8  828D               	bsf	141,1,c	;volatile
  7441  002EDA                     
  7442                           ;nxlcd.c: 487:         DelayFor18TCY();
  7443  002EDA  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  7444  002EDE                     
  7445                           ;nxlcd.c: 488:         LATEbits.LATE1 = 0;
  7446  002EDE  928D               	bcf	141,1,c	;volatile
  7447                           
  7448                           ;nxlcd.c: 490:         TRISD |= 0xf0;
  7449  002EE0  0EF0               	movlw	240
  7450  002EE2  1295               	iorwf	149,f,c	;volatile
  7451  002EE4  0012               	return		;funcret
  7452  002EE6                     __end_of_WriteDataXLCD:
  7453                           	callstack 0
  7454                           
  7455 ;; *************** function ___flge *****************
  7456 ;; Defined at:
  7457 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  7458 ;; Parameters:    Size  Location     Type
  7459 ;;  ff1             4   23[COMRAM] void 
  7460 ;;  ff2             4   27[COMRAM] void 
  7461 ;; Auto vars:     Size  Location     Type
  7462 ;;		None
  7463 ;; Return value:  Size  Location     Type
  7464 ;;		None               void
  7465 ;; Registers used:
  7466 ;;		wreg, status,2, status,0
  7467 ;; Tracked objects:
  7468 ;;		On entry : 0/0
  7469 ;;		On exit  : 0/0
  7470 ;;		Unchanged: 0/0
  7471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7472 ;;      Params:         8       0       0       0       0       0       0       0       0
  7473 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7474 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7475 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7476 ;;Total ram usage:       12 bytes
  7477 ;; Hardware stack levels used: 1
  7478 ;; Hardware stack levels required when called: 2
  7479 ;; This function calls:
  7480 ;;		Nothing
  7481 ;; This function is called by:
  7482 ;;		_main
  7483 ;;		_displayMenu
  7484 ;; This function uses a non-reentrant model
  7485 ;;
  7486                           
  7487                           	psect	text24
  7488  002594                     __ptext24:
  7489                           	callstack 0
  7490  002594                     ___flge:
  7491                           	callstack 27
  7492  002594  0E00               	movlw	0
  7493  002596  1418               	andwf	___flge@ff1^0,w,c
  7494  002598  6E20               	movwf	??___flge^0,c
  7495  00259A  0E00               	movlw	0
  7496  00259C  1419               	andwf	(___flge@ff1+1)^0,w,c
  7497  00259E  6E21               	movwf	(??___flge+1)^0,c
  7498  0025A0  0E80               	movlw	128
  7499  0025A2  141A               	andwf	(___flge@ff1+2)^0,w,c
  7500  0025A4  6E22               	movwf	(??___flge+2)^0,c
  7501  0025A6  0E7F               	movlw	127
  7502  0025A8  141B               	andwf	(___flge@ff1+3)^0,w,c
  7503  0025AA  6E23               	movwf	(??___flge+3)^0,c
  7504  0025AC  5020               	movf	??___flge^0,w,c
  7505  0025AE  1021               	iorwf	(??___flge+1)^0,w,c
  7506  0025B0  1022               	iorwf	(??___flge+2)^0,w,c
  7507  0025B2  1023               	iorwf	(??___flge+3)^0,w,c
  7508  0025B4  A4D8               	btfss	status,2,c
  7509  0025B6  EFDF  F012         	goto	u3501
  7510  0025BA  EFE1  F012         	goto	u3500
  7511  0025BE                     u3501:
  7512  0025BE  EFE9  F012         	goto	l3783
  7513  0025C2                     u3500:
  7514  0025C2  0E00               	movlw	0
  7515  0025C4  6E18               	movwf	___flge@ff1^0,c
  7516  0025C6  0E00               	movlw	0
  7517  0025C8  6E19               	movwf	(___flge@ff1+1)^0,c
  7518  0025CA  0E00               	movlw	0
  7519  0025CC  6E1A               	movwf	(___flge@ff1+2)^0,c
  7520  0025CE  0E00               	movlw	0
  7521  0025D0  6E1B               	movwf	(___flge@ff1+3)^0,c
  7522  0025D2                     l3783:
  7523  0025D2  0E00               	movlw	0
  7524  0025D4  141C               	andwf	___flge@ff2^0,w,c
  7525  0025D6  6E20               	movwf	??___flge^0,c
  7526  0025D8  0E00               	movlw	0
  7527  0025DA  141D               	andwf	(___flge@ff2+1)^0,w,c
  7528  0025DC  6E21               	movwf	(??___flge+1)^0,c
  7529  0025DE  0E80               	movlw	128
  7530  0025E0  141E               	andwf	(___flge@ff2+2)^0,w,c
  7531  0025E2  6E22               	movwf	(??___flge+2)^0,c
  7532  0025E4  0E7F               	movlw	127
  7533  0025E6  141F               	andwf	(___flge@ff2+3)^0,w,c
  7534  0025E8  6E23               	movwf	(??___flge+3)^0,c
  7535  0025EA  5020               	movf	??___flge^0,w,c
  7536  0025EC  1021               	iorwf	(??___flge+1)^0,w,c
  7537  0025EE  1022               	iorwf	(??___flge+2)^0,w,c
  7538  0025F0  1023               	iorwf	(??___flge+3)^0,w,c
  7539  0025F2  A4D8               	btfss	status,2,c
  7540  0025F4  EFFE  F012         	goto	u3511
  7541  0025F8  EF00  F013         	goto	u3510
  7542  0025FC                     u3511:
  7543  0025FC  EF08  F013         	goto	l3787
  7544  002600                     u3510:
  7545  002600  0E00               	movlw	0
  7546  002602  6E1C               	movwf	___flge@ff2^0,c
  7547  002604  0E00               	movlw	0
  7548  002606  6E1D               	movwf	(___flge@ff2+1)^0,c
  7549  002608  0E00               	movlw	0
  7550  00260A  6E1E               	movwf	(___flge@ff2+2)^0,c
  7551  00260C  0E00               	movlw	0
  7552  00260E  6E1F               	movwf	(___flge@ff2+3)^0,c
  7553  002610                     l3787:
  7554  002610  AE1B               	btfss	(___flge@ff1+3)^0,7,c
  7555  002612  EF0D  F013         	goto	u3521
  7556  002616  EF0F  F013         	goto	u3520
  7557  00261A                     u3521:
  7558  00261A  EF18  F013         	goto	l3791
  7559  00261E                     u3520:
  7560  00261E  6C18               	negf	___flge@ff1^0,c
  7561  002620  1E19               	comf	(___flge@ff1+1)^0,f,c
  7562  002622  B0D8               	btfsc	status,0,c
  7563  002624  2A19               	incf	(___flge@ff1+1)^0,f,c
  7564  002626  1E1A               	comf	(___flge@ff1+2)^0,f,c
  7565  002628  B0D8               	btfsc	status,0,c
  7566  00262A  2A1A               	incf	(___flge@ff1+2)^0,f,c
  7567  00262C  0E80               	movlw	128
  7568  00262E  561B               	subfwb	(___flge@ff1+3)^0,f,c
  7569  002630                     l3791:
  7570  002630  AE1F               	btfss	(___flge@ff2+3)^0,7,c
  7571  002632  EF1D  F013         	goto	u3531
  7572  002636  EF1F  F013         	goto	u3530
  7573  00263A                     u3531:
  7574  00263A  EF28  F013         	goto	l651
  7575  00263E                     u3530:
  7576  00263E  6C1C               	negf	___flge@ff2^0,c
  7577  002640  1E1D               	comf	(___flge@ff2+1)^0,f,c
  7578  002642  B0D8               	btfsc	status,0,c
  7579  002644  2A1D               	incf	(___flge@ff2+1)^0,f,c
  7580  002646  1E1E               	comf	(___flge@ff2+2)^0,f,c
  7581  002648  B0D8               	btfsc	status,0,c
  7582  00264A  2A1E               	incf	(___flge@ff2+2)^0,f,c
  7583  00264C  0E80               	movlw	128
  7584  00264E  561F               	subfwb	(___flge@ff2+3)^0,f,c
  7585  002650                     l651:
  7586  002650  0E00               	movlw	0
  7587  002652  1A18               	xorwf	___flge@ff1^0,f,c
  7588  002654  0E00               	movlw	0
  7589  002656  1A19               	xorwf	(___flge@ff1+1)^0,f,c
  7590  002658  0E00               	movlw	0
  7591  00265A  1A1A               	xorwf	(___flge@ff1+2)^0,f,c
  7592  00265C  0E80               	movlw	128
  7593  00265E  1A1B               	xorwf	(___flge@ff1+3)^0,f,c
  7594  002660  0E00               	movlw	0
  7595  002662  1A1C               	xorwf	___flge@ff2^0,f,c
  7596  002664  0E00               	movlw	0
  7597  002666  1A1D               	xorwf	(___flge@ff2+1)^0,f,c
  7598  002668  0E00               	movlw	0
  7599  00266A  1A1E               	xorwf	(___flge@ff2+2)^0,f,c
  7600  00266C  0E80               	movlw	128
  7601  00266E  1A1F               	xorwf	(___flge@ff2+3)^0,f,c
  7602  002670  501C               	movf	___flge@ff2^0,w,c
  7603  002672  5C18               	subwf	___flge@ff1^0,w,c
  7604  002674  501D               	movf	(___flge@ff2+1)^0,w,c
  7605  002676  5819               	subwfb	(___flge@ff1+1)^0,w,c
  7606  002678  501E               	movf	(___flge@ff2+2)^0,w,c
  7607  00267A  581A               	subwfb	(___flge@ff1+2)^0,w,c
  7608  00267C  501F               	movf	(___flge@ff2+3)^0,w,c
  7609  00267E  581B               	subwfb	(___flge@ff1+3)^0,w,c
  7610  002680  B0D8               	btfsc	status,0,c
  7611  002682  EF45  F013         	goto	u3541
  7612  002686  EF47  F013         	goto	u3540
  7613  00268A                     u3541:
  7614  00268A  EF4A  F013         	goto	l3797
  7615  00268E                     u3540:
  7616  00268E  90D8               	bcf	status,0,c
  7617  002690  EF4B  F013         	goto	l656
  7618  002694                     l3797:
  7619  002694  80D8               	bsf	status,0,c
  7620  002696                     l656:
  7621  002696  0012               	return		;funcret
  7622  002698                     __end_of___flge:
  7623                           	callstack 0
  7624                           
  7625 ;; *************** function _configureTimer *****************
  7626 ;; Defined at:
  7627 ;;		line 497 in file "main.c"
  7628 ;; Parameters:    Size  Location     Type
  7629 ;;		None
  7630 ;; Auto vars:     Size  Location     Type
  7631 ;;		None
  7632 ;; Return value:  Size  Location     Type
  7633 ;;                  1    wreg      void 
  7634 ;; Registers used:
  7635 ;;		wreg, status,2
  7636 ;; Tracked objects:
  7637 ;;		On entry : 0/0
  7638 ;;		On exit  : 0/0
  7639 ;;		Unchanged: 0/0
  7640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7641 ;;      Params:         0       0       0       0       0       0       0       0       0
  7642 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7643 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7644 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7645 ;;Total ram usage:        0 bytes
  7646 ;; Hardware stack levels used: 1
  7647 ;; Hardware stack levels required when called: 2
  7648 ;; This function calls:
  7649 ;;		Nothing
  7650 ;; This function is called by:
  7651 ;;		_main
  7652 ;; This function uses a non-reentrant model
  7653 ;;
  7654                           
  7655                           	psect	text25
  7656  002FD0                     __ptext25:
  7657                           	callstack 0
  7658  002FD0                     _configureTimer:
  7659                           	callstack 28
  7660  002FD0                     
  7661                           ;main.c: 498:     T0CON = 0b11000100;
  7662  002FD0  0EC4               	movlw	196
  7663  002FD2  6ED5               	movwf	213,c	;volatile
  7664                           
  7665                           ;main.c: 502:     TMR0L = 100;
  7666  002FD4  0E64               	movlw	100
  7667  002FD6  6ED6               	movwf	214,c	;volatile
  7668  002FD8                     
  7669                           ;main.c: 503:     INTCONbits.TMR0IF = 0;
  7670  002FD8  94F2               	bcf	242,2,c	;volatile
  7671  002FDA  0012               	return		;funcret
  7672  002FDC                     __end_of_configureTimer:
  7673                           	callstack 0
  7674                           
  7675 ;; *************** function _configureLCD *****************
  7676 ;; Defined at:
  7677 ;;		line 469 in file "main.c"
  7678 ;; Parameters:    Size  Location     Type
  7679 ;;		None
  7680 ;; Auto vars:     Size  Location     Type
  7681 ;;		None
  7682 ;; Return value:  Size  Location     Type
  7683 ;;                  1    wreg      void 
  7684 ;; Registers used:
  7685 ;;		wreg, status,2, status,0, cstack
  7686 ;; Tracked objects:
  7687 ;;		On entry : 0/0
  7688 ;;		On exit  : 0/0
  7689 ;;		Unchanged: 0/0
  7690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7691 ;;      Params:         0       0       0       0       0       0       0       0       0
  7692 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7693 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7694 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7695 ;;Total ram usage:        1 bytes
  7696 ;; Hardware stack levels used: 1
  7697 ;; Hardware stack levels required when called: 5
  7698 ;; This function calls:
  7699 ;;		_OpenXLCD
  7700 ;;		_WriteCmdXLCD
  7701 ;; This function is called by:
  7702 ;;		_main
  7703 ;; This function uses a non-reentrant model
  7704 ;;
  7705                           
  7706                           	psect	text26
  7707  002DDC                     __ptext26:
  7708                           	callstack 0
  7709  002DDC                     _configureLCD:
  7710                           	callstack 25
  7711  002DDC                     
  7712                           ;main.c: 470:     OpenXLCD(0b00101100 & 0b00111000);
  7713  002DDC  0E28               	movlw	40
  7714  002DDE  EC4C  F013         	call	_OpenXLCD
  7715                           
  7716                           ;main.c: 471:     WriteCmdXLCD(0x01);
  7717  002DE2  0E01               	movlw	1
  7718  002DE4  EC73  F017         	call	_WriteCmdXLCD
  7719  002DE8                     
  7720                           ;main.c: 472:     _delay((unsigned long)((10)*(20000000/4000.0)));
  7721  002DE8  0E41               	movlw	65
  7722  002DEA  6E0C               	movwf	??_configureLCD^0,c
  7723  002DEC  0EEE               	movlw	238
  7724  002DEE                     u5617:
  7725  002DEE  2EE8               	decfsz	wreg,f,c
  7726  002DF0  D7FE               	bra	u5617
  7727  002DF2  2E0C               	decfsz	??_configureLCD^0,f,c
  7728  002DF4  D7FC               	bra	u5617
  7729  002DF6  D000               	nop2	
  7730  002DF8                     
  7731                           ;main.c: 473:     WriteCmdXLCD(0x02);
  7732  002DF8  0E02               	movlw	2
  7733  002DFA  EC73  F017         	call	_WriteCmdXLCD
  7734                           
  7735                           ;main.c: 474:     _delay((unsigned long)((2)*(20000000/4000.0)));
  7736  002DFE  0E0D               	movlw	13
  7737  002E00  6E0C               	movwf	??_configureLCD^0,c
  7738  002E02  0EFC               	movlw	252
  7739  002E04                     u5627:
  7740  002E04  2EE8               	decfsz	wreg,f,c
  7741  002E06  D7FE               	bra	u5627
  7742  002E08  2E0C               	decfsz	??_configureLCD^0,f,c
  7743  002E0A  D7FC               	bra	u5627
  7744  002E0C                     
  7745                           ;main.c: 475:     WriteCmdXLCD(0x0C);
  7746  002E0C  0E0C               	movlw	12
  7747  002E0E  EC73  F017         	call	_WriteCmdXLCD
  7748  002E12                     
  7749                           ;main.c: 476:     _delay((unsigned long)((2)*(20000000/4000.0)));
  7750  002E12  0E0D               	movlw	13
  7751  002E14  6E0C               	movwf	??_configureLCD^0,c
  7752  002E16  0EFC               	movlw	252
  7753  002E18                     u5637:
  7754  002E18  2EE8               	decfsz	wreg,f,c
  7755  002E1A  D7FE               	bra	u5637
  7756  002E1C  2E0C               	decfsz	??_configureLCD^0,f,c
  7757  002E1E  D7FC               	bra	u5637
  7758  002E20  0012               	return		;funcret
  7759  002E22                     __end_of_configureLCD:
  7760                           	callstack 0
  7761                           
  7762 ;; *************** function _OpenXLCD *****************
  7763 ;; Defined at:
  7764 ;;		line 41 in file "nxlcd.c"
  7765 ;; Parameters:    Size  Location     Type
  7766 ;;  lcdtype         1    wreg     unsigned char 
  7767 ;; Auto vars:     Size  Location     Type
  7768 ;;  lcdtype         1   10[COMRAM] unsigned char 
  7769 ;; Return value:  Size  Location     Type
  7770 ;;                  1    wreg      void 
  7771 ;; Registers used:
  7772 ;;		wreg, status,2, status,0, cstack
  7773 ;; Tracked objects:
  7774 ;;		On entry : 0/0
  7775 ;;		On exit  : 0/0
  7776 ;;		Unchanged: 0/0
  7777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7778 ;;      Params:         0       0       0       0       0       0       0       0       0
  7779 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7780 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7781 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7782 ;;Total ram usage:        1 bytes
  7783 ;; Hardware stack levels used: 1
  7784 ;; Hardware stack levels required when called: 4
  7785 ;; This function calls:
  7786 ;;		_BusyXLCD
  7787 ;;		_DelayPORXLCD
  7788 ;;		_DelayXLCD
  7789 ;;		_SetDDRamAddr
  7790 ;;		_WriteCmdXLCD
  7791 ;; This function is called by:
  7792 ;;		_configureLCD
  7793 ;; This function uses a non-reentrant model
  7794 ;;
  7795                           
  7796                           	psect	text27
  7797  002698                     __ptext27:
  7798                           	callstack 0
  7799  002698                     _OpenXLCD:
  7800                           	callstack 25
  7801                           
  7802                           ;incstack = 0
  7803                           ;OpenXLCD@lcdtype stored from wreg
  7804  002698  6E0B               	movwf	OpenXLCD@lcdtype^0,c
  7805  00269A                     
  7806                           ;nxlcd.c: 41: void OpenXLCD(unsigned char lcdtype);nxlcd.c: 42: {;nxlcd.c: 50:         P
      +                          ORTD &= 0x0f;
  7807  00269A  0E0F               	movlw	15
  7808  00269C  1683               	andwf	131,f,c	;volatile
  7809                           
  7810                           ;nxlcd.c: 51:         TRISD &= 0x0F;
  7811  00269E  0E0F               	movlw	15
  7812  0026A0  1695               	andwf	149,f,c	;volatile
  7813  0026A2                     
  7814                           ;nxlcd.c: 57:         TRISEbits.TRISE2 = 0;
  7815  0026A2  9496               	bcf	150,2,c	;volatile
  7816  0026A4                     
  7817                           ;nxlcd.c: 58:         TRISEbits.TRISE0 = 0;
  7818  0026A4  9096               	bcf	150,0,c	;volatile
  7819  0026A6                     
  7820                           ;nxlcd.c: 59:         TRISEbits.TRISE1 = 0;
  7821  0026A6  9296               	bcf	150,1,c	;volatile
  7822  0026A8                     
  7823                           ;nxlcd.c: 60:         LATEbits.LATE2 = 0;
  7824  0026A8  948D               	bcf	141,2,c	;volatile
  7825  0026AA                     
  7826                           ;nxlcd.c: 61:         LATEbits.LATE0 = 0;
  7827  0026AA  908D               	bcf	141,0,c	;volatile
  7828  0026AC                     
  7829                           ;nxlcd.c: 62:         LATEbits.LATE1 = 0;
  7830  0026AC  928D               	bcf	141,1,c	;volatile
  7831  0026AE                     
  7832                           ;nxlcd.c: 65:         DelayPORXLCD();
  7833  0026AE  ECE0  F017         	call	_DelayPORXLCD	;wreg free
  7834  0026B2                     
  7835                           ;nxlcd.c: 67:    WriteCmdXLCD(0x30);
  7836  0026B2  0E30               	movlw	48
  7837  0026B4  EC73  F017         	call	_WriteCmdXLCD
  7838  0026B8                     
  7839                           ;nxlcd.c: 68:    DelayXLCD();
  7840  0026B8  ECD7  F017         	call	_DelayXLCD	;wreg free
  7841  0026BC                     
  7842                           ;nxlcd.c: 69:    DelayXLCD();
  7843  0026BC  ECD7  F017         	call	_DelayXLCD	;wreg free
  7844  0026C0                     
  7845                           ;nxlcd.c: 70:    WriteCmdXLCD(0x30);
  7846  0026C0  0E30               	movlw	48
  7847  0026C2  EC73  F017         	call	_WriteCmdXLCD
  7848  0026C6                     
  7849                           ;nxlcd.c: 71:    DelayXLCD();
  7850  0026C6  ECD7  F017         	call	_DelayXLCD	;wreg free
  7851  0026CA                     
  7852                           ;nxlcd.c: 72:    DelayXLCD();
  7853  0026CA  ECD7  F017         	call	_DelayXLCD	;wreg free
  7854  0026CE                     
  7855                           ;nxlcd.c: 73:    WriteCmdXLCD(0x32);
  7856  0026CE  0E32               	movlw	50
  7857  0026D0  EC73  F017         	call	_WriteCmdXLCD
  7858  0026D4                     l3751:
  7859  0026D4  EC11  F017         	call	_BusyXLCD	;wreg free
  7860  0026D8  0900               	iorlw	0
  7861  0026DA  A4D8               	btfss	status,2,c
  7862  0026DC  EF72  F013         	goto	u3431
  7863  0026E0  EF74  F013         	goto	u3430
  7864  0026E4                     u3431:
  7865  0026E4  EF6A  F013         	goto	l3751
  7866  0026E8                     u3430:
  7867  0026E8                     l3753:
  7868  0026E8  EC11  F017         	call	_BusyXLCD	;wreg free
  7869  0026EC  0900               	iorlw	0
  7870  0026EE  A4D8               	btfss	status,2,c
  7871  0026F0  EF7C  F013         	goto	u3441
  7872  0026F4  EF7E  F013         	goto	u3440
  7873  0026F8                     u3441:
  7874  0026F8  EF74  F013         	goto	l3753
  7875  0026FC                     u3440:
  7876  0026FC                     
  7877                           ;nxlcd.c: 80:         WriteCmdXLCD(lcdtype);
  7878  0026FC  500B               	movf	OpenXLCD@lcdtype^0,w,c
  7879  0026FE  EC73  F017         	call	_WriteCmdXLCD
  7880  002702                     l3757:
  7881  002702  EC11  F017         	call	_BusyXLCD	;wreg free
  7882  002706  0900               	iorlw	0
  7883  002708  A4D8               	btfss	status,2,c
  7884  00270A  EF89  F013         	goto	u3451
  7885  00270E  EF8B  F013         	goto	u3450
  7886  002712                     u3451:
  7887  002712  EF81  F013         	goto	l3757
  7888  002716                     u3450:
  7889  002716                     
  7890                           ;nxlcd.c: 84:         WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  7891  002716  0E08               	movlw	8
  7892  002718  EC73  F017         	call	_WriteCmdXLCD
  7893  00271C                     l3761:
  7894  00271C  EC11  F017         	call	_BusyXLCD	;wreg free
  7895  002720  0900               	iorlw	0
  7896  002722  A4D8               	btfss	status,2,c
  7897  002724  EF96  F013         	goto	u3461
  7898  002728  EF98  F013         	goto	u3460
  7899  00272C                     u3461:
  7900  00272C  EF8E  F013         	goto	l3761
  7901  002730                     u3460:
  7902  002730                     
  7903                           ;nxlcd.c: 86:         WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  7904  002730  0E0F               	movlw	15
  7905  002732  EC73  F017         	call	_WriteCmdXLCD
  7906  002736                     l3765:
  7907  002736  EC11  F017         	call	_BusyXLCD	;wreg free
  7908  00273A  0900               	iorlw	0
  7909  00273C  A4D8               	btfss	status,2,c
  7910  00273E  EFA3  F013         	goto	u3471
  7911  002742  EFA5  F013         	goto	u3470
  7912  002746                     u3471:
  7913  002746  EF9B  F013         	goto	l3765
  7914  00274A                     u3470:
  7915  00274A                     
  7916                           ;nxlcd.c: 90:         WriteCmdXLCD(0x01);
  7917  00274A  0E01               	movlw	1
  7918  00274C  EC73  F017         	call	_WriteCmdXLCD
  7919  002750                     l3769:
  7920  002750  EC11  F017         	call	_BusyXLCD	;wreg free
  7921  002754  0900               	iorlw	0
  7922  002756  A4D8               	btfss	status,2,c
  7923  002758  EFB0  F013         	goto	u3481
  7924  00275C  EFB2  F013         	goto	u3480
  7925  002760                     u3481:
  7926  002760  EFA8  F013         	goto	l3769
  7927  002764                     u3480:
  7928  002764                     
  7929                           ;nxlcd.c: 94:         WriteCmdXLCD(0b00000100);
  7930  002764  0E04               	movlw	4
  7931  002766  EC73  F017         	call	_WriteCmdXLCD
  7932  00276A                     l3773:
  7933  00276A  EC11  F017         	call	_BusyXLCD	;wreg free
  7934  00276E  0900               	iorlw	0
  7935  002770  A4D8               	btfss	status,2,c
  7936  002772  EFBD  F013         	goto	u3491
  7937  002776  EFBF  F013         	goto	u3490
  7938  00277A                     u3491:
  7939  00277A  EFB5  F013         	goto	l3773
  7940  00277E                     u3490:
  7941  00277E                     
  7942                           ;nxlcd.c: 98:         SetDDRamAddr(0x80);
  7943  00277E  0E80               	movlw	128
  7944  002780  EC34  F017         	call	_SetDDRamAddr
  7945  002784  0012               	return		;funcret
  7946  002786                     __end_of_OpenXLCD:
  7947                           	callstack 0
  7948                           
  7949 ;; *************** function _WriteCmdXLCD *****************
  7950 ;; Defined at:
  7951 ;;		line 388 in file "nxlcd.c"
  7952 ;; Parameters:    Size  Location     Type
  7953 ;;  cmd             1    wreg     unsigned char 
  7954 ;; Auto vars:     Size  Location     Type
  7955 ;;  cmd             1    9[COMRAM] unsigned char 
  7956 ;; Return value:  Size  Location     Type
  7957 ;;                  1    wreg      void 
  7958 ;; Registers used:
  7959 ;;		wreg, status,2, status,0, cstack
  7960 ;; Tracked objects:
  7961 ;;		On entry : 0/0
  7962 ;;		On exit  : 0/0
  7963 ;;		Unchanged: 0/0
  7964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7965 ;;      Params:         0       0       0       0       0       0       0       0       0
  7966 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7967 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7968 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7969 ;;Total ram usage:        1 bytes
  7970 ;; Hardware stack levels used: 1
  7971 ;; Hardware stack levels required when called: 3
  7972 ;; This function calls:
  7973 ;;		_DelayFor18TCY
  7974 ;; This function is called by:
  7975 ;;		_displayMenu
  7976 ;;		_readTwoDigitValue
  7977 ;;		_configureLCD
  7978 ;;		_displayStuff
  7979 ;;		_OpenXLCD
  7980 ;; This function uses a non-reentrant model
  7981 ;;
  7982                           
  7983                           	psect	text28
  7984  002EE6                     __ptext28:
  7985                           	callstack 0
  7986  002EE6                     _WriteCmdXLCD:
  7987                           	callstack 25
  7988                           
  7989                           ;incstack = 0
  7990                           ;WriteCmdXLCD@cmd stored from wreg
  7991  002EE6  6E0A               	movwf	WriteCmdXLCD@cmd^0,c
  7992  002EE8                     
  7993                           ;nxlcd.c: 388: void WriteCmdXLCD(unsigned char cmd);nxlcd.c: 389: {;nxlcd.c: 403:       
      +                            TRISD &= 0x0f;
  7994  002EE8  0E0F               	movlw	15
  7995  002EEA  1695               	andwf	149,f,c	;volatile
  7996                           
  7997                           ;nxlcd.c: 404:         PORTD &= 0x0f;
  7998  002EEC  0E0F               	movlw	15
  7999  002EEE  1683               	andwf	131,f,c	;volatile
  8000                           
  8001                           ;nxlcd.c: 405:         PORTD |= cmd&0xf0;
  8002  002EF0  500A               	movf	WriteCmdXLCD@cmd^0,w,c
  8003  002EF2  0BF0               	andlw	240
  8004  002EF4  1283               	iorwf	131,f,c	;volatile
  8005  002EF6                     
  8006                           ;nxlcd.c: 411:         LATEbits.LATE2 = 0;
  8007  002EF6  948D               	bcf	141,2,c	;volatile
  8008  002EF8                     
  8009                           ;nxlcd.c: 412:         LATEbits.LATE0 = 0;
  8010  002EF8  908D               	bcf	141,0,c	;volatile
  8011  002EFA                     
  8012                           ;nxlcd.c: 413:         DelayFor18TCY();
  8013  002EFA  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  8014  002EFE                     
  8015                           ;nxlcd.c: 414:         LATEbits.LATE1 = 1;
  8016  002EFE  828D               	bsf	141,1,c	;volatile
  8017  002F00                     
  8018                           ;nxlcd.c: 415:         DelayFor18TCY();
  8019  002F00  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  8020  002F04                     
  8021                           ;nxlcd.c: 416:         LATEbits.LATE1 = 0;
  8022  002F04  928D               	bcf	141,1,c	;volatile
  8023                           
  8024                           ;nxlcd.c: 418:         PORTD &= 0x0f;
  8025  002F06  0E0F               	movlw	15
  8026  002F08  1683               	andwf	131,f,c	;volatile
  8027                           
  8028                           ;nxlcd.c: 419:         PORTD |= (cmd<<4)&0xf0;
  8029  002F0A  380A               	swapf	WriteCmdXLCD@cmd^0,w,c
  8030  002F0C  0BF0               	andlw	240
  8031  002F0E  0BF0               	andlw	240
  8032  002F10  1283               	iorwf	131,f,c	;volatile
  8033  002F12                     
  8034                           ;nxlcd.c: 424:         DelayFor18TCY();
  8035  002F12  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  8036  002F16                     
  8037                           ;nxlcd.c: 425:         LATEbits.LATE1 = 1;
  8038  002F16  828D               	bsf	141,1,c	;volatile
  8039  002F18                     
  8040                           ;nxlcd.c: 426:         DelayFor18TCY();
  8041  002F18  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  8042  002F1C                     
  8043                           ;nxlcd.c: 427:         LATEbits.LATE1 = 0;
  8044  002F1C  928D               	bcf	141,1,c	;volatile
  8045                           
  8046                           ;nxlcd.c: 429:         TRISD |= 0xf0;
  8047  002F1E  0EF0               	movlw	240
  8048  002F20  1295               	iorwf	149,f,c	;volatile
  8049  002F22  0012               	return		;funcret
  8050  002F24                     __end_of_WriteCmdXLCD:
  8051                           	callstack 0
  8052                           
  8053 ;; *************** function _SetDDRamAddr *****************
  8054 ;; Defined at:
  8055 ;;		line 171 in file "nxlcd.c"
  8056 ;; Parameters:    Size  Location     Type
  8057 ;;  DDaddr          1    wreg     unsigned char 
  8058 ;; Auto vars:     Size  Location     Type
  8059 ;;  DDaddr          1    9[COMRAM] unsigned char 
  8060 ;; Return value:  Size  Location     Type
  8061 ;;                  1    wreg      void 
  8062 ;; Registers used:
  8063 ;;		wreg, status,2, status,0, cstack
  8064 ;; Tracked objects:
  8065 ;;		On entry : 0/0
  8066 ;;		On exit  : 0/0
  8067 ;;		Unchanged: 0/0
  8068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8069 ;;      Params:         0       0       0       0       0       0       0       0       0
  8070 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8071 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8072 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8073 ;;Total ram usage:        1 bytes
  8074 ;; Hardware stack levels used: 1
  8075 ;; Hardware stack levels required when called: 3
  8076 ;; This function calls:
  8077 ;;		_DelayFor18TCY
  8078 ;; This function is called by:
  8079 ;;		_OpenXLCD
  8080 ;; This function uses a non-reentrant model
  8081 ;;
  8082                           
  8083                           	psect	text29
  8084  002E68                     __ptext29:
  8085                           	callstack 0
  8086  002E68                     _SetDDRamAddr:
  8087                           	callstack 25
  8088                           
  8089                           ;incstack = 0
  8090                           ;SetDDRamAddr@DDaddr stored from wreg
  8091  002E68  6E0A               	movwf	SetDDRamAddr@DDaddr^0,c
  8092  002E6A                     
  8093                           ;nxlcd.c: 171: void SetDDRamAddr(unsigned char DDaddr);nxlcd.c: 172: {;nxlcd.c: 186:    
      +                               TRISD &= 0x0f;
  8094  002E6A  0E0F               	movlw	15
  8095  002E6C  1695               	andwf	149,f,c	;volatile
  8096                           
  8097                           ;nxlcd.c: 187:         PORTD &= 0x0f;
  8098  002E6E  0E0F               	movlw	15
  8099  002E70  1683               	andwf	131,f,c	;volatile
  8100                           
  8101                           ;nxlcd.c: 188:         PORTD |= ((DDaddr | 0b10000000) & 0xf0);
  8102  002E72  500A               	movf	SetDDRamAddr@DDaddr^0,w,c
  8103  002E74  0980               	iorlw	128
  8104  002E76  0BF0               	andlw	240
  8105  002E78  1283               	iorwf	131,f,c	;volatile
  8106  002E7A                     
  8107                           ;nxlcd.c: 194:         LATEbits.LATE2 = 0;
  8108  002E7A  948D               	bcf	141,2,c	;volatile
  8109  002E7C                     
  8110                           ;nxlcd.c: 195:         LATEbits.LATE0 = 0;
  8111  002E7C  908D               	bcf	141,0,c	;volatile
  8112  002E7E                     
  8113                           ;nxlcd.c: 196:         DelayFor18TCY();
  8114  002E7E  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  8115  002E82                     
  8116                           ;nxlcd.c: 197:         LATEbits.LATE1 = 1;
  8117  002E82  828D               	bsf	141,1,c	;volatile
  8118  002E84                     
  8119                           ;nxlcd.c: 198:         DelayFor18TCY();
  8120  002E84  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  8121  002E88                     
  8122                           ;nxlcd.c: 199:         LATEbits.LATE1 = 0;
  8123  002E88  928D               	bcf	141,1,c	;volatile
  8124                           
  8125                           ;nxlcd.c: 201:         PORTD &= 0x0f;
  8126  002E8A  0E0F               	movlw	15
  8127  002E8C  1683               	andwf	131,f,c	;volatile
  8128                           
  8129                           ;nxlcd.c: 202:         PORTD |= ((DDaddr<<4)&0xf0);
  8130  002E8E  380A               	swapf	SetDDRamAddr@DDaddr^0,w,c
  8131  002E90  0BF0               	andlw	240
  8132  002E92  0BF0               	andlw	240
  8133  002E94  1283               	iorwf	131,f,c	;volatile
  8134  002E96                     
  8135                           ;nxlcd.c: 207:         DelayFor18TCY();
  8136  002E96  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  8137  002E9A                     
  8138                           ;nxlcd.c: 208:         LATEbits.LATE1 = 1;
  8139  002E9A  828D               	bsf	141,1,c	;volatile
  8140  002E9C                     
  8141                           ;nxlcd.c: 209:         DelayFor18TCY();
  8142  002E9C  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  8143  002EA0                     
  8144                           ;nxlcd.c: 210:         LATEbits.LATE1 = 0;
  8145  002EA0  928D               	bcf	141,1,c	;volatile
  8146                           
  8147                           ;nxlcd.c: 212:         TRISD |= 0xf0;
  8148  002EA2  0EF0               	movlw	240
  8149  002EA4  1295               	iorwf	149,f,c	;volatile
  8150  002EA6  0012               	return		;funcret
  8151  002EA8                     __end_of_SetDDRamAddr:
  8152                           	callstack 0
  8153                           
  8154 ;; *************** function _DelayXLCD *****************
  8155 ;; Defined at:
  8156 ;;		line 22 in file "nxlcd.c"
  8157 ;; Parameters:    Size  Location     Type
  8158 ;;		None
  8159 ;; Auto vars:     Size  Location     Type
  8160 ;;		None
  8161 ;; Return value:  Size  Location     Type
  8162 ;;                  1    wreg      void 
  8163 ;; Registers used:
  8164 ;;		wreg
  8165 ;; Tracked objects:
  8166 ;;		On entry : 0/0
  8167 ;;		On exit  : 0/0
  8168 ;;		Unchanged: 0/0
  8169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8170 ;;      Params:         0       0       0       0       0       0       0       0       0
  8171 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8172 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8173 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8174 ;;Total ram usage:        1 bytes
  8175 ;; Hardware stack levels used: 1
  8176 ;; Hardware stack levels required when called: 2
  8177 ;; This function calls:
  8178 ;;		Nothing
  8179 ;; This function is called by:
  8180 ;;		_OpenXLCD
  8181 ;; This function uses a non-reentrant model
  8182 ;;
  8183                           
  8184                           	psect	text30
  8185  002FAE                     __ptext30:
  8186                           	callstack 0
  8187  002FAE                     _DelayXLCD:
  8188                           	callstack 26
  8189  002FAE                     
  8190                           ;nxlcd.c: 24:     _delay((unsigned long)((5)*(20000000/4000.0)));
  8191  002FAE  0E21               	movlw	33
  8192  002FB0  6E0A               	movwf	??_DelayXLCD^0,c
  8193  002FB2  0E76               	movlw	118
  8194  002FB4                     u5647:
  8195  002FB4  2EE8               	decfsz	wreg,f,c
  8196  002FB6  D7FE               	bra	u5647
  8197  002FB8  2E0A               	decfsz	??_DelayXLCD^0,f,c
  8198  002FBA  D7FC               	bra	u5647
  8199  002FBC  D000               	nop2	
  8200  002FBE  0012               	return		;funcret
  8201  002FC0                     __end_of_DelayXLCD:
  8202                           	callstack 0
  8203                           
  8204 ;; *************** function _DelayPORXLCD *****************
  8205 ;; Defined at:
  8206 ;;		line 17 in file "nxlcd.c"
  8207 ;; Parameters:    Size  Location     Type
  8208 ;;		None
  8209 ;; Auto vars:     Size  Location     Type
  8210 ;;		None
  8211 ;; Return value:  Size  Location     Type
  8212 ;;                  1    wreg      void 
  8213 ;; Registers used:
  8214 ;;		wreg
  8215 ;; Tracked objects:
  8216 ;;		On entry : 0/0
  8217 ;;		On exit  : 0/0
  8218 ;;		Unchanged: 0/0
  8219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8220 ;;      Params:         0       0       0       0       0       0       0       0       0
  8221 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8222 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8223 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8224 ;;Total ram usage:        1 bytes
  8225 ;; Hardware stack levels used: 1
  8226 ;; Hardware stack levels required when called: 2
  8227 ;; This function calls:
  8228 ;;		Nothing
  8229 ;; This function is called by:
  8230 ;;		_OpenXLCD
  8231 ;; This function uses a non-reentrant model
  8232 ;;
  8233                           
  8234                           	psect	text31
  8235  002FC0                     __ptext31:
  8236                           	callstack 0
  8237  002FC0                     _DelayPORXLCD:
  8238                           	callstack 26
  8239  002FC0                     
  8240                           ;nxlcd.c: 19:     _delay((unsigned long)((15)*(20000000/4000.0)));
  8241  002FC0  0E62               	movlw	98
  8242  002FC2  6E0A               	movwf	??_DelayPORXLCD^0,c
  8243  002FC4  0E66               	movlw	102
  8244  002FC6                     u5657:
  8245  002FC6  2EE8               	decfsz	wreg,f,c
  8246  002FC8  D7FE               	bra	u5657
  8247  002FCA  2E0A               	decfsz	??_DelayPORXLCD^0,f,c
  8248  002FCC  D7FC               	bra	u5657
  8249  002FCE  0012               	return		;funcret
  8250  002FD0                     __end_of_DelayPORXLCD:
  8251                           	callstack 0
  8252                           
  8253 ;; *************** function _BusyXLCD *****************
  8254 ;; Defined at:
  8255 ;;		line 227 in file "nxlcd.c"
  8256 ;; Parameters:    Size  Location     Type
  8257 ;;		None
  8258 ;; Auto vars:     Size  Location     Type
  8259 ;;		None
  8260 ;; Return value:  Size  Location     Type
  8261 ;;                  1    wreg      unsigned char 
  8262 ;; Registers used:
  8263 ;;		wreg, cstack
  8264 ;; Tracked objects:
  8265 ;;		On entry : 0/0
  8266 ;;		On exit  : 0/0
  8267 ;;		Unchanged: 0/0
  8268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8269 ;;      Params:         0       0       0       0       0       0       0       0       0
  8270 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8271 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8272 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8273 ;;Total ram usage:        0 bytes
  8274 ;; Hardware stack levels used: 1
  8275 ;; Hardware stack levels required when called: 3
  8276 ;; This function calls:
  8277 ;;		_DelayFor18TCY
  8278 ;; This function is called by:
  8279 ;;		_OpenXLCD
  8280 ;;		_putsXLCD
  8281 ;;		_putrsXLCD
  8282 ;; This function uses a non-reentrant model
  8283 ;;
  8284                           
  8285                           	psect	text32
  8286  002E22                     __ptext32:
  8287                           	callstack 0
  8288  002E22                     _BusyXLCD:
  8289                           	callstack 25
  8290  002E22                     
  8291                           ;nxlcd.c: 229:         LATEbits.LATE2 = 1;
  8292  002E22  848D               	bsf	141,2,c	;volatile
  8293                           
  8294                           ;nxlcd.c: 230:         LATEbits.LATE0 = 0;
  8295  002E24  908D               	bcf	141,0,c	;volatile
  8296  002E26                     
  8297                           ;nxlcd.c: 231:         DelayFor18TCY();
  8298  002E26  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  8299  002E2A                     
  8300                           ;nxlcd.c: 232:         LATEbits.LATE1 = 1;
  8301  002E2A  828D               	bsf	141,1,c	;volatile
  8302                           
  8303                           ;nxlcd.c: 233:         DelayFor18TCY();
  8304  002E2C  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  8305  002E30                     
  8306                           ;nxlcd.c: 249:         if(PORTD&0x80)
  8307  002E30  AE83               	btfss	131,7,c	;volatile
  8308  002E32  EF1D  F017         	goto	u2471
  8309  002E36  EF1F  F017         	goto	u2470
  8310  002E3A                     u2471:
  8311  002E3A  EF2A  F017         	goto	l351
  8312  002E3E                     u2470:
  8313  002E3E                     
  8314                           ;nxlcd.c: 253:         {;nxlcd.c: 254:                 LATEbits.LATE1 = 0;
  8315  002E3E  928D               	bcf	141,1,c	;volatile
  8316  002E40                     
  8317                           ;nxlcd.c: 255:                 DelayFor18TCY();
  8318  002E40  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  8319  002E44                     
  8320                           ;nxlcd.c: 256:                 LATEbits.LATE1 = 1;
  8321  002E44  828D               	bsf	141,1,c	;volatile
  8322                           
  8323                           ;nxlcd.c: 257:                 DelayFor18TCY();
  8324  002E46  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  8325  002E4A                     
  8326                           ;nxlcd.c: 258:                 LATEbits.LATE1 = 0;
  8327  002E4A  928D               	bcf	141,1,c	;volatile
  8328  002E4C                     
  8329                           ;nxlcd.c: 259:                 LATEbits.LATE2 = 0;
  8330  002E4C  948D               	bcf	141,2,c	;volatile
  8331  002E4E                     
  8332                           ;nxlcd.c: 260:                 return 1;
  8333  002E4E  0E01               	movlw	1
  8334  002E50  EF33  F017         	goto	l352
  8335  002E54                     l351:
  8336                           
  8337                           ;nxlcd.c: 263:         {;nxlcd.c: 264:                 LATEbits.LATE1 = 0;
  8338  002E54  928D               	bcf	141,1,c	;volatile
  8339  002E56                     
  8340                           ;nxlcd.c: 265:                 DelayFor18TCY();
  8341  002E56  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  8342  002E5A                     
  8343                           ;nxlcd.c: 266:                 LATEbits.LATE1 = 1;
  8344  002E5A  828D               	bsf	141,1,c	;volatile
  8345                           
  8346                           ;nxlcd.c: 267:                 DelayFor18TCY();
  8347  002E5C  ECF4  F017         	call	_DelayFor18TCY	;wreg free
  8348  002E60                     
  8349                           ;nxlcd.c: 268:                 LATEbits.LATE1 = 0;
  8350  002E60  928D               	bcf	141,1,c	;volatile
  8351  002E62                     
  8352                           ;nxlcd.c: 269:                 LATEbits.LATE2 = 0;
  8353  002E62  948D               	bcf	141,2,c	;volatile
  8354  002E64                     
  8355                           ;nxlcd.c: 270:                 return 0;
  8356  002E64  0E00               	movlw	0
  8357  002E66                     l352:
  8358  002E66  0012               	return		;funcret
  8359  002E68                     __end_of_BusyXLCD:
  8360                           	callstack 0
  8361                           
  8362 ;; *************** function _DelayFor18TCY *****************
  8363 ;; Defined at:
  8364 ;;		line 12 in file "nxlcd.c"
  8365 ;; Parameters:    Size  Location     Type
  8366 ;;		None
  8367 ;; Auto vars:     Size  Location     Type
  8368 ;;		None
  8369 ;; Return value:  Size  Location     Type
  8370 ;;                  1    wreg      void 
  8371 ;; Registers used:
  8372 ;;		wreg
  8373 ;; Tracked objects:
  8374 ;;		On entry : 0/0
  8375 ;;		On exit  : 0/0
  8376 ;;		Unchanged: 0/0
  8377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8378 ;;      Params:         0       0       0       0       0       0       0       0       0
  8379 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8380 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8381 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8382 ;;Total ram usage:        0 bytes
  8383 ;; Hardware stack levels used: 1
  8384 ;; Hardware stack levels required when called: 2
  8385 ;; This function calls:
  8386 ;;		Nothing
  8387 ;; This function is called by:
  8388 ;;		_SetDDRamAddr
  8389 ;;		_BusyXLCD
  8390 ;;		_WriteCmdXLCD
  8391 ;;		_WriteDataXLCD
  8392 ;;		_SetCGRamAddr
  8393 ;;		_ReadAddrXLCD
  8394 ;;		_ReadDataXLCD
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398                           	psect	text33
  8399  002FE8                     __ptext33:
  8400                           	callstack 0
  8401  002FE8                     _DelayFor18TCY:
  8402                           	callstack 25
  8403  002FE8                     
  8404                           ;nxlcd.c: 14:     _delay((unsigned long)((20)*(20000000/4000000.0)));
  8405  002FE8  0E21               	movlw	33
  8406  002FEA                     u5667:
  8407  002FEA  2EE8               	decfsz	wreg,f,c
  8408  002FEC  D7FE               	bra	u5667
  8409  002FEE  F000               	nop	
  8410  002FF0  0012               	return		;funcret
  8411  002FF2                     __end_of_DelayFor18TCY:
  8412                           	callstack 0
  8413                           
  8414 ;; *************** function _configureInterrupt *****************
  8415 ;; Defined at:
  8416 ;;		line 480 in file "main.c"
  8417 ;; Parameters:    Size  Location     Type
  8418 ;;		None
  8419 ;; Auto vars:     Size  Location     Type
  8420 ;;		None
  8421 ;; Return value:  Size  Location     Type
  8422 ;;                  1    wreg      void 
  8423 ;; Registers used:
  8424 ;;		None
  8425 ;; Tracked objects:
  8426 ;;		On entry : 0/0
  8427 ;;		On exit  : 0/0
  8428 ;;		Unchanged: 0/0
  8429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8430 ;;      Params:         0       0       0       0       0       0       0       0       0
  8431 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8432 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8433 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8434 ;;Total ram usage:        0 bytes
  8435 ;; Hardware stack levels used: 1
  8436 ;; Hardware stack levels required when called: 2
  8437 ;; This function calls:
  8438 ;;		Nothing
  8439 ;; This function is called by:
  8440 ;;		_main
  8441 ;; This function uses a non-reentrant model
  8442 ;;
  8443                           
  8444                           	psect	text34
  8445  002F9A                     __ptext34:
  8446                           	callstack 0
  8447  002F9A                     _configureInterrupt:
  8448                           	callstack 28
  8449  002F9A                     
  8450                           ;main.c: 481:     RCONbits.IPEN = 1;
  8451  002F9A  8ED0               	bsf	208,7,c	;volatile
  8452                           
  8453                           ;main.c: 482:     INTCONbits.GIE = 1;
  8454  002F9C  8EF2               	bsf	242,7,c	;volatile
  8455                           
  8456                           ;main.c: 483:     INTCONbits.PEIE = 1;
  8457  002F9E  8CF2               	bsf	242,6,c	;volatile
  8458                           
  8459                           ;main.c: 486:     INTCON2bits.TMR0IP = 1;
  8460  002FA0  84F1               	bsf	241,2,c	;volatile
  8461                           
  8462                           ;main.c: 487:     INTCONbits.TMR0IE = 1;
  8463  002FA2  8AF2               	bsf	242,5,c	;volatile
  8464                           
  8465                           ;main.c: 488:     INTCONbits.TMR0IF = 0;
  8466  002FA4  94F2               	bcf	242,2,c	;volatile
  8467                           
  8468                           ;main.c: 491:     INTCON2bits.RBIP = 0;
  8469  002FA6  90F1               	bcf	241,0,c	;volatile
  8470                           
  8471                           ;main.c: 492:     INTCONbits.RBIE = 0;
  8472  002FA8  96F2               	bcf	242,3,c	;volatile
  8473                           
  8474                           ;main.c: 493:     INTCONbits.RBIF = 0;
  8475  002FAA  90F2               	bcf	242,0,c	;volatile
  8476  002FAC  0012               	return		;funcret
  8477  002FAE                     __end_of_configureInterrupt:
  8478                           	callstack 0
  8479                           
  8480 ;; *************** function _configureIO *****************
  8481 ;; Defined at:
  8482 ;;		line 455 in file "main.c"
  8483 ;; Parameters:    Size  Location     Type
  8484 ;;		None
  8485 ;; Auto vars:     Size  Location     Type
  8486 ;;		None
  8487 ;; Return value:  Size  Location     Type
  8488 ;;                  1    wreg      void 
  8489 ;; Registers used:
  8490 ;;		wreg, status,2
  8491 ;; Tracked objects:
  8492 ;;		On entry : 0/0
  8493 ;;		On exit  : 0/0
  8494 ;;		Unchanged: 0/0
  8495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8496 ;;      Params:         0       0       0       0       0       0       0       0       0
  8497 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8498 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8499 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8500 ;;Total ram usage:        0 bytes
  8501 ;; Hardware stack levels used: 1
  8502 ;; Hardware stack levels required when called: 2
  8503 ;; This function calls:
  8504 ;;		Nothing
  8505 ;; This function is called by:
  8506 ;;		_main
  8507 ;; This function uses a non-reentrant model
  8508 ;;
  8509                           
  8510                           	psect	text35
  8511  002F82                     __ptext35:
  8512                           	callstack 0
  8513  002F82                     _configureIO:
  8514                           	callstack 28
  8515  002F82                     
  8516                           ;main.c: 456:     TRISB = 0xF0;
  8517  002F82  0EF0               	movlw	240
  8518  002F84  6E93               	movwf	147,c	;volatile
  8519  002F86                     
  8520                           ;main.c: 457:     TRISAbits.RA3 = 1;
  8521  002F86  8692               	bsf	146,3,c	;volatile
  8522  002F88                     
  8523                           ;main.c: 458:     TRISAbits.RA0 = 1;
  8524  002F88  8092               	bsf	146,0,c	;volatile
  8525  002F8A                     
  8526                           ;main.c: 459:     TRISAbits.RA2 = 1;
  8527  002F8A  8492               	bsf	146,2,c	;volatile
  8528  002F8C                     
  8529                           ;main.c: 460:     TRISDbits.TRISD0 = 0;
  8530  002F8C  9095               	bcf	149,0,c	;volatile
  8531  002F8E                     
  8532                           ;main.c: 461:     TRISDbits.TRISD1 = 0;
  8533  002F8E  9295               	bcf	149,1,c	;volatile
  8534  002F90                     
  8535                           ;main.c: 462:     TRISCbits.TRISC2 = 0;
  8536  002F90  9494               	bcf	148,2,c	;volatile
  8537  002F92                     
  8538                           ;main.c: 463:     PORTDbits.RD0 = 0;
  8539  002F92  9083               	bcf	131,0,c	;volatile
  8540  002F94                     
  8541                           ;main.c: 464:     PORTDbits.RD1 = 0;
  8542  002F94  9283               	bcf	131,1,c	;volatile
  8543  002F96                     
  8544                           ;main.c: 465:     PORTCbits.RC2 = 0;
  8545  002F96  9482               	bcf	130,2,c	;volatile
  8546  002F98  0012               	return		;funcret
  8547  002F9A                     __end_of_configureIO:
  8548                           	callstack 0
  8549                           
  8550 ;; *************** function _configureADC *****************
  8551 ;; Defined at:
  8552 ;;		line 560 in file "main.c"
  8553 ;; Parameters:    Size  Location     Type
  8554 ;;		None
  8555 ;; Auto vars:     Size  Location     Type
  8556 ;;		None
  8557 ;; Return value:  Size  Location     Type
  8558 ;;                  1    wreg      void 
  8559 ;; Registers used:
  8560 ;;		wreg, status,2
  8561 ;; Tracked objects:
  8562 ;;		On entry : 0/0
  8563 ;;		On exit  : 0/0
  8564 ;;		Unchanged: 0/0
  8565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8566 ;;      Params:         0       0       0       0       0       0       0       0       0
  8567 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8568 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8569 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8570 ;;Total ram usage:        0 bytes
  8571 ;; Hardware stack levels used: 1
  8572 ;; Hardware stack levels required when called: 2
  8573 ;; This function calls:
  8574 ;;		Nothing
  8575 ;; This function is called by:
  8576 ;;		_main
  8577 ;; This function uses a non-reentrant model
  8578 ;;
  8579                           
  8580                           	psect	text36
  8581  002FDC                     __ptext36:
  8582                           	callstack 0
  8583  002FDC                     _configureADC:
  8584                           	callstack 28
  8585  002FDC                     
  8586                           ;main.c: 561:     ADCON1 = 0b00001011;
  8587  002FDC  0E0B               	movlw	11
  8588  002FDE  6EC1               	movwf	193,c	;volatile
  8589                           
  8590                           ;main.c: 564:     ADCON2 = 0b10010101;
  8591  002FE0  0E95               	movlw	149
  8592  002FE2  6EC0               	movwf	192,c	;volatile
  8593  002FE4                     
  8594                           ;main.c: 569:     ADCON0bits.ADON = 1;
  8595  002FE4  80C2               	bsf	194,0,c	;volatile
  8596  002FE6  0012               	return		;funcret
  8597  002FE8                     __end_of_configureADC:
  8598                           	callstack 0
  8599                           
  8600 ;; *************** function _buzzer *****************
  8601 ;; Defined at:
  8602 ;;		line 642 in file "main.c"
  8603 ;; Parameters:    Size  Location     Type
  8604 ;;  buzzerStatus    2    9[COMRAM] int 
  8605 ;; Auto vars:     Size  Location     Type
  8606 ;;		None
  8607 ;; Return value:  Size  Location     Type
  8608 ;;                  1    wreg      void 
  8609 ;; Registers used:
  8610 ;;		wreg, status,2, status,0
  8611 ;; Tracked objects:
  8612 ;;		On entry : 0/0
  8613 ;;		On exit  : 0/0
  8614 ;;		Unchanged: 0/0
  8615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8616 ;;      Params:         2       0       0       0       0       0       0       0       0
  8617 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8618 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8619 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8620 ;;Total ram usage:        2 bytes
  8621 ;; Hardware stack levels used: 1
  8622 ;; Hardware stack levels required when called: 2
  8623 ;; This function calls:
  8624 ;;		Nothing
  8625 ;; This function is called by:
  8626 ;;		_main
  8627 ;; This function uses a non-reentrant model
  8628 ;;
  8629                           
  8630                           	psect	text37
  8631  002FFC                     __ptext37:
  8632                           	callstack 0
  8633  002FFC                     _buzzer:
  8634                           	callstack 28
  8635  002FFC  0012               	return		;funcret
  8636  002FFE                     __end_of_buzzer:
  8637                           	callstack 0
  8638                           
  8639 ;; *************** function _ISR *****************
  8640 ;; Defined at:
  8641 ;;		line 428 in file "main.c"
  8642 ;; Parameters:    Size  Location     Type
  8643 ;;		None
  8644 ;; Auto vars:     Size  Location     Type
  8645 ;;		None
  8646 ;; Return value:  Size  Location     Type
  8647 ;;                  1    wreg      void 
  8648 ;; Registers used:
  8649 ;;		wreg, status,2, status,0, cstack
  8650 ;; Tracked objects:
  8651 ;;		On entry : 0/0
  8652 ;;		On exit  : 0/0
  8653 ;;		Unchanged: 0/0
  8654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8655 ;;      Params:         0       0       0       0       0       0       0       0       0
  8656 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8657 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8658 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8659 ;;Total ram usage:        0 bytes
  8660 ;; Hardware stack levels used: 1
  8661 ;; Hardware stack levels required when called: 1
  8662 ;; This function calls:
  8663 ;;		___llmod
  8664 ;; This function is called by:
  8665 ;;		Interrupt level 2
  8666 ;; This function uses a non-reentrant model
  8667 ;;
  8668                           
  8669                           	psect	intcode
  8670  000008                     __pintcode:
  8671                           	callstack 0
  8672  000008                     _ISR:
  8673                           	callstack 25
  8674                           
  8675                           ;incstack = 0
  8676  000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8677  00000A  EDE5  F015         	call	int_func,f	;refresh shadow registers
  8678                           
  8679                           	psect	intcode_body
  8680  002BCA                     __pintcode_body:
  8681                           	callstack 25
  8682  002BCA                     int_func:
  8683                           	callstack 25
  8684  002BCA  0006               	pop		; remove dummy address from shadow register refresh
  8685  002BCC                     
  8686                           ;main.c: 429:     if (INTCONbits.TMR0IF) {
  8687  002BCC  A4F2               	btfss	242,2,c	;volatile
  8688  002BCE  EFEB  F015         	goto	i2u404_41
  8689  002BD2  EFED  F015         	goto	i2u404_40
  8690  002BD6                     i2u404_41:
  8691  002BD6  EF2B  F016         	goto	i2l189
  8692  002BDA                     i2u404_40:
  8693  002BDA                     
  8694                           ;main.c: 430:         TMR0L = 100;
  8695  002BDA  0E64               	movlw	100
  8696  002BDC  6ED6               	movwf	214,c	;volatile
  8697  002BDE                     
  8698                           ;main.c: 431:         milliseconds++;
  8699  002BDE  0E01               	movlw	1
  8700  002BE0  264A               	addwf	_milliseconds^0,f,c	;volatile
  8701  002BE2  0E00               	movlw	0
  8702  002BE4  224B               	addwfc	(_milliseconds+1)^0,f,c	;volatile
  8703  002BE6  224C               	addwfc	(_milliseconds+2)^0,f,c	;volatile
  8704  002BE8  224D               	addwfc	(_milliseconds+3)^0,f,c	;volatile
  8705  002BEA                     
  8706                           ;main.c: 432:         if (milliseconds % 1000 == 0) {
  8707  002BEA  C04A  F001         	movff	_milliseconds,___llmod@dividend	;volatile
  8708  002BEE  C04B  F002         	movff	_milliseconds+1,___llmod@dividend+1	;volatile
  8709  002BF2  C04C  F003         	movff	_milliseconds+2,___llmod@dividend+2	;volatile
  8710  002BF6  C04D  F004         	movff	_milliseconds+3,___llmod@dividend+3	;volatile
  8711  002BFA  0EE8               	movlw	232
  8712  002BFC  6E05               	movwf	___llmod@divisor^0,c
  8713  002BFE  0E03               	movlw	3
  8714  002C00  6E06               	movwf	(___llmod@divisor+1)^0,c
  8715  002C02  0E00               	movlw	0
  8716  002C04  6E07               	movwf	(___llmod@divisor+2)^0,c
  8717  002C06  0E00               	movlw	0
  8718  002C08  6E08               	movwf	(___llmod@divisor+3)^0,c
  8719  002C0A  EC2D  F016         	call	___llmod	;wreg free
  8720  002C0E  5001               	movf	?___llmod^0,w,c
  8721  002C10  1002               	iorwf	(?___llmod+1)^0,w,c
  8722  002C12  1003               	iorwf	(?___llmod+2)^0,w,c
  8723  002C14  1004               	iorwf	(?___llmod+3)^0,w,c
  8724  002C16  A4D8               	btfss	status,2,c
  8725  002C18  EF10  F016         	goto	i2u405_41
  8726  002C1C  EF12  F016         	goto	i2u405_40
  8727  002C20                     i2u405_41:
  8728  002C20  EF2A  F016         	goto	i2l4227
  8729  002C24                     i2u405_40:
  8730  002C24                     
  8731                           ;main.c: 433:             if (tak > 1) {
  8732  002C24  BE53               	btfsc	(_tak+1)^0,7,c	;volatile
  8733  002C26  EF1E  F016         	goto	i2u406_41
  8734  002C2A  5053               	movf	(_tak+1)^0,w,c	;volatile
  8735  002C2C  E109               	bnz	i2u406_40
  8736  002C2E  0E02               	movlw	2
  8737  002C30  5C52               	subwf	_tak^0,w,c	;volatile
  8738  002C32  A0D8               	btfss	status,0,c
  8739  002C34  EF1E  F016         	goto	i2u406_41
  8740  002C38  EF20  F016         	goto	i2u406_40
  8741  002C3C                     i2u406_41:
  8742  002C3C  EF26  F016         	goto	i2l4225
  8743  002C40                     i2u406_40:
  8744  002C40                     
  8745                           ;main.c: 434:                 tak = 0;
  8746  002C40  0E00               	movlw	0
  8747  002C42  6E53               	movwf	(_tak+1)^0,c	;volatile
  8748  002C44  0E00               	movlw	0
  8749  002C46  6E52               	movwf	_tak^0,c	;volatile
  8750                           
  8751                           ;main.c: 435:             } else {
  8752  002C48  EF2A  F016         	goto	i2l4227
  8753  002C4C                     i2l4225:
  8754                           
  8755                           ;main.c: 436:                 tak = 1;
  8756  002C4C  0E00               	movlw	0
  8757  002C4E  6E53               	movwf	(_tak+1)^0,c	;volatile
  8758  002C50  0E01               	movlw	1
  8759  002C52  6E52               	movwf	_tak^0,c	;volatile
  8760  002C54                     i2l4227:
  8761                           
  8762                           ;main.c: 439:         INTCONbits.TMR0IF = 0;
  8763  002C54  94F2               	bcf	242,2,c	;volatile
  8764  002C56                     i2l189:
  8765  002C56  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8766  002C58  0011               	retfie		f
  8767  002C5A                     __end_of_ISR:
  8768                           	callstack 0
  8769                           
  8770 ;; *************** function ___llmod *****************
  8771 ;; Defined at:
  8772 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\llmod.c"
  8773 ;; Parameters:    Size  Location     Type
  8774 ;;  dividend        4    0[COMRAM] unsigned long 
  8775 ;;  divisor         4    4[COMRAM] unsigned long 
  8776 ;; Auto vars:     Size  Location     Type
  8777 ;;  counter         1    8[COMRAM] unsigned char 
  8778 ;; Return value:  Size  Location     Type
  8779 ;;                  4    0[COMRAM] unsigned long 
  8780 ;; Registers used:
  8781 ;;		wreg, status,2, status,0
  8782 ;; Tracked objects:
  8783 ;;		On entry : 0/0
  8784 ;;		On exit  : 0/0
  8785 ;;		Unchanged: 0/0
  8786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8787 ;;      Params:         8       0       0       0       0       0       0       0       0
  8788 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8789 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8790 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8791 ;;Total ram usage:        9 bytes
  8792 ;; Hardware stack levels used: 1
  8793 ;; This function calls:
  8794 ;;		Nothing
  8795 ;; This function is called by:
  8796 ;;		_ISR
  8797 ;; This function uses a non-reentrant model
  8798 ;;
  8799                           
  8800                           	psect	text39
  8801  002C5A                     __ptext39:
  8802                           	callstack 0
  8803  002C5A                     ___llmod:
  8804                           	callstack 25
  8805  002C5A  5005               	movf	___llmod@divisor^0,w,c
  8806  002C5C  1006               	iorwf	(___llmod@divisor+1)^0,w,c
  8807  002C5E  1007               	iorwf	(___llmod@divisor+2)^0,w,c
  8808  002C60  1008               	iorwf	(___llmod@divisor+3)^0,w,c
  8809  002C62  B4D8               	btfsc	status,2,c
  8810  002C64  EF36  F016         	goto	i2u374_41
  8811  002C68  EF38  F016         	goto	i2u374_40
  8812  002C6C                     i2u374_41:
  8813  002C6C  EF68  F016         	goto	i2l806
  8814  002C70                     i2u374_40:
  8815  002C70  0E01               	movlw	1
  8816  002C72  6E09               	movwf	___llmod@counter^0,c
  8817  002C74  EF42  F016         	goto	i2l4031
  8818  002C78                     i2l4029:
  8819  002C78  90D8               	bcf	status,0,c
  8820  002C7A  3605               	rlcf	___llmod@divisor^0,f,c
  8821  002C7C  3606               	rlcf	(___llmod@divisor+1)^0,f,c
  8822  002C7E  3607               	rlcf	(___llmod@divisor+2)^0,f,c
  8823  002C80  3608               	rlcf	(___llmod@divisor+3)^0,f,c
  8824  002C82  2A09               	incf	___llmod@counter^0,f,c
  8825  002C84                     i2l4031:
  8826  002C84  AE08               	btfss	(___llmod@divisor+3)^0,7,c
  8827  002C86  EF47  F016         	goto	i2u375_41
  8828  002C8A  EF49  F016         	goto	i2u375_40
  8829  002C8E                     i2u375_41:
  8830  002C8E  EF3C  F016         	goto	i2l4029
  8831  002C92                     i2u375_40:
  8832  002C92                     i2l4033:
  8833  002C92  5005               	movf	___llmod@divisor^0,w,c
  8834  002C94  5C01               	subwf	___llmod@dividend^0,w,c
  8835  002C96  5006               	movf	(___llmod@divisor+1)^0,w,c
  8836  002C98  5802               	subwfb	(___llmod@dividend+1)^0,w,c
  8837  002C9A  5007               	movf	(___llmod@divisor+2)^0,w,c
  8838  002C9C  5803               	subwfb	(___llmod@dividend+2)^0,w,c
  8839  002C9E  5008               	movf	(___llmod@divisor+3)^0,w,c
  8840  002CA0  5804               	subwfb	(___llmod@dividend+3)^0,w,c
  8841  002CA2  A0D8               	btfss	status,0,c
  8842  002CA4  EF56  F016         	goto	i2u376_41
  8843  002CA8  EF58  F016         	goto	i2u376_40
  8844  002CAC                     i2u376_41:
  8845  002CAC  EF60  F016         	goto	i2l4037
  8846  002CB0                     i2u376_40:
  8847  002CB0  5005               	movf	___llmod@divisor^0,w,c
  8848  002CB2  5E01               	subwf	___llmod@dividend^0,f,c
  8849  002CB4  5006               	movf	(___llmod@divisor+1)^0,w,c
  8850  002CB6  5A02               	subwfb	(___llmod@dividend+1)^0,f,c
  8851  002CB8  5007               	movf	(___llmod@divisor+2)^0,w,c
  8852  002CBA  5A03               	subwfb	(___llmod@dividend+2)^0,f,c
  8853  002CBC  5008               	movf	(___llmod@divisor+3)^0,w,c
  8854  002CBE  5A04               	subwfb	(___llmod@dividend+3)^0,f,c
  8855  002CC0                     i2l4037:
  8856  002CC0  90D8               	bcf	status,0,c
  8857  002CC2  3208               	rrcf	(___llmod@divisor+3)^0,f,c
  8858  002CC4  3207               	rrcf	(___llmod@divisor+2)^0,f,c
  8859  002CC6  3206               	rrcf	(___llmod@divisor+1)^0,f,c
  8860  002CC8  3205               	rrcf	___llmod@divisor^0,f,c
  8861  002CCA  2E09               	decfsz	___llmod@counter^0,f,c
  8862  002CCC  EF49  F016         	goto	i2l4033
  8863  002CD0                     i2l806:
  8864  002CD0  C001  F001         	movff	___llmod@dividend,?___llmod
  8865  002CD4  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  8866  002CD8  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  8867  002CDC  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  8868  002CE0  0012               	return		;funcret
  8869  002CE2                     __end_of___llmod:
  8870                           	callstack 0
  8871                           
  8872                           	psect	rparam
  8873  0000                     
  8874                           	psect	temp
  8875  000056                     btemp:
  8876                           	callstack 0
  8877  000056                     	ds	1
  8878  0000                     int$flags	set	btemp
  8879  0000                     wtemp8	set	btemp+1
  8880  0000                     ttemp5	set	btemp+1
  8881  0000                     ttemp6	set	btemp+4
  8882  0000                     ttemp7	set	btemp+8
  8883                           
  8884                           	psect	idloc
  8885                           
  8886                           ;Config register IDLOC0 @ 0x200000
  8887                           ;	unspecified, using default values
  8888  200000                     	org	2097152
  8889  200000  FF                 	db	255
  8890                           
  8891                           ;Config register IDLOC1 @ 0x200001
  8892                           ;	unspecified, using default values
  8893  200001                     	org	2097153
  8894  200001  FF                 	db	255
  8895                           
  8896                           ;Config register IDLOC2 @ 0x200002
  8897                           ;	unspecified, using default values
  8898  200002                     	org	2097154
  8899  200002  FF                 	db	255
  8900                           
  8901                           ;Config register IDLOC3 @ 0x200003
  8902                           ;	unspecified, using default values
  8903  200003                     	org	2097155
  8904  200003  FF                 	db	255
  8905                           
  8906                           ;Config register IDLOC4 @ 0x200004
  8907                           ;	unspecified, using default values
  8908  200004                     	org	2097156
  8909  200004  FF                 	db	255
  8910                           
  8911                           ;Config register IDLOC5 @ 0x200005
  8912                           ;	unspecified, using default values
  8913  200005                     	org	2097157
  8914  200005  FF                 	db	255
  8915                           
  8916                           ;Config register IDLOC6 @ 0x200006
  8917                           ;	unspecified, using default values
  8918  200006                     	org	2097158
  8919  200006  FF                 	db	255
  8920                           
  8921                           ;Config register IDLOC7 @ 0x200007
  8922                           ;	unspecified, using default values
  8923  200007                     	org	2097159
  8924  200007  FF                 	db	255
  8925                           
  8926                           	psect	config
  8927                           
  8928                           ;Config register CONFIG1L @ 0x300000
  8929                           ;	PLL Prescaler Selection bits
  8930                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  8931                           ;	System Clock Postscaler Selection bits
  8932                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  8933                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8934                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  8935  300000                     	org	3145728
  8936  300000  00                 	db	0
  8937                           
  8938                           ;Config register CONFIG1H @ 0x300001
  8939                           ;	Oscillator Selection bits
  8940                           ;	FOSC = HS, HS oscillator (HS)
  8941                           ;	Fail-Safe Clock Monitor Enable bit
  8942                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8943                           ;	Internal/External Oscillator Switchover bit
  8944                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8945  300001                     	org	3145729
  8946  300001  0C                 	db	12
  8947                           
  8948                           ;Config register CONFIG2L @ 0x300002
  8949                           ;	Power-up Timer Enable bit
  8950                           ;	PWRT = OFF, PWRT disabled
  8951                           ;	Brown-out Reset Enable bits
  8952                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  8953                           ;	Brown-out Reset Voltage bits
  8954                           ;	BORV = 3, Minimum setting 2.05V
  8955                           ;	USB Voltage Regulator Enable bit
  8956                           ;	VREGEN = OFF, USB voltage regulator disabled
  8957  300002                     	org	3145730
  8958  300002  19                 	db	25
  8959                           
  8960                           ;Config register CONFIG2H @ 0x300003
  8961                           ;	Watchdog Timer Enable bit
  8962                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8963                           ;	Watchdog Timer Postscale Select bits
  8964                           ;	WDTPS = 32768, 1:32768
  8965  300003                     	org	3145731
  8966  300003  1E                 	db	30
  8967                           
  8968                           ; Padding undefined space
  8969  300004                     	org	3145732
  8970  300004  FF                 	db	255
  8971                           
  8972                           ;Config register CONFIG3H @ 0x300005
  8973                           ;	CCP2 MUX bit
  8974                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
  8975                           ;	PORTB A/D Enable bit
  8976                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8977                           ;	Low-Power Timer 1 Oscillator Enable bit
  8978                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8979                           ;	MCLR Pin Enable bit
  8980                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8981  300005                     	org	3145733
  8982  300005  80                 	db	128
  8983                           
  8984                           ;Config register CONFIG4L @ 0x300006
  8985                           ;	Stack Full/Underflow Reset Enable bit
  8986                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  8987                           ;	Single-Supply ICSP Enable bit
  8988                           ;	LVP = OFF, Single-Supply ICSP disabled
  8989                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8990                           ;	ICPRT = OFF, ICPORT disabled
  8991                           ;	Extended Instruction Set Enable bit
  8992                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8993                           ;	Background Debugger Enable bit
  8994                           ;	DEBUG = 0x1, unprogrammed default
  8995  300006                     	org	3145734
  8996  300006  80                 	db	128
  8997                           
  8998                           ; Padding undefined space
  8999  300007                     	org	3145735
  9000  300007  FF                 	db	255
  9001                           
  9002                           ;Config register CONFIG5L @ 0x300008
  9003                           ;	Code Protection bit
  9004                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  9005                           ;	Code Protection bit
  9006                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  9007                           ;	Code Protection bit
  9008                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  9009                           ;	Code Protection bit
  9010                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  9011  300008                     	org	3145736
  9012  300008  0F                 	db	15
  9013                           
  9014                           ;Config register CONFIG5H @ 0x300009
  9015                           ;	Boot Block Code Protection bit
  9016                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  9017                           ;	Data EEPROM Code Protection bit
  9018                           ;	CPD = OFF, Data EEPROM is not code-protected
  9019  300009                     	org	3145737
  9020  300009  C0                 	db	192
  9021                           
  9022                           ;Config register CONFIG6L @ 0x30000A
  9023                           ;	Write Protection bit
  9024                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  9025                           ;	Write Protection bit
  9026                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  9027                           ;	Write Protection bit
  9028                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  9029                           ;	Write Protection bit
  9030                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  9031  30000A                     	org	3145738
  9032  30000A  0F                 	db	15
  9033                           
  9034                           ;Config register CONFIG6H @ 0x30000B
  9035                           ;	Configuration Register Write Protection bit
  9036                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  9037                           ;	Boot Block Write Protection bit
  9038                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  9039                           ;	Data EEPROM Write Protection bit
  9040                           ;	WRTD = OFF, Data EEPROM is not write-protected
  9041  30000B                     	org	3145739
  9042  30000B  E0                 	db	224
  9043                           
  9044                           ;Config register CONFIG7L @ 0x30000C
  9045                           ;	Table Read Protection bit
  9046                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9047                           ;	Table Read Protection bit
  9048                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9049                           ;	Table Read Protection bit
  9050                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9051                           ;	Table Read Protection bit
  9052                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9053  30000C                     	org	3145740
  9054  30000C  0F                 	db	15
  9055                           
  9056                           ;Config register CONFIG7H @ 0x30000D
  9057                           ;	Boot Block Table Read Protection bit
  9058                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  9059  30000D                     	org	3145741
  9060  30000D  40                 	db	64
  9061                           tosu	equ	0xFFF
  9062                           tosh	equ	0xFFE
  9063                           tosl	equ	0xFFD
  9064                           stkptr	equ	0xFFC
  9065                           pclatu	equ	0xFFB
  9066                           pclath	equ	0xFFA
  9067                           pcl	equ	0xFF9
  9068                           tblptru	equ	0xFF8
  9069                           tblptrh	equ	0xFF7
  9070                           tblptrl	equ	0xFF6
  9071                           tablat	equ	0xFF5
  9072                           prodh	equ	0xFF4
  9073                           prodl	equ	0xFF3
  9074                           indf0	equ	0xFEF
  9075                           postinc0	equ	0xFEE
  9076                           postdec0	equ	0xFED
  9077                           preinc0	equ	0xFEC
  9078                           plusw0	equ	0xFEB
  9079                           fsr0h	equ	0xFEA
  9080                           fsr0l	equ	0xFE9
  9081                           wreg	equ	0xFE8
  9082                           indf1	equ	0xFE7
  9083                           postinc1	equ	0xFE6
  9084                           postdec1	equ	0xFE5
  9085                           preinc1	equ	0xFE4
  9086                           plusw1	equ	0xFE3
  9087                           fsr1h	equ	0xFE2
  9088                           fsr1l	equ	0xFE1
  9089                           bsr	equ	0xFE0
  9090                           indf2	equ	0xFDF
  9091                           postinc2	equ	0xFDE
  9092                           postdec2	equ	0xFDD
  9093                           preinc2	equ	0xFDC
  9094                           plusw2	equ	0xFDB
  9095                           fsr2h	equ	0xFDA
  9096                           fsr2l	equ	0xFD9
  9097                           status	equ	0xFD8

Data Sizes:
    Strings     239
    Constant    24
    Data        6
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     73      85
    BANK0           160     88     120
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    floatToString@buffer	PTR unsigned char  size(2) Largest target is 10
		 -> displayMenu@valueStr(BANK0[10]), 

    itoa@ptr	PTR unsigned char  size(2) Largest target is 10
		 -> displayMenu@valueStr(BANK0[10]), 

    itoa@start	PTR unsigned char  size(2) Largest target is 10
		 -> displayMenu@valueStr(BANK0[10]), 

    displayStuff@stuff	PTR unsigned char  size(2) Largest target is 17
		 -> readTwoDigitValue@input(COMRAM[3]), STR_27(CODE[14]), STR_26(CODE[12]), STR_25(CODE[17]), 
		 -> STR_24(CODE[14]), STR_23(CODE[3]), STR_22(CODE[10]), STR_21(CODE[16]), 
		 -> STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[3]), STR_17(CODE[9]), 
		 -> STR_16(CODE[5]), STR_15(CODE[4]), STR_14(CODE[5]), STR_13(CODE[5]), 
		 -> STR_12(CODE[2]), STR_11(CODE[7]), STR_10(CODE[5]), STR_9(CODE[2]), 
		 -> displayMenu@valueStr(BANK0[10]), STR_8(CODE[6]), STR_7(CODE[15]), STR_6(CODE[11]), 
		 -> STR_5(CODE[11]), STR_4(CODE[13]), STR_3(CODE[12]), STR_2(CODE[12]), 
		 -> STR_1(CODE[13]), 

    readTwoDigitValue@prompt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[11]), STR_3(CODE[12]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _readTwoDigitValue->_readKey
    _readKey->_millis
    _tempRead->___fldiv
    _itoa->___awdiv
    _humidade->___fldiv
    _gasRead->___fldiv
    ___fldiv->___flmul
    _floatToString->___flmul
    ___flsub->___fladd
    ___flmul->___xxtofl
    _displayStuff->_WriteCmdXLCD
    _displayStuff->_WriteDataXLCD
    ___flge->___xxtofl
    _configureLCD->_OpenXLCD
    _OpenXLCD->_DelayPORXLCD
    _OpenXLCD->_DelayXLCD
    _OpenXLCD->_SetDDRamAddr
    _OpenXLCD->_WriteCmdXLCD

Critical Paths under _ISR in COMRAM

    _ISR->___llmod

Critical Paths under _main in BANK0

    _main->_displayMenu
    _displayMenu->_floatToString

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                34    34      0  104006
                                             54 BANK0     34    34      0
                             ___flge
                           ___xxtofl
                             _buzzer
                       _configureADC
                        _configureIO
                 _configureInterrupt
                       _configureLCD
                     _configureTimer
                        _displayMenu
                       _displayStuff
                            _gasRead
                           _humidade
                             _millis
                            _readKey
                  _readTwoDigitValue
                     _setCoolerSpeed
                           _setMoist
                           _tempRead
 ---------------------------------------------------------------------------------
 (1) _setMoist                                             2     0      2     174
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _setCoolerSpeed                                       2     0      2     152
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _readTwoDigitValue                                   10     8      2    8514
                                             40 COMRAM    10     8      2
                       _WriteCmdXLCD
                       _displayStuff
                            _readKey
 ---------------------------------------------------------------------------------
 (2) _readKey                                             23    23      0     427
                                             17 COMRAM    23    23      0
                             _millis
 ---------------------------------------------------------------------------------
 (1) _displayMenu                                         32    30      2   56047
                                             22 BANK0     32    30      2
                       _WriteCmdXLCD
                             ___flge
                           ___xxtofl
                       _displayStuff
                      _floatToString
                            _gasRead
                           _humidade
                               _itoa
                             _millis
                           _tempRead
 ---------------------------------------------------------------------------------
 (1) _tempRead                                            14    10      4    7984
                                              0 BANK0     14    10      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
                         _readAnalog
 ---------------------------------------------------------------------------------
 (3) _millis                                               8     4      4      23
                                              9 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _itoa                                                10     6      4    2992
                                             17 COMRAM     8     4      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _humidade                                            14    10      4    7984
                                              0 BANK0     14    10      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
                         _readAnalog
 ---------------------------------------------------------------------------------
 (1) _gasRead                                             14    10      4    7984
                                              0 BANK0     14    10      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
                         _readAnalog
 ---------------------------------------------------------------------------------
 (2) _readAnalog                                           7     5      2      68
                                              9 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1855
                                             48 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _floatToString                                       32    24      8   14144
                                             48 COMRAM    10     2      8
                                              0 BANK0     22    22      0
                            ___awdiv
                            ___awmod
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    2546
                                              9 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     517
                                              9 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3827
                                             25 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    3262
                                              9 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     155
                                              9 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    3413
                                             23 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     793
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     985
                                              9 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _displayStuff                                        10     4      6    7520
                                             10 COMRAM    10     4      6
                       _WriteCmdXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (3) _WriteDataXLCD                                        1     1      0      44
                                              9 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    2918
                                             23 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _configureTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureLCD                                         1     1      0     154
                                             11 COMRAM     1     1      0
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0     110
                                             10 COMRAM     1     1      0
                           _BusyXLCD
                       _DelayPORXLCD
                          _DelayXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (3) _WriteCmdXLCD                                         1     1      0      44
                                              9 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         1     1      0      44
                                              9 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayXLCD                                            1     1      0       0
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         1     1      0       0
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (4) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureInterrupt                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureIO                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureADC                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buzzer                                               2     0      2     174
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  0     0      0     311
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     311
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flge
     ___xxtofl (ARG)
   ___xxtofl
   _buzzer
   _configureADC
   _configureIO
   _configureInterrupt
   _configureLCD
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
       _DelayPORXLCD
       _DelayXLCD
       _SetDDRamAddr
         _DelayFor18TCY
       _WriteCmdXLCD
         _DelayFor18TCY
     _WriteCmdXLCD
   _configureTimer
   _displayMenu
     _WriteCmdXLCD
     ___flge
     ___xxtofl
     _displayStuff
       _WriteCmdXLCD
       _WriteDataXLCD
         _DelayFor18TCY
     _floatToString
       ___awdiv
       ___awmod
       ___flmul
         ___xxtofl (ARG)
       ___flneg
       ___flsub
         ___fladd
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
     _gasRead
       ___fldiv
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___flmul
       ___xxtofl
       _readAnalog
     _humidade
       ___fldiv
       ___flmul
       ___xxtofl
       _readAnalog
     _itoa
       ___awdiv
       ___awmod
     _millis
     _tempRead
       ___fldiv
       ___flmul
       ___xxtofl
       _readAnalog
   _displayStuff
   _gasRead
   _humidade
   _millis
   _readKey
     _millis
   _readTwoDigitValue
     _WriteCmdXLCD
     _displayStuff
     _readKey
   _setCoolerSpeed
   _setMoist
   _tempRead

 _ISR (ROOT)
   ___llmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     58      78       5       75.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     49      55       1       90.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CD      20        0.0%
DATA                 0      0      CD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Feb 06 17:59:19 2025

                ?_configureIO 0001                 ?_configureADC 0001                 ?_configureLCD 0001  
                ___fldiv@aexp 0049                  ___fldiv@bexp 0048                  ___fldiv@sign 0041  
                ?_displayMenu 0076                  ___awdiv@sign 000F                 _floatToString 1BCE  
               ?_displayStuff 000B                           l201 2FAC                           l121 0E16  
                         l122 0E68                           l204 2FDA                           l124 0EC8  
                         l125 0ED6                           l126 0F30                           l135 0064  
                         l312 2FF0                           l232 2D4E                           l136 08C6  
                         l233 2D22                           l241 29C4                           l225 2074  
                         l315 2FCE                           l228 2FE6                           l244 2A82  
                         l318 2FBE                           l342 2784                           l254 2BC8  
                         l238 2906                           l262 2FF8                           l351 2E54  
                         l271 2368                           l352 2E66                           l192 2F80  
                         l257 2FFA                           l362 2F22                           l267 2FFC  
                         l195 2F98                           l283 1CA2                           l179 248C  
                         l348 2EA6                           l365 2EE4                           l293 1E7C  
                         l198 2E20                           l630 2B32                           l617 2848  
                         l651 2650                           l660 2F5A                           l656 2696  
                         l914 1138                           l931 1252                           l923 1408  
                         l915 1126                           l683 2592                           l940 1322  
                         l916 10EC                           l941 1310                           l970 1A2C  
                         l956 2DDA                           l981 1AEA                           l973 19F0  
                         l982 1AD8                           l968 1BCC                           l979 1A72  
                         _ISR 0008               ?_configureTimer 0001                           _tak 0052  
       __size_of_WriteCmdXLCD 003E                  ___awmod@sign 000F                           wreg 000FE8  
                ___flmul@aexp 0025                  ___flmul@bexp 002A                  ___flmul@sign 0024  
                ___flmul@temp 002F                  ___flmul@prod 002B                          ?_ISR 0001  
                ___fltol@exp1 0013                          l1000 14CE                          l1010 172A  
                        l1004 1832                          l1007 16C4                          l1017 17F4  
                        l1009 173C                          l1041 20CC                          l1044 2228  
                        l1055 21C0                          l1048 2164                          l3001 2E26  
                        l3011 2E44                          l3003 2E2A                          l3013 2E4A  
                        l3005 2E30                          l3101 1926                          l3031 2E64  
                        l3023 2E56                          l3015 2E4C                          l3007 2E3E  
                        l3111 1956                          l3103 192E                          l3025 2E5A  
                        l3017 2E4E                          l3009 2E40                          l3041 2E7E  
                        l3121 1994                          l3113 1956                          l3105 1932  
                        l4001 23FC                          l3027 2E60                          l3051 2E9A  
                        l3043 2E82                          l3035 2E6A                          l3131 19E0  
                        l3123 19A4                          l4003 241C                          l4011 2450  
                        l3029 2E62                          l3053 2E9C                          l3045 2E84  
                        l3037 2E7A                          l3141 1A2A                          l3133 19EE  
                        l3125 19B4                          l3117 196A                          l3109 1946  
                        l3061 1840                          l4013 246C                          l4005 2420  
                        l4021 2FF8                          l3055 2EA0                          l3047 2E88  
                        l3039 2E7C                          l3151 1A70                          l3143 1A3C  
                        l3135 19FA                          l3127 19BC                          l3119 1984  
                        l3071 1880                          l3063 184E                          l4007 2436  
                        l4017 2FFC                          l3049 2E96                          l3161 1AD0  
                        l3145 1A52                          l3153 1A82                          l3137 1A18  
                        l3129 19CC                          l3081 18A6                          l3073 1882  
                        l3065 1850                          l5001 225A                          l4009 2448  
                        l3171 1B3E                          l3155 1A90                          l3147 1A58  
                        l3139 1A1A                          l3091 18E6                          l3083 18B4  
                        l3067 1860                          l3075 188A                          l3059 1834  
                        l5011 2290                          l5003 2266                          l3181 1BA8  
                        l3165 1AFA                          l3173 1B42                          l3157 1A94  
                        l3149 1A62                          l3093 18E8                          l3085 18B6  
                        l3077 189A                          l3069 1870                          l5021 22B0  
                        l5013 229C                          l5101 039C                          l3183 1BAC  
                        l3175 1B5C                          l3167 1B06                          l3159 1AA2  
                        l3087 18C6                          l3095 18F0                          l3079 18A0  
                        l5031 2306                          l5023 22CC                          l5015 22A0  
                        l5007 227A                          l5111 0432                          l5103 03E6  
                        l3511 1E7E                          l2721 2FE8                          l4401 0FB0  
                        l3185 1BBA                          l3177 1B72                          l3169 1B14  
                        l3097 1900                          l3089 18D6                          l5033 2332  
                        l5025 22D0                          l5017 22A4                          l5009 2288  
                        l5121 0550                          l5113 047C                          l5105 0406  
                        l5041 0060                          l3521 1ED2                          l3513 1E96  
                        l5201 0952                          l4411 0FDE                          l4403 0FB6  
                        l3187 1BC0                          l3179 1B8C                          l3099 1916  
                        l5035 234E                          l5027 22EA                          l5019 22A4  
                        l5131 060C                          l5115 049C                          l5107 040A  
                        l5051 00B4                          l5043 0074                          l3531 1F08  
                        l3523 1EF0                          l3515 1EAA                          l5211 0998  
                        l5203 095E                          l4501 11B4                          l4421 1012  
                        l4413 0FE0                          l4405 0FC8                          l3189 1BC2  
                        l5029 22FA                          l5141 06E0                          l5133 0656  
                        l5117 04E6                          l5109 0426                          l5125 0570  
                        l5061 0144                          l5053 00CC                          l5045 007A  
                        l5037 0012                          l3541 1FE6                          l3533 1F38  
                        l3525 1F00                          l3517 1EB2                          l5301 0C56  
                        l5221 09EE                          l5213 09B4                          l5205 096E  
                        l4511 1220                          l4503 11B6                          l4431 104E  
                        l4415 0FF0                          l4423 101A                          l4407 0FCA  
                        l5151 07C0                          l5143 06EC                          l5135 06A0  
                        l5127 05A6                          l5119 0506                          l5071 01D4  
                        l5063 0160                          l5055 00E8                          l5047 008C  
                        l5039 0026                          l3543 201A                          l3535 1F8C  
                        l5311 0CCA                          l5303 0C6A                          l5231 0A2A  
                        l5223 09F4                          l5215 09BC                          l5207 0982  
                        l3801 2F82                          l3721 269A                          l4601 146C  
                        l4521 1278                          l4513 1222                          l4505 11C0  
                        l4441 1062                          l4433 1052                          l4425 102A  
                        l4417 1000                          l4409 0FD0                          l5153 080A  
                        l5145 0736                          l5137 06C0                          l5129 05C2  
                        l5081 0240                          l5073 01F0                          l5065 0174  
                        l5057 010C                          l5049 00A0                          l3545 2032  
                        l3537 1F9E                          l3553 203E                          l3561 2066  
                        l5321 0D1C                          l5313 0CD4                          l5305 0C7C  
                        l5241 0A8A                          l5233 0A3C                          l5225 0A02  
                        l5209 0994                          l5217 09C8                          l3811 2F8E  
                        l3803 2F86                          l2931 2EF8                          l3731 26AA  
                        l3723 26A2                          l3571 2B52                          l4611 1498  
                        l4603 1472                          l4531 12A6                          l4515 1232  
                        l4507 11C6                          l4451 1076                          l4443 1066  
                        l4435 1056                          l4427 103C                          l4419 1010  
                        l5411 0842                          l5147 0756                          l5139 06C4  
                        l5091 02D4                          l5083 025C                          l5075 020C  
                        l5067 0194                          l5059 0128                          l5163 0880  
                        l3555 2042                          l3539 1FB2                          l5331 0E60  
                        l5323 0D66                          l5307 0C94                          l5315 0CE0  
                        l5243 0AA4                          l5235 0A50                          l5227 0A0A  
                        l5219 09DC                          l3821 2FDC                          l3813 2F90  
                        l3805 2F88                          l2941 2F12                          l2933 2EFA  
                        l3741 26BC                          l3733 26AC                          l3725 26A4  
                        l3581 2B98                          l3573 2B5A                          l4701 17F8  
                        l4621 14EE                          l4613 14A8                          l4605 1478  
                        l4533 12B4                          l4525 128C                          l4541 12D2  
                        l4509 11EC                          l4517 1242                          l4453 107A  
                        l4445 106A                          l4437 105A                          l4429 104A  
                        l4461 108A                          l2925 2F5C                          l5413 0898  
                        l5149 07A0                          l5157 082A                          l5085 0280  
                        l5077 0228                          l5069 01B0                          l3557 205E  
                        l3549 2038                          l5341 0F20                          l5333 0E6C  
                        l5325 0DB0                          l5317 0CF4                          l5309 0CB0  
                        l5261 0B26                          l5245 0AAE                          l5237 0A66  
                        l5253 0AD6                          l5229 0A16                          l5181 08EA  
                        l3823 2FE4                          l3815 2F92                          l3807 2F8A  
                        l2943 2F16                          l2935 2EFE                          l2927 2EE8  
                        l3751 26D4                          l3743 26C0                          l3735 26AE  
                        l3727 26A6                          l3831 2E0C                          l3575 2B66  
                        l3567 2B34                          l4711 1822                          l4703 1808  
                        l4631 152E                          l4615 14B8                          l4607 1486  
                        l4535 12BC                          l4527 1296                          l4519 1268  
                        l4543 12E0                          l4471 10FA                          l4463 108E  
                        l4455 107E                          l4447 106E                          l4439 105E  
                        l4391 0F76                          l4383 0F4A                          l2951 2CE4  
                        l5159 0860                          l5095 02EC                          l5087 029C  
                        l5343 0F22                          l5335 0EB6                          l5327 0DFA  
                        l5319 0D08                          l5263 0B2E                          l5271 0B7E  
                        l5255 0AEA                          l5239 0A6E                          l5247 0ABE  
                        l5191 08FC                          l5183 08EE                          l3817 2F94  
                        l3809 2F8C                          l2945 2F18                          l2937 2F00  
                        l2929 2EF6                          l3761 271C                          l3753 26E8  
                        l3745 26C6                          l3737 26B2                          l3729 26A8  
                        l3833 2E12                          l3825 2DDC                          l3577 2B70  
                        l3569 2B46                          l4721 2786                          l4705 1816  
                        l4641 1578                          l4633 153A                          l4625 1502  
                        l4617 14BE                          l4609 1488                          l4801 2F24  
                        l4553 1332                          l4561 1388                          l4545 12E4  
                        l4537 12C0                          l4529 12A4                          l4481 1124  
                        l4473 1106                          l4465 10B8                          l4457 1082  
                        l4449 1072                          l4393 0F86                          l4385 0F56  
                        l2961 2D12                          l2953 2CE4                          l5409 0588  
                        l5097 0308                          l5089 02B8                          l5345 0F32  
                        l5337 0EB8                          l5329 0E0A                          l5281 0BBC  
                        l5265 0B4A                          l5257 0AFC                          l5193 08FE  
                        l5185 08F2                          l5177 08C8                          l3819 2F96  
                        l2947 2F1C                          l2939 2F04                          l3771 2764  
                        l3763 2730                          l3755 26FC                          l3747 26CA  
                        l3739 26B8                          l3827 2DE8                          l3835 2FD0  
                        l2971 2EAA                          l3579 2B94                          l4731 27B2  
                        l4723 278A                          l4707 1818                          l4651 15CA  
                        l4643 1584                          l4635 1552                          l4627 150E  
                        l4619 14DE                          l4803 2F3A                          l4571 13DA  
                        l4563 1398                          l4555 133E                          l4547 12F2  
                        l4539 12D0                          l4491 117A                          l4483 1146  
                        l4475 110A                          l4467 10D4                          l4459 1086  
                        l4395 0F96                          l4387 0F64                          l4715 2D96  
                        l4811 24A4                          l2963 2D20                          l2955 2CF4  
                        l5099 0352                          l5347 0F3E                          l5339 0ECA  
                        l5291 0C24                          l5283 0BD0                          l5267 0B64  
                        l5259 0B10                          l5195 0900                          l5187 08F6  
                        l5179 08E6                          l3773 276A                          l3765 2736  
                        l3757 2702                          l3749 26CE                          l3829 2DF8  
                        l3837 2FD8                          l3781 25C2                          l2981 2EC2  
                        l2973 2EB8                          l4741 27E0                          l4733 27BA  
                        l4725 2798                          l4709 181E                          l4661 1648  
                        l4653 15DA                          l4645 1594                          l4637 155E  
                        l4629 1518                          l4805 2F4A                          l4581 13F8  
                        l4573 13E0                          l4565 13A8                          l4557 134C  
                        l4549 1308                          l4493 1188                          l4485 1156  
                        l4477 1118                          l4469 10E4                          l4397 0F98  
                        l4389 0F66                          l4717 2DA6                          l4821 24F4  
                        l2965 2D30                          l4901 2858                          l5293 0C2E  
                        l5285 0BE6                          l5269 0B6E                          l5277 0B96  
                        l5197 0908                          l5189 08FA                          l3839 2F9A  
                        l3775 277E                          l3767 274A                          l3759 2716  
                        l3791 2630                          l3783 25D2                          l2991 2EDE  
                        l2983 2EC6                          l2975 2EBA                          l4751 281A  
                        l4743 27E8                          l4735 27BE                          l4727 27A0  
                        l4671 16C2                          l4663 167E                          l4655 15F6  
                        l4647 15A0                          l4639 156A                          l4591 1426  
                        l4575 13E2                          l4567 13C8                          l4559 1386  
                        l4495 1196                          l4479 111A                          l4399 0FA0  
                        l4831 251E                          l4823 24F8                          l4815 24B8  
                        l2967 2D46                          l2959 2D00                          l4911 2916  
                        l4903 28C2                          l5287 0BEE                          l5295 0C3E  
                        l5279 0BAA                          l5199 091C                          l3769 2750  
                        l3793 263E                          l3785 2600                          l2985 2ED4  
                        l2977 2EBC                          l4761 2840                          l4753 281C  
                        l4745 27F6                          l4737 27C6                          l4729 27A4  
                        l4681 1722                          l4673 16D4                          l4665 168C  
                        l4657 1602                          l4649 15B0                          l4593 1436  
                        l4585 140A                          l4577 13E8                          l4569 13CC  
                        l4497 11A2                          l4489 116A                          l4841 2546  
                        l4833 2528                          l4825 2506                          l4817 24E2  
                        l4809 248E                          l4921 29D4                          l4913 2980  
                        l4905 28F6                          l5289 0C0A                          l2995 2FC0  
                        l3795 268E                          l3787 2610                          l3779 2594  
                        l2987 2ED8                          l2979 2EC0                          l4755 2822  
                        l4747 27FC                          l4739 27D8                          l4771 2A9E  
                        l4691 1790                          l4675 16E2                          l4667 16AA  
                        l4659 161E                          l4595 1446                          l4587 1416  
                        l4579 13F6                          l4499 11A6                          l4843 2552  
                        l4835 2532                          l4819 24E4                          l4931 1BD8  
                        l4923 2A3E                          l4915 29B4                          l2997 2FAE  
                        l3797 2694                          l3789 261E                          l2989 2EDA  
                        l4749 2812                          l4757 2828                          l4781 2AD2  
                        l4773 2AA2                          l4765 2A84                          l4685 174C  
                        l4693 1794                          l4677 16E6                          l4669 16B4  
                        l4597 1456                          l4589 1424                          l4845 2562  
                        l4861 20F2                          l4853 2078                          l4941 1C36  
                        l4933 1BE6                          l4925 2A72                          l4909 2908  
                        l3981 236A                          l2999 2E22                          l4759 2838  
                        l4791 2B0C                          l4783 2ADA                          l4775 2AB0  
                        l4767 2A88                          l4695 17AE                          l4687 1758  
                        l4679 16F4                          l4599 145C                          l4847 2572  
                        l4871 214C                          l4855 2088                          l4951 1CB2  
                        l4943 1C82                          l4935 1BF2                          l4919 29C6  
                        l3991 23A6                          l3983 237E                          l4785 2AE8  
                        l4793 2B12                          l4777 2AB8                          l4769 2A96  
                        l4697 17C2                          l4689 1766                          l4849 2582  
                        l4881 21B0                          l4873 214E                          l4865 2106  
                        l4857 2096                          l4961 1D22                          l4953 1CD8  
                        l4945 1C96                          l4937 1BF6                          l4929 1BCE  
                        l3993 23C6                          l3985 2384                          l4795 2B22  
                        l4787 2AFE                          l4779 2ACA                          l4699 17DC  
                        l4891 2208                          l4883 21CE                          l4875 215A  
                        l4867 210E                          l4859 20DC                          l4971 1D8C  
                        l4963 1D56                          l4955 1CDE                          l4947 1C9A  
                        l4939 1C1A                          l3995 23CC                          l3987 2392  
                        l4797 2B2A                          l4789 2B06                          l4893 2216  
                        l4885 21D0                          l4877 2196                          l4869 211A  
                        l4981 1DFC                          l4973 1D90                          l4965 1D5A  
                        l4957 1CFA                          l4949 1CAA                          l3997 23DC  
                        l3989 2398                          l4895 2218                          l4887 21D4  
                        l4879 21A2                          l4983 1E00                          l4975 1D9C  
                        l4967 1D78                          l4959 1D16                          l4991 222A  
                        l3999 23EC                          l4889 21F8                          l4985 1E4C  
                        l4977 1DD0                          l4969 1D80                          l4993 2232  
                        l4979 1DEC                          l4987 1E52                          l4995 2232  
                        l4899 284A                          l4989 1E70                          l4999 2248  
                        STR_1 7F88                          STR_2 7F95                          STR_3 7FA1  
                        STR_4 7F7B                          STR_5 7FC4                          STR_6 7FB9  
                        STR_7 7F50                          STR_8 7F8F                          STR_9 7FFC  
                        _LATB 000F8A                          u3200 1E8C                          u3210 1ECE  
                        u3211 1ECA                          u3300 2B90                          u2500 1870  
                 main@lastKey 00B4                          u2501 186C                          u3310 2BB8  
                        u4110 0F64                          u2510 18B4                          u4111 0F60  
                        u2511 18B0                          u3320 2BC8                          u4200 10B8  
                        u4120 0F76                          u5000 1C96                          u2600 1A52  
                        u2520 18C6                          u3240 1F38                          u3224 1EE4  
                        u3321 2BC4                          u4201 10B4                          u4121 0F72  
                        u5001 1C92                          u2601 1A4E                          u2521 18C2  
                        u3241 1F34                          u3225 1EE0                          u4210 10D0  
                        u4130 0F86                          u5010 1D16                          u2610 1A70  
                        u2530 18D6                          u2450 2CF4                          u3250 1F9E  
                        u3234 1F1E                          u3307 2B86                          u4211 10CA  
                        u4131 0F82                          u5011 1D12                          u2611 1A6C  
                        u2531 18D2                          u2451 2CF0                          u3251 1F9A  
                        u3235 1F1A                          u3500 25C2                          u4300 11B4  
                        u4220 10D2                          u4140 0FC8                          u5020 1D78  
                        u2700 1BBA                          u2620 1A90                          u2540 1916  
                        u2460 2D30                          u5100 0352                          u3260 1FE6  
                        u3501 25BE                          u3317 2BAE                          u4301 11B0  
                        u4141 0FC4                          u5021 1D74                          u2701 1BB6  
                        u2621 1A8C                          u2541 1912                          u2461 2D2C  
                        u5101 034E                          u3261 1FE2                          u2470 2E3E  
                        u3430 26E8                          u3510 2600                          u4310 11EC  
                        u4230 10FA                          u4150 0FDE                          u5030 1E70  
                        u2630 1AA2                          u2550 1956                          u5110 039C  
                        u3270 201A                          u2471 2E3A                          u3431 26E4  
                        u3511 25FC                          u4311 11E8                          u4231 10F6  
                        u4151 0FDA                          u5031 1E6C                          u2631 1A9E  
                        u2551 1952                          u5111 0398                          u3271 2016  
                        u3440 26FC                          u3520 261E                          u4400 1308  
                        u4320 1232                          u4240 1118                          u4160 0FF0  
                        u2640 1AD0                          u2560 19CC                          u2480 184E  
                        u5040 2244                          u5200 06E0                          u5120 03E6  
                        u3280 205E                          u3441 26F8                          u3521 261A  
                        u4401 1304                          u4321 122E                          u4241 1114  
                        u4161 0FEC                          u2641 1ACC                          u2561 19C8  
                        u2481 184A                          u5041 2240                          u5201 06DC  
                        u5121 03E2                          u3281 205A                          u3450 2716  
                        u3530 263E                          u3290 2B46                          u4410 131E  
                        u4330 1268                          u4250 1138                          u4170 1000  
                        u2650 1AE6                          u2570 19EE                          u2490 1860  
                        u5050 225A                          u5210 0736                          u5130 0426  
                        u3451 2712                          u3531 263A                          u3291 2B42  
                        u4411 131A                          u4331 1264                          u4251 1134  
                        u4171 0FFC                          u2651 1AE2                          u2571 19EA  
                        u2491 185C                          u5051 2256                          u5211 0732  
                        u5131 0422                          u3460 2730                          u3540 268E  
                        u4500 1424                          u4420 1332                          u4340 1278  
                        u4260 1146                          u4180 103C                          u2660 1AFA  
                        u2580 1A18                          u5060 2288                          u5220 07A0  
                        u5140 047C                          u3700 23DC                          u5300 0A02  
                        u3461 272C                          u3541 268A                          u4501 1420  
                        u4421 132E                          u4341 1274                          u4261 1142  
                        u4181 1038                          u2661 1AF6                          u2581 1A14  
                        u5061 2284                          u5221 079C                          u5141 0478  
                        u3701 23D8                          u5301 09FE                          u3470 274A  
                        u4510 1436                          u4430 134C                          u4350 12A4  
                        u4270 1156                          u4190 104A                          u2670 1B14  
                        u2590 1A3C                          u5070 22EA                          u5230 080A  
                        u5150 04E6                          u3710 23EC                          u5310 0A2A  
                        u3471 2746                          u4511 1432                          u4431 1348  
                        u4351 12A0                          u4271 1152                          u4191 1046  
                        u2671 1B10                          u2591 1A38                          u5071 22E6  
                        u5231 0806                          u5151 04E2                          u3711 23E8  
                        u5311 0A26                          u3480 2764                          u4600 16E2  
                        u4520 1446                          u4440 1386                          u4360 12B4  
                        u4280 1188                          u2680 1B5C                          u5080 2368  
                        u5160 0550                          u3720 2448                          u5400 0BBC  
                        u5320 0A3C                          u5240 0952                          u3481 2760  
                        u4601 16DE                          u4521 1442                          u4441 1382  
                        u4361 12B0                          u4281 1184                          u2681 1B58  
                        u5081 2364                          u5161 054C                          u3721 2444  
                        u5401 0BB8                          u5321 0A38                          u5241 094E  
                        u3490 277E                          u4610 16F4                          u4530 1486  
                        u4450 1398                          u4370 12D0                          u4290 1196  
                        u2690 1B8C                          u5170 060C                          u5090 005C  
                        u3730 246C                          u5410 0BE6                          u5330 0A66  
                        u5250 0982                          u3491 277A                          u4611 16F0  
                        u4531 1482                          u4451 1394                          u4371 12CC  
                        u4291 1192                          u2691 1B88                          u5171 0608  
                        u5091 0058                          u3731 2468                          u5411 0BE2  
                        u5331 0A62                          u5251 097E                          u4700 27B2  
                        u4620 1722                          u4540 1498                          u4460 13A8  
                        u4380 12E0                          u5180 0656                          u5500 0F20  
                        u5420 0C52                          u5340 0AD2                          u5260 0994  
                        u4701 27AE                          u4621 171E                          u4541 1494  
                        u4461 13A4                          u4381 12DC                          u5181 0652  
                        u5501 0F1C                          u5421 0C4E                          u5341 0ACE  
                        u5261 0990                          u4710 27D8                          u4630 1738  
                        u4550 14A8                          u4470 13C8                          u4390 12F2  
                        u5190 06A0                          u5430 0C6A                          u5350 0AEA  
                        u5270 09B4                          u4711 27D4                          u4631 1734  
                        u4551 14A4                          u4471 13C4                          u4391 12EE  
                        u5191 069C                          u5431 0C66                          u5351 0AE6  
                        u5271 09B0                          u4720 27F6                          u4800 2B22  
                        u4640 174C                          u4560 14DE                          u4480 13DA  
                        u5440 0C7C                          u5360 0AFC                          u5280 09DC  
                        u4721 27F2                          u4801 2B1E                          u4641 1748  
                        u4561 14DA                          u4481 13D6                          u5441 0C78  
                        u5361 0AF8                          u5281 09D8                          u4730 2812  
                        u4650 1766                          u4570 14EE                          u4810 2F3A  
                        u4490 13F6                          u5450 0D66                          u5370 0B26  
                        u5290 09EE                          u4731 280E                          u4651 1762  
                        u4571 14EA                          u4811 2F36                          u4491 13F2  
                        u5451 0D62                          u5371 0B22                          u5291 09EA  
                        u4740 2838                          u4660 17AE                          u4580 1668  
                        u4820 24A4                          u4900 2096                          u5460 0DB0  
                        u5380 0B92                          u4741 2834                          u4661 17AA  
                        u4821 24A0                          u4901 2092                          u5461 0DAC  
                        u5381 0B8E                          u5517 0A96                          u4750 2A96  
                        u4670 17DC                          u4590 16C2                          u4830 24D8  
                        u4910 20F2                          u5470 0DFA                          u5390 0BAA  
                        u4751 2A92                          u4671 17D8                          u4591 16BE  
                        u4911 20EE                          u5607 2D18                          u5471 0DF6  
                        u5391 0BA6                          u5527 0B56                          u4760 2AB0  
                        u4680 1816                          u4840 2506                          u4920 2148  
                        u5480 0E60                          u5617 2DEE                          u4761 2AAC  
                        u4681 1812                          u4585 165E                          u4841 2502  
                        u4921 2144                          u5481 0E5C                          u5537 0C16  
                        u4690 2798                          u4770 2ACA                          u4850 251A  
                        u4930 2192                          u5490 0EB6                          u5627 2E04  
                        u4691 2794                          u4771 2AC6                          u4851 2516  
                        u4835 24CE                          u4931 218E                          u5491 0EB2  
                        u5547 0CBC                          u4780 2AE8                          u4860 2542  
                        u4940 21B0                          u5637 2E18                          u4781 2AE4  
                        u4861 253E                          u4941 21AC                          u5557 238A  
                        u4790 2AFE                          u4870 2562                          u4950 21C0  
                        u5647 2FB4                          u4791 2AFA                          u4871 255E  
                        u4951 21BC                          u5567 239E                          u4880 2572  
                        u4960 21CE                          u5657 2FC6                          u4881 256E  
                        u4961 21CA                          u5577 242A                          u4970 2208  
                        u4890 2088                          u5667 2FEA                          u4971 2204  
                        u4891 2084                          u5587 1EF6                          u4980 2216  
                        u4981 2212                          u5597 0082                          u4990 1BE6  
                        u4991 1BE2                          _Glim 00D2                          _Hlim 00D4  
                        _Tlim 00D6                          _main 08C8                          _itoa 222A  
                        fsr1h 000FE2                          fsr2h 000FDA                          indf1 000FE7  
                        indf2 000FDF                          fsr1l 000FE1                          fsr2l 000FD9  
                        btemp 0056        __size_of_WriteDataXLCD 003E                _setCoolerSpeed 2FFA  
                        prodh 000FF4                          prodl 000FF3                          start 000E  
             ___fldiv@new_exp 0042                ??_configureADC 000A                ??_configureLCD 000C  
                ___param_bank 000000            readKey@currentTime 0020                         ??_ISR 000A  
                main@gasLimit 00B2    __end_of_configureInterrupt 2FAE                  _WriteCmdXLCD 2EE6  
              ?_floatToString 0031                ??_displayStuff 0011                 ___fltol@sign1 0012  
               ?_SetDDRamAddr 0001               __end_of___fladd 140A                         ?_main 0001  
             __end_of___fldiv 1BCE                         ?_itoa 0012               __end_of___awdiv 284A  
             __end_of___flneg 2F5C                         STR_10 7FE9                         STR_11 7FE2  
                       STR_12 7FFA                         STR_20 7F20                         STR_13 7FE9  
                       STR_21 7F40                         STR_14 7FEE                         STR_22 7FCF  
                       STR_23 7FF7                         STR_15 7FF3                         STR_16 7FE9  
                       STR_24 7F5F                         STR_17 7FD9                         STR_25 7F0F  
                       STR_18 7FF7                         STR_26 7FAD                         STR_27 7F6D  
                       STR_19 7F30               __end_of___awmod 2B34               __end_of___flmul 1834  
             __end_of___flsub 2DDC               __end_of___fltol 2594                         _T0CON 000FD5  
             ___awdiv@divisor 000C               __end_of___llmod 2CE2                         i2l189 2C56  
                       i2l813 2CE0                         i2l806 2CD0               ___awdiv@counter 000E  
                       _TMR0L 000FD6                         _PORTB 000F81                         _PORTD 000F83  
                main@humLimit 00B0                         _TRISB 000F93                         _TRISD 000F95  
             __end_of_gasRead 2A84               __end_of_readKey 2076             readKey@pressedKey 0028  
  __size_of_readTwoDigitValue 0124                         tablat 000FF5        __end_of_setCoolerSpeed 2FFC  
        __end_ofreadKey@F3616 7F0F                         ttemp5 0057                         ttemp6 005A  
                       ttemp7 005E                         status 000FD8                         wtemp8 0057  
               humidade@Humid 0064               __initialization 2D50                  __end_of_main 0F4A  
                __end_of_itoa 236A              __end_of_BusyXLCD 2E68            __size_of_DelayXLCD 0012  
       __size_of_DelayPORXLCD 0010                ??_SetDDRamAddr 000A              __end_of_OpenXLCD 2786  
                      ??_main 0096                        ??_itoa 0016                 __activetblptr 000002  
               _WriteDataXLCD 2EA8          displayMenu@menuIndex 0076          readKey@lastStableKey 0054  
                      _ADCON1 000FC1                        _ADCON2 000FC0              ___llmod@dividend 0001  
                      _ADRESH 000FC4                        _ADRESL 000FC3              ___awdiv@dividend 000A  
                      i2l4031 2C84                        i2l4033 2C92                        i2l4025 2C5A  
                      i2l4035 2CB0                        i2l4027 2C70                        i2l4037 2CC0  
                      i2l4029 2C78                        i2l4221 2C24                        i2l4213 2BCC  
                      i2l4039 2CCA                        i2l4223 2C40                        i2l4215 2BDA  
                      i2l4225 2C4C                        i2l4217 2BDE                        i2l4227 2C54  
                      i2l4219 2BEA               ?_setCoolerSpeed 000A                 main@menuIndex 00B6  
            __end_of___xxtofl 222A                  _DelayPORXLCD 2FC0                        ___flge 2594  
                   ??___fladd 0012               ??_floatToString 0039                     ??___fldiv 0039  
                   ??___awdiv 000E                     ??___flneg 000E                     ??___awmod 000E  
                   ??___flmul 0020                     ??___flsub 0022                     ??___fltol 000E  
                   ??___llmod 0009          __size_of_configureIO 0018                        _keymap 7EF7  
                      _buzzer 2FFC                        _millis 2F5C                        clear_0 2D76  
                      clear_1 2D82                 main@tempLimit 00AE              ___awdiv@quotient 0010  
                   ??_gasRead 004A               ___awmod@divisor 000C                        isa$std 000001  
            __end_of_humidade 29C6               ___awmod@counter 000E          __size_of_displayMenu 08B6  
              ?_WriteDataXLCD 0001              __end_of_setMoist 2FFA                     ??_readKey 0012  
            __end_of_tempRead 2908             humidade@rawAnalog 006C                  __mediumconst 7EF6  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
        __end_of_configureADC 2FE8          __end_of_configureLCD 2E22             __end_of_DelayXLCD 2FC0  
                  ___flge@ff1 0018                    ___flge@ff2 001C                  ___xxtofl@arg 0014  
                ___xxtofl@exp 0013                  ___xxtofl@val 000A                    __accesstop 0060  
     __end_of__initialization 2D88  displayStuff@LCDWritePosition 0011                    ___flneg@f1 000A  
        __end_of_displayStuff 2BCA                 ___rparam_used 000001                    ___fltol@f1 000A  
      readTwoDigitValue@F3596 00CF                __pcstackCOMRAM 0001                  __pidataBANK0 2FF2  
                _gasRead$1535 0068              ??_configureTimer 000A            displayStuff@column 000D  
      readTwoDigitValue@input 002D        __size_of_DelayFor18TCY 000A                    __pbssBANK0 00B8  
                   ?_BusyXLCD 0001               WriteCmdXLCD@cmd 000A          __end_of_SetDDRamAddr 2EA8  
        readTwoDigitValue@key 0032       displayMenu@currentHumid 008E                     ?_OpenXLCD 0001  
       displayMenu@errorCycle 0050         displayMenu@currentGas 0092                       ?___flge 0018  
           WriteDataXLCD@data 000A               ??_WriteDataXLCD 000A                       ?_buzzer 000A  
                     ?_millis 000A                  readKey@F3616 7F07                     ?___xxtofl 000A  
          _configureInterrupt 2F9A                main@currentGas 00AA                    ??_BusyXLCD 000A  
         ?_configureInterrupt 0001                     ?_humidade 0060                    ??_OpenXLCD 000B  
                   ?_setMoist 000A                       __Hparam 0000                    _keyPressed 0055  
                     __Lparam 0000                     ?_tempRead 0060                    _readAnalog 2CE2  
             __size_of___flge 0104                       ___fladd 0F4A                       ___fldiv 1834  
                     ___awdiv 2786                 _DelayFor18TCY 2FE8                       ___flneg 2F24  
                     ___awmod 2A84                       ___flmul 140A                       ___flsub 2D96  
                     ___fltol 248E                       ___llmod 2C5A                 _humidade$1534 0068  
        ??_configureInterrupt 000A                       __pcinit 2D50                       _gasRead 29C6  
             __size_of_buzzer 0002               __size_of_millis 0026                       __ramtop 0800  
                     __ptext0 08C8                       __ptext1 2FF8                       __ptext2 2FFA  
                     __ptext3 236A                       __ptext4 1E7E                       __ptext5 0012  
                     __ptext6 284A                       __ptext7 2F5C                       __ptext8 222A  
                     __ptext9 2908         __size_of_configureADC 000C         __size_of_configureLCD 0046  
                __size_of_ISR 2C52                       _readKey 1E7E                    ??___xxtofl 000E  
            ___awmod@dividend 000A                    gasRead@gas 0064              ??_setCoolerSpeed 000C  
       __size_of_displayStuff 0096                __pintcode_body 2BCA          end_of_initialization 2D88  
                     itoa@ptr 0014                 __Lmediumconst 7EF6                       int_func 2BCA  
                  ??_humidade 004A                    ??_setMoist 000C                    ??_tempRead 004A  
              ?_DelayFor18TCY 0001                       postdec1 000FE5                       postdec2 000FDD  
                _configureADC 2FDC                  _configureLCD 2DDC                       postinc0 000FEE  
                     postinc2 000FDE           floatToString@buffer 0035           floatToString@intStr 0060  
                   _PORTCbits 000F82                     _PORTDbits 000F83                  _displayStuff 2B34  
                 ___fladd@grs 0019                 ___xxtofl@sign 0012                     _TRISAbits 000F92  
                   _TRISCbits 000F94                     _TRISDbits 000F95                     _TRISEbits 000F96  
                 ___fldiv@grs 0044             tempRead@rawAnalog 006C                   ___fldiv@rem 003D  
       __size_of_SetDDRamAddr 0040   readTwoDigitValue@digitCount 0030                   ___flmul@grs 0026  
            main@currentHumid 00A6                     _DelayXLCD 2FAE                 ??_configureIO 000A  
                 ?_readAnalog 000A                 ??_displayMenu 0078                __end_of___flge 2698  
       __end_of_floatToString 1E7E                __end_of_keymap 7F07                __end_of_buzzer 2FFE  
              __end_of_millis 2F82                  _SetDDRamAddr 2E68            SetDDRamAddr@DDaddr 000A  
         start_initialization 2D50                   __end_of_ISR 2C5A       readTwoDigitValue@prompt 0029  
            readAnalog@result 000E               ___llmod@divisor 0005             __size_of_BusyXLCD 0046  
             ___llmod@counter 0009                    ?_DelayXLCD 0001                    readKey@col 0024  
                  readKey@row 0026               ??_DelayFor18TCY 000A           displayMenu@valueStr 007C  
           __size_of_OpenXLCD 00EE                      ??___flge 0020                floatToString@i 0072  
               ?_WriteCmdXLCD 0001                   __pdataBANK0 00D2                      ??_buzzer 000C  
                    ??_millis 000E           __end_of_configureIO 2F9A                     ___fladd@a 000E  
                   ___fladd@b 000A           __end_of_displayMenu 08C8                     ___fldiv@a 0035  
                   ___fldiv@b 0031                     ___flmul@a 001C                     ___flmul@b 0018  
                 __pbssCOMRAM 004A                     ___flsub@a 001E                     ___flsub@b 001A  
               __pcstackBANK0 0060             __size_of___xxtofl 01B4           __size_of_readAnalog 006E  
            gasRead@rawAnalog 006C             displayStuff@stuff 000F                 tempRead@TempC 0064  
      displayMenu@currentTemp 008A        displayMenu@currentTime 0086             __size_of_humidade 00BE  
                   __pintcode 0008       readKey@lastDebounceTime 00C7                 __pmediumconst 7EF6  
               _tempRead$1533 0068                ??_WriteCmdXLCD 000A             __size_of_setMoist 0002  
                    ?___fladd 000A                      ?___fldiv 0031                      ?___awdiv 000A  
                    ?___flneg 000A                      ?___awmod 000A                      ?___flmul 0018  
                    ?___flsub 001A                      ?___fltol 000A             __size_of_tempRead 00BE  
                    ?___llmod 0001     displayMenu@lastUpdateTime 00CB                      ?_gasRead 0060  
       __end_of_WriteDataXLCD 2EE6                      ?_readKey 0001                 readAnalog@pin 0010  
     __size_of_configureTimer 000C                      _LATEbits 000F8D                  _milliseconds 004A  
                 ??_DelayXLCD 000A                 ?_DelayPORXLCD 0001                      i2u404_40 2BDA  
                    i2u404_41 2BD6                      i2u405_40 2C24                      i2u405_41 2C20  
                    i2u406_40 2C40                      i2u406_41 2C3C               OpenXLCD@lcdtype 000B  
                    i2u374_40 2C70                      i2u374_41 2C6C                      i2u375_40 2C92  
                    i2u375_41 2C8E                      i2u376_40 2CB0                      i2u376_41 2CAC  
               readKey@InvCol 0018                      _RCONbits 000FD0                   _configureIO 2F82  
          floatToString@digit 006C            floatToString@index 0074            floatToString@value 0031  
                 _displayMenu 0012   __size_of_configureInterrupt 0014                    _ADCON0bits 000FC2  
             main@currentTemp 00A2               main@currentTime 009E                   _INTCON2bits 000FF1  
                   copy_data0 2D64                      _BusyXLCD 2E22                ??_DelayPORXLCD 000A  
                    _OpenXLCD 2698                      __Hrparam 0000                      __Lrparam 0000  
                ??_readAnalog 000C                     itoa@count 0016                     itoa@value 0012  
            __size_of___fladd 04C0              __size_of___fldiv 039A              __size_of___awdiv 00C4  
            __size_of___flneg 0038              __size_of___awmod 00B0              __size_of___flmul 042A  
            __size_of___flsub 0046              __size_of___fltol 0106              __size_of___llmod 0088  
            _displayStuff$792 0013              __size_of_gasRead 00BE                      ___xxtofl 2076  
            __size_of_readKey 01F8                      __ptext10 29C6                      __ptext11 2CE2  
                    __ptext20 2A84                      __ptext12 1834                      __ptext21 2786  
                    __ptext13 1BCE                      __ptext30 2FAE                      __ptext22 2B34  
                    __ptext14 2076                      __ptext31 2FC0                      __ptext23 2EA8  
                    __ptext15 248E                      __ptext32 2E22                      __ptext24 2594  
                    __ptext16 2D96                      __ptext33 2FE8                      __ptext25 2FD0  
                    __ptext17 0F4A                      __ptext34 2F9A                      __ptext26 2DDC  
                    __ptext18 2F24                      __ptext35 2F82                      __ptext27 2698  
                    __ptext19 140A                      __ptext36 2FDC                      __ptext28 2EE6  
                    __ptext37 2FFC                      __ptext29 2E68                      __ptext39 2C5A  
        __end_of_WriteCmdXLCD 2F24            __end_of_readAnalog 2D50                      _keyState 00B8  
          buzzer@buzzerStatus 000A                 __size_of_main 0682                 __size_of_itoa 0140  
                    _humidade 2908       __size_of_setCoolerSpeed 0002                      _setMoist 2FF8  
                    _tempRead 284A        floatToString@precision 0037                      isa$xinst 000000  
           floatToString@temp 0070                      int$flags 0056              setMoist@moistSet 000A  
       main@lastDisplayUpdate 009A                    _INTCONbits 000FF2                _configureTimer 2FD0  
                    itoa@temp 0018               main@pressed_key 00B5                      millis@ms 000E  
             displayStuff@row 000B                      intlevel2 0000        __size_of_floatToString 02B0  
           _readTwoDigitValue 236A            ?_readTwoDigitValue 0029         __end_of_DelayFor18TCY 2FF2  
         ??_readTwoDigitValue 002B        __end_of_configureTimer 2FDC          floatToString@intPart 006E  
        __end_of_DelayPORXLCD 2FD0        displayMenu@systemCycle 004E       readKey@lastKeyPressTime 00C3  
               ___fladd@signs 0016     __end_of_readTwoDigitValue 248E                  ___fladd@aexp 0017  
                ___fladd@bexp 0018          setCoolerSpeed@PWMset 000A  
